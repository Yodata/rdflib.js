./CONTRIBUTING.md:79 => Bug fixes and features should come with tests.  Add your tests in the
./CONTRIBUTING.md:80 => `test/` directory.  Look at other tests to see how they should be
./CONTRIBUTING.md:84 => $ npm test
./CONTRIBUTING.md:87 => Makeall tests pass.  Please, do not submit patches that fail either check.
./Makefile:36 => 	git commit -m 'gh-pages: update to latest'
./Makefile:44 => cleantest:
./Makefile:45 => 	rm tests/serialize/,*
./Makefile:57 => .PHONY: test
./Makefile:58 => test:	lib
./Makefile:59 => 	make -C tests/serialize
./Makefile:60 => 	make cleantest
./package.json:52 =>     "test": "npm run test:unit && npm run test:serialize",
./package.json:53 =>     "test:unit": "mocha --growl --require babel-register tests/unit/**-test.js",
./package.json:54 =>     "test:unit:dev": "mocha --watch --growl --require babel-register tests/unit/**-test.js",
./package.json:55 =>     "test:serialize": "npm run lib  && cd tests/serialize && npm run all && cd ../.. && npm run cleantest",
./package.json:63 =>     "cleantest": "rimraf tests/serialize/,*",
./package.json:67 =>     "gh-pages": "npm run detach && git branch - D gh - pages ||: && git checkout - b gh - pages && npm run all && git add - f dist /*.js src/*.js *.js && git commit -m 'gh-pages: update to latest' && git push -f origin gh-pages && git checkout master",
./package.json:69 =>     "greptest": "type package.json | fs-grep test > greptest.ttl"
./README.md:50 => - `test`: Tests are here.
./jquery.uri.js:44 =>       if (/\./.test(u)) {
./jquery.uri.js:48 =>           } else if (/^\.\.\//.test(u)) { // starts with ../
./jquery.uri.js:50 =>           } else if (/^\.\//.test(u)) { // starts with ./
./jquery.uri.js:52 =>           } else if (/^\/\.(\/|$)/.test(u)) { // starts with /./ or consists of /.
./jquery.uri.js:54 =>           } else if (/^\/\.\.(\/|$)/.test(u)) { // starts with /../ or consists of /..
./jquery.uri.js:147 =>             if (!/^\//.test(this.path)) {
./jquery.xmlns.js:75 =>               if (/^xmlns(:(.+))?$/.test(a.nodeName)) {
./jquery.xmlns.js:78 =>                 if (prefix === '' || (value !== '' && value !== xmlNs && value !== xmlnsNs && ncNameRegex.test(prefix) && prefix !== 'xml' && prefix !== 'xmlns')) {
./jquery.xmlns.js:90 =>               if (prefix === '' || (value !== '' && value !== xmlNs && value !== xmlnsNs && ncNameRegex.test(prefix) && prefix !== 'xml' && prefix !== 'xmlns')) {
./jquery.xmlns.js:105 =>           if (typeof prefix[p] === 'string' && ncNameRegex.test(p)) {
./lib/fetcher.js:30 =>  * Things to test: callbacks on request, refresh, retract
./lib/n3parser.js:188 =>     the module, including tests and test harness.
./lib/rdfaparser.js:152 =>         } else if (RDFaProcessor.NCNAME.test(prefix)) {
./lib/serializer.js:104 =>       if (!__Serializer.prototype.validPrefix.test(pp)) return false; // bad format
./lib/serializer.js:130 =>     if (!__Serializer.prototype.validPrefix.test(p)) {
./lib/sparql-to-query.js:20 =>  * @testMode: testing flag. Prevents loading of sources.
./lib/sparql-to-query.js:22 => function SPARQLToQuery(SPARQL, testMode, kb) {
./lib/util.js:59 =>       fixuri = "http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf"
./lib/util.js:213 =>         if (/^\d+$/.test(atn.name)) continue;
./parsers/Makefile:10 => test: all
./parsers/Makefile:11 => 	node sparul.js tests/sparul.ru
./parsers/Makefile:12 => .PHONY: test
./parsers/Makefile:15 => 	node sparul.js tests/sparul-todo.ru
./src/fetcher.js:26 =>  * Things to test: callbacks on request, refresh, retract
./src/n3parser.js:191 => the module, including tests and test harness.
./src/rdfaparser.js:136 =>       } else if (RDFaProcessor.NCNAME.test(prefix)) {
./src/serializer.js:101 =>       if (! __Serializer.prototype.validPrefix.test(pp)) return false // bad format
./src/serializer.js:128 =>     if (! __Serializer.prototype.validPrefix.test(p)) {
./src/sparql-to-query.js:18 =>  * @testMode: testing flag. Prevents loading of sources.
./src/sparql-to-query.js:20 => function SPARQLToQuery (SPARQL, testMode, kb) {
./src/util.js:56 =>       fixuri = "http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf"
./src/util.js:213 =>         if (/^\d+$/.test(atn.name)) continue
./test/README:1 => If you develop a test case for a unit, do the following in order to extend the test harness:
./test/README:4 => 0. we assume the new test case is TCXXXX
./test/README:7 => 1. paste the following test case overview template into test/index.html:
./test/README:10 => <div class="testcase" id="secTCXXXX" about="#TCXXXX" typeof="test:TestCase">
./test/README:14 => 	<div class="testdetails">
./test/README:15 => 		<p><em>Purpose</em>: <span property="dcterms:description test:purpose">EXPLAIN WHAT IT DOES</span>
./test/README:21 => 			<button class="runTest" rel="ov:resultFrom" resource="tcXXXX/test_UUU.js">Run</button> 
./test/README:29 => 2. create a sub-directory test/tcXXXX/ with two files in it:
./test/README:33 =>    if the unit to be tested is called UUU,
./test/README:34 =>    then the file should be named test_UUU.js
./test/README:39 =>  Note: for a start, you can copy the two template files in test/template 
./test/README:40 =>  and paste them in your test/tcXXXX/ directory.
./test/test_utils.js:1 => // some utility functions used throughout the test cases detailed view
./test/test_utils.js:57 =>   // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl
./test/tth.css:68 => .testcase {
./test/tth.css:76 => .testcase h2 {
./test/tth.css:81 => .testdetails {
./test/tth.css:86 => .testdetails p {
./test/tth.css:150 => #tests {
./test/index.html:12 => 		xmlns:test="http://www.w3.org/2006/03/test-description#">
./test/index.html:25 => 	<script type="text/javascript" src="test_utils.js" ></script>
./test/index.html:40 => 			location.reload(true); // need to this so that the dynamically loaded test scripts don't screw up the rendering
./test/index.html:58 => 			$(".testdetails").show("slow");
./test/index.html:62 => 			$(".testdetails").hide("slow");
./test/index.html:65 => 		$(".testcase h2:contains('...')").click(function () {
./test/index.html:66 => 			$(this).parent().find(".testdetails").toggle("slow");
./test/index.html:70 => 			runTest($(this).attr('resource'), // the URI of the test script to call
./test/index.html:71 => 					$(this).parent().parent().parent().find("span[property='dcterms:identifier']").attr('content'), // the test ID to construct the test method
./test/index.html:84 =>                 https://linkeddata.github.io/rdflib.js/test/index.html
./test/index.html:85 =>                 <p>Note: Run this in Firefox+tabulator as <a href="chrome://tabulator/content/js/rdf/test/index.html">chrome://tabulator/content/js/rdf/test/index.html</a><br/>
./test/index.html:86 =>                 Run this from GITHUB as <a href="https://linkeddata.github.io/rdflib.js/test/index.html">https://linkeddata.github.io/rdflib.js/test/index.html</a></p>
./test/index.html:89 => 			<button id="reset" title="Reset all tests ...">Reset</button> |
./test/index.html:90 => 			<button id="runAllTests" title="Run all tests ...">Run all</button> |
./test/index.html:91 => 			<button id="showAllTestDetails">Show all tests</button> |
./test/index.html:92 => 			<button id="hideAllTestDetails">Hide all tests</button>
./test/index.html:94 => 		<div id="tests">
./test/index.html:95 => 			<div class="testcase" id="secTC0000" about="#TC0000" typeof="test:TestCase">
./test/index.html:99 => 				<div class="testdetails">
./test/index.html:100 => 					<p><em>Purpose</em>: <span property="dcterms:description test:purpose">Tests URI reference resolution with base/relative/absolute form of URIs.</span>
./test/index.html:107 => 						<button class="runTest" rel="ov:resultFrom" resource="tc0000/test_uri.js">Run</button> 
./test/index.html:111 => 			<div class="testcase" id="secTC0001" about="#TC0001" typeof="test:TestCase">
./test/index.html:115 => 				<div class="testdetails">
./test/index.html:116 => 					<p><em>Purpose</em>: <span property="dcterms:description test:purpose">Tests basic RDF terms such as nodes, literals, and statements.</span>
./test/index.html:121 => 						<button class="runTest" rel="ov:resultFrom" resource="tc0001/test_term.js">Run</button>
./test/index.html:125 => 			<div class="testcase" id="secTC0002" about="#TC0002" typeof="test:TestCase">
./test/index.html:129 => 				<div class="testdetails">
./test/index.html:130 => 					<p><em>Purpose</em>: <span property="dcterms:description test:purpose">Tests matching of RDF terms (holds, any, etc. )</span>
./test/index.html:135 => 						<button class="runTest" rel="ov:resultFrom" resource="tc0002/test_match.js">Run</button>
./test/index.html:139 => 			<div class="testcase" id="secTC0003" about="#TC0003" typeof="test:TestCase">
./test/index.html:143 => 				<div class="testdetails">
./test/index.html:144 => 					<p><em>Purpose</em>: <span property="dcterms:description test:purpose">Tests identity of entities (equals, IFPs, functional properties)</span>
./test/index.html:149 => 						<button class="runTest" rel="ov:resultFrom" resource="tc0003/test_identity.js">Run</button>
./test/index.html:153 => 			<div class="testcase" id="secTC0004" about="#TC0004" typeof="test:TestCase">
./test/index.html:157 => 				<div class="testdetails">
./test/index.html:158 => 					<p><em>Purpose</em>: <span property="dcterms:description test:purpose">Tests parsing of RDF/XML documents</span>
./lib/query.js:450 =>     var test;
./lib/query.js:454 =>           test = constraints[x].test;
./lib/query.js:455 =>           if (test && !test(bindings[x])) {
./lib/sparql-to-query.js:287 =>     this.test = function (term) {
./lib/sparql-to-query.js:302 =>     this.test = function (term) {
./lib/sparql-to-query.js:317 =>     this.test = function (term) {
./lib/sparql-to-query.js:328 =>     this.test = function (term) {
./lib/sparql-to-query.js:333 =>         return rg.test(term.value);
./lib/sparql-to-query.js:472 =>   if (testMode) {
./lib/util.js:426 =>   // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl
./src/query.js:438 =>     var test
./src/query.js:442 =>           test = constraints[x].test
./src/query.js:443 =>           if (test && !test(bindings[x])) {
./src/sparql-to-query.js:311 =>     this.test = function (term) {
./src/sparql-to-query.js:325 =>     this.test = function (term) {
./src/sparql-to-query.js:340 =>     this.test = function (term) {
./src/sparql-to-query.js:351 =>     this.test = function (term) {
./src/sparql-to-query.js:356 =>         return rg.test(term.value)
./src/sparql-to-query.js:498 =>   if (testMode) {
./src/util.js:430 =>   // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl
./test/tth.js:3 =>   $('.testcase h2').each(function () {
./test/tth.js:11 =>   setStatus('Running all tests ...')
./test/tth.js:12 =>   $('#main .testcase .runTest').each(function () {
./test/tth.js:13 =>     var scriptURI = $(this).attr('resource') // the URI of the test script to call
./test/tth.js:14 =>     var methodBase = $(this).parent().parent().parent().find("span[property='dcterms:identifier']").attr('content') // the test ID to construct the test method
./test/tth.js:20 => function runTest (testTargetURI, testID, testOut) {
./test/tth.js:21 =>   var testTargetMethod = 'test' + testID
./test/tth.js:24 =>     url: testTargetURI,
./test/tth.js:27 =>       setStatus('Running test with ' + testTargetMethod + '() in ' + testTargetURI)
./test/tth.js:28 =>       var overallResult = eval(testTargetMethod + '(false);')
./test/tth.js:29 =>       if (overallResult) testOut.css('color', 'green')
./test/tth.js:30 =>       else testOut.css('color', 'red')
./test/tth.js:34 =>       setStatus('Error running test: ' + msg)
./test/tth.js:35 =>       testOut.html("<span style='border: solid 2px #FF3;'>" + testTargetURI + ' NOT FOUND</span>')
./testSaveRestore/test.js:5 => var prefix = 'http://localhost/devel/github.com/linkeddata/tabulator-firefox/content/js/rdf/testSaveRestore/'
./testSaveRestore/test.js:6 => prefix = 'file:///devel/github.com/linkeddata/tabulator-firefox/content/js/rdf/testSaveRestore/'
./test/index.html:163 => 						<button class="runTest" rel="ov:resultFrom" resource="tc0004/test_rdfparser.js">Run</button>
./test/index.html:168 =>             <div class="testcase" id="secTC0005" about="#TC0005" typeof="test:TestCase">
./test/index.html:172 =>                 <div class="testdetails">
./test/index.html:173 =>                     <p><em>Purpose</em>: <span property="dcterms:description test:purpose">This tests the
./test/index.html:181 =>                     <button class="runTest" rel="ov:resultFrom" resource="tc0005/test_UUU.js">Run</button>
./test/index.html:186 =>             <div class="testcase" id="secTC0006" about="#TC0006" typeof="test:TestCase">
./test/index.html:190 =>                 <div class="testdetails">
./test/index.html:191 =>                     <p><em>Purpose</em>: <span property="dcterms:description test:purpose">Substitution of variables into a term is recurive into the parts
./test/index.html:192 =>                     of a statement, the elements of a list, and the statements in a formula. We need to test that the recursion works as well as
./test/index.html:199 =>                     <button class="runTest" rel="ov:resultFrom" resource="tc0006/test_UUU.js">Run</button>
./example/people/book.js:40 => // TestStore implementation from dig.csail.mit.edu/2005/ajar/ajaw/test/rdf/rdfparser.test.html
./example/people/card.js:42 => // TestStore implementation from dig.csail.mit.edu/2005/ajar/ajaw/test/rdf/rdfparser.test.html
./lib/serializer.js:640 =>         this.checkIntegrity(); //  @@@ Remove when not testing
./example/people/social_book.js:125 => // TestStore implementation from dig.csail.mit.edu/2005/ajar/ajaw/test/rdf/rdfparser.test.html
./src/indexed-formula.js:777 =>     // Ok, we have picked the shortest index but now we have to filter it
./src/serializer.js:642 =>         this.checkIntegrity(); //  @@@ Remove when not testing
./test/batch/query-optional.js:49 => // Make some initial test data:
./test/batch/query-optional.js:58 => q = new $rdf.Query('test', 3)
./test/tc0000/index.html:6 => 	<script type="text/javascript" src="../test_utils.js" ></script>
./test/tc0000/index.html:8 =>     <script type="text/javascript" src="test_uri.js" ></script>
./test/tc0000/index.html:12 => 			viewSource("test_uri.js");
./test/tc0000/index.html:17 => 		$("#detailedresults").html(testTC0000(true));
./test/tc0000/index.html:24 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0000/test_uri.js:3 => function testTC0000 (showDetails) {
./test/tc0000/test_uri.js:4 =>   var testCases = [
./test/tc0000/test_uri.js:18 =>     ['file:/swap/test/animal.rdf', 'file:/swap/test/animal.rdf#Animal', '#Animal'],
./test/tc0000/test_uri.js:32 =>     ['file:/devel/WWW/2000/10/swap/test/reluri-1.n3', 'file://meetings.example.com/cal#m1', 'file://meetings.example.com/cal#m1'],
./test/tc0000/test_uri.js:33 =>     ['file:/home/connolly/w3ccvs/WWW/2000/10/swap/test/reluri-1.n3', 'file://meetings.example.com/cal#m1', 'file://meetings.example.com/cal#m1'],
./test/tc0000/test_uri.js:55 =>   var n = testCases.length
./test/tc0000/test_uri.js:65 =>     var c = testCases[i]
./test/tc0000/test_uri.js:87 =>     var c = testCases[i]
./test/tc0000/test_uri.js:110 =>     var c = testCases[i]
./test/tc0001/index.html:6 => 	<script type="text/javascript" src="../test_utils.js" ></script>
./test/tc0001/index.html:8 => 	<script type="text/javascript" src="test_term.js" ></script>
./test/tc0001/index.html:12 => 			viewSource("test_term.js");
./test/tc0001/index.html:17 => 		$("#detailedresults").html(testTC0001(true));
./test/tc0001/index.html:23 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0001/test_term.js:3 => function testTC0001 (showDetails) {
./test/tc0001/test_term.js:9 =>   var testTitles = [	'Statement()',
./test/tc0001/test_term.js:25 =>     allResults += '<h2>' + testTitles[i] + '</h2>'
./test/tc0001/test_term.js:26 =>     result = eval('test' + i + '()')
./test/tc0001/test_term.js:40 => function test0 () {
./test/tc0001/test_term.js:51 => function test1 () {
./test/tc0001/test_term.js:59 => function test2 () {
./test/tc0001/test_term.js:67 => function test3 () {
./test/tc0001/test_term.js:76 => function test4 () {
./test/tc0001/test_term.js:89 => function test5 () {
./test/tc0002/index.html:6 => 	<script type="text/javascript" src="../test_utils.js" ></script>
./test/tc0002/index.html:8 => 	<script type="text/javascript" src="test_match.js" ></script>
./test/tc0002/index.html:12 => 			viewSource("test_match.js");
./test/tc0002/index.html:17 => 		$("#detailedresults").html(testTC0002(true));
./test/tc0002/index.html:24 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0002/test_match.js:3 => function testTC0002 (showDetails) {
./test/tc0002/test_match.js:9 =>   var testTitles = [	'any()',
./test/tc0002/test_match.js:23 =>     allResults += '<h2>' + testTitles[i] + '</h2>'
./test/tc0002/test_match.js:24 =>     result = eval('test' + i + '()')
./test/tc0002/test_match.js:37 => function test0 () {
./test/tc0002/test_match.js:43 => function test1 () {
./test/tc0002/test_match.js:49 => function test2 () {
./test/tc0002/test_match.js:55 => function test3 () {
./test/tc0003/index.html:6 => 	<script type="text/javascript" src="../test_utils.js" ></script>
./test/tc0003/index.html:8 =>     <script type="text/javascript" src="test_identity.js" ></script>
./test/tc0003/index.html:12 => 			viewSource("test_identity.js");
./test/tc0003/index.html:17 => 		$("#detailedresults").html(testTC0003(true));
./test/tc0003/index.html:24 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0003/test_identity.js:3 => function testTC0003 (showDetails) {
./test/tc0003/test_identity.js:9 =>   var testTitles = [	'owl:sameAs',
./test/tc0003/test_identity.js:25 =>     allResults += '<h2>' + testTitles[i] + '</h2>'
./test/tc0003/test_identity.js:26 =>     result = eval('test' + i + '()')
./test/tc0003/test_identity.js:39 => function test0 () {
./test/tc0003/test_identity.js:51 => function test1 () {
./test/tc0003/test_identity.js:65 => function test2 () {
./test/tc0003/test_identity.js:79 => function test3 () {
./test/tc0003/test_identity.js:94 => function test4 () {
./test/tc0005/index.html:8 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0005/index.html:13 =>     <script type="text/javascript" src="test_UUU.js" ></script>
./test/tc0005/index.html:17 => 			viewSource("test_UUU.js");
./test/tc0005/index.html:22 => 		$("#detailedresults").html(testTC0005(true));
./test/tc0005/index.html:29 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0004/index.html:6 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0004/index.html:10 => 	<script type="text/javascript" src="test_rdfparser.js" ></script>
./test/tc0004/index.html:13 => 		$("#globalresult").html("<div style='margin: 0.2em; font-style: italic'>Note: this test can take up to several minutes to complete. Consider using OFF-LINE mode (left upper corner).</div>");
./test/tc0004/index.html:15 => 			viewSource("test_rdfparser.js", true);
./test/tc0004/index.html:38 => 			$("#detailedresults").html(testTC0004(true));
./test/tc0004/index.html:50 => 		<button id="viewSourceCode" title="View the source code of the test ...">View Source</button> 
./test/tc0004/index.html:55 => 		<button id="reset" title="Reset all tests ...">Reset</button> |
./test/tc0004/index.html:56 => 		<button id="runTests" title="Run the tests!">Run!</button> 
./test/tc0004/index.html:57 => 		(restrict test case range from <input type='text' id="fromTC" value="0" size="1" /> to <input type='text' id="toTC" value="23" size="1" />)
./test/tc0005/offline_index.html:6 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0005/offline_index.html:15 => 	<script type="text/javascript" src="offline_test_UUU.js" ></script>
./test/tc0005/offline_index.html:18 => 		$("#globalresult").html("<div style='margin: 0.2em; font-style: italic'>Note: this test can take up several minutes to complete!</div>");
./test/tc0005/offline_index.html:20 => 			viewSource("test_rdfparser.js");
./test/tc0005/offline_index.html:43 => 			$("#detailedresults").html(testTCXXXX(true));
./test/tc0005/offline_index.html:55 => 		<button id="viewSourceCode" title="View the source code of the test ...">View Source</button> 
./test/tc0005/offline_index.html:60 => 		<button id="reset" title="Reset all tests ...">Reset</button> |
./test/tc0005/offline_index.html:61 => 		<button id="runTests" title="Run the tests!">Run!</button> 
./test/tc0005/offline_test_UUU.js:3 => function testTCXXXX (showDetails) {
./test/tc0005/offline_test_UUU.js:9 =>   var testTitles = [	'TITLE'
./test/tc0005/offline_test_UUU.js:17 =>     // use local test data
./test/tc0005/offline_test_UUU.js:22 =>     allResults += '<h2>' + testTitles[i] + '</h2>'
./test/tc0005/offline_test_UUU.js:23 =>     result = eval('test' + i + '()')
./test/tc0005/offline_test_UUU.js:37 => function test0 () {
./test/tc0005/test_UUU.js:8 => function testTC0005 (showDetails) {
./test/tc0005/test_UUU.js:14 =>   var testTitles = []
./test/tc0005/test_UUU.js:17 =>   testTitles.push('straight string'); expected.push('"foo bar"')
./test/tc0005/test_UUU.js:18 =>   testTitles.push('newline escaping'); expected.push('"foo\\nbar"')
./test/tc0005/test_UUU.js:19 =>   testTitles.push('quote escaping'); expected.push('"foo\\"bar"')
./test/tc0005/test_UUU.js:20 =>   testTitles.push('escape escaping'); expected.push('"foo\\\\bar"')
./test/tc0005/test_UUU.js:21 =>   testTitles.push('unicode'); expected.push('"état"')
./test/tc0005/test_UUU.js:22 =>   testTitles.push('typed string'); expected.push('"123"^^<http://www.w3.org/2001/XMLSchema#integer>')
./test/tc0005/test_UUU.js:23 =>   testTitles.push('language string'); expected.push('"chat"@fr')
./test/tc0005/test_UUU.js:24 =>   testTitles.push('symbol'); expected.push('<http://www.w3.org/2001/XMLSchema#integer>')
./test/tc0005/test_UUU.js:25 =>   testTitles.push('bnode'); expected.push('_:n6785764')
./test/tc0005/test_UUU.js:31 =>     allResults += '<h2>' + testTitles[i] + '</h2>'
./test/tc0005/test_UUU.js:32 =>     // result = eval("test" + i + "()")
./test/tc0005/test_UUU.js:50 => function test0 () {
./test/tc0004/test_rdfparser.js:3 => var rdfxmlTestCaseBaseURI = 'http://www.w3.org/2000/10/rdf-tests/rdfcore/'
./test/tc0004/test_rdfparser.js:31 => function testTC0004 (showDetails) {
./test/tc0004/test_rdfparser.js:37 =>   var testTitles = rdfxmlTestCaseDirs
./test/tc0004/test_rdfparser.js:58 =>     rdfxmlTestCaseBaseURI = 'chrome://tabulator/content/test/tc0004/rdfcore/' // use the local mirror of the test case
./test/tc0004/test_rdfparser.js:63 =>     var dirParam = new String(testTitles[i])
./test/tc0004/test_rdfparser.js:65 =>     result = eval('test' + i + '()')
./test/tc0004/test_rdfparser.js:72 =>     allResults += "<a id='sec" + testTitles[i] + "'></a><h2 " + styleResult + '>' + testTitles[i] + '</h2></div>'
./test/tc0004/test_rdfparser.js:74 =>     if (rdfxmlTestCaseMsg[testTitles[i]]) { // we have a detailed fail message
./test/tc0004/test_rdfparser.js:75 =>       allResults += '<p><em>Reason: ' + rdfxmlTestCaseMsg[testTitles[i]] + '</em></p>'
./test/tc0004/test_rdfparser.js:77 =>     $('#tocTC0004').append('<div ' + styleResult + "><span style='font-size: 80%;'>" + i + ". <a href='#sec" + testTitles[i] + "'>" + testTitles[i] + '</a></span></div>') // update TOC
./test/tc0004/test_rdfparser.js:85 => function test0 () {
./test/tc0004/test_rdfparser.js:87 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:88 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:91 => function test1 () {
./test/tc0004/test_rdfparser.js:93 =>   var tests = ['test001', 'test002']
./test/tc0004/test_rdfparser.js:94 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:97 => function test2 () {
./test/tc0004/test_rdfparser.js:99 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:100 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:103 => function test3 () {
./test/tc0004/test_rdfparser.js:105 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:106 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:109 => function test4 () {
./test/tc0004/test_rdfparser.js:111 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:112 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:115 => function test5 () {
./test/tc0004/test_rdfparser.js:117 =>   var tests = ['test001', 'test002', 'test003', 'test004', 'test005', 'test006']
./test/tc0004/test_rdfparser.js:118 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:121 => function test6 () {
./test/tc0004/test_rdfparser.js:123 =>   var tests = ['test001', 'test002']
./test/tc0004/test_rdfparser.js:124 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:127 => function test7 () {
./test/tc0004/test_rdfparser.js:129 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:130 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:133 => function test8 () {
./test/tc0004/test_rdfparser.js:135 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:136 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:139 => function test9 () {
./test/tc0004/test_rdfparser.js:141 =>   var tests = ['test001', 'test002']
./test/tc0004/test_rdfparser.js:142 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:145 => function test10 () {
./test/tc0004/test_rdfparser.js:147 =>   var tests = ['test0001', 'test0003', 'test0004', 'test0005', 'test0006', 'test0009', 'test0010', 'test0011', 'test0012', 'test0013', 'test0014']
./test/tc0004/test_rdfparser.js:148 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:151 => function test11 () {
./test/tc0004/test_rdfparser.js:153 =>   var tests = ['test001', 'test002', 'test003', 'test004', 'test006', 'test007', 'test008']
./test/tc0004/test_rdfparser.js:154 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:157 => function test12 () {
./test/tc0004/test_rdfparser.js:159 =>   var tests = ['test1', 'test2', 'test3']
./test/tc0004/test_rdfparser.js:160 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:163 => function test13 () {
./test/tc0004/test_rdfparser.js:165 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:166 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:169 => function test14 () {
./test/tc0004/test_rdfparser.js:171 =>   var tests = ['test001', 'test002', 'test003', 'test004', 'test005', 'test006',
./test/tc0004/test_rdfparser.js:172 =>     'test007', 'test008', 'test009', 'test010', 'test011', 'test012',
./test/tc0004/test_rdfparser.js:173 =>     'test013', 'test014', 'test015', 'test016', 'test017']
./test/tc0004/test_rdfparser.js:174 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:177 => function test15 () {
./test/tc0004/test_rdfparser.js:179 =>   var tests = ['test001', 'test002', 'test003', 'test004', 'test005']
./test/tc0004/test_rdfparser.js:180 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:183 => function test16 () {
./test/tc0004/test_rdfparser.js:185 =>   var tests = ['test001', 'test002', 'test004', 'test005']
./test/tc0004/test_rdfparser.js:186 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:189 => function test17 () {
./test/tc0004/test_rdfparser.js:191 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:192 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:195 => function test18 () {
./test/tc0004/test_rdfparser.js:197 =>   var tests = ['test-001', 'test-002', 'test-003', 'test-004', 'test-005',
./test/tc0004/test_rdfparser.js:198 =>     'test-006', 'test-007', 'test-008', 'test-009', 'test-010',
./test/tc0004/test_rdfparser.js:199 =>     'test-011', 'test-012', 'test-013', 'test-014', 'test-015',
./test/tc0004/test_rdfparser.js:200 =>     'test-016', 'test-017', 'test-018', 'test-019', 'test-020',
./test/tc0004/test_rdfparser.js:201 =>     'test-021', 'test-022', 'test-023', 'test-024', 'test-025',
./test/tc0004/test_rdfparser.js:202 =>     'test-026', 'test-027', 'test-028', 'test-029', 'test-030',
./test/tc0004/test_rdfparser.js:203 =>     'test-031', 'test-032', 'test-033', 'test-034', 'test-035',
./test/tc0004/test_rdfparser.js:204 =>     'test-036', 'test-037']
./test/tc0004/test_rdfparser.js:205 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:208 => function test19 () {
./test/tc0004/test_rdfparser.js:210 =>   var tests = ['test001']
./test/tc0004/test_rdfparser.js:211 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:214 => function test20 () {
./test/tc0004/test_rdfparser.js:216 =>   var tests = ['test001', 'test002', 'test003', 'test004']
./test/tc0004/test_rdfparser.js:217 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:220 => function test21 () {
./test/tc0004/test_rdfparser.js:222 =>   var tests = ['test001', 'test002', 'test003', 'test004', 'test006', 'test007', 'test008', 'test009', 'test010', 'test011', 'test013', 'test014']
./test/tc0004/test_rdfparser.js:223 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:226 => function test22 () {
./test/tc0004/test_rdfparser.js:228 =>   var tests = ['test001', 'test002']
./test/tc0004/test_rdfparser.js:229 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:232 => function test23 () {
./test/tc0004/test_rdfparser.js:234 =>   var tests = ['test001', 'test002']
./test/tc0004/test_rdfparser.js:235 =>   return runParseTests(dir, tests)
./test/tc0004/test_rdfparser.js:239 => function runParseTests (dir, tests) {
./test/tc0004/test_rdfparser.js:243 =>   for (j = 0; j < tests.length; j++) {
./test/tc0004/test_rdfparser.js:244 =>     var thisTCPassed = runSingleParseTest(dir, tests[j])
./test/tc0004/test_rdfparser.js:250 => function runSingleParseTest (dir, test) {
./test/tc0004/test_rdfparser.js:251 =>   var testCaseURI = rdfxmlTestCaseBaseURI + dir + '/' + test
./test/tc0004/test_rdfparser.js:252 =>   var kbNT = getTestCaseData(testCaseURI, 'text')
./test/tc0004/test_rdfparser.js:253 =>   var kbRDFXML = getTestCaseData(testCaseURI, 'xml')
./test/tc0006/index.html:7 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0006/index.html:12 =>     <script type="text/javascript" src="test_UUU.js" ></script>
./test/tc0006/index.html:16 => 			viewSource("test_UUU.js");
./test/tc0006/index.html:21 => 		$("#detailedresults").html(testTC0006(true));
./test/tc0006/index.html:28 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0007/Makefile:21 => test:
./test/tc0007/Makefile:22 => 	NODE_PATH=$N node node-test.js
./test/tc0006/test_UUU.js:1 => //     Serialization tests
./test/tc0006/test_UUU.js:6 => var base = 'http://linkeddata.github.io/rdflib.js/test/tc0006'
./test/tc0006/test_UUU.js:13 => function testTC0006 (showDetails) {
./test/tc0006/test_UUU.js:21 =>   var tests = []
./test/tc0006/test_UUU.js:23 =>   tests = [
./test/tc0006/test_UUU.js:56 =>   for (var i = 0; i < tests.length; i++) {
./test/tc0006/test_UUU.js:57 =>     var test = tests[i]
./test/tc0006/test_UUU.js:58 =>     allResults += '<h2>' + test.title + '</h2>'
./test/tc0006/test_UUU.js:62 =>       $rdf.parse(test.input, kb, base, 'text/n3')
./test/tc0006/test_UUU.js:64 =>       var graph = kb.substitute(test.bindings) // as a debugger trace variable
./test/tc0006/test_UUU.js:67 =>       expected = test.expected // .replace(/\n/g, ' ').trim()
./test/tc0006/test_UUU.js:79 =>     allResults += '<pre>EXPECTED: (' + test.expected.length + '): ' + escapeForXML(test.expected) + '</pre>'
./test/tc0006/test_UUU.js:86 => function test0 () {
./test/tc0007/manifest.ttl:1 => #@base <http://rdfa.digitalbazaar.com/test-suite/> .
./test/tc0007/manifest.ttl:2 => @prefix : <http://www.w3.org/2006/03/test-description#> .
./test/tc0007/manifest.ttl:8 => @prefix test: <http://www.w3.org/2006/03/test-description#> .
./test/tc0007/manifest.ttl:9 => @prefix rdfatest: <http://rdfa.digitalbazaar.com/vocabs/rdfa-test#> .
./test/tc0007/manifest.ttl:12 => <test-cases/0001> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:14 =>    a test:TestCase;
./test/tc0007/manifest.ttl:15 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:16 =>    test:classification test:required;
./test/tc0007/manifest.ttl:17 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:18 =>    test:informationResourceInput <test-cases/0001.html>;
./test/tc0007/manifest.ttl:19 =>    test:informationResourceResults <test-cases/0001.sparql>;
./test/tc0007/manifest.ttl:20 =>    test:purpose "Tests @property to establish the predicate; literal object is in the content of the element.";
./test/tc0007/manifest.ttl:21 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:22 => <test-cases/0006> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:24 =>    a test:TestCase;
./test/tc0007/manifest.ttl:25 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:26 =>    test:classification test:required;
./test/tc0007/manifest.ttl:27 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:28 =>    test:informationResourceInput <test-cases/0006.html>;
./test/tc0007/manifest.ttl:29 =>    test:informationResourceResults <test-cases/0006.sparql>;
./test/tc0007/manifest.ttl:30 =>    test:purpose "Tests @rev and @rel together, with the object being specified by @href, ignoring content";
./test/tc0007/manifest.ttl:31 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:32 => <test-cases/0007> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:34 =>    a test:TestCase;
./test/tc0007/manifest.ttl:35 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:36 =>    test:classification test:required;
./test/tc0007/manifest.ttl:37 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:38 =>    test:informationResourceInput <test-cases/0007.html>;
./test/tc0007/manifest.ttl:39 =>    test:informationResourceResults <test-cases/0007.sparql>;
./test/tc0007/manifest.ttl:40 =>    test:purpose "Tests @rel, @rev, @property, and @content together to generate several RDF triples.";
./test/tc0007/manifest.ttl:41 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:42 => <test-cases/0008> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:44 =>    a test:TestCase;
./test/tc0007/manifest.ttl:45 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:46 =>    test:classification test:required;
./test/tc0007/manifest.ttl:47 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:48 =>    test:informationResourceInput <test-cases/0008.html>;
./test/tc0007/manifest.ttl:49 =>    test:informationResourceResults <test-cases/0008.sparql>;
./test/tc0007/manifest.ttl:50 =>    test:purpose "Tests empty @about.";
./test/tc0007/manifest.ttl:51 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:52 => <test-cases/0009> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:54 =>    a test:TestCase;
./test/tc0007/manifest.ttl:55 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:56 =>    test:classification test:required;
./test/tc0007/manifest.ttl:57 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:58 =>    test:informationResourceInput <test-cases/0009.html>;
./test/tc0007/manifest.ttl:59 =>    test:informationResourceResults <test-cases/0009.sparql>;
./test/tc0007/manifest.ttl:60 =>    test:purpose "Tests @rev.";
./test/tc0007/manifest.ttl:61 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:62 => <test-cases/0010> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:64 =>    a test:TestCase;
./test/tc0007/manifest.ttl:65 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:66 =>    test:classification test:required;
./test/tc0007/manifest.ttl:67 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:68 =>    test:informationResourceInput <test-cases/0010.html>;
./test/tc0007/manifest.ttl:69 =>    test:informationResourceResults <test-cases/0010.sparql>;
./test/tc0007/manifest.ttl:70 =>    test:purpose "Tests @rel, @rev, and @href to generate two RDF triples.";
./test/tc0007/manifest.ttl:71 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:72 => <test-cases/0012> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:74 =>    a test:TestCase;
./test/tc0007/manifest.ttl:75 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:76 =>    test:classification test:required;
./test/tc0007/manifest.ttl:77 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:78 =>    test:informationResourceInput <test-cases/0012.html>;
./test/tc0007/manifest.ttl:79 =>    test:informationResourceResults <test-cases/0012.sparql>;
./test/tc0007/manifest.ttl:80 =>    test:purpose "Tests @xml:lang";
./test/tc0007/manifest.ttl:81 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:82 => <test-cases/0013> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:84 =>    a test:TestCase;
./test/tc0007/manifest.ttl:85 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:86 =>    test:classification test:required;
./test/tc0007/manifest.ttl:87 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:88 =>    test:informationResourceInput <test-cases/0013.html>;
./test/tc0007/manifest.ttl:89 =>    test:informationResourceResults <test-cases/0013.sparql>;
./test/tc0007/manifest.ttl:90 =>    test:purpose "Tests @xml:lang inheritance";
./test/tc0007/manifest.ttl:91 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:92 => <test-cases/0014> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:94 =>    a test:TestCase;
./test/tc0007/manifest.ttl:95 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:96 =>    test:classification test:required;
./test/tc0007/manifest.ttl:97 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:98 =>    test:informationResourceInput <test-cases/0014.html>;
./test/tc0007/manifest.ttl:99 =>    test:informationResourceResults <test-cases/0014.sparql>;
./test/tc0007/manifest.ttl:100 =>    test:purpose "Tests setting the @datatype to xsd:integer";
./test/tc0007/manifest.ttl:101 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:102 => <test-cases/0015> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:104 =>    a test:TestCase;
./test/tc0007/manifest.ttl:105 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:106 =>    test:classification test:required;
./test/tc0007/manifest.ttl:107 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:108 =>    test:informationResourceInput <test-cases/0015.html>;
./test/tc0007/manifest.ttl:109 =>    test:informationResourceResults <test-cases/0015.sparql>;
./test/tc0007/manifest.ttl:110 =>    test:purpose "Tests meta and link with no parent @about";
./test/tc0007/manifest.ttl:111 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:112 => <test-cases/0017> dc:contributor "Elias Torres";
./test/tc0007/manifest.ttl:114 =>    a test:TestCase;
./test/tc0007/manifest.ttl:115 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:116 =>    test:classification test:required;
./test/tc0007/manifest.ttl:117 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:118 =>    test:informationResourceInput <test-cases/0017.html>;
./test/tc0007/manifest.ttl:119 =>    test:informationResourceResults <test-cases/0017.sparql>;
./test/tc0007/manifest.ttl:120 =>    test:purpose "Tests creation of statements involving explicitly created blank nodes.";
./test/tc0007/manifest.ttl:121 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:122 => <test-cases/0018> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:124 =>    a test:TestCase;
./test/tc0007/manifest.ttl:125 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:126 =>    test:classification test:required;
./test/tc0007/manifest.ttl:127 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:128 =>    test:informationResourceInput <test-cases/0018.html>;
./test/tc0007/manifest.ttl:129 =>    test:informationResourceResults <test-cases/0018.sparql>;
./test/tc0007/manifest.ttl:130 =>    test:purpose "Tests @rel to establish predicate.";
./test/tc0007/manifest.ttl:131 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:132 => <test-cases/0019> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:134 =>    a test:TestCase;
./test/tc0007/manifest.ttl:135 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:136 =>    test:classification test:required;
./test/tc0007/manifest.ttl:137 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:138 =>    test:informationResourceInput <test-cases/0019.html>;
./test/tc0007/manifest.ttl:139 =>    test:informationResourceResults <test-cases/0019.sparql>;
./test/tc0007/manifest.ttl:140 =>    test:purpose "Tests @about to establish subject.";
./test/tc0007/manifest.ttl:141 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:142 => <test-cases/0020> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:144 =>    a test:TestCase;
./test/tc0007/manifest.ttl:145 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:146 =>    test:classification test:required;
./test/tc0007/manifest.ttl:147 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:148 =>    test:informationResourceInput <test-cases/0020.html>;
./test/tc0007/manifest.ttl:149 =>    test:informationResourceResults <test-cases/0020.sparql>;
./test/tc0007/manifest.ttl:150 =>    test:purpose "Tests @about inheritance to establish subject.";
./test/tc0007/manifest.ttl:151 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:152 => <test-cases/0021> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:154 =>    a test:TestCase;
./test/tc0007/manifest.ttl:155 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:156 =>    test:classification test:required;
./test/tc0007/manifest.ttl:157 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:158 =>    test:informationResourceInput <test-cases/0021.html>;
./test/tc0007/manifest.ttl:159 =>    test:informationResourceResults <test-cases/0021.sparql>;
./test/tc0007/manifest.ttl:160 =>    test:purpose "Tests inheritance of subject when no @about can be found";
./test/tc0007/manifest.ttl:161 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:162 => <test-cases/0023> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:164 =>    a test:TestCase;
./test/tc0007/manifest.ttl:165 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:166 =>    test:classification test:required;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1 =>      @prefix : <http://www.w3.org/2006/03/test-description#> .
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:3 =>     @prefix xhtml: <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/> .
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:8 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0001.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:9 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0001.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:17 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0002.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:18 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0002.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:26 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0003.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:27 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0003.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:35 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0004.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:36 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0004.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:44 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0005.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:45 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0005.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:53 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0006.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:54 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0006.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:62 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0007.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:63 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0007.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:71 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0008.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:72 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0008.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:80 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0009.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:81 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0009.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:89 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0010.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:90 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0010.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:98 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0011.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:99 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0011.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:107 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0012.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:108 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0012.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:116 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0013.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:117 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0013.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:125 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0014.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:126 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0014.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:134 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0015.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:135 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0015.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:143 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0016.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:144 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0016.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:2 => <rdf:RDF xmlns="http://www.w3.org/2006/03/test-description#"
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:9 =>     xmlns:test="http://www.w3.org/2006/03/test-description#">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:11 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0001">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:14 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0001.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:15 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0001.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:17 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:21 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0002">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:24 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0002.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:25 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0002.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:27 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:31 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0003">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:34 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0003.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:35 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0003.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:37 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:41 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0004">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:44 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0004.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:45 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0004.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:47 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:51 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0005">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:54 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0005.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:55 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0005.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:57 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:61 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0006">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:64 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0006.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:65 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0006.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:67 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:71 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0007">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:74 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0007.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:75 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0007.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:77 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:81 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0008">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:84 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0008.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:85 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0008.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:87 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:91 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0009">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:94 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0009.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:95 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0009.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:97 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:101 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0010">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:104 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0010.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:105 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0010.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:107 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:111 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0011">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:114 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0011.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:115 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0011.sparql"/>
./test/tc0008/Makefile:21 => test:
./test/tc0008/Makefile:22 => 	NODE_PATH=$N node node-test.js
./test/tc0008/Makefile:28 => 	node --debug-brk node-test-writeStore.js
./test/tc0007/index.html:10 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0007/index.html:15 =>     <script type="text/javascript" src="test_UUU.js" ></script>
./test/tc0007/index.html:23 =>                     viewSource("test_UUU.js");
./test/tc0007/index.html:28 =>             $("#detailedresults").html(testTC0007(true, newResults));
./test/tc0007/index.html:35 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0007/index.html:36 => 	<h1 id="header">TC0007: RDFA parser tests</h1>
./test/tc0007/test_UUU.js:1 => //     RDFA Parser tests ...
./test/tc0007/test_UUU.js:23 => var manifest_uri = 'https://raw.github.com/msporny/rdfa-test-suite/master/manifest.ttl'
./test/tc0007/test_UUU.js:26 => // var manifest_uri = 'http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/rdfa-xhtml1-test-manifest.rdf'
./test/tc0007/test_UUU.js:28 => var TD = $rdf.Namespace('http://www.w3.org/2006/03/test-description#')
./test/tc0007/test_UUU.js:31 => var base = 'http://dig.csail.mit.edu/hg/tabulator/raw-file/tip/chrome/content/test/tc0007/'
./test/tc0007/test_UUU.js:71 => function testTC0007 (showDetails, callback) {
./test/tc0007/test_UUU.js:77 =>   var tests = []
./test/tc0007/test_UUU.js:86 =>     function loadDataAndRunTest (tests, number) {
./test/tc0007/test_UUU.js:87 =>       var test = tests[number]
./test/tc0007/test_UUU.js:88 =>       test.no = number + 1
./test/tc0007/test_UUU.js:89 =>       var xtitle = escapeForXML(meta.any(test, DC('title')).value)
./test/tc0007/test_UUU.js:90 =>       // callback(0, "<p>Loaded test: "+xtitle+"</p>")
./test/tc0007/test_UUU.js:91 =>       test.input = meta.any(test, TD('informationResourceInput'))
./test/tc0007/test_UUU.js:92 =>       test.expected = meta.any(test, TD('informationResourceResults'))
./test/tc0007/test_UUU.js:93 =>       test.purpose = meta.any(test, TD('purpose')).value
./test/tc0007/test_UUU.js:95 =>       test.inputData = test.expectedData = null
./test/tc0007/test_UUU.js:98 =>         if (test.inputData != null && test.expectedData != null) {
./test/tc0007/test_UUU.js:99 =>           callback(0, '<hr><h2>' + test.no + ") <a href='" + test.uri + "'>" + xtitle + '</a></h2>')
./test/tc0007/test_UUU.js:101 =>             callback(0, "<a href='" + test.input.uri + "'><h3>Test data:</h3></a><pre>" +
./test/tc0007/test_UUU.js:102 =>               escapeForXML(test.inputData) + '</pre>')
./test/tc0007/test_UUU.js:107 =>             $rdf.parse(test.inputData, kb, base, 'application/rdfa')
./test/tc0007/test_UUU.js:108 =>             callback(0, '<p>Parsed for test ' + test.no + '. ')
./test/tc0007/test_UUU.js:112 =>               "</pre></p><h3><a href='" + test.expected.uri +
./test/tc0007/test_UUU.js:114 =>               escapeForXML(test.expectedData) + '</pre></p>')
./test/tc0007/test_UUU.js:117 =>             var match = askPattern.exec(test.expectedData)
./test/tc0007/test_UUU.js:127 =>               // Now we need to test where kb and exp RDF-entail each  other.
./test/tc0007/test_UUU.js:134 =>                     callback(1, "<p style='color: green'>Test " + test.no + ' PASSED.</p>')
./test/tc0007/test_UUU.js:136 =>                     callback(1, "<p style='color: red'>Test " + test.no + ' FAILED.</p>')
./test/tc0007/test_UUU.js:160 =>             callback(1, "<p style='background-color: #fcc'>Exception for test "
./test/tc0007/test_UUU.js:161 =>               + test.no + ': ' + e + '</p>')
./test/tc0007/test_UUU.js:172 =>           if (number < tests.length) loadDataAndRunTest(tests, number + 1)
./test/tc0007/test_UUU.js:175 =>       // callback(0, "<p>"+escapeForXML(test.purpose)+"</p>")
./test/tc0007/test_UUU.js:176 =>       httpGetContents(test.input.uri, function (ok, body) {
./test/tc0007/test_UUU.js:178 =>           callback(1, "<p class='error'>Error getting input <" + test.input.uri + '> : ' +
./test/tc0007/test_UUU.js:181 =>           test.inputData = body
./test/tc0007/test_UUU.js:186 =>       httpGetContents(test.expected.uri, function (ok, body) {
./test/tc0007/test_UUU.js:188 =>           callback(1, "<p class='error'>Error getting expected <" + test.expected.uri + '> : ' +
./test/tc0007/test_UUU.js:191 =>           test.expectedData = body
./test/tc0007/test_UUU.js:199 =>     var tests = meta.each(undefined, TD('reviewStatus'), TD('approved'))
./test/tc0007/test_UUU.js:203 =>     // 'http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0001'), 1)
./test/tc0007/test_UUU.js:205 =>     loadDataAndRunTest(tests, 0)
./test/tc0007/test_UUU.js:206 =>     // for(var i=0; i < tests.length; i++) loadDataAndRunTest(tests[i], i+1)
./test/tc0008/test_UUU.js:1 => //     Serialization tests ...
./test/tc0008/test_UUU.js:13 => var mainifest_uri = 'http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/rdfa-xhtml1-test-manifest.rdf'
./test/tc0008/test_UUU.js:14 => // var mainifest_uri = 'http://localhost/www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/rdfa-xhtml1-test-manifest.rdf'
./test/tc0008/test_UUU.js:16 => var TD = $rdf.Namespace('http://www.w3.org/2006/03/test-description#')
./test/tc0008/test_UUU.js:19 => var base = 'http://dig.csail.mit.edu/hg/tabulator/raw-file/tip/chrome/content/test/tc0007/'
./test/tc0008/test_UUU.js:64 => function testTC0007 (showDetails, callback) {
./test/tc0008/test_UUU.js:70 =>   var tests = []
./test/tc0008/test_UUU.js:79 =>     function loadDataAndRunTest (tests, number) {
./test/tc0008/test_UUU.js:80 =>       var test = tests[number]
./test/tc0008/test_UUU.js:81 =>       test.no = number + 1
./test/tc0008/test_UUU.js:82 =>       var xtitle = escapeForXML(meta.any(test, DC('title')).value)
./test/tc0008/test_UUU.js:83 =>       // callback(0, "<p>Loaded test: "+xtitle+"</p>")
./test/tc0008/test_UUU.js:84 =>       test.input = meta.any(test, TD('informationResourceInput'))
./test/tc0008/test_UUU.js:85 =>       test.expected = meta.any(test, TD('informationResourceResults'))
./test/tc0008/test_UUU.js:86 =>       test.purpose = meta.any(test, TD('purpose')).value
./test/tc0008/test_UUU.js:88 =>       test.inputData = test.expectedData = null
./test/tc0008/test_UUU.js:91 =>         if (test.inputData != null && test.expectedData != null) {
./test/tc0008/test_UUU.js:92 =>           callback(0, '<hr><h2>' + test.no + ") <a href='" + test.uri + "'>" + xtitle + '</a></h2>')
./test/tc0008/test_UUU.js:94 =>             callback(0, "<a href='" + test.input.uri + "'><h3>Test data:</h3></a><pre>" +
./test/tc0008/test_UUU.js:95 =>               escapeForXML(test.inputData) + '</pre>')
./test/tc0008/test_UUU.js:100 =>             $rdf.parse(test.inputData, kb, base, 'application/rdfa')
./test/tc0008/test_UUU.js:101 =>             callback(0, '<p>Parsed for test ' + test.no + '. ')
./test/tc0008/test_UUU.js:105 =>               "</pre></p><h3><a href='" + test.expected.uri +
./test/tc0008/test_UUU.js:107 =>               escapeForXML(test.expectedData) + '</pre></p>')
./test/tc0008/test_UUU.js:110 =>             var match = askPattern.exec(test.expectedData)
./test/tc0008/test_UUU.js:116 =>             callback(1, "<p style='background-color: #fcc'>Exception for test "
./test/tc0008/test_UUU.js:117 =>               + test.no + ': ' + e + '</p>')
./test/tc0008/test_UUU.js:128 =>           if (number < tests.length) loadDataAndRunTest(tests, number + 1)
./test/tc0008/test_UUU.js:131 =>       // callback(0, "<p>"+escapeForXML(test.purpose)+"</p>")
./test/tc0008/test_UUU.js:132 =>       httpGetContents(test.input.uri, function (ok, body) {
./test/tc0008/test_UUU.js:134 =>           callback(1, "<p class='error'>Error getting input <" + test.input.uri + '> : ' +
./test/tc0008/test_UUU.js:137 =>           test.inputData = body
./test/tc0008/test_UUU.js:142 =>       httpGetContents(test.expected.uri, function (ok, body) {
./test/tc0008/test_UUU.js:144 =>           callback(1, "<p class='error'>Error getting expected <" + test.expected.uri + '> : ' +
./test/tc0008/test_UUU.js:147 =>           test.expectedData = body
./test/tc0008/test_UUU.js:155 =>     var tests = meta.each(undefined, TD('reviewStatus'), TD('approved'))
./test/tc0008/test_UUU.js:159 =>     // 'http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0001'), 1)
./test/tc0008/test_UUU.js:161 =>     loadDataAndRunTest(tests, 0)
./test/tc0008/test_UUU.js:162 =>     // for(var i=0; i < tests.length; i++) loadDataAndRunTest(tests[i], i+1)
./test/tc0008/test_UUU.js:168 => function test0 () {
./test/tc0008/test_UUU.js:173 =>   testTC0007(true, function (errs, html) {
./test/template/index.html:6 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/template/index.html:12 =>     <script type="text/javascript" src="test_UUU.js" ></script>
./test/template/index.html:16 => 			viewSource("test_UUU.js");
./test/template/index.html:21 => 		$("#detailedresults").html(testTCXXXX(true));
./test/template/index.html:28 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0008/index.html:10 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/tc0008/index.html:15 =>     <script type="text/javascript" src="test_UUU.js" ></script>
./test/tc0008/index.html:23 =>                     viewSource("test_UUU.js");
./test/tc0008/index.html:28 =>             $("#detailedresults").html(testTC0007(true, newResults));
./test/tc0008/index.html:35 => 	<a href="../index.html">back to Tabulator Test Harness ...</a> | <button id="viewSourceCode" title="View the source code of the test ...">View Source</button>
./test/tc0008/index.html:36 => 	<h1 id="header">TC0008: Serializer tests</h1>
./test/template/offline_index.html:6 => 	<script type="text/javascript" src="../test_utils.js"></script>
./test/template/offline_index.html:15 => 	<script type="text/javascript" src="offline_test_UUU.js" ></script>
./test/template/offline_index.html:18 => 		$("#globalresult").html("<div style='margin: 0.2em; font-style: italic'>Note: this test can take up several minutes to complete!</div>");
./test/template/offline_index.html:20 => 			viewSource("test_rdfparser.js");
./test/template/offline_index.html:43 => 			$("#detailedresults").html(testTCXXXX(true));
./test/template/offline_index.html:55 => 		<button id="viewSourceCode" title="View the source code of the test ...">View Source</button> 
./test/template/offline_index.html:60 => 		<button id="reset" title="Reset all tests ...">Reset</button> |
./test/template/offline_index.html:61 => 		<button id="runTests" title="Run the tests!">Run!</button> 
./node_modules/acorn/package.json:197 =>     "test": "node test/run.js"
./test/template/test_UUU.js:3 => function testTCXXXX(showDetails) {
./test/template/test_UUU.js:9 => 	var testTitles = [	"TITLE"
./test/template/test_UUU.js:17 => 		allResults += "<h2>" + testTitles[i] + "</h2>";
./test/template/test_UUU.js:18 => 		result = eval("test" + i + "()");
./test/template/test_UUU.js:32 => function test0(){
./test/template/offline_test_UUU.js:3 => function testTCXXXX(showDetails) {
./test/template/offline_test_UUU.js:9 => 	var testTitles = [	"TITLE"
./test/template/offline_test_UUU.js:17 => 		// use local test data
./test/template/offline_test_UUU.js:22 => 		allResults += "<h2>" + testTitles[i] + "</h2>";
./test/template/offline_test_UUU.js:23 => 		result = eval("test" + i + "()");
./test/template/offline_test_UUU.js:38 => function test0(){
./node_modules/align-text/package.json:114 =>     "test": "mocha"
./node_modules/ansi-regex/package.json:99 =>     "test",
./node_modules/ansi-regex/package.json:122 =>     "test": "xo && ava --verbose",
./node_modules/acorn/README.md:218 => Acorn uses `new Function` to generate fast functions that test whether
./node_modules/ansi-styles/package.json:111 =>     "test": "mocha"
./node_modules/ansi-regex/readme.md:18 => ansiRegex().test('\u001b[4mcake\u001b[0m');
./node_modules/ansi-regex/readme.md:21 => ansiRegex().test('cake');
./node_modules/ansi-regex/readme.md:30 => ### Why do you test for codes not in the ECMA 48 standard?
./node_modules/ansi-regex/readme.md:32 => Some of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.
./node_modules/align-text/README.md:207 => * [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.
./node_modules/align-text/README.md:210 => ## Running tests
./node_modules/align-text/README.md:215 => $ npm i -d && npm test
./node_modules/anymatch/package.json:100 =>     "test": "istanbul cover _mocha && cat ./coverage/lcov.info | coveralls"
./node_modules/arr-diff/package.json:107 =>     "test": "mocha"
./node_modules/anymatch/index.js:21 =>   function testCriteria (criterion, index) {
./node_modules/anymatch/index.js:29 =>       result = criterion.test(string) || altString && criterion.test(altString);
./node_modules/anymatch/index.js:59 =>     matched = crit.slice(startIndex, endIndex).some(testCriteria);
./node_modules/anymatch/README.md:17 => #### anymatch (matchers, testString, [returnIndex], [startIndex], [endIndex])
./node_modules/anymatch/README.md:20 => test, function that takes the testString as an argument and returns a truthy
./node_modules/anymatch/README.md:22 => * __testString__: (_String|Array_) The string to test against the matchers. If
./node_modules/anymatch/README.md:24 => `testString` for non-function matchers, while the entire array will be applied
./node_modules/anymatch/README.md:27 => the first matcher that that testString matched, or -1 if no match, instead of a
./node_modules/anymatch/README.md:30 => subset out of the array of provided matchers to test against. Can be useful
./node_modules/arr-flatten/package.json:52 =>   "description": "Recursively flatten an array or arrays. This is the fastest implementation of array flatten.",
./node_modules/arr-flatten/package.json:105 =>     "test": "mocha"
./node_modules/arr-diff/README.md:44 => * [arr-flatten](https://www.npmjs.com/package/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten. | [homepage](https://github.com/jonschlinkert/arr-flatten)
./node_modules/arr-diff/README.md:48 => ## Running tests
./node_modules/arr-diff/README.md:53 => $ npm i -d && npm test
./node_modules/array-differ/package.json:92 =>     "test": "mocha"
./node_modules/array-filter/package.json:85 =>     "test": "tape test/*.js"
./node_modules/array-filter/package.json:87 =>   "testling": {
./node_modules/array-filter/package.json:88 =>     "files": "test/*.js",
./node_modules/array-filter/package.json:90 =>       "ie/8..latest",
./node_modules/array-filter/package.json:91 =>       "firefox/17..latest",
./node_modules/array-filter/package.json:93 =>       "chrome/22..latest",
./node_modules/array-filter/package.json:95 =>       "opera/12..latest",
./node_modules/array-filter/package.json:97 =>       "safari/5.1..latest",
./node_modules/array-filter/package.json:98 =>       "ipad/6.0..latest",
./node_modules/array-filter/package.json:99 =>       "iphone/6.0..latest",
./node_modules/array-filter/package.json:100 =>       "android-browser/4.2..latest"
./node_modules/arr-flatten/README.md:3 => > Recursively flatten an array or arrays. This is the fastest implementation of array flatten.
./node_modules/arr-flatten/README.md:5 => Why another flatten utility? I wanted the fastest implementation I could find, with implementation choices that should work for 95% of use cases, but no cruft to cover the other 5%.
./node_modules/arr-flatten/README.md:29 => ## Run tests
./node_modules/arr-flatten/README.md:34 => npm i -d && npm test
./node_modules/array-map/package.json:82 =>   "readme": "# array-map\n\n`[].map(f)` for older browsers\n\n[![testling badge](https://ci.testling.com/substack/array-map.png)](https://ci.testling.com/substack/array-map)\n\n[![build status](https://secure.travis-ci.org/substack/array-map.png)](http://travis-ci.org/substack/array-map)\n\n# example\n\n``` js\nvar map = require('array-map');\nvar letters = map([97,98,99], function (c) {\n    return String.fromCharCode(c);\n});\nconsole.log(letters.join(''));\n```\n\noutput:\n\n```\nabc\n```\n\n# methods\n\n``` js\nvar map = require('array-map')\n```\n\n## var ys = map(xs, f)\n\nCreate a new array `ys` by applying `f(xs[i], i, xs)` to each element in `xs` at\nindex `i`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install array-map\n```\n\n# license\n\nMIT\n",
./node_modules/array-map/package.json:89 =>     "test": "tape test/*.js"
./node_modules/array-map/package.json:91 =>   "testling": {
./node_modules/array-map/package.json:92 =>     "files": "test/*.js",
./node_modules/array-map/package.json:94 =>       "ie/6..latest",
./node_modules/array-map/package.json:96 =>       "firefox/latest",
./node_modules/array-map/package.json:98 =>       "chrome/latest",
./node_modules/array-map/package.json:99 =>       "opera/12..latest",
./node_modules/array-map/package.json:101 =>       "safari/5.1..latest",
./node_modules/array-map/package.json:102 =>       "ipad/6.0..latest",
./node_modules/array-map/package.json:103 =>       "iphone/6.0..latest",
./node_modules/array-map/package.json:104 =>       "android-browser/4.2..latest"
./node_modules/array-filter/README.md:6 => [![testling badge](https://ci.testling.com/juliangruber/array-filter.png)](https://ci.testling.com/juliangruber/array-filter)
./node_modules/array-reduce/package.json:81 =>   "readme": "# array-reduce\n\n`[].reduce()` for old browsers\n\n[![testling badge](https://ci.testling.com/substack/array-reduce.png)](https://ci.testling.com/substack/array-reduce)\n\n[![build status](https://secure.travis-ci.org/substack/array-reduce.png)](http://travis-ci.org/substack/array-reduce)\n\n# example\n\n```\nvar reduce = require('array-reduce');\nvar xs = [ 1, 2, 3, 4 ];\nvar sum = reduce(xs, function (acc, x) { return acc + x }, 0);\nconsole.log(sum);\n```\n\noutput:\n\n```\n10\n```\n\n# methods\n\n``` js\nvar reduce = require('array-reduce')\n```\n\n## var res = reduce(xs, f, init)\n\nCreate a result `res` by folding `acc = f(acc, xs[i], i)` over each element in\nthe array `xs` at element `i`. If `init` is given, the first `acc` value is\n`init`, otherwise `xs[0]` is used.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install array-reduce\n```\n\n# license\n\nMIT\n",
./node_modules/array-reduce/package.json:88 =>     "test": "tape test/*.js"
./node_modules/array-reduce/package.json:90 =>   "testling": {
./node_modules/array-reduce/package.json:91 =>     "files": "test/*.js",
./node_modules/array-reduce/package.json:93 =>       "ie/8..latest",
./node_modules/array-reduce/package.json:94 =>       "firefox/16..latest",
./node_modules/array-reduce/package.json:96 =>       "chrome/22..latest",
./node_modules/array-reduce/package.json:98 =>       "opera/12..latest",
./node_modules/array-reduce/package.json:100 =>       "safari/5.1..latest",
./node_modules/array-reduce/package.json:101 =>       "ipad/6.0..latest",
./node_modules/array-reduce/package.json:102 =>       "iphone/6.0..latest",
./node_modules/array-reduce/package.json:103 =>       "android-browser/4.2..latest"
./node_modules/array-union/package.json:104 =>     "test": "xo && ava"
./node_modules/array-map/readme.markdown:5 => [![testling badge](https://ci.testling.com/substack/array-map.png)](https://ci.testling.com/substack/array-map)
./node_modules/array-uniq/package.json:102 =>     "test": "xo && ava"
./node_modules/array-reduce/readme.markdown:5 => [![testling badge](https://ci.testling.com/substack/array-reduce.png)](https://ci.testling.com/substack/array-reduce)
./node_modules/array-unique/package.json:52 =>   "description": "Return an array free of duplicate values. Fastest ES5 implementation.",
./node_modules/array-unique/package.json:91 =>     "test": "mocha"
./dist/rdflib.js:675 =>     async.whilst = function (test, iterator, callback) {
./dist/rdflib.js:676 =>         if (test()) {
./dist/rdflib.js:681 =>                 async.whilst(test, iterator, callback);
./dist/rdflib.js:689 =>     async.doWhilst = function (iterator, test, callback) {
./dist/rdflib.js:695 =>             if (test.apply(null, args)) {
./dist/rdflib.js:696 =>                 async.doWhilst(iterator, test, callback);
./dist/rdflib.js:704 =>     async.until = function (test, iterator, callback) {
./dist/rdflib.js:705 =>         if (!test()) {
./dist/rdflib.js:710 =>                 async.until(test, iterator, callback);
./dist/rdflib.js:718 =>     async.doUntil = function (iterator, test, callback) {
./dist/rdflib.js:724 =>             if (!test.apply(null, args)) {
./dist/rdflib.js:725 =>                 async.doUntil(iterator, test, callback);
./node_modules/arrify/package.json:95 =>     "test": "xo && ava"
./node_modules/array-unique/README.md:3 => > Return an array free of duplicate values. Fastest ES5 implementation.
./node_modules/array-unique/README.md:23 => * [arr-flatten](https://github.com/jonschlinkert/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten.
./node_modules/array-unique/README.md:28 => ## Run tests
./node_modules/array-unique/README.md:32 => npm i -d && npm test
./node_modules/asn1.js/package.json:94 =>     "test": "mocha --reporter spec test/*-test.js rfc/2560/test/*-test.js rfc/5280/test/*-test.js"
./node_modules/asn1/package.json:95 =>     "test": "tap ./tst"
./node_modules/assert/package.json:94 =>     "browser-local": "zuul --no-coverage --local 8000 -- test.js",
./node_modules/assert/package.json:95 =>     "test": "npm run test-node && npm run test-browser",
./node_modules/assert/package.json:96 =>     "test-browser": "zuul -- test.js",
./node_modules/assert/package.json:97 =>     "test-native": "TEST_NATIVE=true mocha --ui qunit test.js",
./node_modules/assert/package.json:98 =>     "test-node": "mocha --ui qunit test.js"
./node_modules/assert/README.md:5 => This module is used for writing unit tests for your applications, you can access it with require('assert').
./node_modules/assert/README.md:7 => The API is derived from the [commonjs 1.0 unit testing](http://wiki.commonjs.org/wiki/Unit_Testing/1.0) spec and the [node.js assert module](http://nodejs.org/api/assert.html)
./node_modules/assert/README.md:54 =>     if ( (err instanceof Error) && /value/.test(err) ) {
./node_modules/assert/README.md:64 => Tests if value is not a false value, throws if it is a true value. Useful when testing the first argument, error in callbacks.
./node_modules/assert/assert.js:207 => // 4. Pure assertion tests whether a value is truthy, as determined
./node_modules/assert/assert.js:211 => // message_opt);. To test strictly for the value true, use
./node_modules/assert/assert.js:219 => // 5. The equality assertion tests shallow, coercive equality with
./node_modules/assert/assert.js:227 => // 6. The non-equality assertion tests for whether two objects are not equal
./node_modules/assert/assert.js:236 => // 7. The equivalence assertion tests a deep equality relation.
./node_modules/assert-plus/CHANGES.md:8 => - Add basic unit test coverage
./node_modules/assert-plus/package.json:112 =>     "test": "tape tests/*.js | ./node_modules/.bin/faucet"
./node_modules/assert/test.js:26 =>   tests(nodeAssert, 'node assert');
./node_modules/assert/test.js:28 =>   tests(ourAssert, 'our assert');
./node_modules/assert/test.js:38 => function tests (assert, what) {
./node_modules/assert/test.js:39 =>     test('assert.ok', function () {
./node_modules/assert/test.js:44 =>       assert.doesNotThrow(makeBlock(assert, 'test', 'ok(\'test\')'));
./node_modules/assert/test.js:52 =>       assert.doesNotThrow(makeBlock(assert.ok, 'test'), 'ok(\'test\')');
./node_modules/assert/test.js:55 =>     test('assert.equal', function () {
./node_modules/assert/test.js:74 =>     test('assert.strictEqual', function () {
./node_modules/assert/test.js:84 =>     test('assert.deepStrictEqual', function () {
./node_modules/assert/test.js:94 =>     test('assert.deepEqual - 7.2', function () {
./node_modules/assert/test.js:103 =>     test('assert.deepEqual - 7.3', function () {
./node_modules/assert/test.js:120 =>     test('assert.deepEqual - 7.4', function () {
./node_modules/assert/test.js:128 =>     test('assert.deepEqual - 7.5', function () {
./node_modules/assert/test.js:140 =>       a1.a = 'test';
./node_modules/assert/test.js:143 =>       a2.a = 'test';
./node_modules/assert/test.js:149 =>     test('assert.deepEqual - ES6 primitives', function () {
./node_modules/assert/test.js:161 =>     test('assert.deepEqual - object wrappers', function () {
./node_modules/assert/test.js:168 =>     test('assert.deepEqual - Buffers', function () {
./node_modules/assert/test.js:179 =>       throw new errorConstructor('test');
./node_modules/assert/test.js:182 =>     test('assert - Testing the throwing', function () {
./node_modules/assert-plus/assert.js:87 =>             return typeof (arg) === 'string' && UUID_REGEXP.test(arg);
./node_modules/assert-plus/assert.js:200 =>     /* export ourselves (for unit tests _only_) */
./node_modules/assertion-error/package.json:57 =>   "description": "Error constructor for test and validation frameworks that implements standardized AssertionError specification.",
./node_modules/assertion-error/package.json:72 =>     "test",
./node_modules/assertion-error/package.json:92 =>     "test": "make test"
./node_modules/assertion-error/History.md:16 =>   * test: use vanilla test runner/assert
./node_modules/astw/package.json:89 =>     "test": "tape test/*.js"
./node_modules/astw/package.json:91 =>   "testling": {
./node_modules/astw/package.json:92 =>     "files": "test/*.js",
./node_modules/astw/package.json:94 =>       "ie/6..latest",
./node_modules/astw/package.json:95 =>       "chrome/20..latest",
./node_modules/astw/package.json:96 =>       "firefox/10..latest",
./node_modules/astw/package.json:97 =>       "safari/latest",
./node_modules/astw/package.json:98 =>       "opera/11.0..latest",
./node_modules/assertion-error/README.md:3 => > Error constructor for test and validation frameworks that implements standardized AssertionError specification.
./node_modules/assert-plus/README.md:5 => NODE\_NDEBUG, and (2) some API wrappers for argument testing.  Like
./node_modules/assert-plus/README.md:32 =>     at test (/home/mark/work/foo/foo.js:3:9)
./node_modules/assert-plus/README.md:44 =>     function test(foo) {
./node_modules/assert-plus/README.md:52 =>     function test(foo) {
./node_modules/astw/readme.markdown:5 => [![browser support](http://ci.testling.com/substack/astw.png)](http://ci.testling.com/substack/astw)
./node_modules/async/package.json:102 =>     "test": "nodeunit test/test-async.js"
./node_modules/async/package.json:114 =>       "test",
./node_modules/async/package.json:115 =>       "tests"
./node_modules/async/bower.json:32 =>     "test",
./node_modules/async/bower.json:33 =>     "tests"
./node_modules/asynckit/package.json:105 =>     "test",
./node_modules/asynckit/package.json:116 =>     "browser": "browserify -t browserify-istanbul test/lib/browserify_adjustment.js test/test-*.js | obake --coverage | tap-spec",
./node_modules/asynckit/package.json:118 =>     "debug": "tape test/test-*.js",
./node_modules/asynckit/package.json:119 =>     "lint": "eslint *.js lib/*.js test/*.js",
./node_modules/asynckit/package.json:122 =>     "test": "istanbul cover --reporter=json tape -- 'test/test-*.js' | tap-spec",
./node_modules/asynckit/package.json:123 =>     "win-test": "tape test/test-*.js"
./node_modules/asynckit/bench.js:20 => // add tests
./node_modules/asynckit/bench.js:73 =>   console.log('Fastest is ' + this.filter('fastest').map('name'));
./node_modules/async/README.md:100 => So far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. 
./node_modules/asynckit/README.md:13 => <!-- [![Readme](https://img.shields.io/badge/readme-tested-brightgreen.svg?style=flat)](https://www.npmjs.com/package/reamde) -->
./node_modules/asynckit/README.md:81 => More examples could be found in [test/test-parallel-array.js](test/test-parallel-array.js).
./node_modules/asynckit/README.md:127 => More examples could be found in [test/test-parallel-object.js](test/test-parallel-object.js).
./node_modules/asynckit/README.md:167 => More examples could be found in [test/test-serial-array.js](test/test-serial-array.js).
./node_modules/asynckit/README.md:209 => More examples could be found in [test/test-serial-object.js](test/test-serial-object.js).
./node_modules/asynckit/README.md:227 => More examples can be found in [test folder](test/).
./node_modules/aws4/package.json:137 =>     "test": "mocha ./test/fast.js ./test/slow.js -b -t 100s -R list"
./node_modules/babel-core/package.json:78 =>     "babel-helper-transform-fixture-test-runner": "^6.23.0",
./node_modules/babel-core/package.json:138 =>     "test": "make test"
./node_modules/aws4/aws4.js:8 => // http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html
./node_modules/aws4/aws4.js:72 => // http://docs.aws.amazon.com/general/latest/gr/rande.html
./node_modules/aws4/README.md:7 => [AWS Signature Version 4](http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html).
./node_modules/aws4/README.md:12 => [S3](http://docs.aws.amazon.com/AmazonS3/latest/API/),
./node_modules/aws4/README.md:13 => [EC2](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/),
./node_modules/aws4/README.md:14 => [DynamoDB](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html),
./node_modules/aws4/README.md:15 => [Kinesis](http://docs.aws.amazon.com/kinesis/latest/APIReference/),
./node_modules/aws4/README.md:16 => [Lambda](http://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html),
./node_modules/aws4/README.md:17 => [SQS](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/),
./node_modules/aws4/README.md:18 => [SNS](http://docs.aws.amazon.com/sns/latest/api/),
./node_modules/aws4/README.md:19 => [IAM](http://docs.aws.amazon.com/IAM/latest/APIReference/),
./node_modules/aws4/README.md:20 => [STS](http://docs.aws.amazon.com/STS/latest/APIReference/),
./node_modules/aws4/README.md:21 => [RDS](http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/),
./node_modules/aws4/README.md:22 => [CloudWatch](http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/),
./node_modules/aws4/README.md:23 => [CloudWatch Logs](http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/),
./node_modules/aws4/README.md:24 => [CodeDeploy](http://docs.aws.amazon.com/codedeploy/latest/APIReference/),
./node_modules/aws4/README.md:25 => [CloudFront](http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/),
./node_modules/aws4/README.md:26 => [CloudTrail](http://docs.aws.amazon.com/awscloudtrail/latest/APIReference/),
./node_modules/aws4/README.md:27 => [ElastiCache](http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/),
./node_modules/aws4/README.md:28 => [EMR](http://docs.aws.amazon.com/ElasticMapReduce/latest/API/),
./node_modules/aws4/README.md:29 => [Glacier](http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-api.html),
./node_modules/aws4/README.md:30 => [CloudSearch](http://docs.aws.amazon.com/cloudsearch/latest/developerguide/APIReq.html),
./node_modules/aws4/README.md:31 => [Elastic Load Balancing](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/),
./node_modules/aws4/README.md:32 => [Elastic Transcoder](http://docs.aws.amazon.com/elastictranscoder/latest/developerguide/api-reference.html),
./node_modules/aws4/README.md:33 => [CloudFormation](http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/),
./node_modules/aws4/README.md:34 => [Elastic Beanstalk](http://docs.aws.amazon.com/elasticbeanstalk/latest/api/),
./node_modules/aws4/README.md:35 => [Storage Gateway](http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html),
./node_modules/aws4/README.md:36 => [Data Pipeline](http://docs.aws.amazon.com/datapipeline/latest/APIReference/),
./node_modules/aws4/README.md:37 => [Direct Connect](http://docs.aws.amazon.com/directconnect/latest/APIReference/),
./node_modules/aws4/README.md:38 => [Redshift](http://docs.aws.amazon.com/redshift/latest/APIReference/),
./node_modules/aws4/README.md:39 => [OpsWorks](http://docs.aws.amazon.com/opsworks/latest/APIReference/),
./node_modules/aws4/README.md:40 => [SES](http://docs.aws.amazon.com/ses/latest/APIReference/),
./node_modules/aws4/README.md:41 => [SWF](http://docs.aws.amazon.com/amazonswf/latest/apireference/),
./node_modules/aws4/README.md:42 => [AutoScaling](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/),
./node_modules/aws4/README.md:43 => [Mobile Analytics](http://docs.aws.amazon.com/mobileanalytics/latest/ug/server-reference.html),
./node_modules/aws4/README.md:44 => [Cognito Identity](http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/),
./node_modules/aws4/README.md:45 => [Cognito Sync](http://docs.aws.amazon.com/cognitosync/latest/APIReference/),
./node_modules/aws4/README.md:46 => [Container Service](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/),
./node_modules/aws4/README.md:47 => [AppStream](http://docs.aws.amazon.com/appstream/latest/developerguide/appstream-api-rest.html),
./node_modules/aws4/README.md:48 => [Key Management Service](http://docs.aws.amazon.com/kms/latest/APIReference/),
./node_modules/aws4/README.md:49 => [Config](http://docs.aws.amazon.com/config/latest/APIReference/),
./node_modules/aws4/README.md:50 => [CloudHSM](http://docs.aws.amazon.com/cloudhsm/latest/dg/api-ref.html),
./node_modules/aws4/README.md:51 => [Route53](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rest.html) and
./node_modules/aws4/README.md:52 => [Route53 Domains](http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rpc.html).
./node_modules/aws4/README.md:55 => [Import/Export](http://docs.aws.amazon.com/AWSImportExport/latest/DG/api-reference.html) and
./node_modules/aws4/README.md:56 => [SimpleDB](http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API.html)
./node_modules/babel-plugin-check-es2015-constants/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-arrow-functions/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-block-scoped-functions/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-block-scoping/package.json:57 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-classes/package.json:61 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-computed-properties/package.json:54 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-destructuring/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-duplicate-keys/package.json:54 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-for-of/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-function-name/package.json:55 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-literals/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-modules-amd/package.json:56 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-modules-commonjs/package.json:57 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-modules-systemjs/package.json:55 =>     "babel-helper-plugin-test-runner": "^6.22.0",
./node_modules/babel-plugin-transform-es2015-modules-umd/package.json:55 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-object-super/package.json:54 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-parameters/package.json:58 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-shorthand-properties/package.json:54 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-spread/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-sticky-regex/package.json:55 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-template-literals/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-typeof-symbol/package.json:53 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-es2015-unicode-regex/package.json:55 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-regenerator/package.json:57 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-plugin-transform-strict-mode/package.json:54 =>     "babel-helper-plugin-test-runner": "^6.22.0"
./node_modules/babel-preset-es2015/package.json:80 =>     "babel-helper-plugin-test-runner": "^6.22.0",
./node_modules/babel-preset-es2015/package.json:81 =>     "babel-helper-transform-fixture-test-runner": "^6.22.0"
./node_modules/babelify/package.json:99 =>     "test": "tap test/*.js"
./node_modules/babel-types/README.md:356 => t.conditionalExpression(test, consequent, alternate)
./node_modules/babel-types/README.md:363 =>  - `test`: `Expression` (required)
./node_modules/babylon/package.json:56 =>       "test/*.js"
./node_modules/babylon/package.json:298 =>     "preversion": "npm run test && npm run changelog",
./node_modules/babylon/package.json:299 =>     "test": "npm run lint && npm run flow && npm run build -- -m && npm run test-only",
./node_modules/babylon/package.json:300 =>     "test-ci": "nyc npm run test-only",
./node_modules/babylon/package.json:301 =>     "test-only": "ava",
./node_modules/balanced-match/package.json:71 =>     "test",
./node_modules/balanced-match/package.json:91 =>     "test": "make test"
./node_modules/balanced-match/package.json:93 =>   "testling": {
./node_modules/balanced-match/package.json:94 =>     "files": "test/*.js",
./node_modules/balanced-match/package.json:96 =>       "ie/8..latest",
./node_modules/balanced-match/package.json:97 =>       "firefox/20..latest",
./node_modules/balanced-match/package.json:99 =>       "chrome/25..latest",
./node_modules/balanced-match/package.json:101 =>       "opera/12..latest",
./node_modules/balanced-match/package.json:103 =>       "safari/5.1..latest",
./node_modules/balanced-match/package.json:104 =>       "ipad/6.0..latest",
./node_modules/balanced-match/package.json:105 =>       "iphone/6.0..latest",
./node_modules/balanced-match/package.json:106 =>       "android-browser/4.2..latest"
./node_modules/babylon/README.md:14 =>  - The latest ECMAScript version enabled by default (ES2017).
./node_modules/babylon/CHANGELOG.md:14 => _Note: Gaps between patch versions are faulty, broken or test releases._
./node_modules/babylon/CHANGELOG.md:26 => We highly recommend everyone who uses babylon outside of babel to use this plugin. This will make it much easier for users to switch between different ESTree-compatible parsers. We so far tested several projects with different parsers and exchanged their parser to babylon and in nearly all cases it worked out of the box. Some other estree-compatible parsers include `acorn`, `esprima`, `espree`, `flow-parser`, etc.
./node_modules/babylon/CHANGELOG.md:148 => Fix flow type-parameter-declaration test with unintended semantic ([#361](https://github.com/babel/babylon/pull/361)) (Alex Rattray)
./node_modules/babylon/CHANGELOG.md:156 => Update eslint-config-babel to the latest version 🚀 ([#299](https://github.com/babel/babylon/pull/299)) (greenkeeper[bot])
./node_modules/babylon/CHANGELOG.md:158 => Update eslint-config-babel to the latest version 🚀 ([#293](https://github.com/babel/babylon/pull/293)) (greenkeeper[bot])
./node_modules/babylon/CHANGELOG.md:164 => Fail tests that have expected.json and throws-option ([#285](https://github.com/babel/babylon/pull/285)) (Daniel Tschinder)
./node_modules/babylon/CHANGELOG.md:168 => Update contributing with more test info [skip ci] ([#355](https://github.com/babel/babylon/pull/355)) (Brian Ng)
./node_modules/base64-js/package.json:70 =>     "test",
./node_modules/base64-js/package.json:101 =>     "test": "npm run lint && npm run unit",
./node_modules/base64-js/package.json:102 =>     "unit": "tape test/*.js"
./node_modules/balanced-match/README.md:8 => [![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)
./node_modules/base64-js/README.md:8 => [![testling badge](https://ci.testling.com/beatgammit/base64-js.png)](https://ci.testling.com/beatgammit/base64-js)
./node_modules/binary-extensions/package.json:113 =>     "test": "ava"
./node_modules/bn.js/package.json:108 =>     "test": "npm run lint && npm run unit",
./node_modules/bn.js/package.json:109 =>     "unit": "mocha --reporter=spec test/*-test.js"
./node_modules/boom/package.json:94 =>     "test": "lab -a code -t 100 -L",
./node_modules/boom/package.json:95 =>     "test-cov-html": "lab -a code -r html -o coverage.html -L"
./node_modules/bn.js/README.md:108 => * `a.testn(b)` - test if specified bit is set
./node_modules/brace-expansion/index.js:90 =>   return /^-?0\d/.test(el);
./node_modules/brace-expansion/index.js:104 =>   if (!m || /\$$/.test(m.pre)) return [str];
./node_modules/brace-expansion/index.js:106 =>   var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
./node_modules/brace-expansion/index.js:107 =>   var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
./node_modules/brace-expansion/index.js:109 =>   var isOptions = /^(.*,)+(.+)?$/.test(m.body);
./node_modules/brace-expansion/index.js:156 =>     var test = lte;
./node_modules/brace-expansion/index.js:160 =>       test = gte;
./node_modules/brace-expansion/index.js:166 =>     for (var i = x; test(i, y); i += incr) {
./node_modules/brace-expansion/package.json:92 =>     "gentest": "bash test/generate.sh",
./node_modules/brace-expansion/package.json:93 =>     "test": "tape test/*.js"
./node_modules/brace-expansion/package.json:95 =>   "testling": {
./node_modules/brace-expansion/package.json:96 =>     "files": "test/*.js",
./node_modules/brace-expansion/package.json:98 =>       "ie/8..latest",
./node_modules/brace-expansion/package.json:99 =>       "firefox/20..latest",
./node_modules/brace-expansion/package.json:101 =>       "chrome/25..latest",
./node_modules/brace-expansion/package.json:103 =>       "opera/12..latest",
./node_modules/brace-expansion/package.json:105 =>       "safari/5.1..latest",
./node_modules/brace-expansion/package.json:106 =>       "ipad/6.0..latest",
./node_modules/brace-expansion/package.json:107 =>       "iphone/6.0..latest",
./node_modules/brace-expansion/package.json:108 =>       "android-browser/4.2..latest"
./node_modules/braces/package.json:60 =>   "description": "Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.",
./node_modules/braces/package.json:131 =>     "test": "mocha"
./node_modules/brace-expansion/README.md:9 => [![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)
./node_modules/brorand/package.json:93 =>     "test": "mocha --reporter=spec test/**/*-test.js"
./node_modules/boom/README.md:34 =>   - [`create(statusCode, [message], [data])`](#createstatuscode-message-data)
./node_modules/braces/README.md:3 => Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.
./node_modules/braces/README.md:15 => * Complete support for the braces part of the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/). Braces passes [all of the relevant unit tests](#bash-4-3-support) from the spec.
./node_modules/braces/README.md:38 => > Use braces to generate test fixtures!
./node_modules/braces/README.md:55 => See the [tests](./test/test.js) for more examples and use cases (also see the [bash spec tests](./test/bash-mm-adjusted.js));
./node_modules/braces/README.md:95 => See [expand-range](https://github.com/jonschlinkert/expand-range) for benchmarks, tests and the full list of range expansion features.
./node_modules/braces/README.md:162 => This project has comprehensive unit tests, including tests coverted from [Bash 4.3](www.gnu.org/software/bash/). Currently only 8 of 102 unit tests fail, and
./node_modules/braces/README.md:172 => ### Latest results
./node_modules/braces/README.md:226 => ## Running tests
./node_modules/braces/README.md:231 => $ npm install -d && npm test
./node_modules/browser-pack/package.json:115 =>     "test": "tap test/*.js"
./node_modules/browser-pack/package.json:117 =>   "testling": {
./node_modules/browser-pack/package.json:118 =>     "files": "test/*.js",
./node_modules/browser-pack/package.json:124 =>       "chrome/latest",
./node_modules/browser-pack/package.json:126 =>       "firefox/latest",
./node_modules/browser-pack/package.json:127 =>       "safari/latest",
./node_modules/browser-pack/package.json:128 =>       "opera/latest"
./node_modules/braces/index.js:88 =>       if (!/\{[^{]+\{/.test(str)) {
./node_modules/braces/index.js:136 =>     if (/(\.[^.\/])/.test(path)) {
./node_modules/braces/index.js:146 =>     if (/\{[^{}]+?\}/.test(val)) {
./node_modules/braces/index.js:268 =>   if (!/\{[^{]+\{/.test(str)) {
./node_modules/braces/index.js:285 =>   if (!/[^\\]\..+\\\./.test(str)) {
./node_modules/braces/index.js:311 =>   if (!/\w,/.test(str)) {
./node_modules/browser-resolve/package.json:98 =>     "test": "mocha --reporter list test/*.js"
./node_modules/browser-stdout/package.json:76 =>     "test": "echo \"Error: no test specified\" && exit 1"
./node_modules/browserify/package.json:193 =>     "test": "tap test/*.js"
./node_modules/browserify/changelog.markdown:61 => adds the previously failing tests and a small change necessary for transforms to
./node_modules/browserify/changelog.markdown:68 => Node support changes: now testing against the latest node (currently 4.2.1).
./node_modules/browserify/changelog.markdown:69 => node 0.8 is no longer supported, and iojs isn't actively tested.
./node_modules/browserify/changelog.markdown:107 => The [`readable-stream`](https://npmjs.com/package/readable-stream) dependency was updated to `^2.0.0`. This package is inserted into bundles as `require('stream')`. Bundles will now get the latest streams implementation from io.js/node.js core, instead of an old version from node.js 0.11.x. Go forth and stream ALL THE DATA without fear!
./node_modules/browserify/changelog.markdown:165 => fix tests for tap@^1.1.0 (and update tap)
./node_modules/browser-pack/readme.markdown:5 => [![browser support](http://ci.testling.com/substack/browser-pack.png)](http://ci.testling.com/substack/browser-pack)
./node_modules/browserify/index.js:119 =>     if (file === expose && /^[\.]/.test(expose)) {
./node_modules/browserify-aes/decrypter.js:7 => var ebtk = require('evp_bytestokey')
./node_modules/browserify-aes/encrypter.js:5 => var ebtk = require('evp_bytestokey')
./node_modules/browserify-aes/package.json:54 =>     "evp_bytestokey": "^1.0.0",
./node_modules/browserify-aes/package.json:64 =>     "test": "test"
./node_modules/browserify-aes/package.json:109 =>     "test": "standard && node test/index.js|tspec"
./node_modules/browserify-cipher/package.json:55 =>     "evp_bytestokey": "^1.0.0"
./node_modules/browserify-cipher/package.json:86 =>     "test": "standard && node test.js | tspec"
./node_modules/browserify-aes/populateFixtures.js:2 => var fixtures = require('./test/fixtures.json')
./node_modules/browserify-aes/populateFixtures.js:25 => fs.writeFileSync('./test/fixturesNew.json', JSON.stringify(fixtures, false, 4))
./node_modules/browserify-cipher/browser.js:1 => var ebtk = require('evp_bytestokey')
./node_modules/browserify-des/package.json:85 =>     "test": "standard && node test.js | tspec"
./node_modules/browserify-cipher/test.js:1 => var test = require('tape')
./node_modules/browserify-cipher/test.js:8 =>   test('mode: ' + mode, function (t) {
./node_modules/browserify-cipher/test.js:14 =>       t.test('run: ' + i, function (t) {
./node_modules/browserify-rsa/package.json:102 =>     "test": "node test.js | tspec"
./node_modules/browserify-des/test.js:1 => var test = require('tape')
./node_modules/browserify-des/test.js:7 =>   test(mode, function (t) {
./node_modules/browserify-des/test.js:13 =>       t.test('run: ' + i, function (t) {
./node_modules/browserify-rsa/test.js:10 => var test = require('tape');
./node_modules/browserify-rsa/test.js:13 => function testIt(priv, run) {
./node_modules/browserify-rsa/test.js:14 =>   test('r is coprime with n ' + (run + 1), function (t) {
./node_modules/browserify-rsa/test.js:24 => privs.forEach(testIt);
./node_modules/browserify-rsa/test.js:26 => function testMessage(key, run) {
./node_modules/browserify-rsa/test.js:30 =>     test('round trip key ' + (run + 1) + ' run ' + (++i), function (t) {
./node_modules/browserify-sign/package.json:104 =>     "test": "npm run standard && npm run unit",
./node_modules/browserify-sign/package.json:105 =>     "unit": "node test/index.js | tspec"
./node_modules/browserify-zlib/package.json:59 =>     "test": "test"
./node_modules/browserify-zlib/package.json:86 =>     "test": "node_modules/tape/bin/tape test/*.js"
./node_modules/browserify-zlib/package.json:88 =>   "testling": {
./node_modules/browserify-zlib/package.json:89 =>     "files": "test/*.js",
./node_modules/browserify-zlib/package.json:91 =>       "ie/6..latest",
./node_modules/browserify-zlib/package.json:92 =>       "chrome/22..latest",
./node_modules/browserify-zlib/package.json:93 =>       "firefox/16..latest",
./node_modules/browserify-zlib/package.json:94 =>       "safari/latest",
./node_modules/browserify-zlib/package.json:95 =>       "opera/11.0..latest",
./node_modules/browserify-zlib/package.json:98 =>       "android-browser/latest"
./node_modules/browserify-zlib/README.md:4 => using [pako](https://github.com/nodeca/pako). It uses the actual Node source code and passes the Node zlib tests
./node_modules/browserify-zlib/README.md:7 => [![browser support](https://ci.testling.com/devongovett/browserify-zlib.png)
./node_modules/browserify-zlib/README.md:8 => ](https://ci.testling.com/devongovett/browserify-zlib)
./node_modules/browserify-zlib/README.md:10 => [![node tests](https://travis-ci.org/devongovett/browserify-zlib.svg)
./node_modules/buffer/package.json:127 =>     "test": "standard && node ./bin/test.js",
./node_modules/buffer/package.json:128 =>     "test-browser-es5": "zuul --ui tape -- test/*.js",
./node_modules/buffer/package.json:129 =>     "test-browser-es5-local": "zuul --ui tape --local -- test/*.js",
./node_modules/buffer/package.json:130 =>     "test-browser-es6": "zuul --ui tape -- test/*.js test/node/*.js",
./node_modules/buffer/package.json:131 =>     "test-browser-es6-local": "zuul --ui tape --local -- test/*.js test/node/*.js",
./node_modules/buffer/package.json:132 =>     "test-node": "tape test/*.js test/node/*.js && OBJECT_IMPL=true tape test/*.js",
./node_modules/buffer/package.json:137 =>       "test/node/*.js",
./node_modules/buffer/package.json:138 =>       "test/_polyfill.js",
./node_modules/buffer-shims/package.json:82 =>     "test": "tape test/*.js"
./node_modules/buffer/README.md:31 => - Comprehensive test suite (including all buffer tests from node.js core)
./node_modules/buffer/README.md:101 => ## tracking the latest node api
./node_modules/buffer/README.md:103 => This module tracks the Buffer API in the latest (unstable) version of node.js. The Buffer
./node_modules/buffer/README.md:105 => [node stability index](https://nodejs.org/docs/latest/api/documentation.html#documentation_stability_index),
./node_modules/buffer/README.md:120 => See perf tests in `/perf`.
./node_modules/buffer/README.md:131 => | Method | Operations | Accuracy | Sampled | Fastest |
./node_modules/buffer/README.md:169 => | Method | Operations | Accuracy | Sampled | Fastest |
./node_modules/builtin-status-codes/package.json:99 =>     "test": "standard && tape test.js"
./node_modules/buffer/index.js:21 =>  *   === true    Use Uint8Array implementation (fastest)
./node_modules/buffer-xor/package.json:92 =>     "test": "npm run-script unit",
./node_modules/builtin-status-codes/readme.md:3 => > The map of HTTP status codes from the builtin http module. Exposes the latest directly from `http` in Node, with a zero-dependencies version for the browser.
./node_modules/cached-path-relative/Makefile:14 => test: node_modules
./node_modules/cached-path-relative/Makefile:15 => 	@${BIN}/tape test/*
./node_modules/cached-path-relative/Makefile:20 => .PHONY: test validate
./node_modules/camelcase/package.json:99 =>     "test": "node test.js"
./node_modules/caseless/package.json:92 =>     "test": "node test.js"
./node_modules/caseless/package.json:94 =>   "test": "node test.js",
./node_modules/cached-path-relative/Readme.md:20 => relative('test/index.js', '.') === '../..'
./node_modules/camelcase/index.js:13 => 	if (str.length === 1 || !(/[_.\- ]+/).test(str) ) {
./node_modules/center-align/package.json:107 =>     "test": "mocha"
./node_modules/caseless/test.js:33 =>   c.set('tva', 'test1')
./node_modules/caseless/test.js:34 =>   c.set('tva-header', 'test2')
./node_modules/caseless/test.js:38 =>   t.equal(c.get('tva'), 'test1')
./node_modules/center-align/README.md:48 => ## Running tests
./node_modules/center-align/README.md:53 => $ npm i -d && npm test
./node_modules/chai/bower.json:6 =>     "test",
./node_modules/chai/bower.json:9 =>     "testing",
./node_modules/chai/bower.json:19 =>     "test",
./node_modules/chai/History.md:12 =>   * Merge pull request #422 from ljharb/fix_descriptor_tests
./node_modules/chai/History.md:15 =>   * Add `make test-firefox`
./node_modules/chai/History.md:87 =>  * updated `change` to work w/ non-number values + tests
./node_modules/chai/History.md:92 =>  * assert tests for `change`,`increase`,`decrease`
./node_modules/chai/History.md:93 =>  * expect/should tests for `change`,`increase`,`decrease`
./node_modules/chai/History.md:113 =>  * More unit tests for new utility functions
./node_modules/chai/History.md:114 =>  * Refactor common functionality, document, test
./node_modules/chai/History.md:116 =>  * Small unit test fix
./node_modules/chai/History.md:122 =>  * Revert "Allows writing lint-friendly tests"
./node_modules/chai/History.md:128 =>  * Merge pull request #300 from julienw/299-fix-getMessage-test
./node_modules/chai/History.md:129 =>  * Fix #299: the test is defining global variables
./node_modules/chai/History.md:130 =>  * Add a couple more unit tests
./node_modules/chai/History.md:131 =>  * Add unit tests for chained terminating property asserts
./node_modules/chai/History.md:137 =>  * added test for inspecting `-0`
./node_modules/chai/History.md:140 =>  * Change test to not trigger argument bug
./node_modules/chai/History.md:141 =>  * Allows writing lint-friendly tests
./node_modules/chai/History.md:183 =>   * additional test finds incomplete implementation
./node_modules/chai/History.md:199 =>   * Use latest karma and sauce launcher
./node_modules/chai/CONTRIBUTING.md:51 => 2. **Check if the issue has been fixed** &mdash; try to reproduce it using the latest `master` or development branch in the repository.
./node_modules/chai/CONTRIBUTING.md:52 => 3. **Isolate the problem** &mdash; create a test case to demonstrate your issue. Provide either a repo, gist, or code sample to demonstrate you problem.
./node_modules/chai/CONTRIBUTING.md:66 => > `<url>` - a link to the reduced test case OR
./node_modules/chai/CONTRIBUTING.md:87 => - PRs that increase test coverage are always welcome.
./node_modules/chai/CONTRIBUTING.md:94 => Please adhere to the coding conventions used throughout a project (indentation, accurate comments, etc.) and any other requirements (such as test coverage). Please review the [Chai.js Coding Style Guide](https://github.com/chaijs/chai/wiki/Chai-Coding-Style-Guide).
./node_modules/chai/CONTRIBUTING.md:109 => 2. If you cloned a while ago, get the latest changes from upstream:
./node_modules/chai/CONTRIBUTING.md:124 => 5. Run you code to make sure it works. If you're still having problems please try to run `make clean` and then test your code again.
./node_modules/chai/CONTRIBUTING.md:127 => npm test
./node_modules/chai/CONTRIBUTING.md:128 => # when finished running tests...
./node_modules/chai/package.json:98 =>     "test",
./node_modules/chai/package.json:101 =>     "testing",
./node_modules/chai/package.json:124 =>     "test": "make test"
./node_modules/chai/karma.conf.js:6 =>         , 'test/bootstrap/karma.js'
./node_modules/chai/karma.conf.js:7 =>         , 'test/*.js'
./node_modules/chai/README.md:17 => can be delightfully paired with any javascript testing framework.
./node_modules/chai/README.md:32 => - [chaijs / deep-eql](https://github.com/chaijs/deep-eql): Improved deep equality testing for Node.js and the browser.
./node_modules/chai/karma.sauce.js:8 =>     auth = require('./test/auth/index');
./node_modules/chai/karma.sauce.js:38 =>     , testName: 'ChaiJS'
./node_modules/chalk/index.js:8 => var isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);
./node_modules/chalk/package.json:130 =>     "coverage": "nyc npm test && nyc report",
./node_modules/chalk/package.json:131 =>     "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
./node_modules/chalk/package.json:132 =>     "test": "xo && mocha"
./node_modules/chai/ReleaseNotes.md:15 => expect('test').to.have.ownPropertyDescriptor('length');
./node_modules/chai/ReleaseNotes.md:16 => expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });
./node_modules/chai/ReleaseNotes.md:17 => expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });
./node_modules/chai/ReleaseNotes.md:18 => expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);
./node_modules/chai/ReleaseNotes.md:19 => expect('test').ownPropertyDescriptor('length').to.have.keys('value');
./node_modules/chai/ReleaseNotes.md:30 =>    tests.
./node_modules/chai/ReleaseNotes.md:141 =>  * [#306](https://github.com/chaijs/chai/pull/306) revert #297 - allowing lint-friendly tests. By [@keithamus](https://github.com/keithamus)
./node_modules/chai/ReleaseNotes.md:188 => test code, your linter will complain with an error something like "Expected an
./node_modules/chai/ReleaseNotes.md:193 => Squelching these errors is not a good solution as test code is getting to be
./node_modules/chai/ReleaseNotes.md:195 => errors in tests using static analysis is a great tool to help make sure that your
./node_modules/chai/ReleaseNotes.md:196 => tests are well-defined and free of typos.
./node_modules/chokidar/package.json:118 =>     "ci-test": "istanbul cover _mocha && cat ./coverage/lcov.info | coveralls",
./node_modules/chokidar/package.json:119 =>     "test": "istanbul test node_modules/mocha/bin/_mocha"
./node_modules/chalk/readme.md:81 => Take advantage of console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data).
./node_modules/chai/chai.js:186 =>    * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
./node_modules/chai/chai.js:189 =>    * @param {Philosophical} expression to be tested
./node_modules/chai/chai.js:199 =>     var ok = util.test(this, arguments);
./node_modules/cipher-base/package.json:92 =>     "test": "node test.js | tspec"
./node_modules/chokidar/README.md:159 => tested, not just filename. If a function with two arguments is provided, it
./node_modules/cliui/package.json:58 =>         "test"
./node_modules/cliui/package.json:111 =>     "test": "standard && mocha --check-leaks --ui exports --require patched-blanket -R mocoverage"
./node_modules/cipher-base/test.js:1 => var test = require('tape')
./node_modules/cipher-base/test.js:5 => test('basic version', function (t) {
./node_modules/cipher-base/test.js:24 => test('hash mode', function (t) {
./node_modules/cipher-base/test.js:45 => test('hash mode as stream', function (t) {
./node_modules/cipher-base/test.js:70 => test('encodings', function (t) {
./node_modules/cipher-base/test.js:81 =>   t.test('mix and match encoding', function (t) {
./node_modules/cipher-base/test.js:96 =>   t.test('handle long uft8 plaintexts', function (t) {
./node_modules/code-point-at/package.json:103 =>     "test": "xo && ava"
./node_modules/cliui/index.js:41 =>     /[\t\n]/.test(arguments[0])
./node_modules/color/README.md:15 => Download the latest [color.js](https://github.com/harthur/color/tree/gh-pages). The `Color` object is exported.
./node_modules/color-convert/README.md:18 => Download the latest [color-convert.js](http://github.com/harthur/color-convert/downloads). All the methods are on the `colorConvert` object.
./node_modules/color-string/README.md:36 => Download the latest [color-string.js](http://github.com/harthur/color-string/downloads). The `colorString` object is exported.
./node_modules/colors/example.js:5 => var test = colors.red("hopefully colorless output");
./node_modules/colors/example.js:10 => console.log(test.stripColors);
./node_modules/colors/example.js:23 => console.log(colors.stripColors(test));
./node_modules/colors/example.html:11 =>     var test = colors.red("hopefully colorless output");
./node_modules/colors/example.html:17 =>     document.write(test.stripColors);
./node_modules/colors/example.html:28 =>     document.write(colors.stripColors(test));
./node_modules/combine-source-map/package.json:107 =>     "test": "tap test/*.js"
./node_modules/combined-stream/package.json:98 =>     "test": "node test/run.js"
./node_modules/commander/index.js:45 =>   if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();
./node_modules/commander/index.js:115 =>  *        .option('-T, --no-tests', 'ignore test hook')
./node_modules/commander/package.json:103 =>     "test": "make test"
./node_modules/commander/History.md:82 =>  * add: allow cflag style option params, unit test, fixes #174
./node_modules/combine-source-map/index.js:39 =>       protocolRx.test(relativeRootedPath)) {  // absolute protocol need rebasing
./node_modules/concat-map/package.json:58 =>     "test": "test"
./node_modules/concat-map/package.json:88 =>     "test": "tape test/*.js"
./node_modules/concat-map/package.json:90 =>   "testling": {
./node_modules/concat-map/package.json:91 =>     "files": "test/*.js",
./node_modules/concat-stream/package.json:107 =>     "test": "tape test/*.js test/server/*.js"
./node_modules/concat-stream/package.json:115 =>   "testling": {
./node_modules/concat-stream/package.json:116 =>     "files": "test/*.js",
./node_modules/concat-stream/package.json:118 =>       "ie/8..latest",
./node_modules/concat-stream/package.json:119 =>       "firefox/17..latest",
./node_modules/concat-stream/package.json:121 =>       "chrome/22..latest",
./node_modules/concat-stream/package.json:123 =>       "opera/12..latest",
./node_modules/concat-stream/package.json:125 =>       "safari/5.1..latest",
./node_modules/concat-stream/package.json:126 =>       "ipad/6.0..latest",
./node_modules/concat-stream/package.json:127 =>       "iphone/6.0..latest",
./node_modules/concat-stream/package.json:128 =>       "android-browser/4.2..latest"
./node_modules/concat-map/README.markdown:6 => [![browser support](http://ci.testling.com/substack/node-concat-map.png)](http://ci.testling.com/substack/node-concat-map)
./node_modules/concat-stream/readme.md:68 => See `test/` for more examples
./node_modules/console-browserify/package.json:95 =>     "browser": "run-browser test/index.js",
./node_modules/console-browserify/package.json:96 =>     "build": "browserify test/index.js -o test/static/bundle.js",
./node_modules/console-browserify/package.json:97 =>     "cover": "istanbul cover --report none --print detail ./test/index.js",
./node_modules/console-browserify/package.json:98 =>     "dot": "node ./test/index.js | tap-dot",
./node_modules/console-browserify/package.json:99 =>     "phantom": "run-browser test/index.js -b | tap-spec",
./node_modules/console-browserify/package.json:101 =>     "test": "node ./test/index.js | tap-spec",
./node_modules/console-browserify/package.json:102 =>     "testem": "testem",
./node_modules/console-browserify/package.json:105 =>   "testling": {
./node_modules/console-browserify/package.json:106 =>     "files": "test/index.js",
./node_modules/console-browserify/package.json:108 =>       "ie/8..latest",
./node_modules/console-browserify/package.json:109 =>       "firefox/16..latest",
./node_modules/console-browserify/package.json:111 =>       "chrome/22..latest",
./node_modules/console-browserify/package.json:113 =>       "opera/12..latest",
./node_modules/console-browserify/package.json:115 =>       "safari/5.1..latest",
./node_modules/console-browserify/package.json:116 =>       "ipad/6.0..latest",
./node_modules/console-browserify/package.json:117 =>       "iphone/6.0..latest",
./node_modules/console-browserify/package.json:118 =>       "android-browser/4.2..latest"
./node_modules/concat-stream/index.js:73 =>   return /Array\]$/.test(Object.prototype.toString.call(arr))
./node_modules/convert-source-map/package.json:98 =>     "test": "tap test/*.js --color"
./node_modules/constants-browserify/package.json:91 =>     "test": "node test.js"
./node_modules/console-browserify/README.md:32 =>   [3]: http://ci.testling.com/Raynos/console-browserify.png
./node_modules/console-browserify/README.md:33 =>   [4]: http://ci.testling.com/Raynos/console-browserify
./node_modules/core-util-is/package.json:92 =>     "test": "tap test.js"
./node_modules/core-js/bower.json:45 =>     "tests"
./node_modules/core-js/package.json:57 =>     "es-observable-tests": "0.2.x",
./node_modules/core-js/package.json:74 =>     "promises-aplus-tests": "2.1.x",
./node_modules/core-js/package.json:131 =>     "observables-tests": "node tests/observables/adapter && node tests/observables/adapter-library",
./node_modules/core-js/package.json:132 =>     "promises-tests": "promises-aplus-tests tests/promises-aplus/adapter",
./node_modules/core-js/package.json:133 =>     "test": "npm run lint && npm run grunt livescript client karma:default && npm run grunt library karma:library && npm run promises-tests && npm run observables-tests && lsc tests/commonjs"
./node_modules/create-hash/package.json:41 =>     "/evp_bytestokey",
./node_modules/create-hash/package.json:63 =>     "hash-test-vectors": "^1.3.2",
./node_modules/create-hash/package.json:109 =>     "test": "node test.js | tspec"
./node_modules/create-ecdh/package.json:105 =>     "test": "node test.js | tspec"
./node_modules/create-hash/test.js:2 => var test = require('tape')
./node_modules/create-hash/test.js:6 => var vectors = require('hash-test-vectors')
./node_modules/create-hash/test.js:13 =>   test('test ' + algorithm + ' against test vectors', function (t) {
./node_modules/create-hash/test.js:18 =>       t.equal(js, node, algorithm + '(testVector['+i+']) == ' + node)
./node_modules/create-hash/test.js:26 =>           t.equal(js, node, algorithm + '(testVector['+i+'], '+encoding+') == ' + node)
./node_modules/create-hash/test.js:35 =>       t.equal(js, node, algorithm + '(testVector['+i+']) == ' + node)
./node_modules/cryptiles/package.json:90 =>     "test": "lab -a code -t 100 -L",
./node_modules/cryptiles/package.json:91 =>     "test-cov-html": "lab -a code -r html -o coverage.html"
./node_modules/core-util-is/float.patch:90 => -    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/create-hmac/package.json:57 =>     "hash-test-vectors": "^1.3.2",
./node_modules/create-hmac/package.json:104 =>     "test": "node test.js | tspec"
./node_modules/crypto-browserify/package.json:69 =>     "hash-test-vectors": "~1.3.2",
./node_modules/crypto-browserify/package.json:116 =>     "browser": "zuul --browser-version $BROWSER_VERSION --browser-name $BROWSER_NAME -- test/index.js",
./node_modules/crypto-browserify/package.json:118 =>     "test": "npm run standard && npm run unit",
./node_modules/crypto-browserify/package.json:119 =>     "unit": "node test/"
./node_modules/create-hmac/test.js:1 => var test = require('tape')
./node_modules/create-hmac/test.js:6 => var vectors = require('hash-test-vectors/hmac')
./node_modules/create-hmac/test.js:14 =>       test('hmac(' + alg + ') w/ ' + input.data.slice(0, 6)  + '... as ' + format, function (t) {
./node_modules/create-hmac/test.js:31 =>     test('hmac(' + alg + ') as stream w/ ' + input.data.slice(0, 6) + '...', function (t) {
./node_modules/crypto-browserify/README.md:41 => and save base64 strings inside JSON, so that tests can run in the browser.
./node_modules/dashdash/package.json:122 =>     "test": "nodeunit test/*.test.js"
./node_modules/date-now/package.json:61 =>     "testem": "~0.2.52"
./node_modules/date-now/package.json:91 =>     "build": "browserify test/index.js -o test/static/bundle.js",
./node_modules/date-now/package.json:92 =>     "test": "node ./test",
./node_modules/date-now/package.json:93 =>     "testem": "testem"
./node_modules/date-now/package.json:95 =>   "testling": {
./node_modules/date-now/package.json:96 =>     "files": "test/*.js",
./node_modules/dashdash/CHANGES.md:13 =>         $ triton -v -p test2 package get <TAB>          # before
./node_modules/dashdash/CHANGES.md:16 =>         $ triton -v -p test2 package get <TAB>          # after
./node_modules/dashdash/CHANGES.md:42 => - Drop testing (and official support in packages.json#engines) for node 0.8.x.
./node_modules/dashdash/CHANGES.md:43 =>   Add testing against node 5.x and 4.x with `make testall`.
./node_modules/debug/bower.json:26 =>     "test",
./node_modules/debug/bower.json:27 =>     "tests"
./node_modules/date-now/README.md:44 =>   [3]: http://ci.testling.com/Colingo/date-now.png
./node_modules/date-now/README.md:45 =>   [4]: http://ci.testling.com/Colingo/date-now
./node_modules/debug/CHANGELOG.md:37 =>   * Test: added karma integration and replaced babel with browserify for browser tests (#378, @yamikuronue)
./node_modules/debug/CHANGELOG.md:65 =>   * Misc: added linting and testing boilerplate with sanity check (@thebigredgeek)
./node_modules/debug/Makefile:29 => test-node: .FORCE
./node_modules/debug/Makefile:30 => 	istanbul cover node_modules/mocha/bin/_mocha -- test/**.js
./node_modules/debug/Makefile:32 => test-browser: .FORCE
./node_modules/debug/Makefile:42 => test: .FORCE
./node_modules/debug/Makefile:44 => 		"make test-node" \
./node_modules/debug/Makefile:45 => 		"make test-browser"
./node_modules/decamelize/package.json:104 =>     "test": "xo && ava"
./node_modules/debug/karma.conf.js:19 =>       'test/*spec.js'
./node_modules/debug/karma.conf.js:34 =>     // test results reporter to use
./node_modules/debug/karma.conf.js:53 =>     // enable / disable watching file and executing tests whenever any file changes
./node_modules/debug/karma.conf.js:63 =>     // if true, Karma captures browsers, runs the tests and exits
./node_modules/deep-eql/History.md:6 =>  * index,test: conditional require in test bootstrap
./node_modules/deep-eql/History.md:21 =>  * tests: add iterable
./node_modules/deep-eql/History.md:24 =>  * testing: [env] use karma for phantom
./node_modules/deep-eql/History.md:25 =>  * add tests (uncompleted)
./node_modules/deep-eql/package.json:53 =>   "description": "Improved deep equality testing for Node.js and the browser.",
./node_modules/deep-eql/package.json:76 =>     "testing",
./node_modules/deep-eql/package.json:95 =>     "test": "make test"
./node_modules/defined/package.json:62 =>     "test": "test"
./node_modules/defined/package.json:94 =>     "test": "tape test/*.js"
./node_modules/defined/package.json:96 =>   "testling": {
./node_modules/defined/package.json:97 =>     "files": "test/*.js",
./node_modules/deep-eql/karma.conf.js:7 =>         , 'test/bootstrap/karma.js'
./node_modules/deep-eql/karma.conf.js:8 =>         , 'test/*.js'
./node_modules/debug/README.md:144 =>   or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),
./node_modules/deep-eql/README.md:3 => > Improved deep equality testing for Node.js and the browser.
./node_modules/delayed-stream/package.json:94 =>     "test": "make test"
./node_modules/defined/readme.markdown:5 => [![browser support](http://ci.testling.com/substack/defined.png)](http://ci.testling.com/substack/defined)
./node_modules/delayed-stream/Makefile:3 => test:
./node_modules/delayed-stream/Makefile:4 => 	@./test/run.js
./node_modules/delayed-stream/Makefile:6 => .PHONY: test
./node_modules/deps-sort/package.json:102 =>     "test": "tap test/*.js"
./node_modules/des.js/package.json:90 =>     "test": "mocha --reporter=spec test/*-test.js && jscs lib/*.js lib/**/*.js test/*.js && jshint lib/*.js lib/**/*.js"
./node_modules/detective/package.json:97 =>     "test": "tap test/*.js"
./node_modules/diff/package.json:93 =>     "test": "istanbul cover node_modules/.bin/_mocha test/*.js && istanbul check-coverage --statements 100 --functions 100 --branches 100 --lines 100 coverage/coverage.json"
./node_modules/detective/index.js:42 =>     if (!wordRe.test(src)) return modules;
./node_modules/detective/index.js:47 =>         var hasRequire = wordRe.test(src.slice(node.start, node.end));
./node_modules/diffie-hellman/package.json:106 =>     "test": "node test.js | tspec"
./node_modules/duplexer2/package.json:102 =>     "test": "mocha -R tap"
./node_modules/domain-browser/package.json:176 =>     "test": "node --harmony ./test.js",
./node_modules/elliptic/package.json:114 =>     "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
./node_modules/elliptic/package.json:115 =>     "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
./node_modules/elliptic/package.json:117 =>     "test": "npm run lint && npm run unit",
./node_modules/elliptic/package.json:118 =>     "unit": "istanbul test _mocha --reporter=spec test/index.js",
./node_modules/es6-promise/package.json:73 =>     "promises-aplus-tests-phantom": "^2.1.0-revise",
./node_modules/es6-promise/package.json:119 =>     "test": "ember test",
./node_modules/es6-promise/package.json:120 =>     "test:node": "ember build && mocha ./dist/test/browserify",
./node_modules/es6-promise/package.json:121 =>     "test:server": "ember test --server"
./node_modules/escape-string-regexp/package.json:107 =>     "test": "xo && ava"
./node_modules/esutils/package.json:102 =>     "test": "npm run-script lint && npm run-script unit-test",
./node_modules/esutils/package.json:103 =>     "unit-test": "mocha --compilers coffee:coffee-script -R spec"
./node_modules/elliptic/README.md:23 => Fastest is elliptic#sign
./node_modules/elliptic/README.md:29 => Fastest is elliptic#verify
./node_modules/elliptic/README.md:35 => Fastest is elliptic#gen
./node_modules/elliptic/README.md:40 => Fastest is elliptic#ecdh
./node_modules/es6-promise/README.md:59 => * `npm test` to run tests
./node_modules/es6-promise/README.md:60 => * `npm start` to run a build watcher, and webserver to test 
./node_modules/es6-promise/README.md:61 => * `npm run test:server` for a testem test runner and watching builder
./node_modules/events/package.json:100 =>     "test": "mocha --ui qunit -- tests/index.js && zuul -- tests/index.js"
./node_modules/events/History.md:20 =>   - Update to latest events code from node.js 0.10
./node_modules/events/History.md:21 =>   - copy tests from node.js
./node_modules/evp_bytestokey/package.json:5 =>         "raw": "evp_bytestokey@^1.0.0",
./node_modules/evp_bytestokey/package.json:7 =>         "escapedName": "evp_bytestokey",
./node_modules/evp_bytestokey/package.json:8 =>         "name": "evp_bytestokey",
./node_modules/evp_bytestokey/package.json:16 =>   "_from": "evp_bytestokey@>=1.0.0 <2.0.0",
./node_modules/evp_bytestokey/package.json:17 =>   "_id": "evp_bytestokey@1.0.0",
./node_modules/evp_bytestokey/package.json:19 =>   "_location": "/evp_bytestokey",
./node_modules/evp_bytestokey/package.json:28 =>     "raw": "evp_bytestokey@^1.0.0",
./node_modules/evp_bytestokey/package.json:30 =>     "escapedName": "evp_bytestokey",
./node_modules/evp_bytestokey/package.json:31 =>     "name": "evp_bytestokey",
./node_modules/evp_bytestokey/package.json:41 =>   "_resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.0.tgz",
./node_modules/evp_bytestokey/package.json:44 =>   "_spec": "evp_bytestokey@^1.0.0",
./node_modules/evp_bytestokey/package.json:65 =>     "tarball": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.0.tgz"
./node_modules/evp_bytestokey/package.json:81 =>   "name": "evp_bytestokey",
./node_modules/evp_bytestokey/package.json:89 =>     "test": "standard && node test.js | tspec"
./node_modules/evp_bytestokey/test.js:1 => var test = require('tape')
./node_modules/evp_bytestokey/test.js:6 =>   test('password: ' + password, function (t) {
./node_modules/expand-brackets/package.json:107 =>     "test": "mocha"
./node_modules/expand-range/package.json:117 =>     "test": "mocha"
./node_modules/expand-brackets/index.js:76 =>       if (/^\[?\w-\w\]?$/.test(inner)) {
./node_modules/expand-brackets/index.js:127 =>     if (result.indexOf('|') !== -1 && !/\(\?/.test(result)) {
./node_modules/expand-brackets/index.js:144 =>     return brackets.makeRe(pattern).test(str);
./node_modules/expand-brackets/index.js:157 =>     if (!re.test(ele)) {
./node_modules/expand-brackets/README.md:85 => ## Running tests
./node_modules/expand-brackets/README.md:90 => $ npm install -d && npm test
./node_modules/extglob/package.json:102 =>     "test": "mocha"
./node_modules/expand-range/README.md:101 => * [braces](https://www.npmjs.com/package/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://www.npmjs.com/package/braces) | [homepage](https://github.com/jonschlinkert/braces)
./node_modules/expand-range/README.md:123 => ## Running tests
./node_modules/expand-range/README.md:128 => $ npm install -d && npm test
./node_modules/extend/CHANGELOG.md:13 =>   * Test latest `node` and `io.js` versions on `travis-ci`; speed up builds
./node_modules/extend/CHANGELOG.md:20 =>   * Increase code coverage to 100%; run code coverage as part of tests
./node_modules/extend/CHANGELOG.md:21 =>   * Add `npm run lint`; Run linter as part of tests
./node_modules/extend/CHANGELOG.md:34 =>   * Adding additional test coverage
./node_modules/extend/CHANGELOG.md:49 =>   * Using `tape` instead of `buster` for tests; add more tests (#7)
./node_modules/extend/CHANGELOG.md:51 =>   * Enabling "npm test" and cleaning up package.json (#5)
./node_modules/extend/CHANGELOG.md:56 =>   * Added unit tests.
./node_modules/extglob/README.md:56 => * [braces](https://github.com/jonschlinkert/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://github.com/jonschlinkert/braces)
./node_modules/extglob/README.md:62 => ## Run tests
./node_modules/extglob/README.md:67 => $ npm i -d && npm test
./node_modules/extend/package.json:98 =>     "coverage": "covert test/index.js",
./node_modules/extend/package.json:99 =>     "coverage-quiet": "covert test/index.js --quiet",
./node_modules/extend/package.json:103 =>     "test": "npm run lint && node test/index.js && npm run coverage-quiet"
./node_modules/detect-indent/package.json:101 =>     "test": "xo && ava"
./node_modules/filename-regex/package.json:97 =>     "test": "mocha -R spec"
./node_modules/extsprintf/Makefile.targ:25 => #	prepush	Depends on "check" and "test"
./node_modules/extsprintf/Makefile.targ:27 => #	test	Does nothing (you should override this)
./node_modules/fill-range/package.json:118 =>     "test": "mocha"
./node_modules/filename-regex/README.md:25 => ## Run tests
./node_modules/filename-regex/README.md:30 => npm i -d && npm test
./node_modules/for-in/package.json:107 =>     "test": "mocha"
./node_modules/for-in/README.md:52 => ## Running tests
./node_modules/for-in/README.md:57 => $ npm install -d && npm test
./node_modules/for-own/package.json:108 =>     "test": "mocha"
./node_modules/fill-range/index.js:115 =>   if (/[.&*()[\]^%$#@!]/.test(a) || /[.&*()[\]^%$#@!]/.test(b)) {
./node_modules/fill-range/index.js:346 =>   return /[a-z0-9]/i.test(val);
./node_modules/fill-range/index.js:355 =>   return /[a-z][0-9]|[0-9][a-z]/i.test(val);
./node_modules/fill-range/index.js:363 =>   if (/^-*0+$/.test(val.toString())) {
./node_modules/fill-range/index.js:375 =>   return /[^.]\.|^-*0+[0-9]/.test(val);
./node_modules/fill-range/README.md:22 => - [Running tests](#running-tests)
./node_modules/fill-range/README.md:121 => A special character may be passed as the third arg instead of a step increment. These characters can be pretty useful for brace expansion, creating file paths, test fixtures and similar use case.
./node_modules/fill-range/README.md:259 =>  * [braces](https://github.com/jonschlinkert/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.
./node_modules/fill-range/README.md:262 => ## Running tests
./node_modules/fill-range/README.md:266 => npm i -d && npm test
./node_modules/for-own/README.md:12 => ## Run tests
./node_modules/for-own/README.md:15 => npm test
./node_modules/form-data/package.json:117 =>     "ci-test",
./node_modules/form-data/package.json:126 =>     "browser": "browserify -t browserify-istanbul test/run-browser.js | obake --coverage",
./node_modules/form-data/package.json:129 =>     "ci-test": "npm run test && npm run browser && npm run report",
./node_modules/form-data/package.json:130 =>     "debug": "verbose=1 ./test/run.js",
./node_modules/form-data/package.json:133 =>     "lint": "eslint lib/*.js test/*.js test/integration/*.js",
./node_modules/form-data/package.json:135 =>     "posttest": "istanbul report lcov text",
./node_modules/form-data/package.json:136 =>     "predebug": "rimraf coverage test/tmp",
./node_modules/form-data/package.json:138 =>     "pretest": "rimraf coverage test/tmp",
./node_modules/form-data/package.json:141 =>     "test": "istanbul cover test/run.js",
./node_modules/fs-grep/package.json:112 =>     "check": "fecs check src/ test/ --reporter=baidu",
./node_modules/fs-grep/package.json:117 =>     "test": "mocha --compilers js:babel-register --reporter spec --timeout 5000 --recursive test/",
./node_modules/fs-grep/package.json:118 =>     "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --compilers js:babel-register -t 5000 --recursive  -R spec test/",
./node_modules/fs-grep/README.md:27 => # 例子:查找当前目录下的包含所有test的文件
./node_modules/fs-grep/README.md:28 => fs-grep test
./node_modules/fs-grep/README.md:31 => fs-grep test "./**/*.md"
./node_modules/fs-grep/README.md:34 => fs-grep --color test
./node_modules/fs-readdir-recursive/package.json:104 =>     "test": "mocha --reporter spec",
./node_modules/fs-readdir-recursive/package.json:105 =>     "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
./node_modules/fs-readdir-recursive/package.json:106 =>     "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot"
./node_modules/fs.realpath/index.js:13 => var ok = /^v[0-5]\./.test(version)
./node_modules/fs.realpath/old.js:28 => var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);
./node_modules/form-data/README.md:165 =>   headers: {'x-test-header': 'test-header-value'}
./node_modules/fs.realpath/package.json:91 =>     "test": "tap test/*.js --cov"
./node_modules/fs-readline/appveyor.yml:12 => test_script:
./node_modules/fs-readline/appveyor.yml:15 =>   - npm run test
./node_modules/fs-readdir-recursive/README.md:24 =>   'test/test.js',
./node_modules/fs-readline/package.json:90 =>     "test": "mocha --require should --reporter spec",
./node_modules/fs-readline/package.json:91 =>     "test-cov": "istanbul cover ./node_modules/.bin/_mocha"
./node_modules/function-bind/package.json:112 =>     "coverage": "covert test/*.js",
./node_modules/function-bind/package.json:113 =>     "coverage-quiet": "covert test/*.js --quiet",
./node_modules/function-bind/package.json:117 =>     "test": "npm run lint && npm run tests-only && npm run coverage-quiet",
./node_modules/function-bind/package.json:118 =>     "tests-only": "node test"
./node_modules/function-bind/package.json:120 =>   "testling": {
./node_modules/function-bind/package.json:121 =>     "files": "test/index.js",
./node_modules/function-bind/package.json:123 =>       "ie/8..latest",
./node_modules/function-bind/package.json:124 =>       "firefox/16..latest",
./node_modules/function-bind/package.json:126 =>       "chrome/22..latest",
./node_modules/function-bind/package.json:128 =>       "opera/12..latest",
./node_modules/function-bind/package.json:130 =>       "safari/5.1..latest",
./node_modules/function-bind/package.json:131 =>       "ipad/6.0..latest",
./node_modules/function-bind/package.json:132 =>       "iphone/6.0..latest",
./node_modules/function-bind/package.json:133 =>       "android-browser/4.2..latest"
./node_modules/generate-function/package.json:84 =>     "test": "tape test.js"
./node_modules/generate-function/index.js:19 =>     if (INDENT_END.test(fmt.trim()[0]) && INDENT_START.test(fmt[fmt.length-1])) {
./node_modules/generate-function/index.js:25 =>     if (INDENT_START.test(fmt[fmt.length-1])) {
./node_modules/generate-function/index.js:30 =>     if (INDENT_END.test(fmt.trim()[0])) {
./node_modules/function-bind/README.md:18 => I mainly do this for unit tests I run on phantomjs.
./node_modules/function-bind/README.md:47 =>   [11]: https://ci.testling.com/Raynos/function-bind.png
./node_modules/function-bind/README.md:48 =>   [12]: https://ci.testling.com/Raynos/function-bind
./node_modules/generate-object-property/package.json:81 =>     "test": "tape test.js"
./node_modules/getpass/package.json:87 =>     "test": "tape test/*.test.js"
./node_modules/glob/common.js:107 =>   // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
./node_modules/glob/common.js:162 =>         var notDir = !(/\/$/.test(e))
./node_modules/glob/glob.js:21 => //     // by pruning it out, and testing the resulting pattern
./node_modules/glob/package.json:107 =>     "test": "tap test/*.js --cov",
./node_modules/glob/package.json:108 =>     "test-regen": "npm run profclean && TEST_REGEN=1 node test/00-setup.js"
./node_modules/glob/sync.js:197 =>   // now test all matched entries as stand-ins for that part
./node_modules/glob-base/package.json:113 =>     "test": "mocha"
./node_modules/glob/changelog.md:33 => - Pass all tests on Windows
./node_modules/glob-base/README.md:18 => * [braces](https://github.com/jonschlinkert/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.
./node_modules/glob-base/README.md:133 => ## Running tests
./node_modules/glob-base/README.md:137 => npm i -d && npm test
./node_modules/glob-parent/package.json:91 =>     "test": "istanbul cover _mocha && cat ./coverage/lcov.info | coveralls"
./node_modules/glob/README.md:81 => `test/simple/basic.js`.
./node_modules/globals/package.json:112 =>     "test": "mocha"
./node_modules/graceful-fs/graceful-fs.js:13 => else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
./node_modules/graceful-fs/graceful-fs.js:20 => if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
./node_modules/graceful-fs/package.json:60 =>     "test": "test"
./node_modules/graceful-fs/package.json:109 =>     "test": "node test.js | tap -"
./node_modules/graceful-readlink/package.json:80 =>     "test": "echo \"Error: no test specified\" && exit 1"
./node_modules/growl/History.md:58 =>   * Fixed; sys.exec -> child_process.exec to support latest node
./node_modules/has/package.json:90 =>     "test": "node_modules/mocha/bin/mocha"
./node_modules/growl/test.js:25 => growl('Allow custom notifiers', { title: 'test', exec: 'echo YYY' }, function(error, stdout, stderr) {
./node_modules/growl/test.js:28 => growl('Allow custom notifiers', { title: 'test', exec: 'echo ZZZ %s' }, function(error, stdout, stderr) {
./node_modules/har-validator/package.json:63 =>     "codeclimate-test-reporter": "0.2.1",
./node_modules/har-validator/package.json:115 =>     "posttest": "npm run coverage",
./node_modules/har-validator/package.json:116 =>     "pretest": "standard && echint",
./node_modules/har-validator/package.json:117 =>     "test": "mocha"
./node_modules/has-ansi/index.js:4 => module.exports = re.test.bind(re);
./node_modules/has-ansi/package.json:91 =>     "test",
./node_modules/has-ansi/package.json:115 =>     "test": "node test.js"
./node_modules/has-flag/package.json:115 =>     "test": "node test.js"
./node_modules/hash.js/package.json:88 =>     "test": "mocha --reporter=spec test/*-test.js"
./node_modules/has-flag/readme.md:3 => > Check if [`argv`](https://nodejs.org/docs/latest/api/process.html#process_process_argv) has a specific flag
./node_modules/has-flag/index.js:6 => 	var prefix = /^--/.test(flag) ? '' : '--';
./node_modules/hawk/package.json:97 =>     "test": "lab -a code -t 100 -L",
./node_modules/hawk/package.json:98 =>     "test-cov-html": "lab -a code -r html -o coverage.html"
./node_modules/hmac-drbg/package.json:92 =>     "test": "mocha --reporter=spec test/*-test.js"
./node_modules/hoek/package.json:92 =>     "test": "lab -a code -t 100 -L",
./node_modules/hoek/package.json:93 =>     "test-cov-html": "lab -a code -t 100 -L -r html -o coverage.html"
./node_modules/home-or-tmp/package.json:103 =>     "test": "node test.js"
./node_modules/htmlescape/package.json:93 =>     "test": "tape test/*.js"
./node_modules/http-signature/CHANGES.md:7 => - Corrected examples in `http_signing.md`, added auto-tests to
./node_modules/http-signature/CHANGES.md:30 => - #42: Bring the library up to the latest version of the spec (including the 
./node_modules/http-signature/CHANGES.md:46 => - Improvements to tests and examples.
./node_modules/http-signature/package.json:113 =>     "test": "tap test/*.js"
./node_modules/ieee754/package.json:99 =>     "test": "standard && npm run test-node && npm run test-browser",
./node_modules/ieee754/package.json:100 =>     "test-browser": "zuul -- test/*.js",
./node_modules/ieee754/package.json:101 =>     "test-browser-local": "zuul --local -- test/*.js",
./node_modules/ieee754/package.json:102 =>     "test-node": "tape test/*.js"
./node_modules/https-browserify/readme.markdown:18 => [node core https module](http://nodejs.org/docs/latest/api/https.html).
./node_modules/inflight/package.json:102 =>     "test": "tap test.js --100"
./node_modules/inherits/package.json:94 =>     "test": "node test"
./node_modules/inline-source-map/package.json:103 =>     "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi",
./node_modules/inline-source-map/package.json:104 =>     "test-0.10": "nave use 0.10 npm run test-main",
./node_modules/inline-source-map/package.json:105 =>     "test-0.12": "nave use 0.12 npm run test-main",
./node_modules/inline-source-map/package.json:106 =>     "test-0.8": "nave use 0.8 npm run test-main",
./node_modules/inline-source-map/package.json:107 =>     "test-all": "npm run test-main && npm run test-0.8 && npm run test-0.10 && npm run test-0.12",
./node_modules/inline-source-map/package.json:108 =>     "test-main": "tap test/*.js"
./node_modules/insert-module-globals/package.json:113 =>     "test": "tape test/*.js"
./node_modules/insert-module-globals/index.js:54 =>     if (/\.json$/i.test(file)) return through();
./node_modules/insert-module-globals/index.js:83 =>         if (opts.always !== true && !quick.test(source)) {
./node_modules/insert-module-globals/index.js:107 =>             if (!/\./.test(name)) return;
./node_modules/insert-module-globals/index.js:118 =>             if (/\./.test(name)) return;
./node_modules/insert-module-globals/readme.markdown:63 => `opts.always` is truthy but not true, avoid parsing but perform a quick test to
./node_modules/inline-source-map/index.js:40 =>     // only set source if we have original position to handle edgecase (see inline-source-map tests)
./node_modules/invariant/package.json:83 =>     "test",
./node_modules/invariant/package.json:106 =>     "test": "NODE_ENV=production tap test/*.js && NODE_ENV=development tap test/*.js"
./node_modules/invariant/CHANGELOG.md:22 =>   * Added tests, npmignore and gitignore.
./node_modules/is-binary-path/package.json:107 =>     "test": "node test.js"
./node_modules/invert-kv/package.json:93 =>     "test": "mocha"
./node_modules/is-buffer/package.json:104 =>     "test": "standard && npm run test-node && npm run test-browser",
./node_modules/is-buffer/package.json:105 =>     "test-browser": "zuul -- test/*.js",
./node_modules/is-buffer/package.json:106 =>     "test-browser-local": "zuul --local -- test/*.js",
./node_modules/is-buffer/package.json:107 =>     "test-node": "tape test/*.js"
./node_modules/is-buffer/package.json:109 =>   "testling": {
./node_modules/is-buffer/package.json:110 =>     "files": "test/*.js"
./node_modules/is-dotfile/package.json:103 =>     "test": "mocha"
./node_modules/is-equal-shallow/package.json:105 =>     "test": "mocha"
./node_modules/is-dotfile/README.md:48 => ## Running tests
./node_modules/is-dotfile/README.md:53 => $ npm i -d && npm test
./node_modules/is-extendable/package.json:80 =>     "test"
./node_modules/is-extendable/package.json:98 =>     "test": "mocha"
./node_modules/is-extglob/package.json:88 =>     "test"
./node_modules/is-extglob/package.json:107 =>     "test": "mocha"
./node_modules/is-equal-shallow/README.md:5 => The purpose of this lib is to do the fastest comparison possible of two objects when the values will predictably be primitives.
./node_modules/is-equal-shallow/README.md:64 => ## Running tests
./node_modules/is-equal-shallow/README.md:69 => $ npm i -d && npm test
./node_modules/is-finite/package.json:100 =>     "test": "ava"
./node_modules/is-extglob/index.js:10 =>     && /[@?!+*]\(/.test(str);
./node_modules/is-extendable/README.md:46 => ## Running tests
./node_modules/is-extendable/README.md:51 => $ npm i -d && npm test
./node_modules/is-extglob/README.md:50 => ## Run tests
./node_modules/is-extglob/README.md:54 => npm i -d && npm test
./node_modules/is-fullwidth-code-point/package.json:105 =>     "test": "node test.js"
./node_modules/is-glob/package.json:91 =>     "test"
./node_modules/is-glob/package.json:113 =>     "test": "mocha"
./node_modules/is-glob/index.js:12 =>     && (/[*!?{}(|)[\]]/.test(str)
./node_modules/is-glob/README.md:79 => ## Run tests
./node_modules/is-glob/README.md:84 => $ npm i -d && npm test
./node_modules/is-my-json-valid/package.json:113 =>     "test": "tape test/*.js"
./node_modules/is-number/package.json:55 =>   "description": "Returns true if the value is a number. comprehensive tests.",
./node_modules/is-number/package.json:86 =>     "test",
./node_modules/is-number/package.json:111 =>     "test": "mocha"
./node_modules/is-my-json-valid/README.md:10 => It passes the entire JSONSchema v4 test suite except for `remoteRefs` and `maxLength`/`minLength` when using unicode surrogate pairs.
./node_modules/is-my-json-valid/README.md:161 => At the time of writing, is-my-json-valid is the __fastest validator__ when running
./node_modules/is-posix-bracket/package.json:102 =>     "test": "mocha"
./node_modules/is-posix-bracket/index.js:9 =>   return typeof str === 'string' && /\[([:.=+])(?:[^\[\]]|)+\1\]/.test(str);
./node_modules/is-my-json-valid/index.js:51 =>   while (pattern.test(field)) field = field.replace(pattern, '."+$1+"')
./node_modules/is-my-json-valid/index.js:213 =>       else validate('if (!%s.test(%s)) {', n, name)
./node_modules/is-primitive/package.json:101 =>     "test": "mocha"
./node_modules/is-number/README.md:3 => > Returns true if the value is a number. comprehensive tests.
./node_modules/is-number/README.md:23 => See the [tests](./test.js) for more examples.
./node_modules/is-number/README.md:51 => See the [tests](./test.js) for more examples.
./node_modules/is-number/README.md:81 => ## Run tests
./node_modules/is-number/README.md:86 => $ npm i -d && npm test
./node_modules/is-posix-bracket/README.md:42 => * [braces](https://www.npmjs.com/package/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://www.npmjs.com/package/braces) | [homepage](https://github.com/jonschlinkert/braces)
./node_modules/is-posix-bracket/README.md:66 => ## Running tests
./node_modules/is-posix-bracket/README.md:71 => $ npm install -d && npm test
./node_modules/is-property/package.json:56 =>     "test": "test"
./node_modules/is-property/package.json:89 =>     "test": "tap test/*.js"
./node_modules/is-primitive/index.js:10 => // see http://jsperf.com/testing-value-is-primitive/7
./node_modules/is-primitive/README.md:11 => ## Running tests
./node_modules/is-primitive/README.md:15 => npm i -d && npm test
./node_modules/is-typedarray/package.json:87 =>     "test": "node test"
./node_modules/is-property/README.md:23 => * `str` is a string which we will test if it is a property or not
./node_modules/isarray/package.json:88 =>     "test": "tape test.js"
./node_modules/isarray/package.json:90 =>   "testling": {
./node_modules/isarray/package.json:91 =>     "files": "test.js",
./node_modules/isarray/package.json:93 =>       "ie/8..latest",
./node_modules/isarray/package.json:94 =>       "firefox/17..latest",
./node_modules/isarray/package.json:96 =>       "chrome/22..latest",
./node_modules/isarray/package.json:98 =>       "opera/12..latest",
./node_modules/isarray/package.json:100 =>       "safari/5.1..latest",
./node_modules/isarray/package.json:101 =>       "ipad/6.0..latest",
./node_modules/isarray/package.json:102 =>       "iphone/6.0..latest",
./node_modules/isarray/package.json:103 =>       "android-browser/4.2..latest"
./node_modules/is-typedarray/test.js:1 => var test = require('tape')
./node_modules/is-typedarray/test.js:4 => test('strict', function(t) {
./node_modules/is-typedarray/test.js:20 => test('loose', function(t) {
./node_modules/isarray/Makefile:2 => test:
./node_modules/isarray/Makefile:3 => 	@node_modules/.bin/tape test.js
./node_modules/isarray/Makefile:5 => .PHONY: test
./node_modules/isobject/package.json:110 =>     "test": "mocha"
./node_modules/isarray/test.js:2 => var test = require('tape');
./node_modules/isarray/test.js:4 => test('is array', function(t){
./node_modules/isarray/README.md:9 => [![browser support](https://ci.testling.com/juliangruber/isarray.png)
./node_modules/isarray/README.md:10 => ](https://ci.testling.com/juliangruber/isarray)
./node_modules/isstream/package.json:90 =>     "test": "tar --xform 's/^package/readable-stream-1.0/' -zxf readable-stream-1.0.*.tgz && tar --xform 's/^package/readable-stream-1.1/' -zxf readable-stream-1.1.*.tgz && node test.js; rm -rf readable-stream-1.?/"
./node_modules/isobject/README.md:90 => ## Running tests
./node_modules/isobject/README.md:95 => $ npm install -d && npm test
./node_modules/isstream/README.md:30 => You can also test for `isReadable(obj)`, `isWritable(obj)` and `isDuplex(obj)` to test for implementations of Streams2 (and Streams3) base classes.
./node_modules/js-tokens/package.json:96 =>     "dev": "npm run build && npm test",
./node_modules/js-tokens/package.json:98 =>     "test": "mocha --ui tdd"
./node_modules/isstream/test.js:16 => function test (pass, type, stream) {
./node_modules/isstream/test.js:24 => function testReadable (pass, type, stream) {
./node_modules/isstream/test.js:32 => function testWritable (pass, type, stream) {
./node_modules/isstream/test.js:40 => function testDuplex (pass, type, stream) {
./node_modules/isstream/test.js:49 =>   test(false, 'non-stream / primitive: ' + (JSON.stringify(o) || (o && o.toString()) || o), o)
./node_modules/isstream/test.js:53 => test(false, 'fake stream obj', { pipe: function () {} })
./node_modules/isstream/test.js:67 =>   test(false, 'fake stream "new Stream()"', new Stream())
./node_modules/isstream/test.js:72 => test(true, 'CoreStreams.Stream', new (CoreStreams.Stream)())
./node_modules/isstream/test.js:73 => test(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())
./node_modules/isstream/test.js:74 => test(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())
./node_modules/isstream/test.js:75 => test(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())
./node_modules/isstream/test.js:76 => test(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
./node_modules/isstream/test.js:77 => test(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
./node_modules/isstream/test.js:79 => test(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
./node_modules/isstream/test.js:80 => test(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
./node_modules/isstream/test.js:81 => test(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
./node_modules/isstream/test.js:82 => test(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
./node_modules/isstream/test.js:83 => test(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
./node_modules/isstream/test.js:85 => test(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
./node_modules/isstream/test.js:86 => test(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
./node_modules/isstream/test.js:87 => test(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
./node_modules/isstream/test.js:88 => test(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
./node_modules/isstream/test.js:89 => test(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
./node_modules/isstream/test.js:92 => testReadable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
./node_modules/isstream/test.js:93 => testReadable(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())
./node_modules/isstream/test.js:94 => testReadable(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())
./node_modules/isstream/test.js:95 => testReadable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())
./node_modules/isstream/test.js:96 => testReadable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
./node_modules/isstream/test.js:97 => testReadable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
./node_modules/isstream/test.js:99 => testReadable(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
./node_modules/isstream/test.js:100 => testReadable(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
./node_modules/isstream/test.js:101 => testReadable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
./node_modules/isstream/test.js:102 => testReadable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
./node_modules/isstream/test.js:103 => testReadable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
./node_modules/isstream/test.js:105 => testReadable(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
./node_modules/isstream/test.js:106 => testReadable(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
./node_modules/isstream/test.js:107 => testReadable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
./node_modules/isstream/test.js:108 => testReadable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
./node_modules/isstream/test.js:109 => testReadable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
./node_modules/isstream/test.js:112 => testWritable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
./node_modules/isstream/test.js:113 => testWritable(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())
./node_modules/isstream/test.js:114 => testWritable(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())
./node_modules/isstream/test.js:115 => testWritable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())
./node_modules/isstream/test.js:116 => testWritable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
./node_modules/isstream/test.js:117 => testWritable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
./node_modules/isstream/test.js:119 => testWritable(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
./node_modules/isstream/test.js:120 => testWritable(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
./node_modules/isstream/test.js:121 => testWritable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
./node_modules/isstream/test.js:122 => testWritable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
./node_modules/isstream/test.js:123 => testWritable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
./node_modules/isstream/test.js:125 => testWritable(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
./node_modules/isstream/test.js:126 => testWritable(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
./node_modules/isstream/test.js:127 => testWritable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
./node_modules/isstream/test.js:128 => testWritable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
./node_modules/isstream/test.js:129 => testWritable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
./node_modules/isstream/test.js:132 => testDuplex(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())
./node_modules/isstream/test.js:133 => testDuplex(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())
./node_modules/isstream/test.js:134 => testDuplex(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())
./node_modules/isstream/test.js:135 => testDuplex(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())
./node_modules/isstream/test.js:136 => testDuplex(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())
./node_modules/isstream/test.js:137 => testDuplex(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())
./node_modules/isstream/test.js:139 => testDuplex(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())
./node_modules/isstream/test.js:140 => testDuplex(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())
./node_modules/isstream/test.js:141 => testDuplex(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())
./node_modules/isstream/test.js:142 => testDuplex(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())
./node_modules/isstream/test.js:143 => testDuplex(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())
./node_modules/isstream/test.js:145 => testDuplex(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())
./node_modules/isstream/test.js:146 => testDuplex(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())
./node_modules/isstream/test.js:147 => testDuplex(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())
./node_modules/isstream/test.js:148 => testDuplex(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())
./node_modules/isstream/test.js:149 => testDuplex(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())
./node_modules/isstream/test.js:162 =>     test(true, 'Stream subclass: ' + p.name + '.' + k, new SubStream())
./node_modules/js-tokens/README.md:76 => The intention is to always support the latest stable ECMAScript version.
./node_modules/js-tokens/README.md:210 => Please consult the regex source and the test cases for precise information on
./node_modules/jodid25519/AUTHORS.md:3 => * Guy Kloss (package refactoring, unit testing)
./node_modules/jodid25519/package.json:67 =>     "test": "test",
./node_modules/jodid25519/package.json:101 =>     "test": "mocha test/*_test.js"
./node_modules/jodid25519/README.md:8 => To run the tests do the following on the console from the project's root directory:
./node_modules/jodid25519/README.md:11 =>     $ make test
./node_modules/jodid25519/README.md:24 => * [Guy Kloss](https://github.com/pohutukawa): performance improvements through bit-shift operations, performance and conformance testing, documentation, compatibility with the npm package ecosystem, and more
./node_modules/jsbn/package.json:88 =>     "test": "mocha test.js"
./node_modules/jsbn/README.md:5 => I felt compelled to put this on github and publish to npm. I haven't tested every other big integer library out there, but the few that I have tested in comparison to this one have not even come close in performance. I am aware of the `bi` module on npm, however it has been modified and I wanted to publish the original without modifications. This is jsbn and jsbn2 from Tom Wu's original website above, with the modular pattern applied to prevent global leaks and to allow for use with node.js on the server side.
./node_modules/jsbn/README.md:117 => ### bi.testBit
./node_modules/jsdiff-cli/package.json:98 =>     "test": "grunt nodeunit"
./node_modules/jsdiff-cli/Gruntfile.js:8 =>       files: ['test/**/*_test.js'],
./node_modules/jsdiff-cli/Gruntfile.js:20 =>       test: {
./node_modules/jsdiff-cli/Gruntfile.js:21 =>         src: ['test/**/*.js']
./node_modules/jsdiff-cli/Gruntfile.js:33 =>       test: {
./node_modules/jsdiff-cli/Gruntfile.js:34 =>         files: '<%= jshint.test.src %>',
./node_modules/jsdiff-cli/Gruntfile.js:35 =>         tasks: ['jshint:test', 'nodeunit']
./node_modules/jsesc/jsesc.js:272 => 				if (regexWhitelist.test(character)) {
./node_modules/jsesc/jsesc.js:290 => 				!regexDigit.test(string.charAt(index + 1))
./node_modules/jsesc/jsesc.js:295 => 			if (regexSingleEscape.test(character)) {
./node_modules/jsesc/package.json:59 =>   "description": "A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.",
./node_modules/jsesc/package.json:110 =>     "test": "node tests/tests.js"
./node_modules/json-schema/package.json:97 =>     "test": "echo TESTS DISABLED vows --spec test/*.js"
./node_modules/jsbn/index.js:30 =>     // We need to select the fastest one that works in this environment.
./node_modules/json-stable-stringify/package.json:88 =>     "test": "tape test/*.js"
./node_modules/json-stable-stringify/package.json:90 =>   "testling": {
./node_modules/json-stable-stringify/package.json:91 =>     "files": "test/*.js",
./node_modules/json-stable-stringify/package.json:93 =>       "ie/8..latest",
./node_modules/json-stable-stringify/package.json:95 =>       "ff/latest",
./node_modules/json-stable-stringify/package.json:97 =>       "chrome/latest",
./node_modules/json-stable-stringify/package.json:98 =>       "safari/latest",
./node_modules/json-stable-stringify/package.json:99 =>       "opera/latest"
./node_modules/json-stringify-safe/package.json:99 =>     "test": "node test.js"
./node_modules/json-stringify-safe/Makefile:7 => test:
./node_modules/json-stringify-safe/Makefile:13 => autotest:
./node_modules/json-stringify-safe/Makefile:33 => .PHONY: test spec autotest autospec
./node_modules/json-stable-stringify/readme.markdown:8 => [![browser support](https://ci.testling.com/substack/json-stable-stringify.png)](https://ci.testling.com/substack/json-stable-stringify)
./node_modules/json3/package.json:131 =>     "test": "node test/test_*.js"
./node_modules/json3/package.json:144 =>       "test",
./node_modules/json5/package.json:116 =>     "test": "mocha --ui exports --reporter spec"
./node_modules/json3/README.md:20 => The project is [hosted on GitHub](http://git.io/json3), along with the [unit tests](http://bestiejs.github.io/json3/test/test_browser.html). It is part of the [BestieJS](https://github.com/bestiejs) family, a collection of best-in-class JavaScript libraries that promote cross-platform support, specification precedents, unit testing, and plenty of documentation.
./node_modules/json3/README.md:28 => * Utilizes **feature tests** to detect broken or incomplete *native* JSON implementations (JSON 2 only checks for the presence of the native functions). The tests are only executed once at runtime, so there is no additional performance cost when parsing or serializing values.
./node_modules/json3/README.md:101 => JSON 3 has been **tested** with the following web browsers, CommonJS environments, and JavaScript engines.
./node_modules/jsonify/package.json:58 =>     "test": "test"
./node_modules/jsonify/package.json:88 =>     "test": "tap test"
./node_modules/json5/README.md:31 => [manifests][ex2], even [tests][ex3] — all by *humans*.
./node_modules/json5/README.md:35 => [ex3]: http://code.google.com/p/fuzztester/wiki/JSONFileFormat
./node_modules/json5/README.md:153 =>         test: 'mocha --ui exports --reporter spec',
./node_modules/json5/README.md:246 => npm test
./node_modules/json5/README.md:255 => tests, and ensure that `npm test` continues to pass.
./node_modules/jsonparse/package.json:91 =>     "test": "tap test/*.js"
./node_modules/jsonld/CHANGELOG.md:36 => - Include local tests.
./node_modules/jsonld/CHANGELOG.md:42 => - Local tests.
./node_modules/jsonld/CHANGELOG.md:61 => - Add support for normalization test suite.
./node_modules/jsonld/package.json:134 =>     "coverage": "make test-coverage",
./node_modules/jsonld/package.json:135 =>     "jscs": "jscs js/jsonld.js tests/*.js",
./node_modules/jsonld/package.json:136 =>     "jshint": "jshint js/jsonld.js tests/*.js",
./node_modules/jsonld/package.json:137 =>     "test": "make test",
./node_modules/jsonld/package.json:138 =>     "test-browser": "make test-browser",
./node_modules/jsonld/package.json:139 =>     "test-local": "make test-local",
./node_modules/jsonld/package.json:140 =>     "test-node": "make test-node"
./node_modules/jsonld/Makefile:1 => TESTS = tests/test.js
./node_modules/jsonld/Makefile:6 => test: test-local test-node test-browser test-local-node test-local-browser test-normalization-node test-normalization-browser
./node_modules/jsonld/Makefile:8 => test-suite: test-suite-node test-suite-browser
./node_modules/jsonld/Makefile:10 => test-suite-node:
./node_modules/jsonld/Makefile:16 => 		NODE_ENV=test ./node_modules/.bin/mocha -A -R $(REPORTER) $(TESTS); \
./node_modules/jsonld/Makefile:18 => 		echo "Error: tests not found at $(JSONLD_TEST_SUITE)"; \
./node_modules/jsonld/Makefile:22 => test-suite-browser:
./node_modules/jsonld/Makefile:28 => 		NODE_ENV=test ./node_modules/.bin/phantomjs $(TESTS); \
./node_modules/jsonld/Makefile:30 => 		echo "Error: tests not found at $(JSONLD_TEST_SUITE)"; \
./node_modules/jsonld/Makefile:34 => test-node:
./node_modules/jsonld/Makefile:35 => 	@JSONLD_TEST_SUITE=../json-ld.org/test-suite $(MAKE) test-suite-node
./node_modules/jsonld/Makefile:37 => test-browser:
./node_modules/jsonld/Makefile:38 => 	@JSONLD_TEST_SUITE=../json-ld.org/test-suite $(MAKE) test-suite-browser
./node_modules/jsonld/Makefile:40 => test-local-node:
./node_modules/jsonld/Makefile:41 => 	@JSONLD_TEST_SUITE=./tests/new-embed-api $(MAKE) test-suite-node
./node_modules/jsonld/Makefile:43 => test-local-browser:
./node_modules/jsonld/Makefile:44 => 	@JSONLD_TEST_SUITE=./tests/new-embed-api $(MAKE) test-suite-browser
./node_modules/jsonld/Makefile:46 => test-normalization-node:
./node_modules/jsonld/Makefile:47 => 	@JSONLD_TEST_SUITE=../normalization/tests $(MAKE) test-suite-node
./node_modules/jsonld/Makefile:49 => test-normalization-browser:
./node_modules/jsonld/Makefile:50 => 	@JSONLD_TEST_SUITE=../normalization/tests $(MAKE) test-suite-browser
./node_modules/jsonld/Makefile:52 => test-coverage:
./node_modules/jsonld/Makefile:56 => test-local:
./node_modules/jsonld/Makefile:62 => .PHONY: test test-node test-browser test-local-node test-local-browser test-normalization-node test-normalization-browser test-coverage test-local clean
./node_modules/jsonpointer/package.json:103 =>     "test": "standard && node test.js"
./node_modules/jsonld/README.md:105 => // see: http://json-ld.org/spec/latest/json-ld/#compacted-document-form
./node_modules/jsonld/README.md:122 => // see: http://json-ld.org/spec/latest/json-ld/#expanded-document-form
./node_modules/jsonld/README.md:137 => // see: http://json-ld.org/spec/latest/json-ld/#flattened-document-form
./node_modules/jsonld/README.md:143 => // see: http://json-ld.org/spec/latest/json-ld-framing/#introduction
./node_modules/jsonpointer/jsonpointer.js:12 =>   if (!hasExcape.test(str)) return str
./node_modules/JSONStream/package.json:113 =>     "test": "set -e; for t in test/*.js; do echo '***' $t '***'; node $t; done"
./node_modules/jsonpointer/README.md:27 =>     $ node test.js
./node_modules/jsonpointer/README.md:28 =>     All tests pass.
./node_modules/JSONStream/readme.markdown:51 => curl -sS localhost:5984/tests/_all_docs&include_docs=true
./node_modules/kind-of/package.json:123 =>     "test",
./node_modules/kind-of/package.json:150 =>     "test": "mocha"
./node_modules/jsprim/README.md:236 => New tests should generally accompany new functions and bug fixes.  The tests
./node_modules/jsprim/README.md:237 => should pass cleanly (run tests/basic.js).
./node_modules/labeled-stream-splicer/package.json:95 =>     "test": "tape test/*.js"
./node_modules/kind-of/README.md:201 => 1. Optimize around the fastest and most common use cases first. Of course, this will change from project-to-project, but I took some time to understand how and why `typeof` checks were being used in my own libraries and other libraries I use a lot.
./node_modules/kind-of/README.md:210 => * [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number "Returns true if the value is a number. comprehensive tests.")
./node_modules/kind-of/README.md:236 => ### Running tests
./node_modules/kind-of/README.md:241 => $ npm install -d && npm test
./node_modules/lazy-cache/package.json:105 =>     "test": "mocha"
./node_modules/lazy-cache/README.md:125 => ## Running tests
./node_modules/lazy-cache/README.md:130 => $ npm install -d && npm test
./node_modules/lcid/package.json:106 =>     "test": "node test.js"
./node_modules/lexical-scope/package.json:97 =>     "test": "tape test/*.js"
./node_modules/lexical-scope/package.json:99 =>   "testling": {
./node_modules/lexical-scope/package.json:100 =>     "files": "test/*.js",
./node_modules/lexical-scope/package.json:108 =>       "chrome/latest",
./node_modules/lexical-scope/package.json:111 =>       "firefox/latest",
./node_modules/lexical-scope/package.json:112 =>       "safari/latest",
./node_modules/lexical-scope/package.json:114 =>       "opera/latest"
./node_modules/lodash.assign/package.json:110 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lexical-scope/readme.markdown:5 => [![browser support](http://ci.testling.com/substack/lexical-scope.png)](http://ci.testling.com/substack/lexical-scope)
./node_modules/lodash.bind/package.json:110 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.assign/index.js:263 =>     (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash.create/package.json:130 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.defaults/package.json:110 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.foreach/package.json:110 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.isarguments/package.json:110 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.defaults/index.js:265 =>     (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash.foreach/index.js:240 =>     (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash.isarray/package.json:126 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.isarray/index.js:175 =>     return reIsNative.test(fnToString.call(value));
./node_modules/lodash.isarray/index.js:177 =>   return isObjectLike(value) && reIsHostCtor.test(value);
./node_modules/lodash/escapeRegExp.js:27 =>   return (string && reHasRegExpChar.test(string))
./node_modules/lodash/escape.js:38 =>   return (string && reHasUnescapedHtml.test(string))
./node_modules/lodash/isEqualWith.js:20 =>  *   return /^h(?:i|ello)$/.test(value);
./node_modules/lodash/isMatchWith.js:21 =>  *   return /^h(?:i|ello)$/.test(value);
./node_modules/lodash/iteratee.js:42 =>  *     return func.test(string);
./node_modules/lodash/lodash.min.js:10 => return"\\"+Tn[n]}function L(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function U(n,t){return function(r){return n(t(r))}}function C(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&"__lodash_placeholder__"!==o||(n[r]="__lodash_placeholder__",i[u++]=r)}return i}function D(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function M(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function T(n){if(Bn.test(n)){
./node_modules/lodash/lodash.min.js:11 => for(var t=zn.lastIndex=0;zn.test(n);)++t;n=t}else n=tt(n);return n}function $(n){return Bn.test(n)?n.match(zn)||[]:n.split("")}var F,N=1/0,P=NaN,Z=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],q=/\b__p\+='';/g,V=/\b(__p\+=)''\+/g,K=/(__e\(.*?\)|\b__t\))\+'';/g,G=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,J=RegExp(G.source),Y=RegExp(H.source),Q=/<%-([\s\S]+?)%>/g,X=/<%([\s\S]+?)%>/g,nn=/<%=([\s\S]+?)%>/g,tn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,rn=/^\w*$/,en=/^\./,un=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,on=/[\\^$.*+?()[\]{}|]/g,fn=RegExp(on.source),cn=/^\s+|\s+$/g,an=/^\s+/,ln=/\s+$/,sn=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,hn=/\{\n\/\* \[wrapped with (.+)\] \*/,pn=/,? & /,_n=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,vn=/\\(\\)?/g,gn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,dn=/\w*$/,yn=/^[-+]0x[0-9a-f]+$/i,bn=/^0b[01]+$/i,xn=/^\[object .+?Constructor\]$/,jn=/^0o[0-7]+$/i,wn=/^(?:0|[1-9]\d*)$/,mn=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,An=/($^)/,kn=/['\n\r\u2028\u2029\\]/g,En="[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*",On="(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])"+En,Sn="(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?|[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])",In=RegExp("['\u2019]","g"),Rn=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g"),zn=RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|"+Sn+En,"g"),Wn=RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['\u2019](?:D|LL|M|RE|S|T|VE))?|\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)|\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)|\\d+",On].join("|"),"g"),Bn=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]"),Ln=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Un="Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout".split(" "),Cn={};
./node_modules/lodash/mixin.js:30 =>  *     return /[aeiou]/i.test(v);
./node_modules/lodash/package.json:112 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash/README.md:39 => Automated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.
./node_modules/lodash/toNumber.js:60 =>   var isBinary = reIsBinary.test(value);
./node_modules/lodash/toNumber.js:61 =>   return (isBinary || reIsOctal.test(value))
./node_modules/lodash/toNumber.js:63 =>     : (reIsBadHex.test(value) ? NAN : +value);
./node_modules/lodash/unescape.js:29 =>   return (string && reHasEscapedHtml.test(string))
./node_modules/lodash/_baseIsNative.js:44 =>   return pattern.test(toSource(value));
./node_modules/lodash/_hasUnicodeWord.js:12 =>   return reHasUnicodeWord.test(string);
./node_modules/lodash/_isIndex.js:18 =>     (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash/_isKey.js:25 =>   return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
./node_modules/lodash/_hasUnicode.js:23 =>   return reHasUnicode.test(string);
./node_modules/lodash/_stringToPath.js:19 =>   if (reLeadingDot.test(string)) {
./node_modules/lodash/_unicodeSize.js:38 =>   while (reUnicode.test(string)) {
./node_modules/lodash.keys/package.json:130 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash._baseassign/package.json:123 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.memoize/package.json:126 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash.keys/index.js:76 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./node_modules/lodash._basecreate/package.json:120 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash._basecopy/package.json:120 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash._getnative/package.json:116 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash._isiterateecall/package.json:120 =>     "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
./node_modules/lodash._getnative/index.js:132 =>     return reIsNative.test(fnToString.call(value));
./node_modules/lodash._getnative/index.js:134 =>   return isObjectLike(value) && reIsHostCtor.test(value);
./node_modules/longest/package.json:101 =>     "test": "mocha"
./node_modules/lodash._isiterateecall/index.js:64 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./node_modules/longest/README.md:16 => ## Running tests
./node_modules/longest/README.md:20 => npm i -d && npm test
./node_modules/longest/README.md:38 => * [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.
./node_modules/longest/README.md:39 => * [pad-right](https://github.com/jonschlinkert/pad-right): Right pad a string with zeros or a specified string. Fastest implementation.
./node_modules/longest/README.md:40 => * [pad-left](https://github.com/jonschlinkert/pad-left): Left pad a string with zeros or a specified string. Fastest implementation.  
./node_modules/longest/README.md:42 => ## Running tests
./node_modules/longest/README.md:46 => npm i -d && npm test
./node_modules/loose-envify/package.json:99 =>     "test": "tap test/*.js"
./node_modules/micromatch/package.json:152 =>     "test": "mocha"
./node_modules/loose-envify/loose-envify.js:12 =>     if (jsonExtRe.test(file)) {
./node_modules/miller-rabin/package.json:58 =>   "description": "Miller Rabin algorithm for primality test",
./node_modules/miller-rabin/package.json:94 =>     "test": "mocha --reporter=spec test/**/*-test.js"
./node_modules/loose-envify/replace.js:9 =>   if (!processEnvRe.test(src)) {
./node_modules/loose-envify/replace.js:47 =>     if (!spaceOrCommentRe.test(part)) {
./node_modules/micromatch/README.md:59 => * Extensive [unit tests](./test) (approx. 1,300 tests). Minimatch fails many of the tests.
./node_modules/micromatch/README.md:283 => * filepath `{String}`: The file path to test.
./node_modules/mime-db/package.json:132 =>     "test": "mocha --reporter spec --bail --check-leaks test/",
./node_modules/mime-db/package.json:133 =>     "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
./node_modules/mime-db/package.json:134 =>     "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
./node_modules/micromatch/index.js:221 =>  * @param  {String} `fp` The filepath to test.
./node_modules/micromatch/index.js:287 =>       return pattern.test(fp);
./node_modules/micromatch/index.js:312 =>     return re.test(fp);
./node_modules/mime-types/package.json:123 =>     "test": "mocha --reporter spec test/test.js",
./node_modules/mime-types/package.json:124 =>     "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot test/test.js",
./node_modules/mime-types/package.json:125 =>     "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot test/test.js"
./node_modules/minifyify/package.json:81 =>     "backbone": "latest",
./node_modules/minifyify/package.json:82 =>     "brfs": "latest",
./node_modules/minifyify/package.json:83 =>     "browserify": "latest",
./node_modules/minifyify/package.json:84 =>     "coffeeify": "latest",
./node_modules/minifyify/package.json:85 =>     "envify": "latest",
./node_modules/minifyify/package.json:86 =>     "handlebars": "latest",
./node_modules/minifyify/package.json:87 =>     "handlebars-runtime": "latest",
./node_modules/minifyify/package.json:88 =>     "hbsfy": "latest",
./node_modules/minifyify/package.json:89 =>     "jake": "latest",
./node_modules/minifyify/package.json:90 =>     "jquery": "latest",
./node_modules/minifyify/package.json:91 =>     "jquery-browserify": "latest",
./node_modules/minifyify/package.json:92 =>     "jsesc": "latest",
./node_modules/minifyify/package.json:93 =>     "lodash.template": "latest",
./node_modules/minifyify/package.json:94 =>     "sourcemap-validator": "latest",
./node_modules/minifyify/package.json:95 =>     "test-peer-range": "^1.0.1",
./node_modules/minifyify/package.json:96 =>     "utilities": "latest"
./node_modules/minifyify/package.json:136 =>     "test": "test-peer-range browserify",
./node_modules/minifyify/package.json:137 =>     "test-main": "jake test --trace"
./node_modules/minimalistic-assert/package.json:77 =>     "test": "echo \"Error: no test specified\" && exit 1"
./node_modules/mime-types/index.js:63 =>   if (match && textTypeRegExp.test(match[1])) {
./node_modules/minifyify/Jakefile:4 =>   this.testFiles.include('test/plugin-api.js');
./node_modules/minifyify/Jakefile:5 =>   this.testFiles.include('test/user-errors.js');
./node_modules/minifyify/Jakefile:6 =>   this.testFiles.include('test/bundles.js');
./node_modules/minifyify/Jakefile:18 =>     'test'
./node_modules/minimalistic-crypto-utils/package.json:89 =>     "test": "mocha --reporter=spec test/*-test.js"
./node_modules/minimatch/package.json:93 =>     "posttest": "standard minimatch.js test/*.js",
./node_modules/minimatch/package.json:94 =>     "test": "tap test/*.js"
./node_modules/minifyify/Readme.md:9 => I have stopped writing Javascript full-time, and therefore do not use Minifyify anymore. While I will continue to accept pull requests and keep the test suite running, you should consider better-maintained alternatives, such as [uglifyify](https://github.com/hughsk/uglifyify). Thank you for your support!
./node_modules/minifyify/Readme.md:50 => ~~Minifyify is tested against CoffeeScript, and can map minified code all the way back to the original `.coffee` files.~~
./node_modules/minifyify/Readme.md:52 => CoffeeScript support is janky because of [this issue](https://github.com/jashkenas/coffeescript/issues/3672). The sourcemap that `coffee-script` produces is wrong, so I had to skip over minifyify's CoffeeScript test. minifyify won't crash, but the test suite validates sourcemaps for correctness. Use at your own risk!
./node_modules/minifyify/Readme.md:153 => `base:'/'` means test your glob pattern against absolute file paths.
./node_modules/minimist/package.json:88 =>     "test": "tap test/*.js"
./node_modules/minimist/package.json:90 =>   "testling": {
./node_modules/minimist/package.json:91 =>     "files": "test/*.js",
./node_modules/minimist/package.json:93 =>       "ie/6..latest",
./node_modules/minimist/package.json:95 =>       "firefox/latest",
./node_modules/minimist/package.json:97 =>       "chrome/latest",
./node_modules/minimist/package.json:99 =>       "safari/latest",
./node_modules/minimist/readme.markdown:8 => [![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)
./node_modules/minimatch/README.md:95 => Returns a function that tests its
./node_modules/mocha/bower.json:4 =>   "description": "simple, flexible, fun test framework",
./node_modules/mocha/bower.json:19 =>     "test",
./node_modules/mocha/bower.json:32 =>     "test",
./node_modules/minimist/index.js:52 =>         if (/^--.+=/.test(arg)) {
./node_modules/minimist/index.js:59 =>         else if (/^--no-.+/.test(arg)) {
./node_modules/minimist/index.js:63 =>         else if (/^--.+/.test(arg)) {
./node_modules/minimist/index.js:66 =>             if (next !== undefined && !/^-/.test(next)
./node_modules/minimist/index.js:72 =>             else if (/^(true|false)$/.test(next)) {
./node_modules/minimist/index.js:80 =>         else if (/^-[^-]+/.test(arg)) {
./node_modules/minimist/index.js:92 =>                 if (/[A-Za-z]/.test(letters[j])
./node_modules/minimist/index.js:93 =>                 && /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
./node_modules/minimist/index.js:111 =>                 if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])
./node_modules/minimist/index.js:117 =>                 else if (args[i+1] && /true|false/.test(args[i+1])) {
./node_modules/minimist/index.js:181 =>     if (/^0x[0-9a-f]+$/i.test(x)) return true;
./node_modules/minimist/index.js:182 =>     return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
./node_modules/mocha/mocha.css:61 => #mocha .test {
./node_modules/mocha/mocha.css:66 => #mocha .test.pending:hover h2::after {
./node_modules/mocha/mocha.css:71 => #mocha .test.pass.medium .duration {
./node_modules/mocha/mocha.css:75 => #mocha .test.pass.slow .duration {
./node_modules/mocha/mocha.css:79 => #mocha .test.pass::before {
./node_modules/mocha/mocha.css:88 => #mocha .test.pass .duration {
./node_modules/mocha/mocha.css:103 => #mocha .test.pass.fast .duration {
./node_modules/mocha/mocha.css:107 => #mocha .test.pending {
./node_modules/mocha/mocha.css:111 => #mocha .test.pending::before {
./node_modules/mocha/mocha.css:116 => #mocha .test.fail {
./node_modules/mocha/mocha.css:120 => #mocha .test.fail pre {
./node_modules/mocha/mocha.css:124 => #mocha .test.fail::before {
./node_modules/mocha/mocha.css:133 => #mocha .test pre.error {
./node_modules/mocha/mocha.css:139 => #mocha .test .html-error {
./node_modules/mocha/mocha.css:165 => #mocha .test .html-error pre.error {
./node_modules/mocha/mocha.css:184 => #mocha .test pre {
./node_modules/mocha/mocha.css:206 => #mocha .test h2 {
./node_modules/mocha/mocha.css:210 => #mocha .test a.replay {
./node_modules/mocha/mocha.css:234 => #mocha .test:hover a.replay {
./node_modules/mocha/mocha.css:238 => #mocha-report.pass .test.fail {
./node_modules/mocha/mocha.css:242 => #mocha-report.fail .test.pass {
./node_modules/mocha/mocha.css:246 => #mocha-report.pending .test.pass,
./node_modules/mocha/mocha.css:247 => #mocha-report.pending .test.fail {
./node_modules/mocha/mocha.css:250 => #mocha-report.pending .test.pass.pending {
./node_modules/mocha/CHANGELOG.md:63 => - [#2524]: Provide workaround for developers unable to run browser tests on macOS Sierra ([@boneskull])
./node_modules/mocha/CHANGELOG.md:131 => - To avoid common bugs, when a test injects a callback function (suggesting asynchronous execution), calls it, *and* returns a `Promise`, Mocha will now throw an exception:
./node_modules/mocha/CHANGELOG.md:136 =>   it('should complete this test', function (done) {
./node_modules/mocha/CHANGELOG.md:145 =>   The above test will fail with `Error: Resolution method is overspecified. Specify a callback *or* return a Promise; not both.`.
./node_modules/mocha/CHANGELOG.md:146 => - When a test timeout value *greater than* `2147483648` is specified in any context (`--timeout`, `mocha.setup()`, per-suite, per-test, etc.), the timeout will be *disabled* and the test(s) will be allowed to run indefinitely.  This is equivalent to specifying a timeout value of `0`.  See [MDN](https://developer.mozilla.org/docs/Web/API/WindowTimers/setTimeout#Maximum_delay_value) for reasoning.
./node_modules/mocha/CHANGELOG.md:147 => - The `dot` reporter now uses more visually distinctive characters when indicating "pending" and "failed" tests.
./node_modules/mocha/CHANGELOG.md:155 => - [#2000]: Use distinctive characters in `dot` reporter; `,` will denote a "pending" test and `!` will denote a "failing" test. ([@elliottcable])
./node_modules/mocha/CHANGELOG.md:156 => - [#1632]: Throw a useful exception when a suite or test lacks a title. ([@a8m])
./node_modules/mocha/CHANGELOG.md:158 => - [#2334]: Allow `this.skip()` in async tests and hooks. ([@boneskull])
./node_modules/mocha/CHANGELOG.md:159 => - [#1320]: Throw a useful exception when test resolution method is overspecified. ([@jugglinmike])
./node_modules/mocha/browser-entry.js:102 =>  * This is useful when running tests in a browser because window.onerror will
./node_modules/mocha/browser-entry.js:184 => // this allows test/acceptance/required-tokens.js to pass; thus,
./node_modules/module-deps/package.json:144 =>     "test": "tap test/*.js"
./node_modules/mocha/README.md:3 =>   <img src="https://cldup.com/xFVFxOioAU.svg" alt="Mocha test framework"/>
./node_modules/mocha/README.md:11 =>   Mocha is a simple, flexible, fun JavaScript test framework for node.js and the browser. For more information view the [documentation](http://mochajs.org).
./node_modules/multimatch/package.json:104 =>     "test": "mocha"
./node_modules/ms/package.json:94 =>     "test": "xo && mocha test/index.js",
./node_modules/ms/package.json:95 =>     "test-browser": "serve ./test"
./node_modules/multimatch/readme.md:23 => See the [tests](https://github.com/sindresorhus/multimatch/blob/master/test.js) for more usage examples and expected matches.
./node_modules/n3/package.json:96 =>     "test"
./node_modules/n3/package.json:107 =>     "lint": "eslint lib perf test spec",
./node_modules/n3/package.json:110 =>     "test": "mocha"
./node_modules/n3/package.json:112 =>   "testling": {
./node_modules/n3/package.json:113 =>     "files": "test/*.js",
./node_modules/n3/package.json:116 =>       "ie/9..latest",
./node_modules/n3/package.json:117 =>       "firefox/24..latest",
./node_modules/n3/package.json:118 =>       "chrome/29..latest",
./node_modules/n3/package.json:119 =>       "safari/6..latest",
./node_modules/n3/package.json:120 =>       "iphone/6..latest",
./node_modules/n3/package.json:121 =>       "ipad/6..latest"
./node_modules/ms/README.md:50 => 3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, node will now use your clone of ms!
./node_modules/ms/README.md:52 => As always, you can run the tests using: `npm test`
./node_modules/node-mkdirp/package.json:93 =>     "test": "echo \"Error: no test specified\" && exit 1"
./node_modules/normalize-path/package.json:107 =>     "test": "mocha"
./node_modules/n3/README.md:21 => - **fast** – by far the [fastest parser in JavaScript](https://github.com/RubenVerborgh/N3.js/tree/master/perf)
./node_modules/number-is-nan/package.json:101 =>     "test": "ava"
./node_modules/normalize-path/README.md:49 => ## Running tests
./node_modules/normalize-path/README.md:54 => $ npm i -d && npm test
./node_modules/oauth-sign/package.json:95 =>     "test": "node test.js"
./node_modules/object-assign/index.js:30 => 		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
./node_modules/object-assign/index.js:31 => 		test1[5] = 'de';
./node_modules/object-assign/index.js:32 => 		if (Object.getOwnPropertyNames(test1)[0] === '5') {
./node_modules/object-assign/index.js:37 => 		var test2 = {};
./node_modules/object-assign/index.js:39 => 			test2['_' + String.fromCharCode(i)] = i;
./node_modules/object-assign/index.js:41 => 		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
./node_modules/object-assign/index.js:42 => 			return test2[n];
./node_modules/object-assign/index.js:49 => 		var test3 = {};
./node_modules/object-assign/index.js:51 => 			test3[letter] = letter;
./node_modules/object-assign/index.js:53 => 		if (Object.keys(Object.assign({}, test3)).join('') !==
./node_modules/object-assign/package.json:116 =>     "test": "xo && ava"
./node_modules/object.omit/package.json:108 =>     "test": "mocha"
./node_modules/mocha/mocha.js:104 =>  * This is useful when running tests in a browser because window.onerror will
./node_modules/mocha/mocha.js:186 => // this allows test/acceptance/required-tokens.js to pass; thus,
./node_modules/mocha/mocha.js:219 =>  * @param {*} val The value to test.
./node_modules/once/package.json:65 =>     "test": "test"
./node_modules/once/package.json:98 =>     "test": "tap test/*.js"
./node_modules/object.omit/README.md:96 => ### Running tests
./node_modules/object.omit/README.md:101 => $ npm install -d && npm test
./node_modules/os-locale/package.json:111 =>     "test": "xo && ava"
./node_modules/os-homedir/package.json:106 =>     "test": "xo && ava"
./node_modules/output-file-sync/package.json:107 =>     "coverage": "node --strong_mode --throw-deprecation --track-heap-objects node_modules/.bin/istanbul cover test.js",
./node_modules/output-file-sync/package.json:108 =>     "pretest": "eslint --fix --config @shinnn/node-legacy index.js test.js",
./node_modules/output-file-sync/package.json:109 =>     "test": "node --strong_mode --throw-deprecation --track-heap-objects test.js | tap-spec"
./node_modules/os-tmpdir/package.json:107 =>     "test": "xo && ava"
./node_modules/parents/package.json:63 =>     "test": "test"
./node_modules/parents/package.json:96 =>     "test": "tap test/*.js"
./node_modules/os-tmpdir/index.js:20 => 	if (trailingSlashRe.test(path)) {
./node_modules/pako/CHANGELOG.md:26 =>   Added more tests to cover possible cases.
./node_modules/pako/CHANGELOG.md:78 => - More coverage tests.
./node_modules/parents/index.js:8 =>     var isWindows = /^win/.test(platform);
./node_modules/parents/index.js:33 =>     if (isWindows && /^\\/.test(cwd)) {
./node_modules/parse-glob/package.json:121 =>     "test": "mocha"
./node_modules/pako/README.md:64 => zlib's test is partialy afferted by marshling (that make sense for inflate only).
./node_modules/pako/README.md:133 => var test = { my: 'super', puper: [456, 567], awesome: 'pako' };
./node_modules/pako/README.md:135 => var binaryString = pako.deflate(JSON.stringify(test), { to: 'string' });
./node_modules/pako/README.md:170 =>   testing.
./node_modules/parse-glob/README.md:20 => * Extensive [unit tests](./test.js) (more than 1,000 lines), covering wildcards, globstars, character classes, brace patterns, extglobs, dotfiles and other complex patterns.
./node_modules/parse-glob/README.md:22 => See the tests for [hundreds of examples](./test.js).
./node_modules/parse-glob/README.md:98 => $ npm i -d && npm test
./node_modules/parse-glob/index.js:62 =>     if (!/\/$/.test(tok.glob)) {
./node_modules/parse-glob/index.js:125 =>  * @param  {Object} `ch` The character to test for
./node_modules/parse-asn1/package.json:53 =>     "evp_bytestokey": "^1.0.0",
./node_modules/parse-asn1/package.json:101 =>     "test": "npm run standard && npm run unit",
./node_modules/parse-asn1/package.json:102 =>     "unit": "node ./test"
./node_modules/parse-asn1/fixProc.js:5 => var evp = require('evp_bytestokey')
./node_modules/path-browserify/package.json:83 =>     "test": "tape test/*.js"
./node_modules/path-is-absolute/package.json:108 =>     "test": "xo && node test.js"
./node_modules/path-parse/package.json:89 =>     "test": "node test.js"
./node_modules/pinkie/package.json:59 =>     "promises-aplus-tests": "*",
./node_modules/pinkie/package.json:97 =>     "test": "xo && nyc mocha"
./node_modules/path-platform/path.js:181 =>       trailingSlash = /[\\\/]$/.test(tail);
./node_modules/path-platform/path.js:240 =>   if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
./node_modules/path-platform/path.js:250 => // from = 'C:\\orandea\\test\\aaa'
./node_modules/path-parse/test.js:63 =>         errorCase.message.test(err.message),
./node_modules/path-parse/test.js:73 => function checkParseFormat(parse, testCases) {
./node_modules/path-parse/test.js:74 =>   testCases.forEach(function(testCase) {
./node_modules/path-parse/test.js:75 =>     assert.deepEqual(parse(testCase[1]), testCase[0]);
./node_modules/pbkdf2/package.json:125 =>     "bundle-test": "browserify test/index.js > test/bundle.js",
./node_modules/pbkdf2/package.json:126 =>     "coverage": "nyc --check-coverage --branches 90 --functions 100 tape test/*.js",
./node_modules/pbkdf2/package.json:128 =>     "prepublish": "npm run test",
./node_modules/pbkdf2/package.json:129 =>     "test": "npm run lint && npm run unit",
./node_modules/pbkdf2/package.json:130 =>     "unit": "tape test/*.js"
./node_modules/pbkdf2/package.json:134 =>       "test/bundle.js"
./node_modules/pinkie-promise/package.json:99 =>     "test": "mocha"
./node_modules/pkginfo/package.json:91 =>     "test": "vows test/*-test.js --spec"
./node_modules/private/package.json:101 =>     "test": "mocha --reporter spec --full-trace test/run.js"
./node_modules/preserve/package.json:101 =>     "test": "mocha -R spec"
./node_modules/pkginfo/README.md:43 =>     description: 'A test fixture for pkginfo',
./node_modules/pkginfo/README.md:46 =>     keywords: [ 'test', 'fixture' ],
./node_modules/pkginfo/README.md:48 =>     scripts: { test: 'vows test/*-test.js --spec' },
./node_modules/pkginfo/README.md:73 =>   npm test
./node_modules/preserve/README.md:40 => ## Run tests
./node_modules/preserve/README.md:43 => npm test
./node_modules/process-nextick-args/package.json:81 =>     "test": "node test.js"
./node_modules/preserve/test.js:22 =>   var testRe = /__ID.{5}__\n__ID.{5}__\n__ID.{5}__/;
./node_modules/preserve/test.js:37 =>       tokens.before('<%= a %>\n<%= b %>\n<%= c %>', re).should.match(testRe);
./node_modules/preserve/test.js:44 =>       before.should.match(testRe);
./node_modules/process-nextick-args/test.js:1 => var test = require("tap").test;
./node_modules/process-nextick-args/test.js:4 => test('should work', function (t) {
./node_modules/process-nextick-args/test.js:19 => test('correct number of arguments', function (t) {
./node_modules/process/package.json:101 =>     "browser": "zuul --no-coverage --ui mocha-bdd --local 8080 -- test.js",
./node_modules/process/package.json:102 =>     "test": "mocha test.js"
./node_modules/punycode/package.json:125 =>     "test": "node tests/tests.js"
./node_modules/punycode/README.md:152 => ## Unit tests & code coverage
./node_modules/punycode/README.md:154 => After cloning this repository, run `npm install --dev` to install the dependencies needed for Punycode.js development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.
./node_modules/punycode/README.md:156 => Once that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, PhantomJS, and web browsers as well, use `grunt test`.
./node_modules/process/browser.js:4 => // cached from whatever global is present so that test runners that stub it
./node_modules/process/test.js:3 => describe('test against our process', function () {
./node_modules/process/test.js:4 =>     test(ourProcess);
./node_modules/process/test.js:7 =>   describe('test against node', function () {
./node_modules/process/test.js:8 =>     test(process);
./node_modules/process/test.js:10 =>   vmtest();
./node_modules/process/test.js:12 => function test (ourProcess) {
./node_modules/process/test.js:13 =>     describe('test arguments', function () {
./node_modules/process/test.js:41 =>     describe('test errors', function (t) {
./node_modules/process/test.js:115 => function vmtest() {
./node_modules/public-encrypt/package.json:62 =>     "test": "test"
./node_modules/public-encrypt/package.json:102 =>     "test": "node test/index.js | tspec"
./node_modules/querystring/History.md:4 =>   - Improved test coverage.
./node_modules/querystring/History.md:15 =>   - Ported unit tests
./node_modules/querystring/package.json:56 =>     "test": "~0.x.0"
./node_modules/querystring/package.json:94 =>     "test": "npm run test-node && npm run test-browser && npm run test-tap",
./node_modules/querystring/package.json:95 =>     "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/common-index.js",
./node_modules/querystring/package.json:96 =>     "test-node": "node ./test/common-index.js",
./node_modules/querystring/package.json:97 =>     "test-tap": "node ./test/tap-index.js"
./node_modules/querystring/package.json:99 =>   "testling": {
./node_modules/querystring/package.json:100 =>     "files": "test/tap-index.js",
./node_modules/querystring/Readme.md:6 => [![Browser support](http://ci.testling.com/Gozala/querystring.png)](http://ci.testling.com/Gozala/querystring)
./node_modules/qs/package.json:70 =>     "safe-publish-latest": "^1.1.1",
./node_modules/qs/package.json:111 =>     "coverage": "covert test",
./node_modules/qs/package.json:113 =>     "lint": "eslint lib/*.js test/*.js",
./node_modules/qs/package.json:114 =>     "prepublish": "safe-publish-latest && npm run dist",
./node_modules/qs/package.json:115 =>     "pretest": "npm run --silent readme && npm run --silent lint",
./node_modules/qs/package.json:117 =>     "test": "npm run --silent coverage",
./node_modules/qs/package.json:118 =>     "tests-only": "node test"
./node_modules/qs/CHANGELOG.md:4 => - [Tests] on all node minors; improve test matrix
./node_modules/qs/CHANGELOG.md:21 => - [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`; add `safe-publish-latest`
./node_modules/qs/CHANGELOG.md:22 => - [Tests] up to `node` `v6.8`, `v4.6`; improve test matrix
./node_modules/qs/CHANGELOG.md:23 => - [Tests] flesh out arrayLimit/arrayFormat tests (#107)
./node_modules/qs/CHANGELOG.md:24 => - [Tests] skip Object.create tests when null objects are not available
./node_modules/qs/CHANGELOG.md:25 => - [Tests] Turn on eslint for test files (#175)
./node_modules/randomatic/package.json:114 =>     "test": "mocha"
./node_modules/querystring-es3/History.md:4 =>   - Improved test coverage.
./node_modules/querystring-es3/History.md:15 =>   - Ported unit tests
./node_modules/randomatic/README.md:72 => These are just examples, [see the tests](./test.js) for more use cases and examples.
./node_modules/randomatic/README.md:104 => * [pad-left](https://www.npmjs.com/package/pad-left): Left pad a string with zeros or a specified string. Fastest implementation. | [homepage](https://github.com/jonschlinkert/pad-left "Left pad a string with zeros or a specified string. Fastest implementation.")
./node_modules/randomatic/README.md:105 => * [pad-right](https://www.npmjs.com/package/pad-right): Right pad a string with zeros or a specified string. Fastest implementation. | [homepage](https://github.com/jonschlinkert/pad-right "Right pad a string with zeros or a specified string. Fastest implementation.")
./node_modules/randomatic/README.md:106 => * [repeat-string](https://www.npmjs.com/package/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string. | [homepage](https://github.com/jonschlinkert/repeat-string "Repeat the given string n times. Fastest implementation for repeating a string.")
./node_modules/randomatic/README.md:130 => ### Running tests
./node_modules/randomatic/README.md:135 => $ npm install -d && npm test
./node_modules/querystring-es3/package.json:57 =>     "test": "~0.x.0"
./node_modules/querystring-es3/package.json:96 =>     "test": "npm run test-node && npm run test-browser && npm run test-tap",
./node_modules/querystring-es3/package.json:97 =>     "test-browser": "node ./node_modules/phantomify/bin/cmd.js ./test/common-index.js",
./node_modules/querystring-es3/package.json:98 =>     "test-node": "node ./test/common-index.js",
./node_modules/querystring-es3/package.json:99 =>     "test-tap": "node ./test/tap-index.js"
./node_modules/querystring-es3/package.json:101 =>   "testling": {
./node_modules/querystring-es3/package.json:102 =>     "files": "test/tap-index.js",
./node_modules/querystring-es3/Readme.md:6 => [![Browser support](http://ci.testling.com/mike-spainhower/querystring.png)](http://ci.testling.com/mike-spainhower/querystring)
./node_modules/read-only-stream/package.json:90 =>     "coverage": "covert test/*.js",
./node_modules/read-only-stream/package.json:91 =>     "test": "tape test/*.js"
./node_modules/randombytes/package.json:108 =>     "local": "zuul --local --no-coverage -- test.js",
./node_modules/randombytes/package.json:109 =>     "phantom": "zuul --phantom -- test.js",
./node_modules/randombytes/package.json:110 =>     "test": "standard && node test.js | tspec"
./node_modules/readdirp/package.json:105 =>     "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi",
./node_modules/readdirp/package.json:106 =>     "test-0.10": "nave use 0.10 npm run test-main",
./node_modules/readdirp/package.json:107 =>     "test-0.12": "nave use 0.12 npm run test-main",
./node_modules/readdirp/package.json:108 =>     "test-4": "nave use 4.4 npm run test-main",
./node_modules/readdirp/package.json:109 =>     "test-6": "nave use 6.2 npm run test-main",
./node_modules/readdirp/package.json:110 =>     "test-all": "npm run test-main && npm run test-0.10 && npm run test-0.12 && npm run test-4 && npm run test-6",
./node_modules/readdirp/package.json:111 =>     "test-main": "(cd test && set -e; for t in ./*.js; do node $t; done)"
./node_modules/randombytes/test.js:1 => var test = require('tape')
./node_modules/randombytes/test.js:4 => test('sync', function (t) {
./node_modules/randombytes/test.js:12 => test('async', function (t) {
./node_modules/randombytes/test.js:41 =>   test('requesting to much throws', function (t) {
./node_modules/randombytes/test.js:48 =>   test('requesting to much throws async', function (t) {
./node_modules/readdirp/README.md:5 => Recursive version of [fs.readdir](http://nodejs.org/docs/latest/api/fs.html#fs_fs_readdir_path_callback). Exposes a **stream api**.
./node_modules/readdirp/README.md:28 => Meant to be one of the recursive versions of [fs](http://nodejs.org/docs/latest/api/fs.html) functions, e.g., like [mkdirp](https://github.com/substack/node-mkdirp).
./node_modules/readdirp/README.md:46 => 	- [tests](#tests)
./node_modules/readdirp/README.md:102 =>         parentDir     :  'test/bed/root_dir1',
./node_modules/readdirp/README.md:103 =>         fullParentDir :  '/User/dev/readdirp/test/bed/root_dir1',
./node_modules/readdirp/README.md:105 =>         path          :  'test/bed/root_dir1/root_dir1_subdir1',
./node_modules/readdirp/README.md:106 =>         fullPath      :  '/User/dev/readdirp/test/bed/root_dir1/root_dir1_subdir1',
./node_modules/readdirp/README.md:160 => readdirp({ root: './test/bed', fileFilter: '*.js' })
./node_modules/readdirp/README.md:166 => readdirp({ root: './test/bed', fileFilter: [ '*.js', '*.json' ] })
./node_modules/readdirp/README.md:172 => readdirp({ root: './test/bed', directoryFilter: [ '!.git', '!*modules' ] })
./node_modules/readdirp/README.md:178 => readdirp({ root: './test/bed', directoryFilter: function (di) { return di.name.length === 9; } })
./node_modules/readdirp/README.md:184 => readdirp({ root: './test/bed', depth: 1 })
./node_modules/readable-stream/package.json:130 =>     "browser": "npm run write-zuul && zuul --browser-retries 2 -- test/browser.js",
./node_modules/readable-stream/package.json:131 =>     "cover": "nyc npm test",
./node_modules/readable-stream/package.json:132 =>     "local": "zuul --local 3000 --no-coverage -- test/browser.js",
./node_modules/readable-stream/package.json:134 =>     "test": "tap test/parallel/*.js test/ours/*.js",
./node_modules/regenerate/package.json:97 =>     "cover": "istanbul cover --report html --verbose --dir coverage tests/tests.js",
./node_modules/regenerate/package.json:98 =>     "test": "node tests/tests.js"
./node_modules/regex-cache/package.json:111 =>     "test": "mocha"
./node_modules/regexpu-core/package.json:119 =>     "coverage": "istanbul cover --report html node_modules/.bin/_mocha tests/tests.js -- -u exports -R spec",
./node_modules/regexpu-core/package.json:120 =>     "test": "mocha tests"
./node_modules/regjsgen/package.json:103 =>     "test": "node test/test.js"
./node_modules/regjsgen/regjsgen.js:92 =>     if (expected.test(type)) {
./node_modules/regex-cache/README.md:138 => ## Running tests
./node_modules/regex-cache/README.md:143 => $ npm install -d && npm test
./node_modules/regjsparser/package.json:91 =>     "test": "node test/index.js"
./node_modules/regenerator-runtime/runtime.js:145 =>   // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
./node_modules/repeat-element/package.json:99 =>     "test": "mocha"
./node_modules/regjsgen/README.md:35 => npm test
./node_modules/regjsgen/README.md:41 => node test/update-fixture.js
./node_modules/repeat-element/README.md:43 => [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.
./node_modules/repeat-element/README.md:45 => ## Running tests
./node_modules/repeat-element/README.md:50 => npm i -d && npm test
./node_modules/regjsparser/README.md:22 => To run the tests, run the following command:
./node_modules/regjsparser/README.md:25 => npm test
./node_modules/regjsparser/README.md:31 => node test/update-fixtures.js
./node_modules/repeating/package.json:101 =>     "test": "xo && ava"
./node_modules/request/CHANGELOG.md:4 => - [#2368](https://github.com/request/request/pull/2368) Fix typeof check in test-pool.js (@forivall)
./node_modules/request/CHANGELOG.md:9 => - [#2448](https://github.com/request/request/pull/2448) Make other connect timeout test more reliable too (@mscdex)
./node_modules/request/CHANGELOG.md:18 => - [#2414](https://github.com/request/request/pull/2414) Improve test-timeout reliability (@mscdex)
./node_modules/request/CHANGELOG.md:22 => - [#2415](https://github.com/request/request/pull/2415) Re-enable timeout tests on Travis + other fixes (@mscdex)
./node_modules/request/CHANGELOG.md:55 => - [#2205](https://github.com/request/request/pull/2205) Use server-destory to close hanging sockets in tests (@simov)
./node_modules/request/CHANGELOG.md:80 => - [#2058](https://github.com/request/request/pull/2058) Karma fixes for latest versions (@eiriksm)
./node_modules/request/package.json:150 =>     "lint": "eslint lib/ *.js tests/ && echo Lint passed.",
./node_modules/request/package.json:151 =>     "test": "npm run lint && npm run test-ci && npm run test-browser",
./node_modules/request/package.json:152 =>     "test-browser": "node tests/browser/start.js",
./node_modules/request/package.json:153 =>     "test-ci": "taper tests/test-*.js",
./node_modules/request/package.json:154 =>     "test-cov": "istanbul cover tape tests/test-*.js"
./node_modules/repeat-string/README.md:3 => > Repeat the given string n times. Fastest implementation for repeating a string.
./node_modules/repeat-string/README.md:114 => ### Running tests
./node_modules/repeat-string/README.md:119 => $ npm install -d && npm test
./node_modules/resolve/appveyor.yml:29 =>  # Get the latest stable version of Node.js or io.js
./node_modules/resolve/appveyor.yml:38 => # Post-install test scripts.
./node_modules/resolve/appveyor.yml:39 => test_script:
./node_modules/resolve/appveyor.yml:43 =>  # run tests
./node_modules/resolve/appveyor.yml:44 =>  - npm run tests-only
./node_modules/resolve/package.json:63 =>     "safe-publish-latest": "^1.1.1",
./node_modules/resolve/package.json:100 =>     "prepublish": "! type safe-publish-latest >/dev/null 2>&1 || safe-publish-latest",
./node_modules/resolve/package.json:101 =>     "test": "npm run --silent tests-only",
./node_modules/resolve/package.json:102 =>     "tests-only": "tape test/*.js"
./node_modules/request/README.md:10 => [![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)
./node_modules/repeat-string/package.json:84 =>   "description": "Repeat the given string n times. Fastest implementation for repeating a string.",
./node_modules/repeat-string/package.json:110 =>     "fastest",
./node_modules/repeat-string/package.json:145 =>     "test": "mocha"
./node_modules/right-align/package.json:98 =>     "test": "mocha"
./node_modules/resolve/readme.markdown:60 => * opts.isFile - function to asynchronously test whether a file exists
./node_modules/resolve/readme.markdown:108 => * opts.isFile - function to synchronously test whether a file exists
./node_modules/right-align/README.md:47 => * [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.
./node_modules/right-align/README.md:51 => ## Running tests
./node_modules/right-align/README.md:56 => $ npm i -d && npm test
./node_modules/request/request.js:134 => Request.debug = process.env.NODE_DEBUG && /\brequest\b/.test(process.env.NODE_DEBUG)
./node_modules/rimraf/package.json:10 =>         "spec": "latest",
./node_modules/rimraf/package.json:16 =>   "_from": "rimraf@latest",
./node_modules/rimraf/package.json:37 =>     "spec": "latest",
./node_modules/rimraf/package.json:96 =>     "test": "tap test/*.js"
./node_modules/ripemd160/package.json:110 =>     "browser-test": "mochify --wd -R spec",
./node_modules/ripemd160/package.json:111 =>     "test": "mocha test"
./node_modules/ripemd160/CHANGELOG.md:8 => - added more test fixtures
./node_modules/ripemd160/CHANGELOG.md:9 => - updated readme with usage, testing, etc
./node_modules/set-immediate-shim/package.json:94 =>     "test": "node test.js"
./node_modules/ripemd160/README.md:83 =>     npm run test
./node_modules/ripemd160/README.md:93 =>     npm run browser-test
./node_modules/shasum/package.json:84 =>     "test": "node test/index.js && node test/index.js browser"
./node_modules/sha.js/bin.js:33 =>   if (/--help|-h/.test(argv[0])) {
./node_modules/sha.js/package.json:66 =>     "hash-test-vectors": "^1.3.1",
./node_modules/sha.js/package.json:99 =>     "test": "npm run lint && npm run unit",
./node_modules/sha.js/package.json:100 =>     "unit": "set -e; for t in test/*.js; do node $t; done;"
./node_modules/shell-quote/package.json:99 =>     "test": "tape test/*.js"
./node_modules/shell-quote/package.json:101 =>   "testling": {
./node_modules/shell-quote/package.json:102 =>     "files": "test/*.js",
./node_modules/shell-quote/package.json:104 =>       "ie/6..latest",
./node_modules/shell-quote/package.json:106 =>       "firefox/15..latest",
./node_modules/shell-quote/package.json:108 =>       "chrome/25..latest",
./node_modules/shell-quote/package.json:110 =>       "opera/10..latest",
./node_modules/shell-quote/package.json:112 =>       "safari/5.1..latest",
./node_modules/shell-quote/package.json:113 =>       "ipad/6.0..latest",
./node_modules/shell-quote/package.json:114 =>       "iphone/6.0..latest",
./node_modules/shell-quote/package.json:115 =>       "android-browser/4.2..latest"
./node_modules/slash/index.js:3 => 	var isExtendedLengthPath = /^\\\\\?\\/.test(str);
./node_modules/slash/index.js:4 => 	var hasNonAscii = /[^\x00-\x80]+/.test(str);
./node_modules/slash/package.json:94 =>     "test": "mocha"
./node_modules/shell-quote/index.js:11 =>         else if (/["\s]/.test(s) && !/'/.test(s)) {
./node_modules/shell-quote/index.js:14 =>         else if (/["'\s]/.test(s)) {
./node_modules/shell-quote/index.js:44 =>             if (RegExp('^' + TOKEN).test(x)) {
./node_modules/shell-quote/index.js:67 =>         if (RegExp('^' + CONTROL + '$').test(s)) {
./node_modules/shell-quote/index.js:126 =>             else if (RegExp('^' + CONTROL + '$').test(c)) {
./node_modules/shell-quote/index.js:129 =>             else if (RegExp('^#$').test(c)) {
./node_modules/shell-quote/index.js:165 =>             else if (/[*@#?$!_\-]/.test(s.charAt(i))) {
./node_modules/sntp/Makefile:1 => test:
./node_modules/sntp/Makefile:3 => test-cov: 
./node_modules/sntp/Makefile:5 => test-cov-html:
./node_modules/sntp/Makefile:8 => .PHONY: test test-cov test-cov-html
./node_modules/sntp/package.json:95 =>     "test": "make test-cov"
./node_modules/shell-quote/readme.markdown:7 => [![browser support](https://ci.testling.com/substack/node-shell-quote.png)](https://ci.testling.com/substack/node-shell-quote)
./node_modules/source-map-support/package.json:95 =>     "serve-tests": "http-server -p 1336",
./node_modules/source-map-support/package.json:96 =>     "test": "mocha"
./node_modules/source-map-support/README.md:45 => $ mocha --require source-map-support/register tests/
./node_modules/source-map-support/README.md:122 => throw new Error('test'); // This is the original code
./node_modules/source-map-support/README.md:130 => throw new Error('test'); // This is the compiled code
./node_modules/source-map-support/README.md:153 => throw new Error('test'); // This is the original code
./node_modules/source-map-support/README.md:155 => Error: test
./node_modules/source-map-support/README.md:240 => This repo contains both automated tests for node and manual tests for the browser. The automated tests can be run using mocha (type `mocha` in the root directory). To run the manual tests:
./node_modules/source-map-support/README.md:242 => * Build the tests using `build.js`
./node_modules/source-map-support/README.md:243 => * Launch the HTTP server (`npm run serve-tests`) and visit
./node_modules/source-map-support/README.md:244 =>   * http://127.0.0.1:1336/amd-test
./node_modules/source-map-support/README.md:245 =>   * http://127.0.0.1:1336/browser-test
./node_modules/source-map-support/build.js:47 =>     fs.writeFileSync('amd-test/browser-source-map-support.js', code);
./node_modules/source-map-support/build.js:51 => // Build the AMD test
./node_modules/source-map-support/build.js:52 => run(coffee + ' --map --compile amd-test/script.coffee', function(error) {
./node_modules/source-map-support/build.js:56 => // Build the browserify test
./node_modules/source-map-support/build.js:57 => run(coffee + ' --map --compile browserify-test/script.coffee', function(error) {
./node_modules/source-map-support/build.js:59 =>   run(browserify + ' --debug browserify-test/script.js > browserify-test/compiled.js', function(error) {
./node_modules/source-map-support/build.js:64 => // Build the browser test
./node_modules/source-map-support/build.js:65 => run(coffee + ' --map --compile browser-test/script.coffee', function(error) {
./node_modules/source-map-support/build.js:69 => // Build the header test
./node_modules/source-map-support/build.js:70 => run(coffee + ' --map --compile header-test/script.coffee', function(error) {
./node_modules/source-map-support/build.js:72 =>   var contents = fs.readFileSync('header-test/script.js', 'utf8');
./node_modules/source-map-support/build.js:73 =>   fs.writeFileSync('header-test/script.js', contents.replace(/\/\/# sourceMappingURL=.*/g, ''))
./node_modules/source-map-support/build.js:76 => // Build the webpack test
./node_modules/source-map-support/build.js:77 => child_process.exec(webpack, {cwd: 'webpack-test'}, function(error) {
./node_modules/source-map-support/source-map-support.js:143 =>   if (reSourceMap.test(sourceMappingURL)) {
./node_modules/source-map-support/test.js:2 =>   emptyCacheBetweenOperations: true // Needed to be able to test for failure
./node_modules/source-map-support/test.js:13 =>     // Some tests are regular expressions because the output format changed slightly between node v0.9.2 and v0.9.3
./node_modules/source-map-support/test.js:15 =>       assert(expected[i].test(actual[i]), JSON.stringify(actual[i]) + ' does not match ' + expected[i]);
./node_modules/source-map-support/test.js:89 =>   fs.writeFileSync('.generated.js', 'exports.test = function() {' +
./node_modules/source-map-support/test.js:93 =>     require('./.generated').test();
./node_modules/source-map-support/test.js:101 =>   fs.writeFileSync('.generated.js', 'exports.test = function() {' +
./node_modules/source-map-support/test.js:106 =>     require('./.generated').test();
./node_modules/source-map-support/test.js:139 =>     'throw new Error("test");'
./node_modules/source-map-support/test.js:141 =>     'Error: test',
./node_modules/source-map-support/test.js:142 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:149 =>     '  throw new Error("test");',
./node_modules/source-map-support/test.js:153 =>     'Error: test',
./node_modules/source-map-support/test.js:155 =>     /^    at Object\.exports\.test \((?:.*\/)?line4\.js:1004:104\)$/
./node_modules/source-map-support/test.js:163 =>     '    throw new Error("test");',
./node_modules/source-map-support/test.js:169 =>     'Error: test',
./node_modules/source-map-support/test.js:172 =>     /^    at Object\.exports\.test \((?:.*\/)?line7\.js:1007:107\)$/
./node_modules/source-map-support/test.js:178 =>     'eval("throw new Error(\'test\')");'
./node_modules/source-map-support/test.js:180 =>     'Error: test',
./node_modules/source-map-support/test.js:183 =>     /^    at (?:Object\.)?eval \(eval at (<anonymous>|exports.test) \((?:.*\/)?line1\.js:1001:101\)/,
./node_modules/source-map-support/test.js:185 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:191 =>     'eval("eval(\'throw new Error(\\"test\\")\')");'
./node_modules/source-map-support/test.js:193 =>     'Error: test',
./node_modules/source-map-support/test.js:194 =>     /^    at (?:Object\.)?eval \(eval at (<anonymous>|exports.test) \(eval at (<anonymous>|exports.test) \((?:.*\/)?line1\.js:1001:101\)/,
./node_modules/source-map-support/test.js:195 =>     /^    at (?:Object\.)?eval \(eval at (<anonymous>|exports.test) \((?:.*\/)?line1\.js:1001:101\)/,
./node_modules/source-map-support/test.js:196 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:203 =>     '  eval("throw new Error(\'test\')");',
./node_modules/source-map-support/test.js:207 =>     'Error: test',
./node_modules/source-map-support/test.js:210 =>     /^    at Object\.exports\.test \((?:.*\/)?line4\.js:1004:104\)$/
./node_modules/source-map-support/test.js:216 =>     'eval("throw new Error(\'test\')//@ sourceURL=sourceURL.js");'
./node_modules/source-map-support/test.js:218 =>     'Error: test',
./node_modules/source-map-support/test.js:220 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:226 =>     'eval("eval(\'throw new Error(\\"test\\")//@ sourceURL=sourceURL.js\')");'
./node_modules/source-map-support/test.js:228 =>     'Error: test',
./node_modules/source-map-support/test.js:230 =>     /^    at (?:Object\.)?eval \(eval at (<anonymous>|exports.test) \((?:.*\/)?line1\.js:1001:101\)/,
./node_modules/source-map-support/test.js:231 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:255 =>     'throw new Error("test");'
./node_modules/source-map-support/test.js:257 =>     'Error: test',
./node_modules/source-map-support/test.js:258 =>     /^    at Object\.exports\.test \((?:.*\/)?.generated.js:1:34\)$/
./node_modules/source-map/package.json:257 =>     "test": "npm run build && node test/run-tests.js",
./node_modules/source-map/CHANGELOG.md:188 => * Fixed test runner to actually report number of failed tests as its process
./node_modules/source-map/CHANGELOG.md:205 => * Extend the test runner to allow running single specific test files at a time.
./node_modules/source-map/CHANGELOG.md:263 => * Using Travis CI to run tests.
./node_modules/sshpk/package.json:132 =>     "test": "tape test/*.js"
./node_modules/stream-browserify/package.json:97 =>     "test": "tape test/*.js"
./node_modules/stream-browserify/package.json:99 =>   "testling": {
./node_modules/stream-browserify/package.json:100 =>     "files": "test/*.js",
./node_modules/stream-browserify/package.json:102 =>       "ie/8..latest",
./node_modules/stream-browserify/package.json:107 =>       "chrome/latest",
./node_modules/stream-browserify/package.json:109 =>       "opera/12..latest",
./node_modules/stream-browserify/package.json:111 =>       "safari/5.1..latest",
./node_modules/stream-browserify/package.json:112 =>       "ipad/6.0..latest",
./node_modules/stream-browserify/package.json:113 =>       "iphone/6.0..latest",
./node_modules/stream-browserify/package.json:114 =>       "android-browser/4.2..latest"
./node_modules/stream-combiner2/package.json:84 =>     "test": "set -e; for t in test/*.js; do node $t; done"
./node_modules/stream-browserify/readme.markdown:10 => [documentation on streams](http://nodejs.org/docs/latest/api/stream.html).
./node_modules/stream-http/package.json:106 =>     "test": "npm run test-node && ([ -n \"${TRAVIS_PULL_REQUEST}\" -a \"${TRAVIS_PULL_REQUEST}\" != 'false' ] || npm run test-browser)",
./node_modules/stream-http/package.json:107 =>     "test-browser": "zuul --no-coverage -- test/browser/*.js",
./node_modules/stream-http/package.json:108 =>     "test-browser-local": "zuul --local 8080 --no-coverage -- test/browser/*.js",
./node_modules/stream-http/package.json:109 =>     "test-node": "tape test/node/*.js"
./node_modules/stream-splicer/package.json:92 =>     "test": "tape test/*.js"
./node_modules/stream-http/README.md:117 => ## Running tests
./node_modules/stream-http/README.md:119 => There are two sets of tests: the tests that run in Node (found in `test/node`) and the tests
./node_modules/stream-http/README.md:120 => that run in the browser (found in `test/browser`). Normally the browser tests run on
./node_modules/stream-http/README.md:123 => Running `npm test` will run both sets of tests, but in order for the Sauce Labs tests to run
./node_modules/stream-http/README.md:127 => To run just the Node tests, run `npm run test-node`.
./node_modules/stream-http/README.md:129 => To run the browser tests locally, run `npm run test-browser-local` and point your browser to
./node_modules/string-width/package.json:122 =>     "test": "xo && ava"
./node_modules/string_decoder/package.json:86 =>     "test": "tap test/simple/*.js"
./node_modules/strip-ansi/package.json:123 =>     "test": "xo && ava"
./node_modules/subarg/package.json:95 =>     "test": "tape test/*.js"
./node_modules/subarg/package.json:97 =>   "testling": {
./node_modules/subarg/package.json:98 =>     "files": "test/*.js",
./node_modules/subarg/package.json:100 =>       "ie/8..latest",
./node_modules/subarg/package.json:102 =>       "firefox/latest",
./node_modules/subarg/package.json:105 =>       "chrome/latest",
./node_modules/subarg/package.json:107 =>       "opera/12..latest",
./node_modules/subarg/package.json:109 =>       "safari/5.1..latest"
./node_modules/subarg/index.js:8 =>         if (typeof args[i] === 'string' && /^\[/.test(args[i])) {
./node_modules/subarg/index.js:13 =>         if (typeof args[i] === 'string' && /\]$/.test(args[i])) {
./node_modules/supports-color/index.js:45 => 	if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
./node_modules/supports-color/package.json:110 =>     "test": "mocha"
./node_modules/syntax-error/package.json:105 =>     "test": "tap test/*.js"
./node_modules/subarg/readme.markdown:6 => [![testling badge](https://ci.testling.com/substack/subarg.png)](https://ci.testling.com/substack/subarg)
./node_modules/through/package.json:90 =>     "test": "set -e; for t in test/*.js; do node $t; done"
./node_modules/through/package.json:92 =>   "testling": {
./node_modules/through/package.json:94 =>       "ie/8..latest",
./node_modules/through/package.json:95 =>       "ff/15..latest",
./node_modules/through/package.json:96 =>       "chrome/20..latest",
./node_modules/through/package.json:97 =>       "safari/5.1..latest"
./node_modules/through/package.json:99 =>     "files": "test/*.js"
./node_modules/through2/package.json:104 =>     "test": "node test/test.js | faucet",
./node_modules/through2/package.json:105 =>     "test-local": "brtapsauce-local test/basic-test.js"
./node_modules/through/readme.markdown:4 => [![testling badge](https://ci.testling.com/dominictarr/through.png)](https://ci.testling.com/dominictarr/through)
./node_modules/through2/README.md:9 => Note: As 2.x.x this module starts using **Streams3** instead of Stream2. To continue using a Streams2 version use `npm install through2@0` to fetch the latest version of 0.x.x. More information about Streams2 vs Streams3 and recommendations see the article **[Why I don't use Node's core 'stream' module](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html)**.
./node_modules/through2/README.md:59 => Consult the **[stream.Transform](http://nodejs.org/docs/latest/api/stream.html#stream_class_stream_transform)** documentation for the exact rules of the `transformFunction` (i.e. `this._transform`) and the optional `flushFunction` (i.e. `this._flush`).
./node_modules/tmp/package.json:94 =>     "test": "vows test/*-test.js"
./node_modules/tmp/Gruntfile.js:4 =>       all: ['Gruntfile.js', 'lib/*.js', 'test/*.js']
./node_modules/tmp/Gruntfile.js:8 =>         src: ['test/*.js'],
./node_modules/to-arraybuffer/package.json:87 =>     "test": "npm run test-node && ([ -n \"${TRAVIS_PULL_REQUEST}\" -a \"${TRAVIS_PULL_REQUEST}\" != 'false' ] || npm run test-browser)",
./node_modules/to-arraybuffer/package.json:88 =>     "test-browser": "zuul --no-coverage -- test.js",
./node_modules/to-arraybuffer/package.json:89 =>     "test-browser-local": "zuul --local 8080 --no-coverage -- test.js",
./node_modules/to-arraybuffer/package.json:90 =>     "test-node": "tape test.js"
./node_modules/to-fast-properties/package.json:100 =>     "test": "node --allow-natives-syntax test.js"
./node_modules/tough-cookie/package.json:132 =>     "test": "vows test/*_test.js"
./node_modules/transform-filter/package.json:95 =>     "test": "mocha"
./node_modules/transform-filter/index.js:37 =>   function test (file) {
./node_modules/transform-filter/index.js:43 =>     var pass = test(file);
./node_modules/to-arraybuffer/test.js:2 => var test = require('tape')
./node_modules/to-arraybuffer/test.js:16 => test('Basic behavior', function (t) {
./node_modules/to-arraybuffer/test.js:29 => test('Behavior when input is a subarray 1', function (t) {
./node_modules/to-arraybuffer/test.js:44 => test('Behavior when input is a subarray 2', function (t) {
./node_modules/tty-browserify/package.json:83 =>     "test": "tape test/*.js"
./node_modules/tough-cookie/README.md:84 => Returns the public suffix of this hostname.  The public suffix is the shortest domain-name upon which a cookie can be set.  Returns `null` if the hostname cannot have cookies set for it.
./node_modules/transform-filter/Readme.md:30 =>      `exclude:['tests/**','!tests/utils.js']` excludes everything in the tests directory except `utils.js`
./node_modules/trim-right/index.js:5 => 	while (/[\s\uFEFF\u00A0]/.test(str[tail - 1])) {
./node_modules/trim-right/package.json:98 =>     "test": "node test.js"
./node_modules/tweetnacl/CHANGELOG.md:32 => > [testing mistake] not catching the failure. The chance of the bug affecting
./node_modules/tweetnacl/CHANGELOG.md:85 => * Changes to testing (see README).
./node_modules/tweetnacl/CHANGELOG.md:202 => * NPM package now comes without `test` directory to keep it small.
./node_modules/tweetnacl/CHANGELOG.md:213 =>   (Obviously, there are no tests for the correctness of implementation.) Also,
./node_modules/tunnel-agent/index.js:230 => if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
./node_modules/tunnel-agent/index.js:243 => exports.debug = debug // for test
./node_modules/tweetnacl/package.json:72 =>     "test": "test"
./node_modules/tweetnacl/package.json:110 =>     "bench": "node test/benchmark/bench.js",
./node_modules/tweetnacl/package.json:112 =>     "build-test-browser": "browserify test/browser/init.js test/*.js | uglifyjs -c -m -o test/browser/_bundle.js 2>/dev/null && browserify test/browser/init.js test/*.quick.js | uglifyjs -c -m -o test/browser/_bundle-quick.js 2>/dev/null",
./node_modules/tweetnacl/package.json:113 =>     "lint": "eslint nacl.js nacl-fast.js test/*.js test/benchmark/*.js",
./node_modules/tweetnacl/package.json:114 =>     "test": "npm run test-node-all && npm run test-browser",
./node_modules/tweetnacl/package.json:115 =>     "test-browser": "NACL_SRC=${NACL_SRC:='nacl.min.js'} && npm run build-test-browser && cat $NACL_SRC test/browser/_bundle.js | tape-run | faucet",
./node_modules/tweetnacl/package.json:116 =>     "test-node": "tape test/*.js | faucet",
./node_modules/tweetnacl/package.json:117 =>     "test-node-all": "make -C test/c && tape test/*.js test/c/*.js | faucet"
./node_modules/type-detect/History.md:8 =>   * Made "new String()" return type "string" instead of object and added test for "new Number()"
./node_modules/type-detect/History.md:11 =>   * Added 'else' statement to tests make skipping visual.
./node_modules/type-detect/History.md:15 =>   * Implemented conditional tests for ECMA6 features with real types.
./node_modules/type-detect/History.md:24 =>   * Added a test for ArrayBuffer.
./node_modules/type-detect/History.md:27 =>   * Made stub of Object.prototype.toString restore itself on call as Mocha uses this method after tests.
./node_modules/type-detect/History.md:29 =>   * Added new types simple and implemented tests with stubbing "Object.prototype.toString"
./node_modules/type-detect/History.md:40 =>  * index,test: support browserify
./node_modules/type-detect/History.md:47 =>  * library: [test] ensure test runs
./node_modules/type-detect/History.md:49 =>  * tests: add tests
./node_modules/type-detect/History.md:51 =>  * pkg: prepare for coverage based tests
./node_modules/type-detect/package.json:90 =>     "test": "make test"
./node_modules/tweetnacl/README.md:30 => * [Development and testing](#development-and-testing)
./node_modules/type-detect/README.md:149 => * **@param** _{Mixed}_ object to test
./node_modules/type-detect/README.md:161 => #### .define (type, test)
./node_modules/type-detect/README.md:164 => * **@param** _{RegExp|Function}_ test 
./node_modules/type-detect/README.md:166 => Add a test to for the `.test()` assertion.
./node_modules/type-detect/README.md:186 => #### .test (obj, test)
./node_modules/type-detect/README.md:194 => use the user defined custom tests.
./node_modules/type-detect/README.md:197 => assert(lib.test('1', 'int'));
./node_modules/type-detect/README.md:198 => assert(lib.test('yes', 'bln'));
./node_modules/typedarray/LICENSE:31 => //   Ref: http://www.khronos.org/registry/typedarray/specs/latest/
./node_modules/typedarray/package.json:94 =>     "test": "tape test/*.js test/server/*.js"
./node_modules/typedarray/package.json:96 =>   "testling": {
./node_modules/typedarray/package.json:97 =>     "files": "test/*.js",
./node_modules/typedarray/package.json:99 =>       "ie/6..latest",
./node_modules/typedarray/package.json:100 =>       "firefox/16..latest",
./node_modules/typedarray/package.json:102 =>       "chrome/22..latest",
./node_modules/typedarray/package.json:104 =>       "opera/12..latest",
./node_modules/typedarray/package.json:106 =>       "safari/5.1..latest",
./node_modules/typedarray/package.json:107 =>       "ipad/6.0..latest",
./node_modules/typedarray/package.json:108 =>       "iphone/6.0..latest",
./node_modules/typedarray/package.json:109 =>       "android-browser/4.2..latest"
./node_modules/uglify-js/package.json:121 =>     "test": "node test/run-tests.js"
./node_modules/typedarray/index.js:50 => // (second clause tests for Object.defineProperty() in IE<9 that only supports extending DOM prototypes, but
./node_modules/typedarray/readme.markdown:8 => [![testling badge](https://ci.testling.com/substack/typedarray.png)](https://ci.testling.com/substack/typedarray)
./node_modules/typedarray/readme.markdown:57 => http://wzrd.in/standalone/typedarray@latest
./node_modules/uglify-to-browserify/package.json:77 =>     "test": "node test/index.js"
./node_modules/umd/package.json:100 =>     "test": "npm run build && mocha -R spec"
./node_modules/uglify-to-browserify/index.js:14 =>   if (!/tools\/node\.js$/.test(file.replace(/\\/g,'/'))) return new PassThrough();
./node_modules/uglify-js/README.md:16 => First make sure you have installed the latest version of [node.js](http://nodejs.org/)
./node_modules/user-home/package.json:100 =>     "test": "node test.js"
./node_modules/url/package.json:84 =>     "test": "mocha --ui qunit test.js && zuul -- test.js",
./node_modules/url/package.json:85 =>     "test-local": "zuul --local -- test.js"
./node_modules/umd/index.js:43 =>   if (!/^[a-zA-Z_$]$/.test(name[0])) {
./node_modules/util/package.json:86 =>     "test": "node test/node/*.js && zuul test/browser/*.js"
./node_modules/url/url.js:190 =>     // Review our test case against browsers more comprehensively.
./node_modules/util-deprecate/package.json:87 =>     "test": "echo \"Error: no test specified\" && exit 1"
./node_modules/uuid/HISTORY.md:20 =>   * Improve tests and handling of v1() options (Issue #24)
./node_modules/uuid/HISTORY.md:21 =>   * Expose RNG option to allow for perf testing with different generators
./node_modules/uuid/package.json:119 =>     "test": "mocha test/test.js"
./node_modules/util/util.js:103 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/v8flags/package.json:103 =>     "test": "_mocha -R spec test.js"
./node_modules/uuid/README.md:33 => <script src="http://wzrd.in/standalone/uuid@latest"></script>
./node_modules/uuid/README.md:41 => (Note: Do not do this in production.  Just don't.  wzrd.in is a great service, but if you're deploying a "real" service you should be using a packaging tool like browserify or webpack.  If you do go this route you would be well advised to link to a specific version instead of `uuid@latest` to avoid having your code break when we roll out breaking changes.)
./node_modules/uuid/README.md:127 => npm test
./node_modules/verror/package.json:75 =>     "test": "make test"
./node_modules/verror/Makefile:19 => JS_FILES	:= $(shell find lib examples tests -name '*.js')
./node_modules/verror/Makefile:28 => .PHONY: test
./node_modules/verror/Makefile:29 => test:
./node_modules/verror/Makefile:30 => 	node tests/tst.inherit.js
./node_modules/verror/Makefile:31 => 	node tests/tst.verror.js
./node_modules/verror/Makefile:32 => 	node tests/tst.werror.js
./node_modules/verror/Makefile:33 => 	@echo all tests passed
./node_modules/verror/Makefile.targ:25 => #	prepush	Depends on "check" and "test"
./node_modules/verror/Makefile.targ:27 => #	test	Does nothing (you should override this)
./node_modules/vm-browserify/package.json:85 =>     "test": "tap test/*.js"
./node_modules/vm-browserify/package.json:87 =>   "testling": {
./node_modules/vm-browserify/package.json:88 =>     "files": "test/*.js",
./node_modules/vm-browserify/package.json:90 =>       "ie/6..latest",
./node_modules/vm-browserify/package.json:91 =>       "firefox/16..latest",
./node_modules/vm-browserify/package.json:93 =>       "chrome/22..latest",
./node_modules/vm-browserify/package.json:95 =>       "opera/12..latest",
./node_modules/vm-browserify/package.json:97 =>       "safari/5.1..latest",
./node_modules/vm-browserify/package.json:98 =>       "ipad/6.0..latest",
./node_modules/vm-browserify/package.json:99 =>       "iphone/6.0..latest",
./node_modules/vm-browserify/package.json:100 =>       "android-browser/4.2..latest"
./node_modules/vm-browserify/readme.markdown:5 => [![testling badge](https://ci.testling.com/substack/vm-browserify.png)](https://ci.testling.com/substack/vm-browserify)
./node_modules/wordwrap/package.json:58 =>     "test": "test"
./node_modules/wordwrap/package.json:91 =>     "test": "expresso"
./node_modules/wrap-ansi/package.json:138 =>     "test": "xo && nyc ava"
./node_modules/wrappy/package.json:63 =>     "test": "test"
./node_modules/wrappy/package.json:94 =>     "test": "tap --coverage test/*.js"
./node_modules/wrap-ansi/readme.md:68 => - [jsesc](https://github.com/mathiasbynens/jsesc) - Generate ASCII-only output from Unicode strings. Useful for creating test fixtures.
./node_modules/xmldom/changelog:6 =>  * Initial unit testing and test coverage. #53. #46. #19.
./node_modules/xmldom/changelog:11 =>  * Add: some test case from node-o3-xml(excludes xpath support)
./node_modules/xmldom/package.json:136 =>     "test": "proof platform win32 && proof test */*/*.t.js || t/test"
./node_modules/xmldom/readme.md:17 =>         '\t<child>test</child>\n'+
./node_modules/xmldom/dom-parser.js:19 => 	if(/\/x?html?$/.test(mimeType)){
./node_modules/xmldom/dom-parser.js:130 => 			}else if(/^\s*$/.test(chars)){
./node_modules/xtend/package.json:104 =>     "test": "node test"
./node_modules/xtend/package.json:106 =>   "testling": {
./node_modules/xtend/package.json:107 =>     "files": "test.js",
./node_modules/xtend/package.json:109 =>       "ie/7..latest",
./node_modules/xtend/package.json:110 =>       "firefox/16..latest",
./node_modules/xtend/package.json:112 =>       "chrome/22..latest",
./node_modules/xtend/package.json:114 =>       "opera/12..latest",
./node_modules/xtend/package.json:116 =>       "safari/5.1..latest",
./node_modules/xtend/package.json:117 =>       "ipad/6.0..latest",
./node_modules/xtend/package.json:118 =>       "iphone/6.0..latest"
./node_modules/xtend/README.md:31 =>   [3]: http://ci.testling.com/Raynos/xtend.png
./node_modules/xtend/README.md:32 =>   [4]: http://ci.testling.com/Raynos/xtend
./node_modules/yargs/CHANGELOG.md:10 => - [0291360](https://github.com/bcoe/yargs/commit/02913606285ce31ce81d7f12c48d8a3029776ec7) fixed tests, switched to nyc for coverage, fixed security issue, added Lin as collaborator (@bcoe)
./node_modules/yargs/CHANGELOG.md:51 => - [4e588e0](https://github.com/bcoe/yargs/commit/4e588e055afbeb9336533095f051496e3977f515) accidentally left testing logic in (@bcoe)
./node_modules/xtend/test.js:1 => var test = require("tape")
./node_modules/xtend/test.js:5 => test("merge", function(assert) {
./node_modules/xtend/test.js:13 => test("replace", function(assert) {
./node_modules/xtend/test.js:21 => test("undefined", function(assert) {
./node_modules/xtend/test.js:30 => test("handle 0", function(assert) {
./node_modules/xtend/test.js:39 => test("is immutable", function (assert) {
./node_modules/xtend/test.js:47 => test("null as argument", function (assert) {
./node_modules/xtend/test.js:56 => test("mutable", function (assert) {
./node_modules/xtend/test.js:65 => test("null prototype", function(assert) {
./node_modules/xtend/test.js:74 => test("null prototype mutable", function (assert) {
./node_modules/yargs/package.json:142 =>     "test": "standard && nyc mocha --check-leaks && nyc report"
./node_modules/y18n/package.json:101 =>     "pretest": "standard",
./node_modules/y18n/package.json:102 =>     "test": "nyc mocha"
./node_modules/yargs/README.md:319 =>     Usage: node test.js <command> [options]
./node_modules/yargs/README.md:329 =>       node test.js count -f foo.js    count the lines in the given file
./node_modules/yargs/index.js:26 =>       if (i === 0 && /\b(node|iojs)$/.test(x)) return
./tests/serialize/data.js:17 => var targetDocument = $rdf.sym(base + 'stdin') // defaul URI of test data
./tests/serialize/data.js:45 =>   // toprint.reverse();  No - I prefer the latest at the top by the error message -tbl
./tests/serialize/Makefile:1 => # Crude tests for particular serializer bugs
./tests/serialize/t8-ref.nq:1 => <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#other> <http://www.w3.org/2007/ont/link#uri> "file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#subj" _:n0 .
./tests/serialize/t8-ref.nq:2 => <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#subj> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#TestCase> <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3> .
./tests/serialize/t8-ref.nq:3 => <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#subj> <http://www.w3.org/2002/07/owl#sameAs> <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3#other> <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3> .
./tests/serialize/t8-ref.nq:4 => <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2007/ont/link#Document> _:n0 .
./tests/serialize/t8-ref.nq:5 => <file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2007/ont/link#RDFDocument> _:n0 .
./tests/serialize/t8-ref.nq:6 => _:n1 <http://www.w3.org/2000/01/rdf-schema#label> "[22:48:33]  Request for file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3" _:n0 .
./tests/serialize/t8-ref.nq:7 => _:n1 <http://www.w3.org/2007/ont/link#requestedURI> "file:///devel/github.com/linkeddata/rdflib.js/tests/serialize/t5.n3" _:n0 .
./lib/indexed-formula.js:851 =>       // Ok, we have picked the shortest index but now we have to filter it
./test/tc0004/test_rdfparser.js:264 =>         rdfxmlTestCaseMsg[dir] = "<a href='" + testCaseURI + ".rdf' target='_new'>" + testCaseURI + '.rdf</a> failed concerning: <pre>' + escapeEntities(kbNT.statements[k].toString()) + '</pre>'
./test/tc0004/test_rdfparser.js:269 =>     rdfxmlTestCaseMsg[dir] = "<a href='" + testCaseURI + ".rdf'>" + testCaseURI + '.rdf</a> failed.'
./test/tc0004/test_rdfparser.js:275 => function getTestCaseData (testCaseURI, format) {
./test/tc0004/test_rdfparser.js:278 =>   var why = testCaseURI
./test/tc0004/test_rdfparser.js:281 =>     testCaseURI += '.nt'
./test/tc0004/test_rdfparser.js:284 =>     testCaseURI += '.rdf'
./test/tc0004/test_rdfparser.js:289 =>     url: testCaseURI,
./test/tc0004/test_rdfparser.js:294 =>         returnValue = parseN3FromString(testCaseURI, data, kb, why)
./test/tc0004/test_rdfparser.js:300 =>         rdfxmlparser.parse(data, testCaseURI, why)
./test/tc0004/test_rdfparser.js:305 =>       alert('Error running test: ' + textStatus + ' (' + errorThrown + ')')
./test/tc0007/manifest.ttl:167 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:168 =>    test:informationResourceInput <test-cases/0023.html>;
./test/tc0007/manifest.ttl:169 =>    test:informationResourceResults <test-cases/0023.sparql>;
./test/tc0007/manifest.ttl:170 =>    test:purpose "Tests that @id does not generate subjects";
./test/tc0007/manifest.ttl:171 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:172 => <test-cases/0025> dc:contributor "Ben Adida";
./test/tc0007/manifest.ttl:173 =>    dc:title "simple chaining test";
./test/tc0007/manifest.ttl:174 =>    a test:TestCase;
./test/tc0007/manifest.ttl:175 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:176 =>    test:classification test:required;
./test/tc0007/manifest.ttl:177 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:178 =>    test:informationResourceInput <test-cases/0025.html>;
./test/tc0007/manifest.ttl:179 =>    test:informationResourceResults <test-cases/0025.sparql>;
./test/tc0007/manifest.ttl:180 =>    test:purpose "Tests simple chaining with cascade of @resource and @property";
./test/tc0007/manifest.ttl:181 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:182 => <test-cases/0026> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:184 =>    a test:TestCase;
./test/tc0007/manifest.ttl:185 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:186 =>    test:classification test:required;
./test/tc0007/manifest.ttl:187 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:188 =>    test:informationResourceInput <test-cases/0026.html>;
./test/tc0007/manifest.ttl:189 =>    test:informationResourceResults <test-cases/0026.sparql>;
./test/tc0007/manifest.ttl:190 =>    test:purpose "Tests @content for literal object";
./test/tc0007/manifest.ttl:191 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:192 => <test-cases/0027> dc:contributor "Wing Yung";
./test/tc0007/manifest.ttl:194 =>    a test:TestCase;
./test/tc0007/manifest.ttl:195 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:196 =>    test:classification test:required;
./test/tc0007/manifest.ttl:197 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:198 =>    test:informationResourceInput <test-cases/0027.html>;
./test/tc0007/manifest.ttl:199 =>    test:informationResourceResults <test-cases/0027.sparql>;
./test/tc0007/manifest.ttl:200 =>    test:purpose "Tests @content for literal object, overriding element content.";
./test/tc0007/manifest.ttl:201 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:202 => <test-cases/0029> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:204 =>    a test:TestCase;
./test/tc0007/manifest.ttl:205 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:206 =>    test:classification test:required;
./test/tc0007/manifest.ttl:207 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:208 =>    test:informationResourceInput <test-cases/0029.html>;
./test/tc0007/manifest.ttl:209 =>    test:informationResourceResults <test-cases/0029.sparql>;
./test/tc0007/manifest.ttl:210 =>    test:purpose "Tests markup stripping from a span element with @datatype=xsd:string";
./test/tc0007/manifest.ttl:211 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:212 => <test-cases/0030> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:214 =>    a test:TestCase;
./test/tc0007/manifest.ttl:215 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:216 =>    test:classification test:required;
./test/tc0007/manifest.ttl:217 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:218 =>    test:informationResourceInput <test-cases/0030.html>;
./test/tc0007/manifest.ttl:219 =>    test:informationResourceResults <test-cases/0030.sparql>;
./test/tc0007/manifest.ttl:220 =>    test:purpose "Tests omitted @about.";
./test/tc0007/manifest.ttl:221 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:222 => <test-cases/0031> dc:contributor "Ralph Swick";
./test/tc0007/manifest.ttl:224 =>    a test:TestCase;
./test/tc0007/manifest.ttl:225 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:226 =>    test:classification test:required;
./test/tc0007/manifest.ttl:227 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:228 =>    test:informationResourceInput <test-cases/0031.html>;
./test/tc0007/manifest.ttl:229 =>    test:informationResourceResults <test-cases/0031.sparql>;
./test/tc0007/manifest.ttl:230 =>    test:purpose "Tests if @resource sets URIref object correct.";
./test/tc0007/manifest.ttl:231 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:232 => <test-cases/0032> dc:contributor "Ralph Swick";
./test/tc0007/manifest.ttl:234 =>    a test:TestCase;
./test/tc0007/manifest.ttl:235 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:236 =>    test:classification test:required;
./test/tc0007/manifest.ttl:237 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:238 =>    test:informationResourceInput <test-cases/0032.html>;
./test/tc0007/manifest.ttl:239 =>    test:informationResourceResults <test-cases/0032.sparql>;
./test/tc0007/manifest.ttl:240 =>    test:purpose "Tests if @resource overrides @href to set the URIref object.";
./test/tc0007/manifest.ttl:241 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:242 => <test-cases/0033> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:243 =>    dc:title "simple chaining test with bNode";
./test/tc0007/manifest.ttl:244 =>    a test:TestCase;
./test/tc0007/manifest.ttl:245 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:246 =>    test:classification test:required;
./test/tc0007/manifest.ttl:247 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:248 =>    test:informationResourceInput <test-cases/0033.html>;
./test/tc0007/manifest.ttl:249 =>    test:informationResourceResults <test-cases/0033.sparql>;
./test/tc0007/manifest.ttl:250 =>    test:purpose "Tests simple chaining with cascade of bNode and @property";
./test/tc0007/manifest.ttl:251 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:252 => <test-cases/0034> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:253 =>    dc:title "simple img[@src] test";
./test/tc0007/manifest.ttl:254 =>    a test:TestCase;
./test/tc0007/manifest.ttl:255 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:256 =>    test:classification test:required;
./test/tc0007/manifest.ttl:257 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:258 =>    test:informationResourceInput <test-cases/0034.html>;
./test/tc0007/manifest.ttl:259 =>    test:informationResourceResults <test-cases/0034.sparql>;
./test/tc0007/manifest.ttl:260 =>    test:purpose "Tests if a @src (in img element) correctly sets the URIref object";
./test/tc0007/manifest.ttl:261 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:262 => <test-cases/0035> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:263 =>    dc:title "@src/@href test";
./test/tc0007/manifest.ttl:264 =>    a test:TestCase;
./test/tc0007/manifest.ttl:265 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:266 =>    test:classification test:required;
./test/tc0007/manifest.ttl:267 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:268 =>    test:informationResourceInput <test-cases/0035.html>;
./test/tc0007/manifest.ttl:269 =>    test:informationResourceResults <test-cases/0035.sparql>;
./test/tc0007/manifest.ttl:270 =>    test:purpose "Tests if @href overwrites @src";
./test/tc0007/manifest.ttl:271 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:272 => <test-cases/0036> dc:contributor "Michael Hausenblas";
./test/tc0007/manifest.ttl:273 =>    dc:title "@src/@resource test";
./test/tc0007/manifest.ttl:274 =>    a test:TestCase;
./test/tc0007/manifest.ttl:275 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:276 =>    test:classification test:required;
./test/tc0007/manifest.ttl:277 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:278 =>    test:informationResourceInput <test-cases/0036.html>;
./test/tc0007/manifest.ttl:279 =>    test:informationResourceResults <test-cases/0036.sparql>;
./test/tc0007/manifest.ttl:280 =>    test:purpose "Tests if @resource overwrites @src";
./test/tc0007/manifest.ttl:281 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:282 => <test-cases/0037> dc:contributor "Steven Pemberton";
./test/tc0007/manifest.ttl:283 =>    dc:title "@src/@href/@resource test";
./test/tc0007/manifest.ttl:284 =>    a test:TestCase;
./test/tc0007/manifest.ttl:285 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:286 =>    test:classification test:required;
./test/tc0007/manifest.ttl:287 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:288 =>    test:informationResourceInput <test-cases/0037.html>;
./test/tc0007/manifest.ttl:289 =>    test:informationResourceResults <test-cases/0037.sparql>;
./test/tc0007/manifest.ttl:290 =>    test:purpose "Tests if @resource overwrites both @href and @src";
./test/tc0007/manifest.ttl:291 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:292 => <test-cases/0038> dc:contributor "Mark Birbeck";
./test/tc0007/manifest.ttl:293 =>    dc:title "@rev - img[@src] test";
./test/tc0007/manifest.ttl:294 =>    a test:TestCase;
./test/tc0007/manifest.ttl:295 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:296 =>    test:classification test:required;
./test/tc0007/manifest.ttl:297 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:298 =>    test:informationResourceInput <test-cases/0038.html>;
./test/tc0007/manifest.ttl:299 =>    test:informationResourceResults <test-cases/0038.sparql>;
./test/tc0007/manifest.ttl:300 =>    test:purpose "Tests if a @src (in img element) correctly sets the URIref subject (due to @rev)";
./test/tc0007/manifest.ttl:301 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:302 => <test-cases/0039> dc:contributor "Mark Birbeck";
./test/tc0007/manifest.ttl:303 =>    dc:title "@rev - @src/@href test";
./test/tc0007/manifest.ttl:304 =>    a test:TestCase;
./test/tc0007/manifest.ttl:305 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:306 =>    test:classification test:required;
./test/tc0007/manifest.ttl:307 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:308 =>    test:informationResourceInput <test-cases/0039.html>;
./test/tc0007/manifest.ttl:309 =>    test:informationResourceResults <test-cases/0039.sparql>;
./test/tc0007/manifest.ttl:310 =>    test:purpose "Tests if @href overwrites @src correctly to set the URIref subject (due to @rev)";
./test/tc0007/manifest.ttl:311 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:312 => <test-cases/0040> dc:contributor "Mark Birbeck";
./test/tc0007/manifest.ttl:313 =>    dc:title "@rev - @src/@resource test";
./test/tc0007/manifest.ttl:314 =>    a test:TestCase;
./test/tc0007/manifest.ttl:315 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:316 =>    test:classification test:required;
./test/tc0007/manifest.ttl:317 =>    rdfatest:hostLanguage "xhtml1", "html4";
./test/tc0007/manifest.ttl:318 =>    test:informationResourceInput <test-cases/0040.html>;
./test/tc0007/manifest.ttl:319 =>    test:informationResourceResults <test-cases/0040.sparql>;
./test/tc0007/manifest.ttl:320 =>    test:purpose "Tests if @resource overwrites @src correctly to set the URIref subject (due to @rev)";
./test/tc0007/manifest.ttl:321 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:322 => <test-cases/0041> dc:contributor "Mark Birbeck";
./test/tc0007/manifest.ttl:323 =>    dc:title "@rev - @src/@href/@resource test";
./test/tc0007/manifest.ttl:324 =>    a test:TestCase;
./test/tc0007/manifest.ttl:325 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:326 =>    test:classification test:required;
./test/tc0007/manifest.ttl:327 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:328 =>    test:informationResourceInput <test-cases/0041.html>;
./test/tc0007/manifest.ttl:329 =>    test:informationResourceResults <test-cases/0041.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:152 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0017.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:153 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0017.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:161 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0018.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:162 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0018.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:170 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0019.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:171 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0019.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:179 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0020.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:180 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0020.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:188 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0021.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:189 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0021.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:197 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0022.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:198 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0022.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:206 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0023.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:207 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0023.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:215 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0024.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:216 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0024.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:223 =>          dc:title "simple chaining test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:224 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0025.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:225 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0025.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:233 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0026.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:234 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0026.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:242 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0027.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:243 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0027.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:251 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0028.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:252 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0028.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:260 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0029.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:261 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0029.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:269 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0030.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:270 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0030.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:278 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0031.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:279 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0031.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:287 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0032.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:288 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0032.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:295 =>          dc:title "simple chaining test with bNode";
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:117 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:121 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0012">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:124 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0012.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:125 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0012.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:127 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:131 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0013">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:134 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0013.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:135 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0013.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:137 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:141 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0014">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:144 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0014.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:145 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0014.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:147 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:151 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0015">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:154 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0015.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:155 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0015.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:157 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:161 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0016">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:164 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0016.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:165 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0016.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:167 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:171 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0017">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:174 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0017.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:175 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0017.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:177 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:181 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0018">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:184 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0018.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:185 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0018.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:187 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:191 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0019">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:194 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0019.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:195 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0019.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:197 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:201 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0020">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:204 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0020.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:205 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0020.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:207 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:211 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0021">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:214 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0021.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:215 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0021.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:217 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:221 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0022">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:224 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0022.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:225 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0022.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:227 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:231 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0023">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:234 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0023.xhtml"/>
./test/tc0007/test_UUU.js:212 => function test0 () {
./test/tc0007/test_UUU.js:217 =>   testTC0007(true, function (errs, html) {
./node_modules/acorn/README.md:277 => **findNodeAt**`(node, start, end, test, base, state)` tries to
./node_modules/acorn/README.md:279 => satisfies the predicate `test`. `start` end `end` can be either `null`
./node_modules/acorn/README.md:280 => (as wildcard) or a number. `test` may be a string (indicating a node
./node_modules/acorn/README.md:284 => Nodes are tested from inner to outer, so if two nodes match the
./node_modules/acorn/README.md:287 => **findNodeAround**`(node, pos, test, base, state)` is a lot like
./node_modules/acorn/README.md:291 => **findNodeAfter**`(node, pos, test, base, state)` is similar to
./node_modules/acorn/README.md:293 => (testing outer nodes before inner nodes).
./node_modules/acorn/README.md:326 => The command-line test runner (`npm test`) uses the ES6 modules. The
./node_modules/acorn/README.md:327 => browser-based test page (`test/index.html`) uses the compiled modules.
./tests/unit/uri-test.js:7 =>   const testData = [
./tests/unit/uri-test.js:20 =>     ['file:/swap/test/animal.rdf', 'file:/swap/test/animal.rdf#Animal', '#Animal'],
./tests/unit/uri-test.js:34 =>     ['file:/devel/WWW/2000/10/swap/test/reluri-1.n3', 'file://meetings.example.com/cal#m1', 'file://meetings.example.com/cal#m1'],
./tests/unit/uri-test.js:35 =>     ['file:/home/connolly/w3ccvs/WWW/2000/10/swap/test/reluri-1.n3', 'file://meetings.example.com/cal#m1', 'file://meetings.example.com/cal#m1'],
./tests/unit/uri-test.js:50 =>       testData.map(data => {
./tests/unit/uri-test.js:59 =>       testData.map(data => {
./node_modules/assert/assert.js:348 =>   //~~~cheap key test
./node_modules/assert/assert.js:354 =>   //~~~possibly expensive deep test
./node_modules/assert/assert.js:363 => // 8. The non-equivalence assertion tests for any deep inequality.
./node_modules/assert/assert.js:380 => // 9. The strict equality assertion tests strict equality, as determined by ===.
./node_modules/assert/assert.js:389 => // 10. The strict non-equality assertion tests for strict inequality, as
./node_modules/assert/assert.js:404 =>     return expected.test(actual);
./node_modules/assert/test.js:229 =>     test('assert.ifError', function () {
./node_modules/assert/test.js:230 =>       assert.throws(function() {assert.ifError(new Error('test error'))});
./node_modules/assert/test.js:235 =>     test('assert - make sure that validating using constructor really works', function () {
./node_modules/assert/test.js:250 =>     test('assert -  use a RegExp to validate error message', function () {
./node_modules/assert/test.js:251 =>       assert.throws(makeBlock(thrower, TypeError), /test/);
./node_modules/assert/test.js:254 =>     test('assert - se a fn to validate error object', function () {
./node_modules/assert/test.js:256 =>         if ((err instanceof TypeError) && /test/.test(err)) {
./node_modules/assert/test.js:262 =>     test('assert - Make sure deepEqual doesn\'t loop forever on circular refs', function () {
./node_modules/assert/test.js:279 =>     test('assert - Ensure reflexivity of deepEqual with `arguments` objects', function() {
./node_modules/assert/test.js:285 =>     test('assert - test assertion message', function () {
./node_modules/assert/test.js:286 =>       function testAssertionMessage(actual, expected) {
./node_modules/assert/test.js:294 =>       testAssertionMessage(undefined, 'undefined');
./node_modules/assert/test.js:295 =>       testAssertionMessage(null, 'null');
./node_modules/assert/test.js:296 =>       testAssertionMessage(true, 'true');
./node_modules/assert/test.js:297 =>       testAssertionMessage(false, 'false');
./node_modules/assert/test.js:298 =>       testAssertionMessage(0, '0');
./node_modules/assert/test.js:299 =>       testAssertionMessage(100, '100');
./node_modules/assert/test.js:300 =>       testAssertionMessage(NaN, 'NaN');
./node_modules/assert/test.js:301 =>       testAssertionMessage(Infinity, 'Infinity');
./node_modules/assert/test.js:302 =>       testAssertionMessage(-Infinity, '-Infinity');
./node_modules/assert/test.js:303 =>       testAssertionMessage('', '""');
./node_modules/assert/test.js:304 =>       testAssertionMessage('foo', '\'foo\'');
./node_modules/assert/test.js:305 =>       testAssertionMessage([], '[]');
./node_modules/assert/test.js:306 =>       testAssertionMessage([1, 2, 3], '[ 1, 2, 3 ]');
./node_modules/assert/test.js:307 =>       testAssertionMessage(new Buffer([1, 2, 3]), '<Buffer 01 02 03>');
./node_modules/assert/test.js:310 =>         testAssertionMessage(new Uint8Array([1, 2, 3]), '{ \'0\': 1, \'1\': 2, \'2\': 3 }');
./node_modules/assert/test.js:312 =>       testAssertionMessage(/a/, '/a/');
./node_modules/assert/test.js:313 =>       testAssertionMessage(function f() {}, '[Function: f]');
./node_modules/assert/test.js:314 =>       testAssertionMessage({}, '{}');
./node_modules/assert/test.js:315 =>       testAssertionMessage({a: undefined, b: null}, '{ a: undefined, b: null }');
./node_modules/assert/test.js:316 =>       testAssertionMessage({a: NaN, b: Infinity, c: -Infinity},
./node_modules/assert/test.js:320 =>     test('assert - regressions from node.js testcase', function () {
./node_modules/async/README.md:364 => Returns a new array of all the values in `arr` which pass an async truth test.
./node_modules/async/README.md:367 => way node libraries work with truth tests like `fs.exists`. This operation is
./node_modules/async/README.md:374 => * `iterator(item, callback)` - A truth test to apply to each item in `arr`.
./node_modules/async/README.md:405 => The opposite of [`filter`](#filter). Removes values that pass an `async` truth test.
./node_modules/async/README.md:473 => Returns the first value in `arr` that passes an async truth test. The
./node_modules/async/README.md:476 => the first item in the original `arr` (in terms of order) that passes the test.
./node_modules/async/README.md:483 => * `iterator(item, callback)` - A truth test to apply to each item in `arr`.
./node_modules/async/README.md:488 =>   the first item in the array that passes the truth test (iterator) or the
./node_modules/async/README.md:506 => terms of array order) that passes the truth test.
./node_modules/aws4/aws4.js:304 =>   if (/[^0-9A-Za-z!'()*\-._~%/]/.test(path)) {
./node_modules/aws4/README.md:248 => {"_links":{"curie":[{"href":"http://docs.aws.amazon.com/appstream/latest/...
./node_modules/aws4/README.md:458 => [http.request](http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback)
./node_modules/aws4/README.md:500 => with [IAM STS temporary credentials](http://docs.aws.amazon.com/STS/latest/UsingSTS/using-temp-creds.html).
./node_modules/babel-types/README.md:542 => t.doWhileStatement(test, body)
./node_modules/babel-types/README.md:549 =>  - `test`: `Expression` (required)
./node_modules/babel-types/README.md:744 => t.forStatement(init, test, update, body)
./node_modules/babel-types/README.md:752 =>  - `test`: `Expression` (default: `null`)
./node_modules/babylon/CHANGELOG.md:256 => Prepare tests for multiple fixture runners. ([#240](https://github.com/babel/babylon/pull/240)) (Daniel Tschinder)
./node_modules/babylon/CHANGELOG.md:258 => Add some test coverage for decorators stage-0 plugin ([#250](https://github.com/babel/babylon/pull/250)) (Andrew Levine)
./node_modules/babylon/CHANGELOG.md:262 => Update eslint-config-babel to the latest version 🚀 ([#273](https://github.com/babel/babylon/pull/273)) (greenkeeper[bot])
./node_modules/babylon/CHANGELOG.md:335 =>  * Count Babel tests towards Babylon code coverage ([#182](https://github.com/babel/babylon/pull/182)) (Moti Zilberman)
./node_modules/babylon/CHANGELOG.md:351 => With that test case, there was a ~95ms savings by removing the need for node to build/traverse the dependency graph.
./node_modules/babylon/CHANGELOG.md:410 => Increase test coverage ([#175](https://github.com/babel/babylon/pull/175) (Moti Zilberman)
./node_modules/babylon/CHANGELOG.md:418 => Fixes two tests that are failing after the merge of #172 ([#177](https://github.com/babel/babylon/pull/177)) (Moti Zilberman)
./node_modules/browserify/changelog.markdown:267 => handles the colon better for drive paths and improves the test suite for windows
./node_modules/browserify/changelog.markdown:389 => uses the new buffer@3.0.0, which passes node's own buffer test suite
./node_modules/browserify/changelog.markdown:438 => updates regexps that test for absolute and relative paths to work better on
./node_modules/browserify-rsa/test.js:53 => keys.forEach(testMessage);
./node_modules/buffer/README.md:206 => | Method | Operations | Accuracy | Sampled | Fastest |
./node_modules/buffer/README.md:244 => | Method | Operations | Accuracy | Sampled | Fastest |
./node_modules/buffer/README.md:292 => | Method | Operations | Accuracy | Sampled | Fastest |
./node_modules/buffer/README.md:345 => Then, to run tests in Node.js, run:
./node_modules/buffer/README.md:347 =>     npm run test-node
./node_modules/buffer/README.md:349 => To test locally in a browser, you can run:
./node_modules/buffer/README.md:351 =>     npm run test-browser-local
./node_modules/buffer/README.md:353 => This will print out a URL that you can then open in a browser to run the tests, using [Zuul](https://github.com/defunctzombie/zuul).
./node_modules/buffer/README.md:355 => To run automated browser tests using Saucelabs, ensure that your `SAUCE_USERNAME` and `SAUCE_ACCESS_KEY` environment variables are set, then run:
./node_modules/buffer/README.md:357 =>     npm test
./node_modules/buffer/README.md:367 => To test that the code conforms to the style, `npm install` and run:
./node_modules/chai/History.md:204 =>   * Remove lib-cov from test-travisci dependents
./node_modules/chai/History.md:214 =>   * add failing test case
./node_modules/chai/History.md:223 =>   * Merge pull request #217 from demands/test_cleanup
./node_modules/chai/History.md:224 =>   * test: make it possible to run utilities tests with --watch
./node_modules/chai/History.md:227 =>   * test: add tests for throwing custom errors
./node_modules/chai/History.md:229 =>   * test: updated for the new assertion errors
./node_modules/chai/History.md:240 =>  * test: [sauce] add a few more browsers
./node_modules/chai/History.md:246 =>  * test: [sauce] use karma@canary to prevent timeouts
./node_modules/chai/History.md:248 =>  * test: [karma] use karma phantomjs runner
./node_modules/chai/History.md:256 =>   * test: [coveralls] add coveralls api integration. testing travis-ci integration
./node_modules/chai/History.md:295 =>   * Add test for different RegExp flags.
./node_modules/chai/History.md:296 =>   * Add test for regexp comparison.
./node_modules/chai/History.md:297 =>   * Downgrade mocha version for fix running Phantom tests.
./node_modules/chai/History.md:309 =>   * makefile: force browser build on browser-test
./node_modules/chai/History.md:313 =>   * test: [assert] deep equal ordering
./node_modules/chai/History.md:323 =>   * test: for ever err() there must be a passing version
./node_modules/chai/History.md:331 =>   * makefile: remove test-component for full test run
./node_modules/chai/History.md:332 =>   * pkg: script test now runs make test so travis will test browser
./node_modules/chai/History.md:334 =>   * tests: refactor some tests to support new objDisplay output
./node_modules/chai/History.md:335 =>   * test: [bootstrap] normalize boostrap across all test scenarios
./node_modules/chai/History.md:344 =>   * test: [expect] add arguments type detection test
./node_modules/chai/History.md:350 =>   * makefile: refactor for fine grain control of testing scenarios
./node_modules/chai/History.md:351 =>   * test: add mochaPhantomJS support and component test file
./node_modules/chai/History.md:352 =>   * deps: add component and mocha-phantomjs for browser testing
./node_modules/chai/History.md:356 =>   * test: [Assertion] configruable showDiff flag. Closes #132
./node_modules/chai/History.md:361 =>   * support: add mocha cloud runner, client, and html test page
./node_modules/chai/History.md:362 =>   * test: [saucelabs] add auth placeholder
./node_modules/chai/History.md:366 =>   * Fix issue #137, test message existence by using message!=null rather than using message
./node_modules/chai/History.md:369 =>   * Functions throwing strings can reliably be tested.
./node_modules/chai/History.md:385 =>   * test: [display] array test for mocha object diff
./node_modules/chai/History.md:392 =>   * test: [expect] type null. #122
./node_modules/chai/History.md:402 =>   * convert tests to use new bootstrap
./node_modules/chai/History.md:403 =>   * refactor testing bootstrap
./node_modules/chai/ReleaseNotes.md:201 => and does not impact existing test code.
./node_modules/chai/ReleaseNotes.md:227 => - [#297](https://github.com/chaijs/chai/pull/297) Allow writing lint-friendly tests. [@joshperry](https://github.com/joshperry)
./node_modules/chai/ReleaseNotes.md:229 => - [#300](https://github.com/chaijs/chai/pull/300) Fix #299: the test is defining global variables [@julienw](https://github.com/julienw)
./node_modules/chai/ReleaseNotes.md:356 => - [#217](https://github.com/chaijs/chai/pull/217) Chai tests can be run with `--watch`. [@demands](https://github.com/demands)
./node_modules/chai/ReleaseNotes.md:370 => - [#237](https://github.com/chaijs/chai/pull/237) Remove coveralls/jscoverage, include istanbul coverage report in travis test.
./node_modules/chai/chai.js:307 =>    * do not provide testing capabilities unless they
./node_modules/chai/chai.js:429 =>    *     expect('test').to.be.a('string');
./node_modules/chokidar/index.js:345 =>   if (this.options.atomic && dotRe.test(path)) return true;
./node_modules/color-convert/color-convert-0.2.0.js:401 =>         return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
./node_modules/commander/index.js:587 =>     } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {
./node_modules/commander/Readme.md:310 =>   .option('-T, --no-tests', 'ignore test hook')
./node_modules/core-js/CHANGELOG.md:141 => - added little fix for [`Date#toString`](https://github.com/zloirock/core-js#ecmascript-6-date) - `new Date(NaN).toString()` [should be `'Invalid Date'`](http://www.ecma-international.org/ecma-262/6.0/#sec-todatestring)
./node_modules/diff/diff.js:294 =>       return left === right || (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));
./node_modules/diff/diff.js:427 =>         if (!(/\n$/.test(current.value)) && (isLast || isLastOfType)) {
./node_modules/extsprintf/Makefile.targ:277 => # The default "test" target does nothing. This should usually be overridden by
./node_modules/extsprintf/Makefile.targ:279 => # requiring the repo to define "test".
./node_modules/extsprintf/Makefile.targ:281 => .PHONY: test
./node_modules/extsprintf/Makefile.targ:282 => test:
./node_modules/extsprintf/Makefile.targ:285 => prepush: check test
./node_modules/glob/glob.js:439 =>   // now test all matched entries as stand-ins for that part
./node_modules/glob/glob.js:641 =>   // test without the globstar, and with every child both below
./node_modules/glob/sync.js:357 =>   // test without the globstar, and with every child both below
./node_modules/glob/sync.js:400 =>     var trail = /[\/\\]$/.test(prefix)
./node_modules/glob/README.md:352 => Any change to behavior (including bugfixes) must come with a test.
./node_modules/glob/README.md:354 => Patches that fail tests or reduce performance will be rejected.
./node_modules/glob/README.md:357 => # to run tests
./node_modules/glob/README.md:358 => npm test
./node_modules/glob/README.md:360 => # to re-generate test fixtures
./node_modules/glob/README.md:361 => npm run test-regen
./node_modules/hoek/README.md:473 => First checks if `process.env.NODE_ENV === 'test'`, and if so, throws error message. Otherwise,
./node_modules/hoek/README.md:487 => [ 'null (/Users/user/Desktop/hoek/test.js:4:18)',
./node_modules/hoek/README.md:505 => [ [ '/Users/user/Desktop/hoek/test.js', 4, 18, null, false ],
./node_modules/http-signature/http_signing.md:234 => The following test data uses the RSA (1024b) keys, which we will refer
./node_modules/is-my-json-valid/index.js:304 =>         return '!'+patterns(p)+'.test('+keys+'['+i+'])'
./node_modules/is-my-json-valid/index.js:379 =>         validate('if (%s.test(%s)) {', p, keys+'['+i+']')
./node_modules/is-my-json-valid/index.js:391 =>       validate('if (!(%s.test(%s))) {', p, name)
./node_modules/json-schema/draft-zyp-json-schema-04.xml:258 => 					be found at <eref target="http://json-schema.org/schema">http://json-schema.org/schema</eref> for the latest version or 
./node_modules/json-schema/draft-zyp-json-schema-03.xml:261 => 					be found at <eref target="http://json-schema.org/schema">http://json-schema.org/schema</eref> for the latest version or 
./node_modules/json3/README.md:148 => If you'd like to contribute a feature or bug fix, you can [fork](http://help.github.com/fork-a-repo/) JSON 3, commit your changes, and [send a pull request](http://help.github.com/send-pull-requests/). Please make sure to update the unit tests in the `test` directory as well.
./node_modules/jsonld/README.md:285 => This library includes a sample testing utility which may be used to verify
./node_modules/jsonld/README.md:288 => The main test suites are included in external repositories. Check out each of
./node_modules/jsonld/README.md:295 => all tests with a simple command:
./node_modules/jsonld/README.md:297 =>     make test
./node_modules/jsonld/README.md:299 => If you installed the test suites elsewhere:
./node_modules/jsonld/README.md:301 =>     make test-suite JSONLD_TEST_SUITE={PATH_TO_TEST_SUITE}
./node_modules/jsonld/README.md:303 => See the `Makefile` for various individual test targets as well as split node
./node_modules/jsonld/README.md:304 => and browser targets. For instance, the json-ld.org test suite can be run
./node_modules/jsonld/README.md:307 =>     make test-node
./node_modules/jsonld/README.md:308 =>     make test-browser
./node_modules/jsonld/README.md:310 => Code coverage of node tests can be generated in `coverage/`:
./node_modules/jsonld/README.md:312 =>     make test-coverage
./node_modules/jsonld/README.md:316 =>     make test REPORTER=dot
./node_modules/jsonld/README.md:318 => Remote context tests are also available:
./node_modules/jsonld/README.md:321 =>     node tests/remote-context-server.js
./node_modules/jsonld/README.md:323 =>     make test-suite JSONLD_TEST_SUITE=./tests
./node_modules/jsonld/README.md:328 =>     ./node_modules/.bin/mocha -R spec tests/test.js --earl earl-node.jsonld
./node_modules/jsonld/README.md:331 =>     ./node_modules/.bin/phantomjs tests/test.js --earl earl-browser.jsonld
./node_modules/lodash.bind/index.js:354 =>   return pattern.test(toSource(value));
./node_modules/lodash/core.min.js:25 => },o.escape=function(n){return(n=W(n))&&en.test(n)?n.replace(rn,fn):n},o.every=function(n,t,r){return t=r?nn:t,f(n,g(t))},o.find=An,o.forEach=C,o.has=function(n,t){return null!=n&&pn.call(n,t)},o.head=P,o.identity=Y,o.indexOf=z,o.isArguments=n,o.isArray=Nn,o.isBoolean=function(n){return true===n||false===n||K(n)&&"[object Boolean]"==hn.call(n)},o.isDate=function(n){return K(n)&&"[object Date]"==hn.call(n)},o.isEmpty=function(t){return U(t)&&(Nn(t)||Q(t)||V(t.splice)||n(t))?!t.length:!_n(t).length},o.isEqual=function(n,t){
./node_modules/lodash/core.min.js:28 => var t=(/^(?:replace|split)$/.test(n)?String.prototype:an)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:pop|join|replace|shift)$/.test(n);o.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(Nn(u)?u:[],n)}return this[r](function(r){return t.apply(Nn(r)?r:[],n)})}}),o.prototype.toJSON=o.prototype.valueOf=o.prototype.value=function(){return w(this.__wrapped__,this.__actions__)},typeof define=="function"&&typeof define.amd=="object"&&define.amd?(on._=o,
./node_modules/micromatch/README.md:617 => ### Running tests
./node_modules/micromatch/README.md:622 => $ npm install -d && npm test
./node_modules/micromatch/README.md:644 => * [braces](https://www.npmjs.com/package/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://github.com/jonschlinkert/braces) | [homepage](https://github.com/jonschlinkert/braces "Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.")
./node_modules/mocha/CHANGELOG.md:165 => - [#2286]: Fix `after()` failing to execute if test skipped using `this.skip()` in `beforeEach()`; no longer marks the entire suite as "pending". ([@dasilvacontin], [@boneskull])
./node_modules/mocha/CHANGELOG.md:168 => - [#2307]: Fix `doc` reporter crashing when test fails. ([@jleyba])
./node_modules/mocha/CHANGELOG.md:172 => - [#1813]: Ensure Mocha's own test suite will run in Windows. ([@tswaters], [@TimothyGu], [@boneskull])
./node_modules/mocha/CHANGELOG.md:177 => - [#2401]: Remove carriage return before each test line in spec reporter. ([@Munter])
./node_modules/mocha/CHANGELOG.md:257 => > We now run unit tests against PhantomJS v1.x and an assortment of browsers on [SauceLabs](https://saucelabs.com), including:
./node_modules/mocha/CHANGELOG.md:259 => > - Chrome (latest)
./node_modules/mocha/CHANGELOG.md:260 => > - Firefox (latest)
./node_modules/mocha/CHANGELOG.md:261 => > - Safari (latest)
./node_modules/mocha/CHANGELOG.md:262 => > - Microsoft Edge (latest)
./node_modules/mocha/CHANGELOG.md:264 => > To accomplish this, we now run Mocha's unit tests (and a handful of integration tests) via [Karma](https://npmjs.com/package/karma) and a modified [karma-mocha](https://npmjs.com/package/karma-mocha).  Along the way, we had to solve issue [#880] (apologies to @mderijcke and @sukima who had PRs addressing this), as well as replace most usages of [should](https://npmjs.com/package/should) with [expect.js](https://npmjs.com/package/expect.js) for IE8.
./node_modules/mocha/CHANGELOG.md:266 => > Going forward, when sending PRs, your code will *only* run against PhantomJS v1.x (and not hit SauceLabs) [because security](https://docs.travis-ci.com/user/pull-requests/#Security-Restrictions-when-testing-Pull-Requests).
./node_modules/module-deps/index.js:471 =>     if (/\.json$/.test(file)) return [];
./node_modules/n3/README.md:347 => **Blank nodes** start with `_:`, and can be tested for as follows:
./node_modules/n3/README.md:354 => **Prefixed names** can be tested and expanded:
./node_modules/n3/README.md:406 => [![Browser Build Status](https://ci.testling.com/RubenVerborgh/N3.js.png)](https://ci.testling.com/RubenVerborgh/N3.js)
./node_modules/mocha/mocha.js:569 =>   this.test = this._runnable = runnable;
./node_modules/mocha/mocha.js:574 =>  * Set test timeout `ms`.
./node_modules/mocha/mocha.js:589 =>  * Set test timeout `enabled`.
./node_modules/mocha/mocha.js:601 =>  * Set test slowness threshold `ms`.
./node_modules/mocha/mocha.js:613 =>  * Mark a test as skipped.
./node_modules/mocha/mocha.js:624 =>  * Allow a number of retries on failed tests
./node_modules/mocha/mocha.js:646 =>     return key === 'runnable' || key === 'test' ? undefined : val;
./node_modules/mocha/mocha.js:684 =>  * Get or set the test `err`.
./node_modules/mocha/mocha.js:707 => var Test = require('../test');
./node_modules/mocha/mocha.js:740 =>      * and/or tests.
./node_modules/mocha/mocha.js:776 =>      * Describe a specification or test-case
./node_modules/path-platform/path.js:316 =>   if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
./node_modules/path-platform/path.js:320 =>   } else if (/^\\\\[^?.]/.test(resolvedPath)) {
./node_modules/path-parse/test.min.js:1 => var assert=require("assert");var pathParse=require("./index");var winParseTests=[[{root:"C:\\",dir:"C:\\path\\dir",base:"index.html",ext:".html",name:"index"},"C:\\path\\dir\\index.html"],[{root:"C:\\",dir:"C:\\another_path\\DIR\\1\\2\\33",base:"index",ext:"",name:"index"},"C:\\another_path\\DIR\\1\\2\\33\\index"],[{root:"",dir:"another_path\\DIR with spaces\\1\\2\\33",base:"index",ext:"",name:"index"},"another_path\\DIR with spaces\\1\\2\\33\\index"],[{root:"\\",dir:"\\foo",base:"C:",ext:"",name:"C:"},"\\foo\\C:"],[{root:"",dir:"",base:"file",ext:"",name:"file"},"file"],[{root:"",dir:".",base:"file",ext:"",name:"file"},".\\file"],[{root:"\\\\server\\share\\",dir:"\\\\server\\share\\",base:"file_path",ext:"",name:"file_path"},"\\\\server\\share\\file_path"],[{root:"\\\\server two\\shared folder\\",dir:"\\\\server two\\shared folder\\",base:"file path.zip",ext:".zip",name:"file path"},"\\\\server two\\shared folder\\file path.zip"],[{root:"\\\\teela\\admin$\\",dir:"\\\\teela\\admin$\\",base:"system32",ext:"",name:"system32"},"\\\\teela\\admin$\\system32"],[{root:"\\\\?\\UNC\\",dir:"\\\\?\\UNC\\server",base:"share",ext:"",name:"share"},"\\\\?\\UNC\\server\\share"]];var winSpecialCaseFormatTests=[[{dir:"some\\dir"},"some\\dir\\"],[{base:"index.html"},"index.html"],[{},""]];var unixParseTests=[[{root:"/",dir:"/home/user/dir",base:"file.txt",ext:".txt",name:"file"},"/home/user/dir/file.txt"],[{root:"/",dir:"/home/user/a dir",base:"another File.zip",ext:".zip",name:"another File"},"/home/user/a dir/another File.zip"],[{root:"/",dir:"/home/user/a dir/",base:"another&File.",ext:".",name:"another&File"},"/home/user/a dir//another&File."],[{root:"/",dir:"/home/user/a$$$dir/",base:"another File.zip",ext:".zip",name:"another File"},"/home/user/a$$$dir//another File.zip"],[{root:"",dir:"user/dir",base:"another File.zip",ext:".zip",name:"another File"},"user/dir/another File.zip"],[{root:"",dir:"",base:"file",ext:"",name:"file"},"file"],[{root:"",dir:"",base:".\\file",ext:"",name:".\\file"},".\\file"],[{root:"",dir:".",base:"file",ext:"",name:"file"},"./file"],[{root:"",dir:"",base:"C:\\foo",ext:"",name:"C:\\foo"},"C:\\foo"]];var unixSpecialCaseFormatTests=[[{dir:"some/dir"},"some/dir/"],[{base:"index.html"},"index.html"],[{},""]];var errors=[{input:null,message:/Parameter 'pathString' must be a string, not/},{input:{},message:/Parameter 'pathString' must be a string, not object/},{input:true,message:/Parameter 'pathString' must be a string, not boolean/},{input:1,message:/Parameter 'pathString' must be a string, not number/},{input:undefined,message:/Parameter 'pathString' must be a string, not undefined/},];checkParseFormat(pathParse.win32,winParseTests);checkParseFormat(pathParse.posix,unixParseTests);checkErrors(pathParse.win32);checkErrors(pathParse.posix);function checkErrors(a){errors.forEach(function(c){try{a(c.input)}catch(b){assert.ok(b instanceof TypeError);assert.ok(c.message.test(b.message),"expected "+c.message+" to match "+b.message);return}assert.fail("should have thrown")})}function checkParseFormat(b,a){a.forEach(function(c){assert.deepEqual(b(c[1]),c[0])})};
./node_modules/punycode/punycode.js:455 => 			return regexPunycode.test(string)
./node_modules/punycode/punycode.js:474 => 			return regexNonASCII.test(string)
./node_modules/readdirp/README.md:229 => ## tests
./node_modules/readdirp/README.md:231 => The [readdirp tests](https://github.com/thlorenz/readdirp/blob/master/test/readdirp.js) also will give you a good idea on
./node_modules/regenerate/README.md:265 => regex.test('𝌆');
./node_modules/regenerate/README.md:267 => regex.test('A');
./node_modules/regenerate/README.md:328 => ## Unit tests & code coverage
./node_modules/regenerate/README.md:330 => After cloning this repository, run `npm install` to install the dependencies needed for Regenerate development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.
./node_modules/regenerate/README.md:332 => Once that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use `grunt test`.
./node_modules/request/CHANGELOG.md:117 => - [#1860](https://github.com/request/request/pull/1860) Improve referer header tests and docs (@simov)
./node_modules/request/CHANGELOG.md:121 => - [#1847](https://github.com/request/request/pull/1847) Use node's latest version when building (@simov)
./node_modules/request/CHANGELOG.md:172 => - [#1671](https://github.com/request/request/pull/1671) Add tests and docs for using the agent, agentClass, agentOptions and forever options. Forever option defaults to using http(s).Agent in node 0.12+ (@simov)
./node_modules/source-map-support/README.md:246 =>   * http://127.0.0.1:1336/browserify-test - **Currently not working** due to a bug with browserify (see [pull request #66](https://github.com/evanw/node-source-map-support/pull/66) for details).
./node_modules/source-map-support/README.md:247 => * For `header-test`, run `server.js` inside that directory and visit http://127.0.0.1:1337/
./node_modules/source-map-support/source-map-support.js:314 =>     object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];
./node_modules/source-map-support/source-map-support.js:508 =>     // to support other uncaught exception handlers (in test frameworks, for
./node_modules/source-map-support/test.js:279 =>     'throw new Error("test");'
./node_modules/source-map-support/test.js:281 =>     'Error: test',
./node_modules/source-map-support/test.js:282 =>     /^    at Object\.exports\.test \((?:.*\/)?.generated.js:1:34\)$/
./node_modules/source-map-support/test.js:288 =>     'throw new Error("test");'
./node_modules/source-map-support/test.js:290 =>     'Error: test',
./node_modules/source-map-support/test.js:291 =>     /^    at Object\.exports\.test \((?:.*\/)?original.js:1001:5\)$/
./node_modules/source-map-support/test.js:298 =>     'throw new Error("test");'
./node_modules/source-map-support/test.js:300 =>     'Error: test',
./node_modules/source-map-support/test.js:301 =>     /^    at Object\.exports\.test \((?:.*\/)?original.js:1002:5\)$/
./node_modules/source-map-support/test.js:426 =>     '    if (/\\.generated.js$/.test(name)) count++;',
./node_modules/source-map-support/test.js:451 =>     '    if (/\\.generated.js$/.test(name)) count++;',
./node_modules/source-map-support/test.js:457 =>     '    if (/\\.generated.js$/.test(name)) {',
./node_modules/source-map-support/test.js:512 => /* The following test duplicates some of the code in
./node_modules/source-map-support/test.js:518 =>   var source = [ 'throw new Error("test");' ];
./node_modules/source-map-support/test.js:520 =>     'Error: test',
./node_modules/source-map/README.md:439 =>   running tests, if possible.
./node_modules/sshpk/README.md:486 =>  - `when` -- optional Date, if specified, tests whether the Certificate was or
./node_modules/sshpk/README.md:504 => certificate. Also tests that the issuer Identity of this Certificate and the
./node_modules/tough-cookie/README.md:190 => Otherwise, `expiryTime()` returns `Infinity` and `expiryDate()` returns a `Date` object for "Tue, 19 Jan 2038 03:14:07 GMT" (latest date that can be expressed by a 32-bit `time_t`; the common limit for most user-agents).
./node_modules/tweetnacl/README.md:336 => pseudorandom number generator and typed arrays, including the latest versions
./node_modules/tweetnacl/README.md:349 => Development and testing
./node_modules/tweetnacl/README.md:365 => To run tests in Node.js:
./node_modules/tweetnacl/README.md:367 =>     $ npm run test-node
./node_modules/tweetnacl/README.md:369 => By default all tests described here work on `nacl.min.js`. To test other
./node_modules/tweetnacl/README.md:370 => versions, set environment variable `NACL_SRC` to the file name you want to test.
./node_modules/tweetnacl/README.md:371 => For example, the following command will test fast minified version:
./node_modules/tweetnacl/README.md:373 =>     $ NACL_SRC=nacl-fast.min.js npm run test-node
./node_modules/tweetnacl/README.md:375 => To run full suite of tests in Node.js, including comparing outputs of
./node_modules/tweetnacl/README.md:378 =>     $ npm run test-node-all
./node_modules/tweetnacl/README.md:380 => To prepare tests for browsers:
./node_modules/tweetnacl/README.md:382 =>     $ npm run build-test-browser
./node_modules/tweetnacl/README.md:384 => and then open `test/browser/test.html` (or `test/browser/test-fast.html`) to
./node_modules/tweetnacl/README.md:387 => To run headless browser tests with `tape-run` (powered by Electron):
./node_modules/tweetnacl/README.md:389 =>     $ npm run test-browser
./node_modules/tweetnacl/README.md:393 => To run tests in both Node and Electron:
./node_modules/tweetnacl/README.md:395 =>     $ npm test
./node_modules/tweetnacl/README.md:404 => To run benchmarks in a browser, open `test/benchmark/bench.html` (or
./node_modules/tweetnacl/README.md:405 => `test/benchmark/bench-fast.html`).
./node_modules/url/url.js:264 =>           // we test again with ASCII char only
./node_modules/url/test.js:461 =>   'dash-test://foo/bar': {
./node_modules/url/test.js:462 =>     'href': 'dash-test://foo/bar',
./node_modules/url/test.js:465 =>     'protocol': 'dash-test:',
./node_modules/url/test.js:471 =>   'dash-test:foo/bar': {
./node_modules/url/test.js:472 =>     'href': 'dash-test:foo/bar',
./node_modules/url/test.js:475 =>     'protocol': 'dash-test:',
./node_modules/url/test.js:480 =>   'dot.test://foo/bar': {
./node_modules/url/test.js:481 =>     'href': 'dot.test://foo/bar',
./node_modules/url/test.js:484 =>     'protocol': 'dot.test:',
./node_modules/url/test.js:490 =>   'dot.test:foo/bar': {
./node_modules/url/test.js:491 =>     'href': 'dot.test:foo/bar',
./node_modules/url/test.js:494 =>     'protocol': 'dot.test:',
./node_modules/url/test.js:499 =>   // IDNA tests
./node_modules/url/test.js:596 =>   //way to make it work in url.parse, I add the test to be explicit
./node_modules/verror/Makefile.targ:277 => # The default "test" target does nothing. This should usually be overridden by
./node_modules/verror/Makefile.targ:279 => # requiring the repo to define "test".
./node_modules/verror/Makefile.targ:281 => .PHONY: test
./node_modules/verror/Makefile.targ:282 => test:
./node_modules/verror/Makefile.targ:285 => prepush: check test
./node_modules/xmldom/sax.js:320 => //			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
./node_modules/xmldom/sax.js:464 => 	if(/^(?:script|textarea)$/i.test(tagName)){
./node_modules/xmldom/sax.js:467 => 		if(/[&<]/.test(text)){
./node_modules/xmldom/sax.js:468 => 			if(/^script$/i.test(tagName)){
./node_modules/xmldom/sax.js:469 => 				//if(!/\]\]>/.test(text)){
./node_modules/yargs/CHANGELOG.md:111 => - [d6edd98](https://github.com/bcoe/yargs/commit/d6edd9848826e7389ed1393858c45d03961365fd) in-prep for further refactoring, and a 3.x release I've shuffled some things around and gotten test-coverage to 100%. (@bcoe)
./node_modules/yargs/CHANGELOG.md:158 => - [ed5f6d3](https://github.com/bcoe/yargs/commit/ed5f6d33f57ad1086b11c91b51100f7c6c7fa8ee) Finished porting unit tests to Mocha. (@chevex)
./node_modules/yargs/README.md:614 => `{ _: [], token: '-my-token', '$0': 'node test' }`
./node_modules/yargs/index.js:481 => // exported for tests
./test/tc0007/manifest.ttl:330 =>    test:purpose "Tests if @resource overwrites both @href and @src correctly to set the URIref subject (due to @rev)";
./test/tc0007/manifest.ttl:331 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:332 => <test-cases/0042> dc:contributor "Ben Adida";
./test/tc0007/manifest.ttl:333 =>    dc:title "img[@src] test with omitted @about";
./test/tc0007/manifest.ttl:334 =>    a test:TestCase;
./test/tc0007/manifest.ttl:335 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:336 =>    test:classification test:required;
./test/tc0007/manifest.ttl:338 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4";
./test/tc0007/manifest.ttl:339 =>    test:informationResourceInput <test-cases/0042.html>;
./test/tc0007/manifest.ttl:340 =>    test:informationResourceResults <test-cases/0042.sparql>;
./test/tc0007/manifest.ttl:341 =>    test:purpose "Tests if a @src (in img element) correctly sets the URIref object (with omitted @about)";
./test/tc0007/manifest.ttl:342 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:343 => <test-cases/0046> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:345 =>    a test:TestCase;
./test/tc0007/manifest.ttl:346 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:347 =>    test:classification test:required;
./test/tc0007/manifest.ttl:348 =>    rdfatest:hostLanguage "xml1", "xhtml1";
./test/tc0007/manifest.ttl:349 =>    test:informationResourceInput <test-cases/0046.html>;
./test/tc0007/manifest.ttl:350 =>    test:informationResourceResults <test-cases/0046.sparql>;
./test/tc0007/manifest.ttl:351 =>    test:purpose "Tests @typeof with @rel present, no @href, @resource, or @about";
./test/tc0007/manifest.ttl:352 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:353 => <test-cases/0047> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:355 =>    a test:TestCase;
./test/tc0007/manifest.ttl:356 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:357 =>    test:classification test:required;
./test/tc0007/manifest.ttl:358 =>    rdfatest:hostLanguage "xml1", "xhtml1";
./test/tc0007/manifest.ttl:359 =>    test:informationResourceInput <test-cases/0047.html>;
./test/tc0007/manifest.ttl:360 =>    test:informationResourceResults <test-cases/0047.sparql>;
./test/tc0007/manifest.ttl:361 =>    test:purpose "Tests @typeof with @rel and @resource present, no @about";
./test/tc0007/manifest.ttl:362 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:363 => <test-cases/0048> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:365 =>    a test:TestCase;
./test/tc0007/manifest.ttl:366 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:367 =>    test:classification test:required;
./test/tc0007/manifest.ttl:368 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:369 =>    test:informationResourceInput <test-cases/0048.html>;
./test/tc0007/manifest.ttl:370 =>    test:informationResourceResults <test-cases/0048.sparql>;
./test/tc0007/manifest.ttl:371 =>    test:purpose "Tests @typeof with @about and @rel present, no @resource";
./test/tc0007/manifest.ttl:372 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:373 => <test-cases/0049> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:375 =>    a test:TestCase;
./test/tc0007/manifest.ttl:376 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:377 =>    test:classification test:required;
./test/tc0007/manifest.ttl:378 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:379 =>    test:informationResourceInput <test-cases/0049.html>;
./test/tc0007/manifest.ttl:380 =>    test:informationResourceResults <test-cases/0049.sparql>;
./test/tc0007/manifest.ttl:381 =>    test:purpose "Tests @typeof with @about, no @rel or @resource";
./test/tc0007/manifest.ttl:382 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:383 => <test-cases/0050> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:385 =>    a test:TestCase;
./test/tc0007/manifest.ttl:386 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:387 =>    test:classification test:required;
./test/tc0007/manifest.ttl:388 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:389 =>    test:informationResourceInput <test-cases/0050.html>;
./test/tc0007/manifest.ttl:390 =>    test:informationResourceResults <test-cases/0050.sparql>;
./test/tc0007/manifest.ttl:391 =>    test:purpose "Tests @typeof without anything else";
./test/tc0007/manifest.ttl:392 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:393 => <test-cases/0051> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:395 =>    a test:TestCase;
./test/tc0007/manifest.ttl:396 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:397 =>    test:classification test:required;
./test/tc0007/manifest.ttl:398 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:399 =>    test:informationResourceInput <test-cases/0051.html>;
./test/tc0007/manifest.ttl:400 =>    test:informationResourceResults <test-cases/0051.sparql>;
./test/tc0007/manifest.ttl:401 =>    test:purpose "Tests @typeof with a single @property";
./test/tc0007/manifest.ttl:402 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:403 => <test-cases/0052> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:405 =>    a test:TestCase;
./test/tc0007/manifest.ttl:406 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:407 =>    test:classification test:required;
./test/tc0007/manifest.ttl:408 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:409 =>    test:informationResourceInput <test-cases/0052.html>;
./test/tc0007/manifest.ttl:410 =>    test:informationResourceResults <test-cases/0052.sparql>;
./test/tc0007/manifest.ttl:411 =>    test:purpose "Tests to ensure that @typeof does not apply to @resource";
./test/tc0007/manifest.ttl:412 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:413 => <test-cases/0053> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:415 =>    a test:TestCase;
./test/tc0007/manifest.ttl:416 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:417 =>    test:classification test:required;
./test/tc0007/manifest.ttl:418 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:419 =>    test:informationResourceInput <test-cases/0053.html>;
./test/tc0007/manifest.ttl:420 =>    test:informationResourceResults <test-cases/0053.sparql>;
./test/tc0007/manifest.ttl:421 =>    test:purpose "Tests to make sure that @typeof does not apply to @resource, but @resource sets the subject for the next triple to be generated";
./test/tc0007/manifest.ttl:422 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:423 => <test-cases/0054> dc:contributor "Fabien Gandon";
./test/tc0007/manifest.ttl:425 =>    a test:TestCase;
./test/tc0007/manifest.ttl:426 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:427 =>    test:classification test:required;
./test/tc0007/manifest.ttl:428 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:429 =>    test:informationResourceInput <test-cases/0054.html>;
./test/tc0007/manifest.ttl:430 =>    test:informationResourceResults <test-cases/0054.sparql>;
./test/tc0007/manifest.ttl:431 =>    test:purpose "Tests multiple @property separated by white spaces";
./test/tc0007/manifest.ttl:432 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:433 => <test-cases/0055> dc:contributor "Fabien Gandon";
./test/tc0007/manifest.ttl:435 =>    a test:TestCase;
./test/tc0007/manifest.ttl:436 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:437 =>    test:classification test:required;
./test/tc0007/manifest.ttl:438 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:439 =>    test:informationResourceInput <test-cases/0055.html>;
./test/tc0007/manifest.ttl:440 =>    test:informationResourceResults <test-cases/0055.sparql>;
./test/tc0007/manifest.ttl:441 =>    test:purpose "Tests multiple @rel separated by white spaces";
./test/tc0007/manifest.ttl:442 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:443 => <test-cases/0056> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:445 =>    a test:TestCase;
./test/tc0007/manifest.ttl:446 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:447 =>    test:classification test:required;
./test/tc0007/manifest.ttl:448 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:449 =>    test:informationResourceInput <test-cases/0056.html>;
./test/tc0007/manifest.ttl:450 =>    test:informationResourceResults <test-cases/0056.sparql>;
./test/tc0007/manifest.ttl:451 =>    test:purpose "Tests if @typeof applies to @about on same element with hanging @rel";
./test/tc0007/manifest.ttl:452 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:453 => <test-cases/0057> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:455 =>    a test:TestCase;
./test/tc0007/manifest.ttl:456 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:457 =>    test:classification test:required;
./test/tc0007/manifest.ttl:458 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:459 =>    test:informationResourceInput <test-cases/0057.html>;
./test/tc0007/manifest.ttl:460 =>    test:informationResourceResults <test-cases/0057.sparql>;
./test/tc0007/manifest.ttl:461 =>    test:purpose "Tests if hanging @rel creates multiple triples";
./test/tc0007/manifest.ttl:462 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:463 => <test-cases/0058> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:465 =>    a test:TestCase;
./test/tc0007/manifest.ttl:466 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:467 =>    test:classification test:required;
./test/tc0007/manifest.ttl:468 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:469 =>    test:informationResourceInput <test-cases/0058.html>;
./test/tc0007/manifest.ttl:470 =>    test:informationResourceResults <test-cases/0058.sparql>;
./test/tc0007/manifest.ttl:471 =>    test:purpose "Tests if hanging @rel creates multiple triples with @typeof permutation";
./test/tc0007/manifest.ttl:472 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:473 => <test-cases/0059> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:475 =>    a test:TestCase;
./test/tc0007/manifest.ttl:476 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:477 =>    test:classification test:required;
./test/tc0007/manifest.ttl:478 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:479 =>    test:informationResourceInput <test-cases/0059.html>;
./test/tc0007/manifest.ttl:480 =>    test:informationResourceResults <test-cases/0059.sparql>;
./test/tc0007/manifest.ttl:481 =>    test:purpose "Tests multiple hanging @rels with multiple children";
./test/tc0007/manifest.ttl:482 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:483 => <test-cases/0060> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:485 =>    a test:TestCase;
./test/tc0007/manifest.ttl:486 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:487 =>    test:classification test:required;
./test/tc0007/manifest.ttl:488 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:296 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0033.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:297 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0033.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:304 =>          dc:title "simple img[@src] test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:305 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0034.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:306 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0034.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:313 =>          dc:title "@src/@href test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:314 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0035.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:315 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0035.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:322 =>          dc:title "@src/@resource test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:323 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0036.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:324 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0036.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:331 =>          dc:title "@src/@href/@resource test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:332 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0037.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:333 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0037.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:340 =>          dc:title "@rev - img[@src] test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:341 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0038.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:342 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0038.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:349 =>          dc:title "@rev - @src/@href test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:350 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0039.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:351 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0039.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:358 =>          dc:title "@rev - @src/@resource test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:359 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0040.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:360 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0040.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:367 =>          dc:title "@rev - @src/@href/@resource test";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:368 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0041.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:369 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0041.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:376 =>          dc:title "img[@src] test with omitted @about";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:378 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0042.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:379 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0042.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:386 =>          dc:title "@src/@href test with omitted @about";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:387 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0043.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:388 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0043.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:395 =>          dc:title "@src/@resource test with omitted @about";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:396 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0044.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:397 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0044.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:404 =>          dc:title "@src/@href/@resource test with omitted @about";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:405 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0045.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:406 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0045.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:414 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0046.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:415 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0046.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:423 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0047.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:424 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0047.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:432 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0048.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:433 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0048.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:235 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0023.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:237 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:241 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0024">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:244 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0024.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:245 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0024.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:247 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:251 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0025">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:253 =>         <dc:title>simple chaining test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:254 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0025.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:255 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0025.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:257 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:261 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0026">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:264 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0026.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:265 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0026.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:267 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:271 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0027">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:274 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0027.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:275 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0027.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:277 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:281 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0028">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:284 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0028.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:285 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0028.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:287 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:291 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0029">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:294 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0029.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:295 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0029.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:297 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:301 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0030">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:304 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0030.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:305 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0030.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:307 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:311 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0031">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:314 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0031.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:315 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0031.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:317 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:321 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0032">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:324 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0032.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:325 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0032.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:327 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:331 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0033">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:333 =>         <dc:title>simple chaining test with bNode</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:334 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0033.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:335 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0033.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:337 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:341 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0034">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:343 =>         <dc:title>simple img[@src] test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:344 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0034.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:345 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0034.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:347 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0004/rdfcore/Manifest.rdf:6 => 		xmlns:test="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#"
./test/tc0004/rdfcore/Manifest.rdf:10 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/amp-in-url/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:12 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:13 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Sep/0326.html" />
./test/tc0004/rdfcore/Manifest.rdf:14 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:15 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:17 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:19 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:20 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/amp-in-url/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:21 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:23 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:24 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/amp-in-url/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:25 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:27 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:34 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes-intensional/Manifest.rdf#xsd-integer-decimal-compatible">
./test/tc0004/rdfcore/Manifest.rdf:36 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:37 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Sep/0093.html" />
./test/tc0004/rdfcore/Manifest.rdf:38 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:41 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:43 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:44 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:45 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:46 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:47 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#decimal" />
./test/tc0004/rdfcore/Manifest.rdf:49 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:50 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes-intensional/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:51 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:53 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:54 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:55 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:57 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:60 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes-intensional/Manifest.rdf#xsd-integer-string-incompatible">
./test/tc0004/rdfcore/Manifest.rdf:62 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:63 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Sep/0093.html" />
./test/tc0004/rdfcore/Manifest.rdf:64 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:67 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:69 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:70 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:71 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:72 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:73 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#string" />
./test/tc0004/rdfcore/Manifest.rdf:75 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:76 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes-intensional/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:77 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:79 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:80 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:81 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:83 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:91 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:93 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:94 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:95 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:97 => 	constructs under http://www.w3.org/2000/10/rdf-tests/rdfcore/ntriples/test.nt
./test/tc0004/rdfcore/Manifest.rdf:98 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:100 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:101 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:102 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:104 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:105 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:106 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:108 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:110 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:112 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:113 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:114 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:116 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:118 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:119 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:120 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:122 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:123 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:124 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:126 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:129 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#non-well-formed-literal-1">
./test/tc0004/rdfcore/Manifest.rdf:131 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:132 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:133 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:135 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:137 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:138 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:140 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:141 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:142 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:144 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:145 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:146 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:148 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:152 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#non-well-formed-literal-2">
./test/tc0004/rdfcore/Manifest.rdf:154 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:155 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:156 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:158 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:160 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:161 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:162 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:163 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:165 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:166 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:167 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:169 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:170 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test002b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:171 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:173 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:176 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#semantic-equivalence-within-type-1">
./test/tc0004/rdfcore/Manifest.rdf:178 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:179 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:180 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:182 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:184 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:185 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:186 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:188 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:189 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test003a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:190 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:192 =>    <test:conclusionDocument>
./node_modules/acorn/dist/walk.js:86 => function makeTest(test) {
./node_modules/acorn/dist/walk.js:87 =>   if (typeof test == "string") {
./node_modules/acorn/dist/walk.js:89 =>       return type == test;
./node_modules/acorn/dist/walk.js:91 =>   } else if (!test) {
./node_modules/acorn/dist/walk.js:96 =>     return test;
./node_modules/acorn/dist/walk.js:106 => function findNodeAt(node, start, end, test, base, state) {
./node_modules/acorn/dist/walk.js:107 =>   test = makeTest(test);
./node_modules/acorn/dist/walk.js:113 =>       if (test(type, node) && (start == null || node.start == start) && (end == null || node.end == end)) throw new Found(node, st);
./node_modules/acorn/dist/walk.js:122 => function findNodeAround(node, pos, test, base, state) {
./node_modules/acorn/dist/walk.js:123 =>   test = makeTest(test);
./node_modules/acorn/dist/walk.js:131 =>       if (test(type, node)) throw new Found(node, st);
./node_modules/acorn/dist/walk.js:140 => function findNodeAfter(node, pos, test, base, state) {
./node_modules/acorn/dist/walk.js:141 =>   test = makeTest(test);
./node_modules/acorn/dist/walk.js:148 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st);
./node_modules/acorn/dist/walk.js:158 => function findNodeBefore(node, pos, test, base, state) {
./node_modules/acorn/dist/walk.js:159 =>   test = makeTest(test);
./node_modules/acorn/dist/walk.js:165 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node)) max = new Found(node, st);
./node_modules/acorn/dist/walk.js:200 =>   c(node.test, st, "Expression");
./node_modules/acorn/dist/walk.js:216 =>     if (cs.test) c(cs.test, st, "Expression");
./node_modules/acorn/dist/walk.js:234 =>   c(node.test, st, "Expression");
./node_modules/acorn/dist/acorn_loose.js:147 =>     node.test = expr;
./node_modules/acorn/dist/acorn_loose.js:177 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression");
./node_modules/acorn/src/parseutil.js:16 => // Predicate that tests whether the next token is of the given
./node_modules/acorn/src/parseutil.js:51 =>     lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/acorn/src/expression.js:123 =>     node.test = expr
./node_modules/acorn/src/tokencontext.js:39 =>     return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/array-filter/test/filter.js:2 => var test = require('tape');
./node_modules/array-filter/test/filter.js:4 => test('filter', function(t) {
./node_modules/array-filter/test/holes.js:2 => var test = require('tape');
./node_modules/array-filter/test/holes.js:4 => test('skip over holes', function(t) {
./node_modules/array-map/test/map.js:2 => var test = require('tape');
./node_modules/array-map/test/map.js:4 => test('numbers -> letters', function (t) {
./node_modules/array-map/test/map.js:17 => test('elements and indexes', function (t) {
./node_modules/array-map/test/map.js:42 => test('ignore holes', function (t) {
./node_modules/array-map/test/map.js:54 => test('sparse map', function (t) {
./node_modules/acorn/src/statement.js:126 =>   node.test = this.parseParenExpression()
./node_modules/acorn/src/statement.js:176 =>   node.test = this.parseParenExpression()
./node_modules/acorn/src/statement.js:215 =>         cur.test = this.parseExpression()
./node_modules/acorn/src/statement.js:219 =>         cur.test = null
./dist/rdflib.js:1152 =>  *   === true    Use Uint8Array implementation (fastest)
./node_modules/array-reduce/test/reduce.js:2 => var test = require('tape');
./node_modules/array-reduce/test/reduce.js:4 => test('numeric reduces', function (t) {
./node_modules/array-reduce/test/reduce.js:36 => test('holes', function (t) {
./node_modules/array-reduce/test/reduce.js:62 => test('object', function (t) {
./node_modules/astw/test/json.js:2 => var test = require('tape');
./node_modules/astw/test/json.js:4 => test('json', function (t) {
./node_modules/astw/test/parent.js:2 => var test = require('tape');
./node_modules/astw/test/parent.js:9 => test('parent', function (t) {
./node_modules/acorn/src/tokenize.js:63 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/acorn/src/tokenize.js:179 =>     } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/acorn/src/tokenize.js:254 =>         lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/async/README.md:567 => Returns `true` if at least one element in the `arr` satisfies an async test.
./node_modules/async/README.md:570 => way node libraries work with truth tests like `fs.exists`. Once any iterator
./node_modules/async/README.md:576 => * `iterator(item, callback)` - A truth test to apply to each item in the array
./node_modules/async/README.md:581 =>   either `true` or `false` depending on the values of the async tests.
./node_modules/async/README.md:598 => Returns `true` if every element in `arr` satisfies an async test.
./node_modules/async/README.md:601 => way node libraries work with truth tests like `fs.exists`.
./node_modules/async/README.md:606 => * `iterator(item, callback)` - A truth test to apply to each item in the array
./node_modules/async/README.md:611 =>   the values of the async tests.
./node_modules/async/support/sync-package-managers.js:12 => var IGNORES = ['**/.*', 'node_modules', 'bower_components', 'test', 'tests'];
./node_modules/babel-code-frame/lib/index.js:107 =>     if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.substr(offset - 2, 2) == "</")) {
./node_modules/babel-code-frame/lib/index.js:116 =>   if (token.type === "punctuator" && BRACKET.test(token.value)) {
./node_modules/babel-core/lib/util.js:182 =>     return pattern.test(filename);
./node_modules/babel-generator/lib/buffer.js:76 =>     if (str === "\n") while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {
./node_modules/babel-generator/lib/printer.js:139 =>     this._endsWithInteger = (0, _isInteger2.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== ".";
./node_modules/babel-generator/lib/whitespace.js:77 =>   Whitespace.prototype._findToken = function _findToken(test, start, end) {
./node_modules/babel-generator/lib/whitespace.js:80 =>     var match = test(this.tokens[middle]);
./node_modules/babel-generator/lib/whitespace.js:82 =>       return this._findToken(test, middle + 1, end);
./node_modules/babel-generator/lib/whitespace.js:84 =>       return this._findToken(test, start, middle);
./node_modules/babel-plugin-transform-es2015-literals/lib/index.js:11 =>         if (node.extra && /^0[ob]/i.test(node.extra.raw)) {
./node_modules/babel-plugin-transform-es2015-literals/lib/index.js:18 =>         if (node.extra && /\\[u]/gi.test(node.extra.raw)) {
./node_modules/babel-traverse/lib/context.js:25 => var testing = process.env.NODE_ENV === "test";
./node_modules/babel-traverse/lib/context.js:143 =>       if (testing && queue.length >= 10000) {
./node_modules/babel-types/lib/converters.js:126 =>         exprs.push(t.conditionalExpression(node.test, consequent, alternate));
./node_modules/babel-types/lib/react.js:17 =>   return !!tagName && /^[a-z]|\-/.test(tagName);
./node_modules/babel-types/README.md:857 => t.ifStatement(test, consequent, alternate)
./node_modules/babel-types/README.md:864 =>  - `test`: `Expression` (required)
./node_modules/babylon/CHANGELOG.md:501 => Also run flow, linting, babel tests on seperate instances (add back node 0.10)
./node_modules/babylon/CHANGELOG.md:540 => const test = ({async = true}) => {};
./node_modules/base64-js/test/big-data.js:1 => var test = require('tape')
./node_modules/base64-js/test/big-data.js:4 => test('convert big data to base64', function (t) {
./node_modules/base64-js/test/url-safe.js:1 => var test = require('tape')
./node_modules/base64-js/test/url-safe.js:4 => test('decode url-safe style base64 strings', function (t) {
./node_modules/base64-js/test/convert.js:1 => var test = require('tape')
./node_modules/base64-js/test/convert.js:15 => test('convert to base64 and back', function (t) {
./node_modules/bn.js/test/arithmetic-test.js:171 =>   function testMethod (name, mul) {
./node_modules/bn.js/test/arithmetic-test.js:238 =>   testMethod('.mul()', function (x, y) {
./node_modules/bn.js/test/arithmetic-test.js:242 =>   testMethod('.mulf()', function (x, y) {
./node_modules/bn.js/test/red-test.js:7 =>   function testMethod (name, fn) {
./node_modules/bn.js/test/red-test.js:161 =>   testMethod('Plain', BN.red);
./node_modules/bn.js/test/red-test.js:162 =>   testMethod('Montgomery', BN.mont);
./node_modules/bn.js/test/binary-test.js:72 =>   describe('.testn()', function () {
./node_modules/bn.js/test/binary-test.js:73 =>     it('should support test specific bit', function () {
./node_modules/bn.js/test/binary-test.js:82 =>           assert.equal(bn.testn(i), true);
./node_modules/bn.js/test/binary-test.js:85 =>         // test off the end
./node_modules/bn.js/test/binary-test.js:86 =>         assert.equal(bn.testn(bl), false);
./node_modules/bn.js/test/binary-test.js:101 =>         assert.equal(x.testn(i), (xbits.charAt(i) === '1'), 'Failed @ bit ' + i);
./node_modules/bn.js/test/binary-test.js:107 =>       assert(!x.testn(128));
./node_modules/browser-pack/test/comment.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/comment.js:4 => test('trailing comment', function (t) {
./node_modules/browser-pack/test/not_found.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/not_found.js:5 => test('not found', function (t) {
./node_modules/browser-pack/test/order.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/order.js:4 => test('raw', function (t) {
./node_modules/browser-pack/test/empty.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/empty.js:5 => test('empty', function (t) {
./node_modules/browser-pack/test/empty.js:20 => test('empty with standalone', function (t) {
./node_modules/browser-pack/test/only_execute_entries.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/only_execute_entries.js:4 => test('raw', function (t) {
./node_modules/browser-pack/test/pack.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/pack.js:4 => test('pack', function (t) {
./node_modules/browser-pack/test/raw.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/raw.js:4 => test('raw', function (t) {
./node_modules/browser-pack/test/source-maps-existing.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/source-maps-existing.js:15 => test('pack one file with source file field and existing sourcemap', function (t) {
./node_modules/browserify/changelog.markdown:534 => and fixes the crypto tests
./node_modules/browserify/changelog.markdown:654 => test for --bare
./node_modules/browserify/changelog.markdown:678 => adds an untracked test
./node_modules/browser-pack/test/this.js:5 => var test = require('tap').test;
./node_modules/browser-pack/test/this.js:8 => test('this', function (t) {
./node_modules/browser-pack/test/source-maps.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/source-maps.js:27 => test('pack one file with source file field and one without', function (t) {
./node_modules/browser-pack/test/source-maps.js:41 =>         t.ok(/^\/\/# sourceMappingURL/.test(lastLine), 'contains source mapping url as last line');
./node_modules/browser-pack/test/source-maps.js:61 => test('pack two files with source file field', function (t) {
./node_modules/browser-pack/test/source-maps.js:75 =>         t.ok(/^\/\/# sourceMappingURL/.test(lastLine), 'contains source mapping url as last line');
./node_modules/browser-pack/test/source-maps.js:96 => test('pack two files without source file field', function (t) {
./node_modules/browser-pack/test/source-maps.js:108 =>         t.notOk(/^\/\/# sourceMappingURL/.test(lastLine), 'contains no source mapping url');
./node_modules/browser-pack/test/source-maps.js:125 => test('pack two files with source file field, one with nomap flag', function (t) {
./node_modules/browser-pack/test/source-maps.js:139 =>         t.ok(/^\/\/# sourceMappingURL/.test(lastLine), 'contains source mapping url as last line');
./node_modules/browser-pack/test/source-maps.js:162 => test('custom sourceMapPrefix for //@', function (t) {
./node_modules/browser-pack/test/source-maps.js:176 =>         t.ok(/^\/\/@ sourceMappingURL/.test(lastLine), 'contains source mapping url as last line');
./node_modules/browser-pack/test/unicode.js:1 => var test = require('tap').test;
./node_modules/browser-pack/test/unicode.js:4 => test('unicode', function (t) {
./node_modules/browserify/bin/args.js:175 =>             else if (/\*/.test(x)) {
./node_modules/browserify/bin/args.js:186 =>                 if (/^[\/.]/.test(x)) b.external(path.resolve(x), opts)
./node_modules/browserify/test/args.js:1 => var test = require('tap').test;
./node_modules/browserify/test/args.js:6 => test('bundle from an arguments array', function (t) {
./node_modules/browserify/test/args.js:18 => test('external flag for node modules', function(t) {
./node_modules/browserify/test/args.js:28 => test('bundle from an arguments with --insert-global-vars', function (t) {
./node_modules/browserify/test/args.js:49 => test('numeric module names', function(t) {
./node_modules/browserify/test/args.js:58 => test('entry expose', function (t) {
./node_modules/browserify/test/array.js:3 => var test = require('tap').test;
./node_modules/browserify/test/array.js:5 => test('array add', function (t) {
./node_modules/browserify/test/array.js:24 => test('array require', function (t) {
./node_modules/browserify/test/array.js:40 => test('array require opts', function (t) {
./node_modules/browserify/test/array.js:59 => test('array external', function (t) {
./node_modules/browserify/test/bare.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bare.js:7 => test('bare', function (t) {
./node_modules/browserify/test/bare.js:41 => test('bare inserts __filename,__dirname but not process,global,Buffer', function (t) {
./node_modules/browserify/test/backbone.js:4 => var test = require('tap').test;
./node_modules/browserify/test/backbone.js:6 => test('backbone', function (t) {
./node_modules/browserify/test/bare_shebang.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bare_shebang.js:7 => test('bare shebang', function (t) {
./node_modules/browserify/test/bin.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bin.js:6 => test('bin', function (t) {
./node_modules/browserify/test/bin_entry.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bin_entry.js:6 => test('bin --entry', function (t) {
./node_modules/browserify/test/bin_tr_error.js:3 => var test = require('tap').test;
./node_modules/browserify/test/bin_tr_error.js:6 => test('function transform', function (t) {
./node_modules/browserify/test/bom.js:3 => var test = require('tap').test;
./node_modules/browserify/test/bom.js:5 => test('byte order marker', function (t) {
./node_modules/browserify/test/bom.js:17 =>         t.notOk(/\ufeff/.test(src.toString('utf8')));
./node_modules/browserify/test/browser_field_file.js:1 => var test = require('tap').test;
./node_modules/browserify/test/browser_field_file.js:5 => test('browser field file no ext', function (t) {
./node_modules/browserify/test/bundle-bundle-external.js:2 => var test = require('tap').test;
./node_modules/browserify/test/bundle-bundle-external.js:13 => test('bundle bundle external', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:3 => var test = require('tap').test;
./node_modules/browserify/test/browser_field_resolve.js:5 => test('browser field resolve (a)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:15 => test('browser field resolve (b)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:25 => test('browser field resolve (c)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:36 => test('browser field resolve (d)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:46 => test('browser field resolve (e)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:56 => test('browser field resolve (f)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:66 => test('browser field resolve (g)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:76 => test('browser field resolve (h)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:86 => test('browser field resolve (i)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:96 => test('browser field resolve (j)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:106 => test('browser field resolve (k)', function (t) {
./node_modules/browserify/test/browser_field_resolve.js:116 => test('browser field resolve (l)', function (t) {
./node_modules/browserify/test/bundle-stream.js:2 => var test = require('tap').test;
./node_modules/browserify/test/bundle-stream.js:7 => test('bundle is readable stream', function (t) {
./node_modules/browserify/test/bundle_external.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bundle_external.js:5 => test('bundle external', function (t) {
./node_modules/browserify/test/buffer.js:2 => var test = require('tap').test;
./node_modules/browserify/test/buffer.js:5 => test('utf8 buffer to base64', function (t) {
./node_modules/browserify/test/buffer.js:20 => test('utf8 buffer to hex', function (t) {
./node_modules/browserify/test/buffer.js:34 => test('ascii buffer to base64', function (t) {
./node_modules/browserify/test/buffer.js:49 => test('ascii buffer to hex', function (t) {
./node_modules/browserify/test/buffer.js:63 => test('base64 buffer to utf8', function (t) {
./node_modules/browserify/test/buffer.js:77 => test('hex buffer to utf8', function (t) {
./node_modules/browserify/test/buffer.js:92 => test('base64 buffer to ascii', function (t) {
./node_modules/browserify/test/buffer.js:106 => test('hex buffer to ascii', function (t) {
./node_modules/browserify/test/buffer.js:120 => test('indexing a buffer', function (t) {
./node_modules/browserify/test/bundle.js:3 => var test = require('tap').test;
./node_modules/browserify/test/bundle.js:5 => test('bundle', function (t) {
./node_modules/browserify/test/bundle_external_global.js:1 => var test = require('tap').test;
./node_modules/browserify/test/bundle_external_global.js:6 => test('bundle external global', function (t) {
./node_modules/browserify/test/bundle_sourcemap.js:2 => var test = require('tap').test;
./node_modules/browserify/test/bundle_sourcemap.js:4 => test('bundle in debug mode', function (t) {
./node_modules/browserify/test/bundle_sourcemap.js:15 =>         t.ok(/^\/\/# sourceMappingURL=/.test(secondtolastLine), 'includes sourcemap');
./node_modules/browserify/test/bundle_sourcemap.js:19 => test('bundle in non debug mode', function (t) {
./node_modules/browserify/test/bundle_sourcemap.js:30 =>         t.notOk(/^\/\/# sourceMappingURL=/.test(secondtolastLine), 'includes no sourcemap');
./node_modules/browserify/test/catch.js:2 => var test = require('tap').test;
./node_modules/browserify/test/catch.js:4 => test('catch pipeline errors with a callback', function (t) {
./node_modules/browserify/test/catch.js:10 =>         t.ok(/no_such_file/.test(err));
./node_modules/browserify/test/catch.js:14 => test('catch pipeline errors with an event', function (t) {
./node_modules/browserify/test/catch.js:20 =>         t.ok(/no_such_file/.test(err));
./node_modules/browserify/test/circular.js:3 => var test = require('tap').test;
./node_modules/browserify/test/circular.js:5 => test('circular', function (t) {
./node_modules/browserify/test/circular.js:14 => test('circular expose', function (t) {
./node_modules/browserify/test/circular.js:25 => test('circular require', function (t) {
./node_modules/browserify/test/coffee_bin.js:1 => var test = require('tap').test;
./node_modules/browserify/test/coffee_bin.js:6 => test('compiling coffee with -c', function (t) {
./node_modules/browserify/test/coffeeify.js:1 => var test = require('tap').test;
./node_modules/browserify/test/coffeeify.js:5 => test('coffeeify with an implicit global', function (t) {
./node_modules/browserify/test/comment.js:3 => var test = require('tap').test;
./node_modules/browserify/test/comment.js:5 => test('trailing comment', function (t) {
./node_modules/browserify/test/crypto_ig.js:1 => var test = require('tap').test;
./node_modules/browserify/test/crypto_ig.js:10 => var tmpdir = temp.mkdirSync({prefix: 'browserify-test'});
./node_modules/browserify/test/crypto_ig.js:14 => test('crypto --insertGlobals', function (t) {
./node_modules/browserify/test/constants.js:2 => var test = require('tap').test;
./node_modules/browserify/test/constants.js:6 => test('constants', function (t) {
./node_modules/browserify/test/cycle.js:1 => var test = require('tap').test;
./node_modules/browserify/test/cycle.js:5 => test('cycle', function (t) {
./node_modules/browserify/test/dedupe-deps.js:2 => var test = require('tap').test;
./node_modules/browserify/test/dedupe-deps.js:4 => test('identical content gets deduped and the row gets an implicit dep on the original source', function (t) {
./node_modules/browserify/test/dedupe-deps.js:22 => test('identical content gets deduped with fullPaths', function (t) {
./node_modules/browserify/test/dedupe-deps.js:45 => test('identical content does not get deduped with dedupe option false', function (t) {
./node_modules/browserify/test/dedupe-nomap.js:2 => var test = require('tap').test;
./node_modules/browserify/test/dedupe-nomap.js:4 => test('identical content gets deduped and the row gets a "nomap" flag set when sourcemaps are turned on', function (t) {
./node_modules/browserify/test/dedupe-nomap.js:35 => test('identical content gets deduped and the row gets a "nomap" flag set when sourcemaps are turned off', function (t) {
./node_modules/browserify/test/dep.js:3 => var test = require('tap').test;
./node_modules/browserify/test/dep.js:5 => test('dependency events', function (t) {
./node_modules/browserify/test/debug_standalone.js:1 => var test = require('tap').test;
./node_modules/browserify/test/debug_standalone.js:6 => test('ordinary debug', function (t) {
./node_modules/browserify/test/debug_standalone.js:20 =>             .test(last)
./node_modules/browserify/test/debug_standalone.js:25 => test('debug standalone', function (t) {
./node_modules/browserify/test/debug_standalone.js:39 =>             .test(last)
./node_modules/browserify/test/debug_standalone.js:44 => test('debug standalone exposed', function (t) {
./node_modules/browserify/test/debug_standalone.js:58 =>             .test(last)
./node_modules/browserify/test/delay.js:3 => var test = require('tap').test;
./node_modules/browserify/test/delay.js:6 => test('delay for pipelines', function (t) {
./node_modules/browserify/test/dollar.js:3 => var test = require('tap').test;
./node_modules/browserify/test/dollar.js:5 => test('dollar', function (t) {
./node_modules/browserify/test/double_buffer.js:2 => var test = require('tap').test;
./node_modules/browserify/test/double_buffer.js:5 => test('double buffer', function (t) {
./node_modules/browserify/test/double_bundle_error.js:3 => var test = require('tap').test;
./node_modules/browserify/test/double_bundle_error.js:5 => test('double bundle error', function (t) {
./node_modules/browserify/test/double_bundle.js:3 => var test = require('tap').test;
./node_modules/browserify/test/double_bundle.js:5 => test('double bundle', function (t) {
./node_modules/browserify/test/double_bundle_parallel.js:3 => var test = require('tap').test;
./node_modules/browserify/test/double_bundle_parallel.js:5 => test('double bundle parallel', function (t) {
./node_modules/browserify/test/double_bundle_json.js:3 => var test = require('tap').test;
./node_modules/browserify/test/double_bundle_json.js:7 => test('double bundle json', function (t) {
./node_modules/browserify/test/double_bundle_parallel_cache.js:3 => var test = require('tap').test;
./node_modules/browserify/test/double_bundle_parallel_cache.js:5 => test('double bundle parallel cached', function (t) {
./node_modules/browserify/test/entry_exec.js:3 => var test = require('tap').test;
./node_modules/browserify/test/entry_exec.js:5 => test('only execute entry files', function (t) {
./node_modules/browserify/test/error_code.js:1 => var test = require('tap').test;
./node_modules/browserify/test/error_code.js:5 => test('error code', function (t) {
./node_modules/browserify/test/error_code.js:18 =>         t.ok(/^(Syntax|Parse)Error:/m.test(err));
./node_modules/browserify/test/export.js:3 => var test = require('tap').test;
./node_modules/browserify/test/export.js:5 => test('no exports when no files are loaded', function (t) {
./node_modules/browserify/test/export.js:15 => test('no exports when entries are defined', function (t) {
./node_modules/browserify/test/export.js:26 => test('require export when files are required', function (t) {
./node_modules/browserify/test/entry_expose.js:1 => var test = require('tap').test;
./node_modules/browserify/test/entry_expose.js:6 => test('entry expose', function (t) {
./node_modules/browserify/test/entry_relative.js:3 => var test = require('tap').test;
./node_modules/browserify/test/entry_relative.js:5 => test('entry - relative path', function (t) {
./node_modules/browserify/test/entry_relative.js:26 => test('entry - relative path via add', function (t) {
./node_modules/browserify/test/external.js:3 => var test = require('tap').test;
./node_modules/browserify/test/external.js:5 => test('external', function (t) {
./node_modules/browserify/test/external_shim.js:3 => var test = require('tap').test;
./node_modules/browserify/test/external_shim.js:5 => test('requiring a shimmed module name from an external bundle', function (t) {
./node_modules/browserify/test/externalize.js:1 => var test = require('tap').test;
./node_modules/browserify/test/externalize.js:10 => var tmpdir = temp.mkdirSync({prefix: 'browserify-test'});
./node_modules/browserify/test/externalize.js:27 => test('externalize bin', function (t) {
./node_modules/browserify/test/fake.js:3 => var test = require('tap').test;
./node_modules/browserify/test/fake.js:5 => test('fake', function (t) {
./node_modules/browserify/test/crypto.js:1 => var test = require('tap').test;
./node_modules/browserify/test/crypto.js:10 => var tmpdir = temp.mkdirSync({prefix: 'browserify-test'});
./node_modules/browserify/test/crypto.js:14 => test('*-browserify libs from node_modules/', function (t) {
./node_modules/browserify/test/five_bundle.js:3 => var test = require('tap').test;
./node_modules/browserify/test/five_bundle.js:5 => test('five bundle', function (t) {
./node_modules/browserify/test/field.js:4 => var test = require('tap').test;
./node_modules/browserify/test/field.js:6 => test('fieldString', function (t) {
./node_modules/browserify/test/field.js:23 => test('fieldObject', function (t) {
./node_modules/browserify/test/field.js:40 => test('missObject', function (t) {
./node_modules/browserify/test/field.js:57 => test('fieldSub', function (t) {
./node_modules/browserify/test/global_coffeeify.js:1 => var test = require('tap').test;
./node_modules/browserify/test/global_coffeeify.js:5 => test('coffeeify globally', function (t) {
./node_modules/browserify/test/glob.js:1 => var test = require('tap').test;
./node_modules/browserify/test/glob.js:7 => test('glob', function (t) {
./node_modules/browserify/test/entry.js:3 => var test = require('tap').test;
./node_modules/browserify/test/entry.js:5 => test('entry', function (t) {
./node_modules/browserify/test/entry.js:24 => test('entry via add', function (t) {
./node_modules/browserify/test/full_paths.js:3 => var test = require('tap').test;
./node_modules/browserify/test/full_paths.js:13 => test('fullPaths enabled', function (t) {
./node_modules/browserify/test/full_paths.js:28 => test('fullPaths disabled', function (t) {
./node_modules/browserify/test/full_paths.js:43 => test('fullPaths enabled, with custom exposed dependency name', function (t) {
./node_modules/browserify/test/global.js:3 => var test = require('tap').test;
./node_modules/browserify/test/global.js:5 => test('global', function (t) {
./node_modules/browserify/test/global.js:20 => test('__filename and __dirname with insertGlobals: true', function (t) {
./node_modules/browserify/test/global.js:38 => test('__filename and __dirname', function (t) {
./node_modules/browserify/test/global.js:52 => test('__filename and __dirname with basedir', function (t) {
./node_modules/browserify/test/global.js:66 => test('process.nextTick', function (t) {
./node_modules/browserify/test/global.js:77 => test('Buffer', function (t) {
./node_modules/browserify/test/hash_instance_context.js:3 => var test = require('tap').test;
./node_modules/browserify/test/hash_instance_context.js:5 => test('hash instances with hashed contexts', function (t) {
./node_modules/browserify/test/global_noparse.js:3 => var test = require('tap').test;
./node_modules/browserify/test/global_noparse.js:5 => test('global noparse module', function (t) {
./node_modules/browserify/test/global_noparse.js:24 => test('global noparse module file', function (t) {
./node_modules/browserify/test/global_noparse.js:43 => test('global noparse module deep file', function (t) {
./node_modules/browserify/test/global_noparse.js:62 => test('global noparse basedir', function (t) {
./node_modules/browserify/test/global_noparse.js:82 => test('global noparse function', function (t) {
./node_modules/browserify/test/identical.js:2 => var test = require('tap').test;
./node_modules/browserify/test/identical.js:5 => test('identical', function (t) {
./node_modules/browserify/test/identical_different.js:2 => var test = require('tap').test;
./node_modules/browserify/test/identical_different.js:5 => test('identical', function (t) {
./node_modules/browserify/test/hash.js:3 => var test = require('tap').test;
./node_modules/browserify/test/hash.js:5 => test('hash', function (t) {
./node_modules/browserify/test/file_event.js:3 => var test = require('tap').test;
./node_modules/browserify/test/file_event.js:6 => test('file event', function (t) {
./node_modules/browserify/test/ignore.js:2 => var test = require('tap').test;
./node_modules/browserify/test/ignore.js:5 => test('ignore', function (t) {
./node_modules/browserify/test/ignore.js:18 => test('ignore by package or id', function (t) {
./node_modules/browserify/test/ignore.js:33 => test('ignore files referenced by relative path', function (t) {
./node_modules/browserify/test/ignore.js:53 => test('do not ignore files with relative paths that do not resolve', function (t) {
./node_modules/browserify/test/ignore_missing.js:2 => var test = require('tap').test;
./node_modules/browserify/test/ignore_missing.js:4 => test('ignoreMissing option', function (t) {
./node_modules/browserify/test/ignore_missing.js:5 =>     t.test('on browserify', function(t) {
./node_modules/browserify/test/ignore_missing.js:18 =>     t.test('on .bundle', function(t) {
./node_modules/browserify/test/ignore_missing.js:30 =>     t.test('defaults to false', function (t) {
./node_modules/browserify/test/ignore_transform_key.js:2 => var test = require('tap').test;
./node_modules/browserify/test/ignore_transform_key.js:5 => test('ignore transform', function(t) {
./node_modules/browserify/test/ignore_browser_field.js:1 => var test = require('tap').test;
./node_modules/browserify/test/ignore_browser_field.js:7 => test('ignore browser field', function (t) {
./node_modules/browserify/test/leak.js:3 => var test = require('tap').test;
./node_modules/browserify/test/leak.js:11 =>     'browserify-test-' + Math.random(),
./node_modules/browserify/test/leak.js:16 => test('leaking information about system paths (process)', function (t) {
./node_modules/browserify/test/leak.js:41 => test('leaking information about system paths (Buffer)', function (t) {
./node_modules/browserify/test/multi_bundle_unique.js:5 => var test = require('tap').test;
./node_modules/browserify/test/multi_bundle_unique.js:8 => test('unique require', function (t) {
./node_modules/browserify/test/maxlisteners.js:1 => var test = require('tap').test;
./node_modules/browserify/test/maxlisteners.js:5 => test('setMaxListener', function (t) {
./node_modules/browserify/test/multi_bundle.js:3 => var test = require('tap').test;
./node_modules/browserify/test/multi_bundle.js:5 => test('multi bundle', function (t) {
./node_modules/browserify/test/multi_bundle.js:47 => test('multi bundle', function (t) {
./node_modules/browserify/test/global_recorder.js:3 => var test = require('tap').test;
./node_modules/browserify/test/global_recorder.js:5 => test('recorded global tr', function (t) {
./node_modules/browserify/test/multi_symlink.js:3 => var test = require('tap').test;
./node_modules/browserify/test/multi_symlink.js:5 => test('multiple symlink execution', function (t) {
./node_modules/browserify/test/noparse.js:2 => var test = require('tap').test;
./node_modules/browserify/test/noparse.js:5 => test('noParse array', function (t) {
./node_modules/browserify/test/multi_require.js:2 => var test = require('tap').test;
./node_modules/browserify/test/multi_require.js:5 => test('require same file locally and globally', function (t) {
./node_modules/browserify/test/multi_entry_cross_require.js:3 => var test = require('tap').test;
./node_modules/browserify/test/multi_entry_cross_require.js:5 => var testFiles = [
./node_modules/browserify/test/multi_entry_cross_require.js:11 => test('multi entry cross require', function (t) {
./node_modules/browserify/test/multi_entry_cross_require.js:15 =>         testFiles[0],
./node_modules/browserify/test/multi_entry_cross_require.js:16 =>         testFiles[1]
./node_modules/browserify/test/multi_entry_cross_require.js:18 =>     b.add(testFiles[2]);
./node_modules/browserify/test/multi_entry_cross_require.js:22 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/multi_entry_cross_require.js:36 => test('multi entry cross require - relative cwd', function (t) {
./node_modules/browserify/test/multi_entry_cross_require.js:39 =>     var dsTestFiles = testFiles.map(function(x) {
./node_modules/browserify/test/multi_entry_cross_require.js:51 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/multi_entry_cross_require.js:65 => test('multi entry cross require - relative', function (t) {
./node_modules/browserify/test/multi_entry_cross_require.js:68 =>     var rTestFiles = testFiles.map(function(x) {
./node_modules/browserify/test/multi_entry_cross_require.js:80 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/json.js:4 => var test = require('tap').test;
./node_modules/browserify/test/json.js:6 => test('json', function (t) {
./node_modules/browserify/test/json.js:21 => test('verify evil json', function(t) {
./node_modules/browserify/test/json.js:31 => test('evil json', function (t) {
./node_modules/browserify/test/no_builtins.js:2 => var test = require('tap').test;
./node_modules/browserify/test/no_builtins.js:5 => test('builtins false', function (t) {
./node_modules/browserify/test/no_builtins.js:24 => test('builtins []', function (t) {
./node_modules/browserify/test/no_builtins.js:42 => test('builtins object', function (t) {
./node_modules/browserify/test/pack.js:4 => var test = require('tap').test;
./node_modules/browserify/test/pack.js:19 => test('custom packer', function (t) {
./node_modules/browserify/test/paths_transform.js:3 => var test = require('tap').test;
./node_modules/browserify/test/paths_transform.js:13 => test('absolute paths with transform property', function (t) {
./node_modules/browserify/test/paths_transform.js:29 => test('relative paths with transform property', function (t) {
./node_modules/browserify/test/paths_transform.js:46 => test('absolute paths with transform method', function (t) {
./node_modules/browserify/test/paths_transform.js:63 => test('relative paths with transform method', function (t) {
./node_modules/browserify/test/pipeline_deps.js:3 => var test = require('tap').test;
./node_modules/browserify/test/pipeline_deps.js:6 => test('deps pipeline', function (t) {
./node_modules/browserify/test/pkg_event.js:4 => var test = require('tap').test;
./node_modules/browserify/test/pkg_event.js:12 => test('package event', function (t) {
./node_modules/browserify/test/plugin.js:3 => var test = require('tap').test;
./node_modules/browserify/test/plugin.js:5 => test('plugin fn', function (t) {
./node_modules/browserify/test/plugin.js:18 => test('plugin module', function (t) {
./node_modules/browserify/test/multi_entry.js:3 => var test = require('tap').test;
./node_modules/browserify/test/multi_entry.js:6 => var testFiles = [
./node_modules/browserify/test/multi_entry.js:12 => test('multi entry', function (t) {
./node_modules/browserify/test/multi_entry.js:16 =>         testFiles[0],
./node_modules/browserify/test/multi_entry.js:17 =>         testFiles[1]
./node_modules/browserify/test/multi_entry.js:19 =>     b.add(testFiles[2]);
./node_modules/browserify/test/multi_entry.js:23 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/multi_entry.js:36 => test('multi entry relative', function (t) {
./node_modules/browserify/test/multi_entry.js:39 =>     var rTestFiles = testFiles.map(function(x) {
./node_modules/browserify/test/multi_entry.js:51 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/multi_entry.js:64 => test('multi entry relative cwd', function (t) {
./node_modules/browserify/test/multi_entry.js:67 =>     var rTestFiles = testFiles.map(function(x) {
./node_modules/browserify/test/multi_entry.js:79 =>             t.ok(testFiles.indexOf(row.file) > -1, 'should contain full entry path');
./node_modules/browserify/test/multi_entry.js:92 => test('entries as streams', function (t) {
./node_modules/browserify/test/multi_entry.js:99 =>         fs.createReadStream(testFiles[0]),
./node_modules/browserify/test/multi_entry.js:100 =>         fs.createReadStream(testFiles[1])
./node_modules/browserify/test/multi_entry.js:102 =>     b.add(fs.createReadStream(testFiles[2]));
./node_modules/browserify/test/paths.js:3 => var test = require('tap').test;
./node_modules/browserify/test/paths.js:5 => test('$NODE_PATHS', function (t) {
./node_modules/browserify/test/paths.js:8 =>     var sep = /^win/i.test(process.platform) ? ';' : ':';
./node_modules/browserify/test/paths.js:21 => test('opts.paths', function (t) {
./node_modules/browserify/test/pkg.js:3 => var test = require('tap').test;
./node_modules/browserify/test/pkg.js:9 => test('package', function (t) {
./node_modules/browserify/test/require_cache.js:3 => var test = require('tap').test;
./node_modules/browserify/test/require_cache.js:5 => test('cached require results', function (t) {
./node_modules/browserify/test/require_expose.js:2 => var test = require('tap').test;
./node_modules/browserify/test/require_expose.js:5 => test('require expose external module', function (t) {
./node_modules/browserify/test/require_expose.js:18 => test('renaming builtin', function (t) {
./node_modules/browserify/test/require_expose.js:31 => test('exposed modules do not leak across bundles', function (t) {
./node_modules/browserify/test/process.js:3 => var test = require('tap').test;
./node_modules/browserify/test/process.js:5 => test('implicit process global', function (t) {
./node_modules/browserify/test/resolve_exposed.js:3 => var test = require('tap').test;
./node_modules/browserify/test/resolve_exposed.js:5 => test('resolve exposed files', function (t) {
./node_modules/browserify/test/reset.js:3 => var test = require('tap').test;
./node_modules/browserify/test/reset.js:5 => test('reset', function (t) {
./node_modules/browserify/test/reverse_multi_bundle.js:10 => var test = require('tap').test;
./node_modules/browserify/test/reverse_multi_bundle.js:12 => test('reverse multi bundle', function (t) {
./node_modules/browserify/test/retarget.js:1 => var test = require('tap').test;
./node_modules/browserify/test/retarget.js:6 => test('retarget with -r', function (t) {
./node_modules/browserify/test/shared_symlink.js:5 => var test = require('tap').test;
./node_modules/browserify/test/shared_symlink.js:7 => test('shared symlink', function (t) {
./node_modules/browserify/test/standalone_events.js:2 => var test = require('tap').test;
./node_modules/browserify/test/standalone_events.js:4 => test('standalone bundle close event', {timeout: 1000}, function (t) {
./node_modules/browserify/test/standalone_events.js:10 =>         standalone: 'stand-test'
./node_modules/browserify/test/relative_dedupe.js:3 => var test = require('tap').test;
./node_modules/browserify/test/relative_dedupe.js:5 => test('relative dedupe', function (t) {
./node_modules/browserify/test/shebang.js:3 => var test = require('tap').test;
./node_modules/browserify/test/shebang.js:5 => test('files with shebangs', function (t) {
./node_modules/browserify/test/standalone_sourcemap.js:4 => var test = require('tap').test;
./node_modules/browserify/test/standalone_sourcemap.js:6 => test('standalone in debug mode', function (t) {
./node_modules/browserify/test/standalone_sourcemap.js:12 =>         standalone: 'stand-test',
./node_modules/browserify/test/standalone_sourcemap.js:17 =>         t.test('window global', function (t) {
./node_modules/browserify/test/standalone_sourcemap.js:25 =>         t.test('CommonJS', function (t) {
./node_modules/browserify/test/standalone_sourcemap.js:35 =>         t.test('RequireJS', function (t) {
./node_modules/browserify/test/stdin.js:1 => var test = require('tap').test;
./node_modules/browserify/test/stdin.js:7 => test('stdin', function (t) {
./node_modules/browserify/test/stream.js:3 => var test = require('tap').test;
./node_modules/browserify/test/stream.js:6 => test('stream', function (t) {
./node_modules/browserify/test/stream_file.js:3 => var test = require('tap').test;
./node_modules/browserify/test/stream_file.js:8 => test('stream file', function (t) {
./node_modules/browserify/test/symlink_dedupe.js:3 => var test = require('tap').test;
./node_modules/browserify/test/symlink_dedupe.js:5 => test('hash instances with hashed contexts', function (t) {
./node_modules/browserify/test/subdep.js:3 => var test = require('tap').test;
./node_modules/browserify/test/subdep.js:5 => test('subdep', function (t) {
./node_modules/browserify/test/syntax_cache.js:3 => var test = require('tap').test;
./node_modules/browserify/test/syntax_cache.js:6 => test('syntax cache - valid', function (t) {
./node_modules/browserify/test/syntax_cache.js:31 => test('syntax cache - skip invalid', function (t) {
./node_modules/browserify/test/tr.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr.js:6 => test('function transform', function (t) {
./node_modules/browserify/test/tr_args.js:1 => var test = require('tap').test;
./node_modules/browserify/test/tr_args.js:7 => test('transform arguments', function (t) {
./node_modules/browserify/test/tr_error.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr_error.js:6 => test('transform errors errback', function (t) {
./node_modules/browserify/test/tr_error.js:16 =>         t.ok(/^blah/.test(err.message));
./node_modules/browserify/test/tr_error.js:21 => test('transform errors propagate', function (t) {
./node_modules/browserify/test/tr_error.js:31 =>         t.ok(/^blah/.test(err.message));
./node_modules/browserify/test/tr_flags.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr_flags.js:6 => test('--debug passed to transforms', function (t) {
./node_modules/browserify/test/tr_no_entry.js:2 => var test = require('tap').test;
./node_modules/browserify/test/tr_no_entry.js:5 => test('transform with no entry files', function (t) {
./node_modules/browserify/test/tr_global.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr_global.js:6 => test('global transform precedence', function (t) {
./node_modules/browserify/test/tr_once.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr_once.js:7 => test('transform exactly once', function (t) {
./node_modules/browserify/test/tr_order.js:3 => var test = require('tap').test;
./node_modules/browserify/test/tr_order.js:6 => test('function transform', function (t) {
./node_modules/browserify/test/standalone.js:3 => var test = require('tap').test;
./node_modules/browserify/test/standalone.js:5 => test('standalone', function (t) {
./node_modules/browserify/test/standalone.js:9 =>         standalone: 'stand-test'
./node_modules/browserify/test/standalone.js:12 =>         t.test('window global', function (t) {
./node_modules/browserify/test/standalone.js:20 =>         t.test('CommonJS', function (t) {
./node_modules/browserify/test/standalone.js:30 =>         t.test('RequireJS', function (t) {
./node_modules/browserify/test/standalone.js:43 => test('A.B.C standalone', function (t) {
./node_modules/browserify/test/standalone.js:50 =>         t.test('window global', function (t) {
./node_modules/browserify/test/standalone.js:56 =>         t.test('CommonJS', function (t) {
./node_modules/browserify/test/standalone.js:66 =>         t.test('RequireJS', function (t) {
./node_modules/browserify/test/tr_symlink.js:6 => var test = require('tap').test;
./node_modules/browserify/test/tr_symlink.js:9 => test('transform symlink', function (t) {
./node_modules/browserify/test/util.js:2 => var test = require('tap').test;
./node_modules/browserify/test/util.js:6 => test('util.inspect', function (t) {
./node_modules/browserify/test/util.js:21 => test('util.inherits', function (t) {
./node_modules/browserify/test/util.js:42 => test('util.inherits without Object.create', function (t) {
./node_modules/browserify/index.js:608 =>         if (/\.json$/.test(row.file)) {
./node_modules/browserify/index.js:618 =>         if (/^\ufeff/.test(row.source)) {
./node_modules/browserify/index.js:628 =>         if (/^#!/.test(row.source)) {
./node_modules/browserify/index.js:800 =>     return regexp.test(file);
./node_modules/browserify/index.js:806 =>     return !regexp.test(file);
./node_modules/browserify/test/yield.js:2 => var test = require('tap').test;
./node_modules/browserify/test/yield.js:5 => test('yield', function (t) {
./node_modules/browserify/test/unicode.js:3 => var test = require('tap').test;
./node_modules/browserify/test/unicode.js:5 => test('unicode entry', function (t) {
./node_modules/browserify-zlib/test/test-zlib-convenience-methods.js:22 => // test convenience methods with and without options supplied
./node_modules/browserify-zlib/test/test-zlib-from-string.js:22 => // test compressing and uncompressing a string with zlib
./node_modules/browserify-zlib/test/test-zlib-invalid-input.js:22 => // test uncompressing invalid input
./node_modules/browserify-zlib/test/test-zlib.js:47 => // it's nice in theory to test every combination, but it
./node_modules/browserify-zlib/test/test-zlib.js:48 => // takes WAY too long.  Maybe a pummel test could do this?
./node_modules/browserify-zlib/test/test-zlib.js:64 => var tests = {
./node_modules/browserify-zlib/test/test-zlib.js:159 => Object.keys(tests).forEach(function(file) {
./node_modules/browserify-zlib/test/test-zlib.js:160 =>   var test = tests[file];
./node_modules/browserify-zlib/test/test-zlib.js:192 =>                     t.deepEqual(c, test);
./node_modules/browserify-zlib/test/test-zlib.js:197 =>                   ss.end(test);
./node_modules/buffer/bin/zuul-es5.yml:3 =>   - ./test/_polyfill.js
./node_modules/buffer/bin/zuul-es5.yml:6 =>     version: latest
./node_modules/buffer/bin/zuul-es5.yml:8 =>     version: 8..latest
./node_modules/buffer/bin/zuul-es5.yml:10 =>     version: 13..latest
./node_modules/buffer/bin/zuul-es5.yml:12 =>     version: 4.4..latest
./node_modules/buffer/bin/zuul-es5.yml:14 =>     version: latest
./node_modules/buffer/bin/test.js:10 => var node = cp.spawn('npm', ['run', 'test-node'], { stdio: 'inherit' })
./node_modules/buffer/bin/test.js:23 =>   cp.spawn('npm', ['run', 'test-browser-es5'], { stdio: 'inherit' })
./node_modules/buffer/bin/test.js:27 =>       cp.spawn('npm', ['run', 'test-browser-es6'], { stdio: 'inherit' })
./node_modules/buffer/bin/download-node-tests.js:13 =>   '/test/parallel',
./node_modules/buffer/bin/download-node-tests.js:14 =>   '/test/pummel'
./node_modules/buffer/bin/download-node-tests.js:17 => cp.execSync('rm -rf node/*.js', { cwd: path.join(__dirname, '../test') })
./node_modules/buffer/bin/download-node-tests.js:39 =>     if (!/test-buffer.*/.test(file.name)) return
./node_modules/buffer/bin/download-node-tests.js:41 =>     if (file.name === 'test-buffer-fakes.js') {
./node_modules/buffer/bin/download-node-tests.js:49 =>     var out = path.join(__dirname, '../test/node', file.name)
./node_modules/buffer/bin/download-node-tests.js:52 =>       .pipe(testfixer(file.name))
./node_modules/buffer/bin/download-node-tests.js:60 => function testfixer (filename) {
./node_modules/buffer/bin/download-node-tests.js:69 =>       if (/use strict/.test(line)) line += '\n' + preamble
./node_modules/buffer/bin/download-node-tests.js:89 =>     // we can't reliably test typed array max-sizes in the browser
./node_modules/buffer/bin/download-node-tests.js:90 =>     if (filename === 'test-buffer-big.js') {
./node_modules/buffer/bin/download-node-tests.js:96 =>     // https://github.com/nodejs/node/blob/v0.12/test/parallel/test-buffer.js#L1138
./node_modules/buffer/bin/download-node-tests.js:99 =>     if (filename === 'test-buffer.js') {
./node_modules/buffer/test/base64.js:3 => var test = require('tape')
./node_modules/buffer/test/base64.js:5 => test('base64: ignore whitespace', function (t) {
./node_modules/buffer/test/base64.js:12 => test('base64: strings without padding', function (t) {
./node_modules/buffer/test/base64.js:17 => test('base64: newline in utf8 -- should not be an issue', function (t) {
./node_modules/buffer/test/base64.js:25 => test('base64: newline in base64 -- should get stripped', function (t) {
./node_modules/buffer/test/base64.js:33 => test('base64: tab characters in base64 - should get stripped', function (t) {
./node_modules/buffer/test/base64.js:41 => test('base64: invalid non-alphanumeric characters -- should be stripped', function (t) {
./node_modules/buffer/bin/zuul-es6.yml:4 =>     version: '-1..latest'
./node_modules/buffer/bin/zuul-es6.yml:6 =>     version: '-1..latest'
./node_modules/buffer/test/basic.js:3 => var test = require('tape')
./node_modules/buffer/test/basic.js:5 => test('instanceof Buffer', function (t) {
./node_modules/buffer/test/basic.js:11 => test('convert to Uint8Array in modern browsers', function (t) {
./node_modules/buffer/test/basic.js:19 =>     t.pass('object impl: skipping test')
./node_modules/buffer/test/basic.js:24 => test('indexes from a string', function (t) {
./node_modules/buffer/test/basic.js:32 => test('indexes from an array', function (t) {
./node_modules/buffer/test/basic.js:40 => test('setting index value should modify buffer contents', function (t) {
./node_modules/buffer/test/basic.js:51 => test('storing negative number should cast to unsigned', function (t) {
./node_modules/buffer/test/basic.js:67 => test('test that memory is copied from array-like', function (t) {
./node_modules/buffer/test/basic.js:81 =>     t.pass('object impl: skipping test')
./node_modules/buffer/test/compare.js:3 => var test = require('tape')
./node_modules/buffer/test/compare.js:5 => test('buffer.compare', function (t) {
./node_modules/buffer/test/compare.js:23 => test('buffer.compare argument validation', function (t) {
./node_modules/buffer/test/compare.js:41 => test('buffer.equals', function (t) {
./node_modules/buffer/test/compare.js:53 => test('buffer.equals argument validation', function (t) {
./node_modules/buffer/test/is-buffer.js:4 => var test = require('tape')
./node_modules/buffer/test/is-buffer.js:6 => test('is-buffer tests', function (t) {
./node_modules/buffer/test/constructor.js:3 => var test = require('tape')
./node_modules/buffer/test/constructor.js:5 => test('new buffer from array', function (t) {
./node_modules/buffer/test/constructor.js:13 => test('new buffer from array w/ negatives', function (t) {
./node_modules/buffer/test/constructor.js:21 => test('new buffer from array with mixed signed input', function (t) {
./node_modules/buffer/test/constructor.js:29 => test('new buffer from string', function (t) {
./node_modules/buffer/test/constructor.js:37 => test('new buffer from buffer', function (t) {
./node_modules/buffer/test/constructor.js:44 => test('new buffer from ArrayBuffer', function (t) {
./node_modules/buffer/test/constructor.js:58 => test('new buffer from ArrayBuffer, shares memory', function (t) {
./node_modules/buffer/test/constructor.js:83 => test('new buffer from Uint8Array', function (t) {
./node_modules/buffer/test/constructor.js:97 => test('new buffer from Uint16Array', function (t) {
./node_modules/buffer/test/constructor.js:111 => test('new buffer from Uint32Array', function (t) {
./node_modules/buffer/test/constructor.js:125 => test('new buffer from Int16Array', function (t) {
./node_modules/buffer/test/constructor.js:139 => test('new buffer from Int32Array', function (t) {
./node_modules/buffer/test/constructor.js:153 => test('new buffer from Float32Array', function (t) {
./node_modules/buffer/test/constructor.js:167 => test('new buffer from Float64Array', function (t) {
./node_modules/buffer/test/constructor.js:181 => test('new buffer from buffer.toJSON() output', function (t) {
./node_modules/buffer/test/constructor.js:187 =>   var buf = new B('test')
./node_modules/buffer/test/slice.js:3 => var test = require('tape')
./node_modules/buffer/test/slice.js:5 => test('modifying buffer created by .slice() modifies original memory', function (t) {
./node_modules/buffer/test/slice.js:22 => test('modifying parent buffer modifies .slice() buffer\'s memory', function (t) {
./node_modules/buffer/test/methods.js:3 => var test = require('tape')
./node_modules/buffer/test/methods.js:5 => test('buffer.toJSON', function (t) {
./node_modules/buffer/test/methods.js:14 => test('buffer.copy', function (t) {
./node_modules/buffer/test/methods.js:33 => test('test offset returns are correct', function (t) {
./node_modules/buffer/test/methods.js:43 => test('concat() a varying number of buffers', function (t) {
./node_modules/buffer/test/methods.js:64 => test('fill', function (t) {
./node_modules/buffer/test/methods.js:71 => test('fill (string)', function (t) {
./node_modules/buffer/test/methods.js:80 => test('copy() empty buffer with sourceEnd=0', function (t) {
./node_modules/buffer/test/methods.js:88 => test('copy() after slice()', function (t) {
./node_modules/buffer/test/methods.js:103 => test('copy() ascending', function (t) {
./node_modules/buffer/test/methods.js:110 => test('copy() descending', function (t) {
./node_modules/buffer/test/methods.js:117 => test('buffer.slice sets indexes', function (t) {
./node_modules/buffer/test/methods.js:122 => test('buffer.slice out of range', function (t) {
./node_modules/buffer/test/static.js:3 => var test = require('tape')
./node_modules/buffer/test/static.js:5 => test('Buffer.isEncoding', function (t) {
./node_modules/buffer/test/static.js:12 => test('Buffer.isBuffer', function (t) {
./node_modules/buffer/test/to-string.js:3 => var test = require('tape')
./node_modules/buffer/test/to-string.js:5 => test('utf8 buffer to base64', function (t) {
./node_modules/buffer/test/to-string.js:13 => test('utf8 buffer to hex', function (t) {
./node_modules/buffer/test/to-string.js:21 => test('utf8 to utf8', function (t) {
./node_modules/buffer/test/to-string.js:29 => test('utf16le to utf16', function (t) {
./node_modules/buffer/test/to-string.js:37 => test('utf16le to hex', function (t) {
./node_modules/buffer/test/to-string.js:45 => test('ascii buffer to base64', function (t) {
./node_modules/buffer/test/to-string.js:53 => test('ascii buffer to hex', function (t) {
./node_modules/buffer/test/to-string.js:61 => test('base64 buffer to utf8', function (t) {
./node_modules/buffer/test/to-string.js:69 => test('hex buffer to utf8', function (t) {
./node_modules/buffer/test/to-string.js:77 => test('base64 buffer to ascii', function (t) {
./node_modules/buffer/test/to-string.js:85 => test('hex buffer to ascii', function (t) {
./node_modules/buffer/test/to-string.js:93 => test('base64 buffer to binary', function (t) {
./node_modules/buffer/test/to-string.js:101 => test('hex buffer to binary', function (t) {
./node_modules/buffer/test/to-string.js:109 => test('utf8 to binary', function (t) {
./node_modules/buffer/test/to-string.js:119 => test('utf8 replacement chars (1 byte sequence)', function (t) {
./node_modules/buffer/test/to-string.js:131 => test('utf8 replacement chars (2 byte sequences)', function (t) {
./node_modules/buffer/test/to-string.js:151 => test('utf8 replacement chars (3 byte sequences)', function (t) {
./node_modules/buffer/test/to-string.js:167 => test('utf8 replacement chars (4 byte sequences)', function (t) {
./node_modules/buffer/test/to-string.js:195 => test('utf8 replacement chars on 256 random bytes', function (t) {
./node_modules/buffer/test/to-string.js:203 => test('utf8 replacement chars for anything in the surrogate pair range', function (t) {
./node_modules/buffer/test/to-string.js:227 => test('utf8 don\'t replace the replacement char', function (t) {
./node_modules/buffer/test/from-string.js:3 => var test = require('tape')
./node_modules/buffer/test/from-string.js:5 => test('detect utf16 surrogate pairs', function (t) {
./node_modules/buffer/test/from-string.js:12 => test('detect utf16 surrogate pairs over U+20000 until U+10FFFF', function (t) {
./node_modules/buffer/test/from-string.js:19 => test('replace orphaned utf16 surrogate lead code point', function (t) {
./node_modules/buffer/test/from-string.js:26 => test('replace orphaned utf16 surrogate trail code point', function (t) {
./node_modules/buffer/test/from-string.js:33 => test('do not write partial utf16 code units', function (t) {
./node_modules/buffer/test/from-string.js:42 => test('handle partial utf16 code points when encoding to utf8 the way node does', function (t) {
./node_modules/buffer/test/from-string.js:88 => test('handle invalid utf16 code points when encoding to utf8 the way node does', function (t) {
./node_modules/buffer/test/write_infinity.js:3 => var test = require('tape')
./node_modules/buffer/test/write_infinity.js:5 => test('write/read Infinity as a float', function (t) {
./node_modules/buffer/test/write_infinity.js:12 => test('write/read -Infinity as a float', function (t) {
./node_modules/buffer/test/write_infinity.js:19 => test('write/read Infinity as a double', function (t) {
./node_modules/buffer/test/write_infinity.js:26 => test('write/read -Infinity as a double', function (t) {
./node_modules/buffer/test/write_infinity.js:33 => test('write/read float greater than max', function (t) {
./node_modules/buffer/test/write_infinity.js:40 => test('write/read float less than min', function (t) {
./node_modules/buffer/test/write.js:3 => var test = require('tape')
./node_modules/buffer/test/write.js:6 => test('buffer.write string should get parsed as number', function (t) {
./node_modules/buffer/test/write.js:13 => test('buffer.writeUInt8 a fractional number will get Math.floored', function (t) {
./node_modules/buffer/test/write.js:14 =>   // Some extra work is necessary to make this test pass with the Object implementation
./node_modules/buffer/test/write.js:22 => test('writeUint8 with a negative number throws', function (t) {
./node_modules/buffer/test/write.js:32 => test('hex of write{Uint,Int}{8,16,32}{LE,BE}', function (t) {
./node_modules/buffer/test/write.js:68 => test('hex of write{Uint,Int}{8,16,32}{LE,BE} with overflow', function (t) {
./node_modules/buffer/test/write.js:70 =>     t.pass('object impl: skipping overflow test')
./node_modules/buffer/test/write.js:117 => test('large values do not improperly roll over (ref #80)', function (t) {
./node_modules/chai/History.md:417 =>   * add back buffer test for deep equal
./node_modules/chai/History.md:419 =>   * remove buffer test from expect
./node_modules/chai/History.md:425 =>   * mocha is npm test command
./node_modules/chai/History.md:427 =>   * expect tests now include message pass-through
./node_modules/chai/History.md:431 =>   * Make globalShould test work in browser too.
./node_modules/chai/History.md:472 =>   * Disable "Assertion.includeStack is false" test in IE.
./node_modules/chai/History.md:481 =>   * tests for length as chainable property. #74
./node_modules/chai/History.md:484 =>   * tests for getPathValue when working with nested arrays. Closes #77
./node_modules/chai/History.md:518 =>   * test - get all flags
./node_modules/chai/History.md:561 =>   * assert test conformity for minor refactor api
./node_modules/chai/History.md:563 =>   * update util tests for new add/overwrite prop/method format
./node_modules/chai/History.md:566 =>   * doc test suite
./node_modules/chai/History.md:573 =>   * Document how to run the test suite
./node_modules/chai/History.md:592 =>   * Merge branch 'feature/test-cov'
./node_modules/chai/History.md:594 =>   * missing assert tests for ownProperty
./node_modules/chai/History.md:597 =>   * test for plugin utilities
./node_modules/chai/History.md:605 =>   * assert match/notMatch tests
./node_modules/chai/History.md:611 =>   * Add test for `utils.addMethod`
./node_modules/chai/History.md:613 =>   * Add test for `utils.overwriteMethod`
./node_modules/chai/History.md:619 =>   * travis no longer tests on node 0.4.x
./node_modules/chai/History.md:627 =>   * Remove old test.assert code
./node_modules/chai/History.md:630 =>   * Added almostEqual and deepAlmostEqual to assert test suite.
./node_modules/chai/History.md:635 =>   * travis tests 0.5.x branch as well
./node_modules/chai/History.md:641 =>   * clean up redundant tests
./node_modules/chai/History.md:645 =>   * added utility tests to browser specs
./node_modules/chai/History.md:646 =>   * beginning utility testing
./node_modules/chai/ReleaseNotes.md:405 => this is part of a larger initiative to provide transparency, independent testing, and coverage for
./node_modules/chai/ReleaseNotes.md:409 => consistent ruleset across all types being tested, the following changes have been made and _might_
./node_modules/chai/ReleaseNotes.md:410 => require changes to your tests.
./node_modules/chai/ReleaseNotes.md:444 => - [#195](https://github.com/chaijs/chai/issues/195) karma test framework
./node_modules/chai/ReleaseNotes.md:463 => will receive automated messages indicating how their PR impacts test coverage. This service is tied to TravisCI.
./node_modules/chai/ReleaseNotes.md:550 => test on features independent from our interfaces.
./node_modules/chai/ReleaseNotes.md:575 => Regular Expressions are now tested as part of all deep equality assertions. In previous versions
./node_modules/cached-path-relative/test/index.js:7 => var test = require('tape')
./node_modules/cached-path-relative/test/index.js:13 => test('should work', function (t) {
./node_modules/cached-path-relative/test/index.js:14 =>   t.equal(relative('test/index.js', '.'), path.relative('test/index.js', '.'))
./node_modules/cached-path-relative/test/index.js:15 =>   t.equal(relative('test/index.js', '.'), path.relative('test/index.js', '.'))
./node_modules/chai/chai.js:724 =>    *     function test () {
./node_modules/color-convert/color-convert-0.2.0.js:618 =>             if (cx.test(text)) {
./node_modules/color-convert/color-convert-0.2.0.js:639 =>                     .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
./node_modules/combine-source-map/lib/mappings-from-map.js:14 =>     // only set source if we have original position to handle edgecase (see inline-source-map tests)
./node_modules/concat-map/test/map.js:2 => var test = require('tape');
./node_modules/concat-map/test/map.js:4 => test('empty or not', function (t) {
./node_modules/concat-map/test/map.js:16 => test('always something', function (t) {
./node_modules/concat-map/test/map.js:25 => test('scalars', function (t) {
./node_modules/concat-map/test/map.js:34 => test('undefs', function (t) {
./node_modules/console-browserify/test/index.js:2 => var test = require("tape")
./node_modules/console-browserify/test/index.js:8 => test("console has expected methods", function (assert) {
./node_modules/console-browserify/test/index.js:21 => test("invoke console.log", function (assert) {
./node_modules/console-browserify/test/index.js:22 =>     console.log("test-log")
./node_modules/console-browserify/test/index.js:27 => test("invoke console.info", function (assert) {
./node_modules/console-browserify/test/index.js:28 =>     console.info("test-info")
./node_modules/console-browserify/test/index.js:33 => test("invoke console.warn", function (assert) {
./node_modules/console-browserify/test/index.js:34 =>     console.warn("test-warn")
./node_modules/console-browserify/test/index.js:39 => test("invoke console.time", function (assert) {
./node_modules/console-browserify/test/index.js:45 => test("invoke console.trace", function (assert) {
./node_modules/console-browserify/test/index.js:46 =>     console.trace("test-trace")
./node_modules/console-browserify/test/index.js:51 => test("invoke console.assert", function (assert) {
./node_modules/console-browserify/test/index.js:57 => test("invoke console.dir", function (assert) {
./node_modules/console-browserify/test/index.js:58 =>     console.dir("test-dir")
./node_modules/console-browserify/test/index.js:63 => test("invoke console.timeEnd", function (assert) {
./node_modules/combine-source-map/test/combine-source-map.js:4 => var test            =  require('tap').test;
./node_modules/combine-source-map/test/combine-source-map.js:58 => test('add one file with inlined source', function (t) {
./node_modules/combine-source-map/test/combine-source-map.js:83 => test('add one file without inlined source', function (t) {
./node_modules/combine-source-map/test/combine-source-map.js:135 => test('add one file with inlined sources from multiple files', function(t) {
./node_modules/combine-source-map/test/combine-source-map.js:196 => test('relative path from multiple files', function(t) {
./node_modules/convert-source-map/test/comment-regex.js:4 => var test = require('tap').test
./node_modules/convert-source-map/test/comment-regex.js:11 =>   return rx.test(prefix + 'sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9' + suffix)
./node_modules/convert-source-map/test/comment-regex.js:17 =>   return rx.test(prefix + 'sourceMappingURL=data:application/json;charset' + sep +'utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9' + suffix)
./node_modules/convert-source-map/test/comment-regex.js:21 => test('comment regex old spec - @', function (t) {
./node_modules/convert-source-map/test/comment-regex.js:45 => test('comment regex new spec - #', function (t) {
./node_modules/convert-source-map/test/comment-regex.js:70 =>   return mapFileRx.test(s1 + 'sourceMappingURL=foo.js.map' + s2)
./node_modules/convert-source-map/test/comment-regex.js:73 => test('mapFileComment regex old spec - @', function (t) {
./node_modules/convert-source-map/test/comment-regex.js:93 => test('mapFileComment regex new spec - #', function (t) {
./node_modules/convert-source-map/test/comment-regex.js:112 => test('mapFileComment regex /* */ old spec - @', function (t) {
./node_modules/convert-source-map/test/comment-regex.js:126 => test('mapFileComment regex /* */ new spec - #', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:4 => var test = require('tap').test
./node_modules/convert-source-map/test/convert-source-map.js:17 => test('different formats', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:36 => test('to object returns a copy', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:44 => test('to multi-line map', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:51 => test('to map file comment', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:57 => test('from source', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:84 => test('from source with a large source', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:111 => test('remove comments', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:132 => test('remove map file comments', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:150 => test('pretty json', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:161 => test('adding properties', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:176 => test('setting properties', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:195 => test('getting properties', function (t) {
./node_modules/convert-source-map/test/convert-source-map.js:203 => test('return null fromSource when largeSource is true', function(t) {
./node_modules/convert-source-map/test/map-file-comment.js:4 => var test = require('tap').test
./node_modules/convert-source-map/test/map-file-comment.js:9 => test('\nresolving a "/*# sourceMappingURL=map-file-comment.css.map*/" style comment inside a given css content', function (t) {
./node_modules/convert-source-map/test/map-file-comment.js:30 => test('\nresolving a "//# sourceMappingURL=map-file-comment.css.map" style comment inside a given css content', function (t) {
./node_modules/convert-source-map/test/map-file-comment.js:51 => test('\nresolving a /*# sourceMappingURL=data:application/json;base64,... */ style comment inside a given css content', function(t) {
./node_modules/core-js/build/Gruntfile.ls:19 =>       './tests/helpers.js': './tests/helpers/*'
./node_modules/core-js/build/Gruntfile.ls:20 =>       './tests/tests.js': './tests/tests/*'
./node_modules/core-js/build/Gruntfile.ls:21 =>       './tests/library.js': './tests/library/*'
./node_modules/core-js/build/Gruntfile.ls:22 =>       './tests/es.js': './tests/tests/es*'
./node_modules/core-js/build/Gruntfile.ls:23 =>       './tests/experimental.js': './tests/experimental/*'
./node_modules/core-js/build/Gruntfile.ls:44 =>       tests:
./node_modules/core-js/build/Gruntfile.ls:45 =>         files: './tests/tests/*'
./node_modules/core-js/build/Gruntfile.ls:49 =>         configFile: './tests/karma.conf.js'
./node_modules/core-js/build/Gruntfile.ls:53 =>       'library': files: <[client/library.js tests/helpers.js tests/library.js]>map -> src: it
./node_modules/core-js/modules/es6.array.sort.js:7 =>   , test      = [1, 2, 3];
./node_modules/core-js/modules/es6.array.sort.js:11 =>   test.sort(undefined);
./node_modules/core-js/modules/es6.array.sort.js:14 =>   test.sort(null);
./node_modules/core-js/modules/es6.promise.js:28 =>     // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/core-js/modules/es6.object.to-string.js:4 =>   , test    = {};
./node_modules/core-js/modules/es6.object.to-string.js:5 => test[require('./_wks')('toStringTag')] = 'z';
./node_modules/core-js/modules/es6.object.to-string.js:6 => if(test + '' != '[object z]'){
./node_modules/core-js/modules/es6.regexp.split.js:12 =>     'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
./node_modules/core-js/modules/es6.regexp.split.js:54 =>         if(lastLength || !separatorCopy.test(''))output.push('');
./node_modules/core-js/modules/web.timers.js:7 =>   , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/core-js/modules/_parse-int.js:8 =>   return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/core-js/modules/_set-proto.js:11 =>     function(test, buggy, set){
./node_modules/core-js/modules/_set-proto.js:14 =>         set(test, []);
./node_modules/core-js/modules/_set-proto.js:15 =>         buggy = !(test instanceof Array);
./node_modules/core-js/modules/_string-html.js:16 =>     var test = ''[NAME]('"');
./node_modules/core-js/modules/_string-html.js:17 =>     return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/crypto-browserify/test/create-hash.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/create-hash.js:4 => var encodings = ['hex', 'base64'] // FIXME: test binary
./node_modules/crypto-browserify/test/create-hash.js:5 => var vectors = require('hash-test-vectors')
./node_modules/crypto-browserify/test/create-hash.js:7 => testLib('createHash in crypto-browserify', require('../').createHash)
./node_modules/crypto-browserify/test/create-hash.js:8 => testLib('create-hash/browser', require('create-hash/browser'))
./node_modules/crypto-browserify/test/create-hash.js:10 => function testLib (name, createHash) {
./node_modules/crypto-browserify/test/create-hash.js:16 =>   test(name + ' test ' + algorithm + ' against test vectors', function (t) {
./node_modules/crypto-browserify/test/create-hash.js:28 =>         t.equal(js, node, algorithm + '(testVector[' + i + ']) == ' + node)
./node_modules/crypto-browserify/test/create-hash.js:36 =>           t.equal(js, node, algorithm + '(testVector[' + i + '], ' + encoding + ') == ' + node)
./node_modules/crypto-browserify/test/create-hash.js:45 =>         t.equal(js, node, algorithm + '(testVector[' + i + ']) == ' + node)
./node_modules/crypto-browserify/test/aes.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/aes.js:7 =>     test('run: ' + i, function (t) {
./node_modules/crypto-browserify/test/aes.js:8 =>       t.test('ciphers: ' + cipher, function (t) {
./node_modules/crypto-browserify/test/aes.js:30 => test('getCiphers', function (t) {
./node_modules/crypto-browserify/test/aes.js:35 => test('through crypto browserify works', function (t) {
./node_modules/crypto-browserify/test/create-hmac.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/create-hmac.js:4 => var vectors = require('hash-test-vectors/hmac')
./node_modules/crypto-browserify/test/create-hmac.js:5 => testLib('createHmac in crypto-browserify', require('../').createHmac)
./node_modules/crypto-browserify/test/create-hmac.js:6 => testLib('create-hmac/browser', require('create-hmac/browser'))
./node_modules/crypto-browserify/test/create-hmac.js:8 => function testLib (name, createHmac) {
./node_modules/crypto-browserify/test/create-hmac.js:10 =>     test(name + ' hmac(' + alg + ')', function (t) {
./node_modules/crypto-browserify/test/create-hmac.js:29 =>     test('hmac(' + alg + ')', function (t) {
./node_modules/crypto-browserify/test/dh.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/dh.js:4 => test('diffie-hellman mod groups', function (t) {
./node_modules/crypto-browserify/test/dh.js:8 =>     t.test(mod, function (t) {
./node_modules/crypto-browserify/test/dh.js:27 => test('diffie-hellman key lengths', function (t) {
./node_modules/crypto-browserify/test/dh.js:31 =>     t.test('' + len, function (t) {
./node_modules/crypto-browserify/test/pbkdf2.js:4 => var vectors = require('hash-test-vectors/pbkdf2')
./node_modules/crypto-browserify/test/random-bytes.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/random-bytes.js:13 =>   test('get error message', function (t) {
./node_modules/crypto-browserify/test/random-bytes.js:19 =>       t.ok(/not supported/.test(err.message), '"not supported"  is in error message')
./node_modules/crypto-browserify/test/random-bytes.js:24 =>   test(randomBytesName, function (t) {
./node_modules/crypto-browserify/test/random-bytes.js:36 =>   test(randomBytesName + ' seem random', function (t) {
./node_modules/crypto-browserify/test/random-bytes.js:42 =>     // test that the random numbers are plausably random.
./node_modules/crypto-browserify/test/random-bytes.js:53 =>     // console.log doesn't work right on testling, *grumble grumble*
./node_modules/crypto-browserify/test/public-encrypt.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/public-encrypt.js:12 => test('publicEncrypt/privateDecrypt', function (t) {
./node_modules/crypto-browserify/test/public-encrypt.js:13 =>   t.test('can decrypt', function (t) {
./node_modules/crypto-browserify/test/public-encrypt.js:15 =>     // note encryption is ranomized so can't test to see if they encrypt the same
./node_modules/crypto-browserify/test/public-encrypt.js:19 =>   t.test('can round trip', function (t) {
./node_modules/crypto-browserify/test/public-encrypt.js:22 =>     // note encryption is ranomized so can't test to see if they encrypt the same
./node_modules/crypto-browserify/test/public-encrypt.js:28 => test('privateEncrypt/publicDecrypt', function (t) {
./node_modules/crypto-browserify/test/public-encrypt.js:29 =>   t.test('can round trip', function (t) {
./node_modules/crypto-browserify/test/public-encrypt.js:32 =>     // note encryption is ranomized so can't test to see if they encrypt the same
./node_modules/crypto-browserify/test/sign.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/sign.js:20 => function testit (keys, message, scheme) {
./node_modules/crypto-browserify/test/sign.js:23 =>   test(message.toString(), function (t) {
./node_modules/crypto-browserify/test/sign.js:24 =>     t.test('js sign and verify', function (t) {
./node_modules/crypto-browserify/test/sign.js:32 =>     t.test('node sign and verify', function (t) {
./node_modules/crypto-browserify/test/sign.js:40 =>     t.test('node sign and js verify', function (t) {
./node_modules/crypto-browserify/test/sign.js:48 =>     t.test('js sign and node verify', function (t) {
./node_modules/crypto-browserify/test/sign.js:58 => testit(rsa, new Buffer('rsa with sha256'), 'RSA-SHA256')
./node_modules/crypto-browserify/test/sign.js:59 => testit(ec, new Buffer('ec with sha1'), 'ecdsa-with-SHA1')
./node_modules/crypto-browserify/test/ecdh.js:7 => var test = require('tape')
./node_modules/crypto-browserify/test/ecdh.js:13 =>   test('createECDH: ' + mod + ' uncompressed', function (t) {
./node_modules/crypto-browserify/test/ecdh.js:27 =>   test('createECDH: ' + mod + ' compressed', function (t) {
./node_modules/crypto-browserify/test/ecdh.js:41 =>   test('createECDH: ' + mod + ' set stuff', function (t) {
./node_modules/debug/src/debug.js:179 =>     if (exports.skips[i].test(name)) {
./node_modules/debug/src/debug.js:184 =>     if (exports.names[i].test(name)) {
./node_modules/debug/src/node.js:35 =>   return /^debug_/i.test(key);
./node_modules/debug/src/node.js:45 =>   if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
./node_modules/debug/src/node.js:46 =>   else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
./node_modules/debug/src/node.js:169 =>   // Note stream._type is used for test-module-load-list.js
./node_modules/debug/src/node.js:201 =>       // Test: ./node test/fixtures/echo.js < /etc/passwd
./node_modules/date-now/test/index.js:1 => var test = require("tape")
./node_modules/date-now/test/index.js:7 => test("date", function (assert) {
./node_modules/date-now/test/index.js:14 => test("seeded", function (assert) {
./node_modules/deep-eql/lib/eql.js:62 =>  * Strict (egal) equality test. Ensures that NaN always
./node_modules/deep-eql/lib/eql.js:121 =>  * prior to test to ensure no bad behavior.
./node_modules/dashdash/lib/dashdash.js:132 =>     if (!/^[0-9-]+$/.test(arg) || isNaN(num)) {
./node_modules/dashdash/lib/dashdash.js:142 =>     if (!/^[0-9]+$/.test(arg) || isNaN(num) || num === 0) {
./node_modules/dashdash/lib/dashdash.js:162 =>     if (/^\d+$/.test(arg)) {
./node_modules/dashdash/lib/dashdash.js:166 =>     } else if (/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i.test(arg)) {
./node_modules/defined/test/def.js:2 => var test = require('tape');
./node_modules/defined/test/def.js:4 => test('defined-or', function (t) {
./node_modules/defined/test/falsy.js:1 => var test = require('tape');
./node_modules/defined/test/falsy.js:4 => test('falsy', function (t) {
./node_modules/deps-sort/test/dedupe-deps-of-deps.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/dedupe-deps-of-deps.js:5 => test('dedupe-deps-of-deps', function (t) {
./node_modules/deps-sort/test/dedupe.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/dedupe.js:5 => test('dedupe', function (t) {
./node_modules/deps-sort/test/dedupe_index.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/dedupe_index.js:5 => test('dedupe index', function (t) {
./node_modules/deps-sort/test/expose.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/expose.js:5 => test('expose true', function (t) {
./node_modules/deps-sort/test/dedupe_undef.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/dedupe_undef.js:5 => test('dedupe undef', function (t) {
./node_modules/deps-sort/test/expose_str.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/expose_str.js:5 => test('expose string', function (t) {
./node_modules/deps-sort/test/indexed.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/indexed.js:5 => test('indexed', function (t) {
./node_modules/deps-sort/test/sort.js:2 => var test = require('tap').test;
./node_modules/deps-sort/test/sort.js:5 => test('sort', function (t) {
./node_modules/detective/test/both.js:1 => var test = require('tap').test;
./node_modules/detective/test/both.js:6 => test('both', function (t) {
./node_modules/detective/test/both.js:14 => test('both with nodes specified in opts', function (t) {
./node_modules/detective/test/chained.js:1 => var test = require('tap').test;
./node_modules/detective/test/chained.js:6 => test('chained', function (t) {
./node_modules/detective/test/es6-module.js:1 => var test = require('tap').test;
./node_modules/detective/test/es6-module.js:6 => test('es6-module', function (t) {
./node_modules/detective/test/complicated.js:1 => var test = require('tap').test;
./node_modules/detective/test/complicated.js:51 => test('complicated', function (t) {
./node_modules/detective/test/nested.js:1 => var test = require('tap').test;
./node_modules/detective/test/nested.js:6 => test('nested', function (t) {
./node_modules/detective/test/generators.js:1 => var test = require('tap').test;
./node_modules/detective/test/generators.js:6 => test('generators', function (t) {
./node_modules/detective/test/isrequire.js:1 => var test = require('tap').test;
./node_modules/detective/test/isrequire.js:6 => test('word', function (t) {
./node_modules/detective/test/parseopts.js:1 => var test = require('tap').test;
./node_modules/detective/test/parseopts.js:6 => test('nodes specified in opts and parseopts { range: true }', function (t) {
./node_modules/detective/test/parseopts.js:24 => test('nodes specified in opts and parseopts { range: false }', function (t) {
./node_modules/detective/test/parseopts.js:40 => test('nodes specified in opts and parseopts { range: true, loc: true }', function (t) {
./node_modules/detective/test/noargs.js:1 => var test = require('tap').test;
./node_modules/detective/test/noargs.js:9 => test('noargs', function (t) {
./node_modules/detective/test/noargs.js:14 => test('find noargs with nodes', function (t) {
./node_modules/detective/test/shebang.js:1 => var test = require('tap').test;
./node_modules/detective/test/shebang.js:6 => test('shebang', function (t) {
./node_modules/detective/test/return.js:1 => var test = require('tap').test;
./node_modules/detective/test/return.js:6 => test('return', function (t) {
./node_modules/detective/test/sparse-array.js:1 => var test = require('tap').test;
./node_modules/detective/test/sparse-array.js:6 => test('sparse-array', function (t) {
./node_modules/detective/test/word.js:1 => var test = require('tap').test;
./node_modules/detective/test/word.js:6 => test('word', function (t) {
./node_modules/detective/test/yield.js:1 => var test = require('tap').test;
./node_modules/detective/test/yield.js:6 => test('yield', function (t) {
./node_modules/detective/test/strings.js:1 => var test = require('tap').test;
./node_modules/detective/test/strings.js:6 => test('single', function (t) {
./node_modules/diff/diff.js:510 =>       while (i < diffstr.length && !(/^@@/.test(diffstr[i]))) {
./node_modules/diffie-hellman/lib/generatePrime.js:85 =>     if (!num.testn(1)) {
./node_modules/diffie-hellman/lib/generatePrime.js:100 =>       millerRabin.test(n2) && millerRabin.test(num)) {
./node_modules/diffie-hellman/lib/dh.js:43 =>     !millerRabin.test(prime)) {
./node_modules/diffie-hellman/lib/dh.js:52 =>       //we wouldn't be able to test the generator
./node_modules/diffie-hellman/lib/dh.js:59 =>   if (!millerRabin.test(prime.shrn(1))) {
./node_modules/es6-promise/dist/es6-promise.js:67 =>     // test for web worker but not in IE10
./node_modules/ecc-jsbn/lib/ec.js:204 => 	var hBit = h.testBit(i);
./node_modules/ecc-jsbn/lib/ec.js:205 => 	var eBit = e.testBit(i);
./node_modules/ecc-jsbn/lib/ec.js:227 =>     if(j.testBit(i)) {
./node_modules/ecc-jsbn/lib/ec.js:228 =>       if(k.testBit(i)) {
./node_modules/ecc-jsbn/lib/ec.js:236 =>       if(k.testBit(i)) {
./node_modules/events/tests/index.js:4 => // we do this to easily wrap each file in a mocha test
./node_modules/events/tests/index.js:8 =>     test(file, function() {
./node_modules/fs-readline/test/index.js:9 =>         var rl = readLine('test/fixtures/afile.txt');
./node_modules/fs-readline/test/index.js:27 =>         var rl = readLine('test/fixtures/nmbr.txt');
./node_modules/fs-readline/test/index.js:51 =>         var rl = readLine('test/fixtures/nmbr.txt');
./node_modules/fs-readline/test/index.js:77 =>         var rl = readLine('test/fixtures/nmbr.txt', {blankLine: false});
./node_modules/fs-readline/test/index.js:92 =>         var testFileValidationKeywords = {
./node_modules/fs-readline/test/index.js:99 =>         var rl = readLine('test/fixtures/file-in-win1251.txt', {retainBuffer: true});
./node_modules/fs-readline/test/index.js:103 =>             should.ok(!testFileValidationKeywords[idx] || line.indexOf(testFileValidationKeywords[idx]) > -1);
./node_modules/fs-readline/test/index.js:112 =>         var rl = readLine('test/fixtures/cut-mode.txt', {cutMode: true, maxLineLength: 4});
./node_modules/fs-readline/test/index.js:124 =>         var rl = readLine('test/fixtures/nmbr.txt');
./node_modules/glob/glob.js:693 =>     var trail = /[\/\\]$/.test(prefix)
./node_modules/globals/globals.json:896 => 		"test": false,
./node_modules/globals/globals.json:937 => 		"test": false,
./node_modules/globals/globals.json:940 => 		"xtest": false
./node_modules/globals/globals.json:960 => 		"test": false,
./node_modules/function-bind/test/index.js:1 => var test = require('tape');
./node_modules/function-bind/test/index.js:6 => test('functionBind is a function', function (t) {
./node_modules/function-bind/test/index.js:11 => test('non-functions', function (t) {
./node_modules/function-bind/test/index.js:22 => test('without a context', function (t) {
./node_modules/function-bind/test/index.js:23 =>     t.test('binds properly', function (st) {
./node_modules/function-bind/test/index.js:37 =>     t.test('binds properly, and still supplies bound arguments', function (st) {
./node_modules/function-bind/test/index.js:51 =>     t.test('returns properly', function (st) {
./node_modules/function-bind/test/index.js:65 =>     t.test('returns properly with bound arguments', function (st) {
./node_modules/function-bind/test/index.js:79 =>     t.test('called as a constructor', function (st) {
./node_modules/function-bind/test/index.js:83 =>         st.test('returns object value', function (sst) {
./node_modules/function-bind/test/index.js:91 =>         st.test('does not return primitive value', function (sst) {
./node_modules/function-bind/test/index.js:98 =>         st.test('object from bound constructor is instance of original and bound constructor', function (sst) {
./node_modules/function-bind/test/index.js:116 => test('with a context', function (t) {
./node_modules/function-bind/test/index.js:117 =>     t.test('with no bound arguments', function (st) {
./node_modules/function-bind/test/index.js:132 =>     t.test('with bound arguments', function (st) {
./node_modules/function-bind/test/index.js:147 =>     t.test('returns properly', function (st) {
./node_modules/function-bind/test/index.js:163 =>     t.test('returns properly with bound arguments', function (st) {
./node_modules/function-bind/test/index.js:179 =>     t.test('passes the correct arguments when called as a constructor', function (st) {
./node_modules/function-bind/test/index.js:191 =>     t.test('has the new instance\'s context when called as a constructor', function (st) {
./node_modules/function-bind/test/index.js:208 => test('bound function length', function (t) {
./node_modules/function-bind/test/index.js:209 =>     t.test('sets a correct length without thisArg', function (st) {
./node_modules/function-bind/test/index.js:216 =>     t.test('sets a correct length with thisArg', function (st) {
./node_modules/function-bind/test/index.js:223 =>     t.test('sets a correct length without thisArg and first argument', function (st) {
./node_modules/function-bind/test/index.js:230 =>     t.test('sets a correct length with thisArg and first argument', function (st) {
./node_modules/growl/lib/growl.js:188 =>         flag = flag || /^[A-Z]/.test(image) && 'appIcon'
./node_modules/growl/lib/growl.js:189 =>         flag = flag || /^png|gif|jpe?g$/.test(ext) && 'image'
./node_modules/hash.js/test/hmac-test.js:6 =>   describe('mixed test vector', function() {
./node_modules/hash.js/test/hmac-test.js:7 =>     test({
./node_modules/hash.js/test/hmac-test.js:15 =>     test({
./node_modules/hash.js/test/hmac-test.js:22 =>     test({
./node_modules/hash.js/test/hmac-test.js:32 =>     test({
./node_modules/hash.js/test/hmac-test.js:40 =>     test({
./node_modules/hash.js/test/hmac-test.js:48 =>     function test(opt) {
./node_modules/hash.js/test/hash-test.js:5 =>   function test(fn, cases) {
./node_modules/hash.js/test/hash-test.js:26 =>     test(hash.sha256, [
./node_modules/hash.js/test/hash-test.js:41 =>     test(hash.sha224, [
./node_modules/hash.js/test/hash-test.js:56 =>     test(hash.ripemd160, [
./node_modules/hash.js/test/hash-test.js:73 =>     test(hash.sha1, [
./node_modules/hash.js/test/hash-test.js:90 =>     test(hash.sha512, [
./node_modules/hash.js/test/hash-test.js:107 =>     test(hash.sha384, [
./node_modules/hawk/test/client.js:18 => var it = lab.test;
./node_modules/hawk/test/crypto.js:17 => var it = lab.test;
./node_modules/hawk/test/browser.js:20 => var it = lab.test;
./node_modules/hawk/test/readme.js:18 => var it = lab.test;
./node_modules/hawk/test/index.js:18 => var it = lab.test;
./node_modules/hmac-drbg/test/drbg-test.js:22 =>     const test = [
./node_modules/hmac-drbg/test/drbg-test.js:38 =>     for (let i = 0; i < test.length; i++)
./node_modules/hmac-drbg/test/drbg-test.js:39 =>       assert.equal(doDrbg(test[i]), test[i].res);
./node_modules/hawk/test/utils.js:18 => var it = lab.test;
./node_modules/hawk/test/server.js:19 => var it = lab.test;
./node_modules/hawk/test/uri.js:20 => var it = lab.test;
./node_modules/hawk/README.md:439 => The greatest sources of security risks are usually found not in **Hawk** but in the policies and procedures surrounding its use.
./node_modules/hoek/README.md:568 => var result = Hoek.uniqueFilename('./test/modules', 'txt'); // results in "full/path/test/modules/{random}.txt"
./node_modules/hoek/README.md:575 => - `path` - A file path to test for whether it is absolute or not.
./node_modules/hoek/test/escaper.js:17 => var it = lab.test;
./node_modules/hoek/test/index.js:19 => var it = lab.test;
./node_modules/hoek/test/index.js:74 =>         var test = function () {
./node_modules/hoek/test/index.js:79 =>         expect(test).to.not.throw();
./node_modules/hoek/test/index.js:284 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:296 =>         expect(copy.test).to.equal(1);
./node_modules/hoek/test/index.js:304 =>             _test: 0
./node_modules/hoek/test/index.js:307 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:312 =>                 return this._test;
./node_modules/hoek/test/index.js:316 =>                 this._test = value - 1;
./node_modules/hoek/test/index.js:321 =>         expect(copy.test).to.equal(0);
./node_modules/hoek/test/index.js:322 =>         copy.test = 5;
./node_modules/hoek/test/index.js:323 =>         expect(copy.test).to.equal(4);
./node_modules/hoek/test/index.js:330 =>             _test: 0
./node_modules/hoek/test/index.js:333 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:338 =>                 this._test = value - 1;
./node_modules/hoek/test/index.js:343 =>         expect(copy._test).to.equal(0);
./node_modules/hoek/test/index.js:344 =>         copy.test = 5;
./node_modules/hoek/test/index.js:345 =>         expect(copy._test).to.equal(4);
./node_modules/hoek/test/index.js:352 =>             _test: 0
./node_modules/hoek/test/index.js:355 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:360 =>                 this._test = value - 1;
./node_modules/http-signature/lib/parser.js:94 =>    *                   - strict: should enforce latest spec parsing
./node_modules/ieee754/test/basic.js:2 => var test = require('tape')
./node_modules/ieee754/test/basic.js:6 => test('read float', function (t) {
./node_modules/ieee754/test/basic.js:15 => test('write float', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:4 => var test = require('tap').test
./node_modules/inline-source-map/test/inline-source-map.js:25 => test('generated mappings', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:27 =>   t.test('one file no offset', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:79 =>   t.test('two files no offset', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:149 =>   t.test('one line source', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:164 =>   t.test('with offset', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:231 => test('given mappings, with one having no original', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:232 =>   t.test('no offset', function (t) {
./node_modules/inline-source-map/test/source-content.js:4 => var test = require('tap').test
./node_modules/inline-source-map/test/source-content.js:25 => test('generated mappings', function (t) {
./node_modules/inline-source-map/test/source-content.js:27 =>   t.test('one file with source content', function (t) {
./node_modules/inline-source-map/test/source-content.js:62 =>   t.test('two files with source content', function (t) {
./node_modules/inline-source-map/test/source-content.js:101 =>   t.test('two files, only one with source content', function (t) {
./node_modules/inline-source-map/test/source-content.js:136 =>   t.test('one file with empty source', function (t) {
./node_modules/insert-module-globals/test/always.js:1 => var test = require('tape')
./node_modules/insert-module-globals/test/always.js:8 => test('always true insert', function (t) {
./node_modules/insert-module-globals/test/always.js:31 => test('always true insert custom globals without defaults', function (t) {
./node_modules/insert-module-globals/test/always.js:64 => test('always truthy-but-not-true insert hidden from quick test is not really inserted; true is', function (t) {
./node_modules/insert-module-globals/test/always.js:66 =>     var testit = function(always, expected) {
./node_modules/insert-module-globals/test/always.js:91 =>         s.end(__dirname + '/always/hidden_from_quick_test.js');
./node_modules/insert-module-globals/test/always.js:95 =>     testit(always, expected);
./node_modules/insert-module-globals/test/always.js:98 =>     testit(always, expected);
./node_modules/insert-module-globals/test/insert.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/insert.js:8 => test('process.nextTick inserts', function (t) {
./node_modules/insert-module-globals/test/insert.js:23 => test('buffer inserts', function (t) {
./node_modules/insert-module-globals/test/global.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/global.js:9 => test('insert globals', function (t) {
./node_modules/insert-module-globals/test/global.js:40 => test('__filename and __dirname', function (t) {
./node_modules/insert-module-globals/test/return.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/return.js:8 => test('early return', function (t) {
./node_modules/insert-module-globals/test/isbuffer.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/isbuffer.js:8 => test('isbuffer', function (t) {
./node_modules/insert-module-globals/test/isbuffer.js:18 =>         t.notOk(/require("buffer")/.test(src), 'buffer not required in source')
./node_modules/insert-module-globals/test/isbuffer.js:19 =>         t.notOk(/require\("\//.test(src), 'absolute path not required in source')
./node_modules/insert-module-globals/test/sourcemap.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/sourcemap.js:7 => test('sourcemap', function (t) {
./node_modules/insert-module-globals/test/sourcemap.js:17 =>         t.deepEqual(sm.sources, [ 'test/sourcemap/main_es6.js' ]);
./node_modules/insert-module-globals/test/unprefix.js:1 => var test = require('tape');
./node_modules/insert-module-globals/test/unprefix.js:9 => test('unprefix - remove shebang and bom', function (t) {
./node_modules/insert-module-globals/test/unprefix.js:24 =>         t.notOk(/\ufeff/.test(src.toString()));
./node_modules/is-my-json-valid/test/json-schema.js:15 =>     tape('json-schema-test-suite '+f.description, function(t) {
./node_modules/is-my-json-valid/test/json-schema.js:17 =>       f.tests.forEach(function(test) {
./node_modules/is-my-json-valid/test/json-schema.js:18 =>         t.same(validate(test.data), test.valid, test.description)
./node_modules/is-buffer/test/basic.js:3 => var test = require('tape')
./node_modules/is-buffer/test/basic.js:5 => test('is-buffer', function (t) {
./node_modules/is-my-json-valid/test/misc.js:124 =>   t.ok(validate(['test']))
./node_modules/is-my-json-valid/test/misc.js:143 =>   t.ok(validate({list:['test']}))
./node_modules/is-my-json-valid/test/misc.js:249 =>   }, {formats: {as:function(s) { return /^a+$/.test(s) } }})
./node_modules/jodid25519/lib/curve255.js:148 =>      * test vectors, and is equivalent to the hex dump of the key in
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:10 =>     test.expect(numAssertions)
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:11 =>     test.done()
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:13 =>     test.ok(value, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:14 =>     test.equal(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:15 =>     test.notEqual(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:16 =>     test.deepEqual(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:17 =>     test.notDeepEqual(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:18 =>     test.strictEqual(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:19 =>     test.notStrictEqual(actual, expected, [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:20 =>     test.throws(block, [error], [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:21 =>     test.doesNotThrow(block, [error], [message])
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:22 =>     test.ifError(value)
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:30 =>   'no args': function(test) {
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:31 =>     test.expect(1);
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:32 =>     // tests here
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:33 =>     test.equal(jsdiff_cli.awesome(), 'awesome', 'should be awesome.');
./node_modules/jsdiff-cli/test/jsdiff-cli_test.js:34 =>     test.done();
./node_modules/jsesc/bin/jsesc:17 => 		if (/^(?:-h|--help|undefined)$/.test(option)) {
./node_modules/jsesc/bin/jsesc:47 => 		if (/^(?:-v|--version)$/.test(option)) {
./node_modules/jsesc/bin/jsesc:54 => 			if (/^(?:-s|--single-quotes)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:58 => 			if (/^(?:-d|--double-quotes)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:62 => 			if (/^(?:-w|--wrap)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:66 => 			if (/^(?:-e|--escape-everything)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:70 => 			if (/^(?:-t|--escape-etago)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:74 => 			if (/^(?:-6|--es6)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:78 => 			if (/^(?:-l|--lowercase-hex)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:82 => 			if (/^(?:-j|--json)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:86 => 			if (/^(?:-o|--object)$/.test(string)) {
./node_modules/jsesc/bin/jsesc:90 => 			if (/^(?:-p|--pretty)$/.test(string)) {
./node_modules/jsesc/man/jsesc.1:31 => escapes strings for use in JavaScript string literals while generating the shortest possible valid ASCII-only output.
./node_modules/jsbn/index.js:653 =>           if(!this.testBit(a-1))	// force MSB set
./node_modules/json-stable-stringify/test/cmp.js:1 => var test = require('tape');
./node_modules/json-stable-stringify/test/cmp.js:4 => test('custom comparison function', function (t) {
./node_modules/json-stable-stringify/test/nested.js:1 => var test = require('tape');
./node_modules/json-stable-stringify/test/nested.js:4 => test('nested', function (t) {
./node_modules/json-stable-stringify/test/str.js:1 => var test = require('tape');
./node_modules/json-stable-stringify/test/str.js:4 => test('simple object', function (t) {
./node_modules/json5/lib/require.js:13 => // Modeled off of (v0.6.18 link; check latest too):
./node_modules/json3/lib/json3.js:70 =>         // Return cached feature test result.
./node_modules/json3/lib/json3.js:88 =>             // A test function object with a custom `toJSON` method.
./node_modules/json3/lib/json3.js:107 =>                 // FF 3.1b3 pass this test.
./node_modules/json3/lib/json3.js:129 =>                 // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
./node_modules/jsonify/test/parse.js:1 => var test = require('tap').test;
./node_modules/jsonify/test/parse.js:5 => test('parse', function (t) {
./node_modules/jsonify/lib/stringify.js:23 =>     return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
./node_modules/jsonify/test/stringify.js:1 => var test = require('tap').test;
./node_modules/jsonify/test/stringify.js:5 => test('stringify', function (t) {
./node_modules/jsonparse/test/big-token.js:3 => var test = require('tape');
./node_modules/jsonparse/test/big-token.js:5 => test('can handle large tokens without running out of memory', function (t) {
./node_modules/jsonparse/test/offset.js:1 => var test = require('tape');
./node_modules/jsonparse/test/offset.js:51 => test('offset', function(t) {
./node_modules/jsonparse/test/boundary.js:1 => var test = require('tape');
./node_modules/jsonparse/test/boundary.js:4 => test('2 byte utf8 \'De\' character: д', function (t) {
./node_modules/jsonparse/test/boundary.js:20 => test('3 byte utf8 \'Han\' character: 我', function (t) {
./node_modules/jsonparse/test/boundary.js:34 => test('4 byte utf8 character (unicode scalar U+2070E): 𠜎', function (t) {
./node_modules/jsonparse/test/boundary.js:48 => test('3 byte utf8 \'Han\' character chunked inbetween 2nd and 3rd byte: 我', function (t) {
./node_modules/jsonparse/test/boundary.js:64 => test('4 byte utf8 character (unicode scalar U+2070E) chunked inbetween 2nd and 3rd byte: 𠜎', function (t) {
./node_modules/jsonparse/test/boundary.js:80 => test('1-4 byte utf8 character string chunked inbetween random bytes: Aж文𠜱B', function (t) {
./node_modules/jsonparse/test/primitives.js:1 => var test = require('tape');
./node_modules/jsonparse/test/primitives.js:32 => test('primitives', function (t) {
./node_modules/jsonparse/test/unvalid.js:1 => var test = require('tape');
./node_modules/jsonparse/test/unvalid.js:4 => test('unvalid', function (t) {
./node_modules/jsonparse/test/unvalid.js:14 =>   p.write('{"test": eer[');
./node_modules/jsonparse/test/utf8.js:1 => var test = require('tape');
./node_modules/jsonparse/test/utf8.js:4 => test('3 bytes of utf8', function (t) {
./node_modules/jsonparse/test/utf8.js:15 => test('utf8 snowman', function (t) {
./node_modules/jsonparse/test/utf8.js:26 => test('utf8 with regular ascii', function (t) {
./node_modules/jsonld/tests/manifest.jsonld:2 =>   "@context": "http://json-ld.org/test-suite/context.jsonld",
./node_modules/jsonld/test/node-document-loader-tests.js:2 =>  * Local tests for the node.js document loader
./node_modules/jsonld/test/node-document-loader-tests.js:31 =>       var iri = 'http://some.thing.test.com/my-thing.jsonld';
./node_modules/jsonld/test/node-document-loader-tests.js:50 =>       'x-test-header-1': 'First value',
./node_modules/jsonld/test/node-document-loader-tests.js:51 =>       'x-test-two': 2.34,
./node_modules/jsonld/test/node-document-loader-tests.js:59 =>       var iri = 'http://some.thing.test.com/my-thing.jsonld';
./node_modules/jsonld/test/node-document-loader-tests.js:81 =>       'x-test-header-3': 'Third value',
./node_modules/jsonld/tests/remote-context-server.js:12 =>   console.log('Remote context test server running on port ' + port + '...');
./node_modules/jsonld/tests/setImmediate.js:97 =>         // The test against `importScripts` prevents this implementation from being installed inside a web worker,
./node_modules/jsonld/tests/setImmediate.js:159 =>             // avoid letting anyone else trick us into firing off. We test the origin is still this window, and that a
./node_modules/jsonld/tests/test.js:25 =>     .option('--bail', 'Bail when a test fails')
./node_modules/jsonld/tests/test.js:92 => var JSONLD_TEST_SUITE = '../json-ld.org/test-suite';
./node_modules/jsonld/tests/test.js:187 => // run tests
./node_modules/jsonld/tests/test.js:196 =>   // run Web IDL tests
./node_modules/jsonld/tests/test.js:197 =>   // FIXME: hack to prevent Web IDL tests from running when running
./node_modules/jsonld/tests/test.js:198 =>   // local manifest tests that aren't part of the main JSON-LD test suite;
./node_modules/jsonld/tests/test.js:199 =>   // testing arch needs to be reworked to better support local tests and
./node_modules/jsonld/tests/test.js:201 =>   if(!_nodejs && ROOT_MANIFEST_DIR.indexOf('json-ld.org/test-suite') !== -1) {
./node_modules/jsonld/tests/test.js:202 =>     require('./webidl/testharness.js');
./node_modules/jsonld/tests/test.js:207 =>       add_result_callback(function(test) {
./node_modules/jsonld/tests/test.js:208 =>         it(test.name, function(done) {
./node_modules/jsonld/tests/test.js:210 =>           var msg = test.message || '';
./node_modules/jsonld/tests/test.js:213 =>             test.status = 0;
./node_modules/jsonld/tests/test.js:218 =>             test.status = 0;
./node_modules/jsonld/tests/test.js:220 =>           //earl.addAssertion({'@id': ?}, test.status === 0);
./node_modules/jsonld/tests/test.js:221 =>           assert.equal(test.status, 0, test.message);
./node_modules/jsonld/tests/test.js:225 =>       //add_completion_callback(function(tests, status) {});
./node_modules/jsonld/tests/test.js:227 =>       // ensure that stringification tests are passed
./node_modules/jsonld/tests/test.js:241 =>       idl_array.add_idls(readFile('./tests/webidl/JsonLdProcessor.idl'));
./node_modules/jsonld/tests/test.js:243 =>       idl_array.test();
./node_modules/jsonld/tests/test.js:265 =>  * Adds the tests for all entries in the given manifest.
./node_modules/jsonld/tests/test.js:291 =>         // assume entry is a test
./node_modules/JSONStream/test/browser.js:1 => var test = require('tape')
./node_modules/JSONStream/test/browser.js:3 => var testData = '{"rows":[{"hello":"world"}, {"foo": "bar"}]}'
./node_modules/JSONStream/test/browser.js:5 => test('basic parsing', function (t) {
./node_modules/JSONStream/test/browser.js:16 =>   parsed.write(testData)
./node_modules/JSONStream/test/gen.js:1 => return // dont run this test for now since tape is weird and broken on 0.10
./node_modules/JSONStream/test/gen.js:5 => var file = process.argv[2] || '/tmp/JSONStream-test-large.json'
./node_modules/JSONStream/test/gen.js:60 =>     // generates test data
./node_modules/JSONStream/test/gen.js:102 =>     var testJSONStreamParse_causesOutOfMem = function (done) {
./node_modules/JSONStream/test/gen.js:128 =>         generateTestData(testJSONStreamParse_causesOutOfMem);
./node_modules/JSONStream/test/gen.js:130 =>         testJSONStreamParse_causesOutOfMem()
./node_modules/JSONStream/test/issues.js:2 => var test = require('tape')
./node_modules/JSONStream/test/issues.js:4 => test('#66', function (t) {
./node_modules/JSONStream/test/issues.js:22 => test('#81 - failure to parse nested objects', function (t) {
./node_modules/JSONStream/test/map.js:2 => var test = require('tape')
./node_modules/JSONStream/test/map.js:6 => test('map function', function (t) {
./node_modules/JSONStream/test/map.js:23 => test('filter function', function (t) {
./node_modules/JSONStream/test/keys.js:1 => var test = require('tape');
./node_modules/JSONStream/test/keys.js:32 => test('keys via string', function(t) {
./node_modules/JSONStream/test/keys.js:37 => test('keys via array', function(t) {
./node_modules/JSONStream/test/keys.js:42 => test('path via array', function(t) {
./node_modules/JSONStream/test/keys.js:62 => test('advanced keys', function(t) {
./node_modules/JSONStream/test/keys.js:88 => test('parent keys', function(t) {
./node_modules/JSONStream/test/null.js:13 => var test = require('tape')
./node_modules/JSONStream/test/null.js:15 => test ('null properties', function (t) {
./node_modules/labeled-stream-splicer/test/bundle.js:1 => var test = require('tape');
./node_modules/labeled-stream-splicer/test/bundle.js:8 => test('bundle', function (t) {
./node_modules/lexical-scope/test/argument.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/argument.js:6 => test('parameters from inline arguments', function (t) {
./node_modules/lexical-scope/test/assign_implicit.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/assign_implicit.js:6 => test('assign from an implicit global', function (t) {
./node_modules/lexical-scope/test/labels.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/labels.js:6 => test('globals on the right-hand of a colon in an object literal', function (t) {
./node_modules/lexical-scope/test/detect.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/detect.js:6 => test('check locals and globals', function (t) {
./node_modules/lexical-scope/test/multiple-exports.js:2 => var test = require('tape');
./node_modules/lexical-scope/test/multiple-exports.js:7 => test('multiple-exports', function (t) {
./node_modules/lexical-scope/test/named_arg.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/named_arg.js:6 => test('named argument parameter', function (t) {
./node_modules/lexical-scope/test/obj.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/obj.js:6 => test('globals on the right-hand of a colon in an object literal', function (t) {
./node_modules/lexical-scope/test/return_hash.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/return_hash.js:6 => test('return hash', function (t) {
./node_modules/lexical-scope/test/props.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/props.js:10 => test('implicit props: call', function (t) {
./node_modules/lexical-scope/test/props.js:21 => test('implicit props: isBuffer', function (t) {
./node_modules/lexical-scope/test/props.js:32 => test('implicit props: var', function (t) {
./node_modules/lexical-scope/test/right_hand.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/right_hand.js:6 => test('globals on the right-hand of assignment', function (t) {
./node_modules/lodash/lodash.min.js:32 => u.delete(n),u.delete(t),t=c}}else t=false;else t=false}}return t}function Nt(n){return xu(n)&&"[object Map]"==yo(n)}function Pt(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=ni(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return false}for(;++u<i;){var f=r[u],c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===F&&!(c in n))return false}else{if(f=new Vn,e)var s=e(a,l,c,n,t,f);if(s===F?!Ft(l,a,3,e,f):!s)return false}}return true}function Zt(n){return!(!bu(n)||li&&li in n)&&(gu(n)?_i:xn).test(Fe(n))}function qt(n){
./node_modules/lexical-scope/test/shebang.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/shebang.js:8 => test('shebangs', function (t) {
./node_modules/lexical-scope/test/try_catch.js:1 => var test = require('tape');
./node_modules/lexical-scope/test/try_catch.js:6 => test('the exception in a try catch block is a local', function (t) {
./node_modules/micromatch/lib/expand.js:82 =>   if (/[{,]\./.test(glob.pattern)) {
./node_modules/micromatch/lib/expand.js:160 =>       if (tok.path.dirname !== '' || /,\*\*|\*\*,/.test(glob.orig)) {
./node_modules/micromatch/lib/expand.js:205 =>     if (/^[\[?*]/.test(glob.pattern)) {
./node_modules/micromatch/README.md:667 => ## Running tests
./node_modules/micromatch/README.md:672 => $ npm install -d && npm test
./node_modules/micromatch/lib/utils.js:96 =>     return name && re.test(name);
./node_modules/miller-rabin/test/api-test.js:6 =>   it('should test number for primality', function() {
./node_modules/miller-rabin/test/api-test.js:7 =>     assert(!mr.test(new bn(221)));
./node_modules/miller-rabin/test/api-test.js:8 =>     assert(mr.test(new bn(257)));
./node_modules/miller-rabin/test/api-test.js:16 =>     assert(mr.test(p));
./node_modules/miller-rabin/lib/mr.js:28 => MillerRabin.prototype.test = function test(n, k, cb) {
./node_modules/miller-rabin/lib/mr.js:39 =>   for (var s = 0; !n1.testn(s); s++) {}
./node_modules/miller-rabin/lib/mr.js:81 =>   for (var s = 0; !n1.testn(s); s++) {}
./node_modules/micromatch/lib/glob.js:155 =>     if (/[a-z]/i.test($0)) {
./node_modules/minifyify/test/bundles.js:12 =>   , testApp
./node_modules/minifyify/test/bundles.js:19 =>   , tests = {
./node_modules/minifyify/test/bundles.js:64 => testApp = function(appname, cb, opts) {
./node_modules/minifyify/test/bundles.js:99 => function testFilter(appname, opts, expected_unminified, cb){
./node_modules/minifyify/test/bundles.js:129 =>   testApp(appname, assertUnminified, opts);
./node_modules/minifyify/test/bundles.js:132 => tests['simple file'] = function (next) {
./node_modules/minifyify/test/bundles.js:133 =>   testApp('simple file', next);
./node_modules/minifyify/test/bundles.js:136 => tests['complex file'] = function (next) {
./node_modules/minifyify/test/bundles.js:137 =>   testApp('complex file', next);
./node_modules/minifyify/test/bundles.js:140 => tests['complex file with include filter'] = function (next) {
./node_modules/minifyify/test/bundles.js:141 =>   testFilter(
./node_modules/minifyify/test/bundles.js:149 => tests['complex file with exclude filter'] = function (next) {
./node_modules/minifyify/test/bundles.js:150 =>   testFilter(
./node_modules/minifyify/test/bundles.js:158 => tests['complex file with filters'] = function (next) {
./node_modules/minifyify/test/bundles.js:159 =>   testFilter(
./node_modules/minifyify/test/bundles.js:167 => tests['default base path'] = function (next) {
./node_modules/minifyify/test/bundles.js:169 =>   testFilter(
./node_modules/minifyify/test/bundles.js:171 =>     {include:['**/*.js'], exclude:['test/fixtures/default base path/dirA/*.js', 'dirB/*.js']},
./node_modules/minifyify/test/bundles.js:177 => tests['custom base path'] = function (next) {
./node_modules/minifyify/test/bundles.js:178 =>   testFilter(
./node_modules/minifyify/test/bundles.js:180 =>     {include:['**/*.js','*.js'], exclude:['dirA/*.js', 'dirB/*.js'], base:'test/fixtures/custom base path/'},
./node_modules/minifyify/test/bundles.js:186 => tests['native libs'] = function (next) {
./node_modules/minifyify/test/bundles.js:187 =>   testApp('native libs', next);
./node_modules/minifyify/test/bundles.js:190 => tests['brfs app'] = function (next) {
./node_modules/minifyify/test/bundles.js:191 =>   testApp('brfs app', next);
./node_modules/minifyify/test/bundles.js:198 => tests['coffee app'] = function (next) {
./node_modules/minifyify/test/bundles.js:199 =>   testApp('coffee app', next);
./node_modules/minifyify/test/bundles.js:204 => tests['backbone app'] = function (next) {
./node_modules/minifyify/test/bundles.js:205 =>   testApp('backbone app', next);
./node_modules/minifyify/test/bundles.js:208 => tests['transformed app'] = function (next) {
./node_modules/minifyify/test/bundles.js:209 =>   testApp('transformed app', next);
./node_modules/minifyify/test/bundles.js:212 => tests['opts.map = false should not produce a sourcemap'] = function (next) {
./node_modules/minifyify/test/bundles.js:220 => tests['opts.map = true should produce a sourcemap'] = function (next) {
./node_modules/minifyify/test/bundles.js:228 => tests['opts.sourcesContent = false should produce a map without sourcesContent'] = function (next) {
./node_modules/minifyify/test/bundles.js:238 => tests['opts.uglify.compress = false should not compress'] = function (next) {
./node_modules/minimatch/minimatch.js:716 =>   // treat the test path as a set of pathparts.
./node_modules/minimatch/minimatch.js:755 => // set partial to true to test if, for example,
./node_modules/minifyify/test/plugin-api.js:11 =>   , tests = {};
./node_modules/minifyify/test/plugin-api.js:13 => tests['browserify -d -p minifyify --map mapFile > out.js'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:74 => tests['programmatic plugin api'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:89 => tests['programmatic plugin api with --output'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:113 => tests['programmatic plugin api with --map and --output'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:137 => tests['programmatic plugin api with minify=false and output'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:153 => tests['programmatic plugin api with minify=false and compressPath'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:173 => tests['programmatic plugin api with minify=false and map'] = function (next) {
./node_modules/minifyify/test/plugin-api.js:195 => tests['multiple bundles with the same transform'] = function (next) {
./node_modules/minifyify/test/user-errors.js:12 =>   , tests = {};
./node_modules/minifyify/test/user-errors.js:14 => tests['browserify is not in debug mode'] = function (next) {
./node_modules/minifyify/test/user-errors.js:47 => module.exports = tests;
./node_modules/minimist/test/dash.js:2 => var test = require('tape');
./node_modules/minimist/test/dash.js:4 => test('-', function (t) {
./node_modules/minimist/test/dash.js:19 => test('-a -- b', function (t) {
./node_modules/minimist/test/dotted.js:2 => var test = require('tape');
./node_modules/minimist/test/dotted.js:4 => test('dotted alias', function (t) {
./node_modules/minimist/test/dotted.js:11 => test('dotted default', function (t) {
./node_modules/minimist/test/long.js:1 => var test = require('tape');
./node_modules/minimist/test/long.js:4 => test('long opts', function (t) {
./node_modules/minimist/test/default_bool.js:1 => var test = require('tape');
./node_modules/minimist/test/default_bool.js:4 => test('boolean default true', function (t) {
./node_modules/minimist/test/default_bool.js:13 => test('boolean default false', function (t) {
./node_modules/minimist/test/short.js:2 => var test = require('tape');
./node_modules/minimist/test/short.js:4 => test('numeric short args', function (t) {
./node_modules/minimist/test/short.js:13 => test('short', function (t) {
./node_modules/minimist/test/short.js:47 => test('mixed short bool and capture', function (t) {
./node_modules/minimist/test/short.js:58 => test('short and long', function (t) {
./node_modules/mocha/CHANGELOG.md:340 => * [#2082] - Fix several test assertions ([@mislav])
./node_modules/mocha/CHANGELOG.md:382 => * [#1945] - Correctly skip tests when skipping in suite's before() ([@ryanshawty])
./node_modules/mocha/CHANGELOG.md:385 => * [#2033] - Update tests for newer versions of should.js ([@tomhughes])
./node_modules/mocha/CHANGELOG.md:386 => * [#2037] - Fix for memory leak caused by referenced to deferred test ([@bd82])
./node_modules/mocha/CHANGELOG.md:388 => * [#2028] - Remove reference to test before afterAll hook runs ([@stonelgh])
./node_modules/mocha/CHANGELOG.md:391 => * Add the ability to retry tests ([@@longlho])
./node_modules/mocha/CHANGELOG.md:454 =>   * Fix typo in test/reporters/nyan.js
./node_modules/mocha/CHANGELOG.md:463 =>  * [#1669] - Fix catch uncaught errors outside test suite execution ([@danielstjules])
./node_modules/minimist/test/whitespace.js:2 => var test = require('tape');
./node_modules/minimist/test/whitespace.js:4 => test('whitespace should be whitespace' , function (t) {
./node_modules/minimist/test/parse.js:2 => var test = require('tape');
./node_modules/minimist/test/parse.js:4 => test('parse args', function (t) {
./node_modules/minimist/test/parse.js:18 => test('comprehensive', function (t) {
./node_modules/minimist/test/parse.js:45 => test('nums', function (t) {
./node_modules/minimist/test/parse.js:71 => test('flag boolean', function (t) {
./node_modules/minimist/test/parse.js:78 => test('flag boolean value', function (t) {
./node_modules/minimist/test/parse.js:95 => test('flag boolean default false', function (t) {
./node_modules/minimist/test/parse.js:113 => test('boolean groups', function (t) {
./node_modules/minimist/test/parse.js:131 => test('newlines in params' , function (t) {
./node_modules/minimist/test/parse.js:144 => test('strings' , function (t) {
./node_modules/minimist/test/parse.js:155 => test('stringArgs', function (t) {
./node_modules/minimist/test/parse.js:165 => test('empty strings', function(t) {
./node_modules/minimist/test/parse.js:186 => test('slashBreak', function (t) {
./node_modules/minimist/test/parse.js:198 => test('alias', function (t) {
./node_modules/minimist/test/parse.js:208 => test('multiAlias', function (t) {
./node_modules/minimist/test/parse.js:219 => test('nested dotted objects', function (t) {
./node_modules/minimist/test/parse.js:238 => test('boolean and alias with chainable api', function (t) {
./node_modules/minimist/test/parse.js:263 => test('boolean and alias with options hash', function (t) {
./node_modules/minimist/test/parse.js:282 => test('boolean and alias using explicit true', function (t) {
./node_modules/minimist/test/parse.js:303 => test('boolean and --x=true', function(t) {
./node_modules/minimist/test/parse_modified.js:2 => var test = require('tape');
./node_modules/minimist/test/parse_modified.js:4 => test('parse with modifier functions' , function (t) {
./node_modules/mocha/bin/options.js:21 =>     ? 'test/mocha.opts'
./node_modules/mocha/bin/_mocha:65 =>   .option('-A, --async-only', 'force all tests to take a callback (async) or return a promise')
./node_modules/mocha/bin/_mocha:71 =>   .option('-S, --sort', 'sort test files')
./node_modules/mocha/bin/_mocha:72 =>   .option('-b, --bail', 'bail after first test failure')
./node_modules/mocha/bin/_mocha:74 =>   .option('-g, --grep <pattern>', 'only run tests matching <pattern>')
./node_modules/mocha/bin/_mocha:75 =>   .option('-f, --fgrep <string>', 'only run tests containing <string>')
./node_modules/mocha/bin/_mocha:79 =>   .option('-s, --slow <ms>', '"slow" test threshold in milliseconds [75]')
./node_modules/mocha/bin/_mocha:80 =>   .option('-t, --timeout <ms>', 'set test-case timeout in milliseconds [2000]')
./node_modules/mocha/bin/_mocha:98 =>   .option('--opts <path>', 'specify opts path', 'test/mocha.opts')
./node_modules/mocha/bin/_mocha:104 =>   .option('--retries <times>', 'set numbers of time to retry a failed test case')
./node_modules/mocha/bin/_mocha:127 =>     fs.writeFileSync(join(path, 'tests.js'), '');
./node_modules/mocha/bin/_mocha:148 =>   console.log('    tap - test-anything-protocol');
./node_modules/mocha/lib/hook.js:34 =>  * Get or set the test `err`.
./node_modules/mocha/lib/context.js:33 =>   this.test = this._runnable = runnable;
./node_modules/mocha/lib/context.js:38 =>  * Set test timeout `ms`.
./node_modules/mocha/lib/context.js:53 =>  * Set test timeout `enabled`.
./node_modules/mocha/lib/context.js:65 =>  * Set test slowness threshold `ms`.
./node_modules/mocha/lib/context.js:77 =>  * Mark a test as skipped.
./node_modules/mocha/lib/context.js:88 =>  * Allow a number of retries on failed tests
./node_modules/mocha/lib/context.js:110 =>     return key === 'runnable' || key === 'test' ? undefined : val;
./node_modules/mocha/lib/mocha.js:45 => exports.Test = require('./test');
./node_modules/mocha/lib/mocha.js:67 =>  *   - `retries` number of times to retry failed tests
./node_modules/mocha/lib/mocha.js:68 =>  *   - `bail` bail on the first test failure
./node_modules/mocha/lib/mocha.js:69 =>  *   - `slow` milliseconds to wait before considering a test slow
./node_modules/mocha/lib/mocha.js:72 =>  *   - `grep` string or regexp to filter tests with
./node_modules/mocha/lib/mocha.js:121 =>  * Add test `file`.
./node_modules/mocha/lib/mocha.js:175 =>  * Set test UI `name`, defaults to "bdd".
./node_modules/mocha/lib/mocha.js:198 =>     exports.it = context.it || context.test;
./node_modules/mocha/lib/mocha.js:204 =>     exports.test = context.test || context.it;
./node_modules/mocha/lib/mocha.js:239 =>       var msg = stats.failures + ' of ' + runner.total + ' tests failed';
./node_modules/mocha/lib/mocha.js:242 =>       notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {
./node_modules/mocha/lib/template.html:13 =>     <script src="tests.js"></script>
./node_modules/mocha/lib/runner.js:51 =>  *   - `suite`  (suite) test suite execution started
./node_modules/mocha/lib/runner.js:52 =>  *   - `suite end`  (suite) all tests (and sub-suites) have finished
./node_modules/mocha/lib/runner.js:53 =>  *   - `test`  (test) test execution started
./node_modules/mocha/lib/runner.js:54 =>  *   - `test end`  (test) test completed
./node_modules/mocha/lib/runner.js:57 =>  *   - `pass`  (test) test passed
./node_modules/mocha/lib/runner.js:58 =>  *   - `fail`  (test, err) test failed
./node_modules/mocha/lib/runner.js:59 =>  *   - `pending`  (test) test pending
./node_modules/mocha/lib/runner.js:75 =>   this.on('test end', function (test) {
./node_modules/mocha/lib/runner.js:76 =>     self.checkGlobals(test);
./node_modules/mocha/lib/runner.js:100 =>  * Run tests with full titles matching `re`. Updates runner.total
./node_modules/mocha/lib/runner.js:101 =>  * with number of tests matched.
./node_modules/mocha/lib/runner.js:120 =>  * Returns the number of tests matching the grep search for the
./node_modules/mocha/lib/runner.js:133 =>   suite.eachTest(function (test) {
./node_modules/mocha/lib/runner.js:134 =>     var match = self._grep.test(test.fullTitle());
./node_modules/mocha/lib/runner.js:189 => Runner.prototype.checkGlobals = function (test) {
./node_modules/mocha/lib/runner.js:198 =>   if (test) {
./node_modules/mocha/lib/runner.js:199 =>     ok = ok.concat(test._allowedGlobals || []);
./node_modules/mocha/lib/runner.js:211 =>     this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));
./node_modules/mocha/lib/runner.js:213 =>     this.fail(test, new Error('global leak detected: ' + leaks[0]));
./node_modules/mocha/lib/runner.js:218 =>  * Fail the given `test`.
./node_modules/mocha/lib/runner.js:221 =>  * @param {Test} test
./node_modules/mocha/lib/runner.js:224 => Runner.prototype.fail = function (test, err) {
./node_modules/mocha/lib/runner.js:225 =>   if (test.isPending()) {
./node_modules/mocha/lib/runner.js:230 =>   test.state = 'failed';
./node_modules/mocha/lib/runner.js:244 =>   this.emit('fail', test, err);
./node_modules/mocha/lib/runner.js:252 =>  * - Failed `before` hook skips all tests in a suite and subsuites,
./node_modules/mocha/lib/runner.js:254 =>  * - Failed `before each` hook skips remaining tests in a
./node_modules/mocha/lib/runner.js:259 =>  * - Failed `after each` hook skips remaining tests in a
./node_modules/mocha/lib/runner.js:299 =>     hook.ctx.currentTest = self.test;
./node_modules/mocha/lib/runner.js:310 =>       var testError = hook.error();
./node_modules/mocha/lib/runner.js:311 =>       if (testError) {
./node_modules/mocha/lib/runner.js:312 =>         self.fail(self.test, testError);
./node_modules/mocha/lib/runner.js:317 =>             self.test.pending = true;
./node_modules/mocha/lib/runner.js:319 =>             utils.forEach(suite.tests, function (test) {
./node_modules/mocha/lib/runner.js:320 =>               test.pending = true;
./node_modules/mocha/lib/test.js:30 =>   this.type = 'test';
./node_modules/mocha/lib/test.js:41 =>   var test = new Test(this.title, this.fn);
./node_modules/mocha/lib/test.js:42 =>   test.timeout(this.timeout());
./node_modules/mocha/lib/test.js:43 =>   test.slow(this.slow());
./node_modules/mocha/lib/test.js:44 =>   test.enableTimeouts(this.enableTimeouts());
./node_modules/mocha/lib/test.js:45 =>   test.retries(this.retries());
./node_modules/mocha/lib/test.js:46 =>   test.currentRetry(this.currentRetry());
./node_modules/mocha/lib/test.js:47 =>   test.globals(this.globals());
./node_modules/mocha/lib/test.js:48 =>   test.parent = this.parent;
./node_modules/mocha/lib/test.js:49 =>   test.file = this.file;
./node_modules/mocha/lib/test.js:50 =>   test.ctx = this.ctx;
./node_modules/mocha/lib/test.js:51 =>   return test;
./node_modules/mocha/lib/suite.js:23 =>  * nicer reporter and more flexible meta-testing.
./node_modules/mocha/lib/suite.js:54 =>   this.tests = [];
./node_modules/mocha/lib/suite.js:117 =>  * Set number of times to retry a failed test.
./node_modules/mocha/lib/suite.js:193 =>  * Run `fn(test[, done])` before running tests.
./node_modules/mocha/lib/suite.js:223 =>  * Run `fn(test[, done])` after running tests.
./node_modules/mocha/lib/suite.js:253 =>  * Run `fn(test[, done])` before each test case.
./node_modules/mocha/lib/suite.js:283 =>  * Run `fn(test[, done])` after each test case.
./node_modules/mocha/lib/suite.js:313 =>  * Add a test `suite`.
./node_modules/mocha/lib/suite.js:332 =>  * Add a `test` to this suite.
./node_modules/mocha/lib/suite.js:335 =>  * @param {Test} test
./node_modules/mocha/lib/suite.js:338 => Suite.prototype.addTest = function (test) {
./node_modules/mocha/lib/suite.js:339 =>   test.parent = this;
./node_modules/mocha/lib/suite.js:340 =>   test.timeout(this.timeout());
./node_modules/mocha/lib/suite.js:341 =>   test.retries(this.retries());
./node_modules/mocha/lib/suite.js:342 =>   test.enableTimeouts(this.enableTimeouts());
./node_modules/mocha/lib/suite.js:343 =>   test.slow(this.slow());
./node_modules/mocha/lib/suite.js:344 =>   test.ctx = this.ctx;
./node_modules/mocha/lib/suite.js:345 =>   this.tests.push(test);
./node_modules/mocha/lib/suite.js:346 =>   this.emit('test', test);
./node_modules/mocha/lib/suite.js:368 =>  * Return the total number of tests.
./node_modules/mocha/lib/runnable.js:233 =>       'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.'));
./node_modules/mocha/lib/runnable.js:239 =>  * Whitelist a list of globals for this test run.
./node_modules/mocha/lib/runnable.js:252 =>  * Run the test and invoke `fn(err)`.
./node_modules/mocha/lib/runnable.js:293 =>       'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.');
./node_modules/module-deps/test/cache.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cache.js:25 => test('uses cache', function (t) {
./node_modules/module-deps/test/bundle.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/bundle.js:7 => test('bundle', function (t) {
./node_modules/module-deps/test/cache_expose.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cache_expose.js:25 => test('cache preserves expose and entry', function (t) {
./node_modules/module-deps/test/cache_partial.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cache_partial.js:22 => test('uses cache and reads from disk', function (t) {
./node_modules/module-deps/test/cache_partial_expose.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cache_partial_expose.js:46 => test('preserves expose and entry with partial cache', function(t) {
./node_modules/module-deps/test/cycle.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cycle.js:8 => test('cycle', function (t) {
./node_modules/module-deps/test/cache_persistent.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/cache_persistent.js:11 => test('uses persistent cache', function (t) {
./node_modules/module-deps/test/cache_persistent.js:47 => test('passes persistent cache error through', function (t) {
./node_modules/module-deps/test/cache_persistent.js:58 => test('allow passing of the raw source as string', function (t) {
./node_modules/module-deps/test/deps.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/deps.js:17 => test('deps', function (t) {
./node_modules/module-deps/test/expose.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/expose.js:16 => test('single id export', function (t) {
./node_modules/module-deps/test/file_cache.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/file_cache.js:24 => test('uses file cache', function (t) {
./node_modules/module-deps/test/dotdot.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/dotdot.js:6 => test('dotdot', function (t) {
./node_modules/module-deps/test/ignore_missing.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/ignore_missing.js:16 => test('ignoreMissing', function (t) {
./node_modules/module-deps/test/ignore_missing.js:42 => test('ignoreMissing off', function (t) {
./node_modules/module-deps/test/filter.js:1 => var test = require('tap').test;
./node_modules/module-deps/test/filter.js:11 => test('can filter core deps', function (t) {
./node_modules/module-deps/test/noparse_row.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/noparse_row.js:18 => test('noParse row', function (t) {
./node_modules/module-deps/test/noparse.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/noparse.js:17 => test('noParse', function (t) {
./node_modules/module-deps/test/pkg.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/pkg.js:8 => test('pkg', function (t) {
./node_modules/module-deps/test/pkg_filter.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/pkg_filter.js:8 => test('pkg filter', function (t) {
./node_modules/module-deps/test/pkg_filter.js:18 =>     p.end(path.join(__dirname, '/files/pkg_filter/test.js'));
./node_modules/module-deps/test/row_expose.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/row_expose.js:9 => test('row is exposed', function (t) {
./node_modules/module-deps/test/row_expose_name_is_file_transform.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/row_expose_name_is_file_transform.js:6 => // test that (non global) transforms are applied to an exposed module, where in the
./node_modules/module-deps/test/row_expose_name_is_file_transform.js:8 => test('row is exposed with a name equal to the path, and transformed', function (t) {
./node_modules/module-deps/test/source.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/source.js:19 => test('source', function (t) {
./node_modules/module-deps/test/tr_err.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_err.js:8 => test('transform', function (t) {
./node_modules/module-deps/test/tr_err.js:18 =>         t.ok(/tr_sh[\\\/]main\.js/.test(err));
./node_modules/module-deps/test/ignore_missing_cache.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/ignore_missing_cache.js:26 => test('ignoreMissing with cache', function (t) {
./node_modules/module-deps/test/tr_flags.js:3 => var test = require('tap').test;
./node_modules/module-deps/test/tr_flags.js:5 => test('--debug passed to transforms', function (t) {
./node_modules/module-deps/test/tr_global.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_global.js:8 => test('global transforms', function (t) {
./node_modules/module-deps/test/tr_fn.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_fn.js:8 => test('transform', function (t) {
./node_modules/module-deps/test/row_expose_transform.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/row_expose_transform.js:6 => // test that (non global) transforms are applied to an exposed module
./node_modules/module-deps/test/row_expose_transform.js:7 => test('row is exposed and transformed', function (t) {
./node_modules/module-deps/test/tr_module.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_module.js:7 => test('transform', function (t) {
./node_modules/module-deps/test/tr_opts.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_opts.js:8 => test('transform options', function (t) {
./node_modules/module-deps/test/tr_no_entry.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_no_entry.js:9 => test('transform no entry', function (t) {
./node_modules/module-deps/test/tr_sh.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_sh.js:7 => test('transform', function (t) {
./node_modules/module-deps/test/tr_whole_package.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_whole_package.js:7 => test('transform', function (t) {
./node_modules/module-deps/test/tr_rel.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_rel.js:7 => test('transform', function (t) {
./node_modules/module-deps/test/tr_2dep_module.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_2dep_module.js:7 => test('transform', function (t) {
./node_modules/module-deps/test/tr_write.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/tr_write.js:8 => test('transform write', function (t) {
./node_modules/module-deps/test/unicode.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/unicode.js:17 => test('unicode deps', function (t) {
./node_modules/module-deps/test/undef_file.js:2 => var test = require('tap').test;
./node_modules/module-deps/test/undef_file.js:17 => test('undef file', function (t) {
./node_modules/n3/lib/N3Lexer.js:30 =>         if (!error && /^(?:IRI|prefixed|literal|langcode|type|\.|eof)$/.test(token.type))
./node_modules/n3/lib/N3Lexer.js:77 =>       if (this._endOfFile.test(input)) {
./node_modules/n3/lib/N3Lexer.js:108 =>           if (unescaped === null || illegalIriChars.test(unescaped))
./node_modules/n3/lib/N3Parser.js:30 =>       isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),
./node_modules/n3/lib/N3Parser.js:117 =>       if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Parser.js:154 =>       if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Parser.js:189 =>       if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Util.js:55 =>     return entity && /^[^:\/"']*:[^:\/"']+$/.test(entity);
./node_modules/n3/lib/N3Util.js:94 =>            (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '"@'  + modifier.toLowerCase()
./node_modules/n3/lib/N3Writer.js:42 =>   if (!(/triple|quad/i).test(options.format)) {
./node_modules/n3/lib/N3Writer.js:114 =>     if (escape.test(entity))
./node_modules/n3/lib/N3Writer.js:125 =>     if (escape.test(value))
./node_modules/n3/lib/N3Writer.js:203 =>       if (/[#\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {
./node_modules/n3/perf/N3Store-perf.js:5 => console.log('N3Store performance test');
./node_modules/n3/spec/SpecTester.js:11 => // How many test cases may run in parallel?
./node_modules/n3/spec/SpecTester.js:16 =>   mf:   'http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#',
./node_modules/n3/spec/SpecTester.js:19 =>   rdft: 'http://www.w3.org/ns/rdftest#',
./node_modules/n3/spec/SpecTester.js:32 => // Base class for objects that execute W3C spec test cases
./node_modules/n3/spec/SpecTester.js:42 =>     this._testFolder   = path.join(__dirname, this._name),
./node_modules/n3/spec/SpecTester.js:51 => // Fetches the manifest, executes all tests, and reports results
./node_modules/n3/spec/SpecTester.js:56 =>   // 1. Fetch the tests, execute them, and generate the report
./node_modules/n3/spec/SpecTester.js:62 =>     // 1.2 Execute all tests in the manifest
./node_modules/n3/spec/SpecTester.js:64 =>       async.mapLimit(manifest.tests, workers,
./node_modules/n3/spec/SpecTester.js:65 =>         // 1.2.1 Execute an individual test
./node_modules/n3/spec/SpecTester.js:66 =>         function (test, callback) {
./node_modules/n3/spec/SpecTester.js:67 =>           async.series({ actionStream: self._fetch.bind(self, test.action),
./node_modules/n3/spec/SpecTester.js:68 =>                          resultStream: self._fetch.bind(self, test.result) },
./node_modules/n3/spec/SpecTester.js:71 =>               self._performTest(test, results.actionStream, callback);
./node_modules/n3/spec/SpecTester.js:74 =>         // 1.2.2 Show the summary of all performed tests
./node_modules/n3/spec/SpecTester.js:75 =>         function showSummary(error, tests) {
./node_modules/n3/spec/SpecTester.js:76 =>           var score = tests.reduce(function (sum, test) { return sum + test.success; }, 0);
./node_modules/n3/spec/SpecTester.js:77 =>           manifest.skipped.forEach(function (test) { self._verifyResult(test); });
./node_modules/n3/spec/SpecTester.js:79 =>                        ' out of ' + manifest.tests.length + ' tests' +
./node_modules/n3/spec/SpecTester.js:81 =>           callback(error, tests);
./node_modules/n3/spec/SpecTester.js:86 =>     function (tests, callback) { self._generateEarlReport(tests, callback); },
./node_modules/n3/spec/SpecTester.js:89 =>     function (tests) {
./node_modules/n3/spec/SpecTester.js:90 =>       process.exit(tests.every(function (test) { return test.success; }) ? 0 : 1);
./node_modules/n3/spec/SpecTester.js:105 =>   var localFile = path.join(this._testFolder, filename), self = this;
./node_modules/n3/spec/SpecTester.js:116 => // Parses the tests manifest into tests
./node_modules/n3/spec/SpecTester.js:119 =>   var manifest = {}, testStore = new N3.Store(), self = this;
./node_modules/n3/spec/SpecTester.js:123 =>     if (triple) return testStore.addTriple(triple.subject, triple.predicate, triple.object);
./node_modules/n3/spec/SpecTester.js:125 =>     // Once all triples are there, get the first item of the test list
./node_modules/n3/spec/SpecTester.js:126 =>     var tests = manifest.tests = [],
./node_modules/n3/spec/SpecTester.js:128 =>         itemHead = testStore.find('', prefixes.mf + 'entries', null)[0].object;
./node_modules/n3/spec/SpecTester.js:129 =>     // Loop through all test items
./node_modules/n3/spec/SpecTester.js:132 =>       var itemValue = testStore.find(itemHead, first, null)[0].object,
./node_modules/n3/spec/SpecTester.js:133 =>           itemTriples = testStore.find(itemValue, null, null),
./node_modules/n3/spec/SpecTester.js:134 =>           test = { id: itemValue.replace(/^#/, '') };
./node_modules/n3/spec/SpecTester.js:138 =>           test[propertyMatch[1]] = triple.object;
./node_modules/n3/spec/SpecTester.js:140 =>       test.negative = /Negative/.test(test.type);
./node_modules/n3/spec/SpecTester.js:141 =>       test.skipped = self._skipNegative && test.negative;
./node_modules/n3/spec/SpecTester.js:142 =>       (!test.skipped ? tests : skipped).push(test);
./node_modules/n3/spec/SpecTester.js:144 =>       // Find the next test item
./node_modules/n3/spec/SpecTester.js:145 =>       itemHead = testStore.find(itemHead, rest, null)[0].object;
./node_modules/n3/spec/SpecTester.js:152 => // # Individual test execution
./node_modules/n3/spec/SpecTester.js:154 => // Performs the test by parsing the specified document
./node_modules/n3/spec/SpecTester.js:155 => SpecTester.prototype._performTest = function (test, actionStream, callback) {
./node_modules/n3/spec/SpecTester.js:157 =>   var resultFile = path.join(this._testFolder, test.action.replace(/\.\w+$/, '-result.nq')),
./node_modules/n3/spec/SpecTester.js:159 =>       config = { format: this._name, documentIRI: url.resolve(this._manifest, test.action) },
./node_modules/n3/spec/SpecTester.js:162 =>     if (error)  test.error = error;
./node_modules/n3/spec/SpecTester.js:167 =>         self._verifyResult(test, resultFile,
./node_modules/n3/spec/SpecTester.js:168 =>                            test.result && path.join(self._testFolder, test.result), callback);
./node_modules/n3/spec/SpecTester.js:173 => // Verifies and reports the test result
./node_modules/n3/spec/SpecTester.js:174 => SpecTester.prototype._verifyResult = function (test, resultFile, correctFile, callback) {
./node_modules/n3/spec/SpecTester.js:175 =>   // Negative tests are successful if an error occurred
./node_modules/n3/spec/SpecTester.js:176 =>   if (test.skipped || test.negative) {
./node_modules/n3/spec/SpecTester.js:177 =>     displayResult(null, !!test.error);
./node_modules/n3/spec/SpecTester.js:179 =>   // Positive tests are successful if the results are equal,
./node_modules/n3/spec/SpecTester.js:182 =>     displayResult(null, !test.error);
./node_modules/n3/spec/SpecTester.js:188 =>   // Display the test result
./node_modules/n3/spec/SpecTester.js:190 =>     console.log(N3.Util.getLiteralValue(test.name).bold + ':',
./node_modules/n3/spec/SpecTester.js:191 =>                 N3.Util.getLiteralValue(test.comment),
./node_modules/n3/spec/SpecTester.js:192 =>                 (test.skipped ? 'SKIP'.yellow : (success ? 'ok'.green : 'FAIL'.red)).bold);
./node_modules/n3/spec/SpecTester.js:193 =>     if (!test.skipped && (error || !success)) {
./node_modules/n3/spec/SpecTester.js:197 =>       console.log(('  error: '.bold + (test.error || '(none)')).grey);
./node_modules/n3/spec/SpecTester.js:201 =>     test.success = success;
./node_modules/n3/spec/SpecTester.js:202 =>     callback && callback(null, test);
./node_modules/n3/spec/SpecTester.js:208 =>   // Try a full-text comparison (fastest)
./node_modules/mocha/mocha.js:786 =>       var test = new Test(title, fn);
./node_modules/mocha/mocha.js:787 =>       test.file = file;
./node_modules/mocha/mocha.js:788 =>       suite.addTest(test);
./node_modules/mocha/mocha.js:789 =>       return test;
./node_modules/mocha/mocha.js:793 =>      * Exclusive test-case.
./node_modules/mocha/mocha.js:797 =>       return common.test.only(mocha, context.it(title, fn));
./node_modules/mocha/mocha.js:801 =>      * Pending test case.
./node_modules/mocha/mocha.js:817 => },{"../test":36,"./common":9}],9:[function(require,module,exports){
./node_modules/mocha/mocha.js:846 =>      * Execute before running tests.
./node_modules/mocha/mocha.js:856 =>      * Execute after running tests.
./node_modules/mocha/mocha.js:866 =>      * Execute before each test case.
./node_modules/mocha/mocha.js:876 =>      * Execute after each test case.
./node_modules/mocha/mocha.js:941 =>     test: {
./node_modules/mocha/mocha.js:944 =>        * Exclusive test-case.
./node_modules/mocha/mocha.js:947 =>        * @param {Function} test
./node_modules/mocha/mocha.js:950 =>       only: function (mocha, test) {
./node_modules/mocha/mocha.js:951 =>         test.parent._onlyTests = test.parent._onlyTests.concat(test);
./node_modules/mocha/mocha.js:953 =>         return test;
./node_modules/mocha/mocha.js:957 =>        * Pending test case.
./node_modules/mocha/mocha.js:962 =>         context.test(title);
./node_modules/mocha/mocha.js:985 => var Test = require('../test');
./node_modules/mocha/mocha.js:1028 =>             var test = new Test(key, fn);
./node_modules/mocha/mocha.js:1029 =>             test.file = file;
./node_modules/mocha/mocha.js:1030 =>             suites[0].addTest(test);
./node_modules/mocha/mocha.js:1042 => },{"../suite":35,"../test":36}],11:[function(require,module,exports){
./node_modules/mocha/mocha.js:1057 => var Test = require('../test');
./node_modules/mocha/mocha.js:1064 =>  *     test('#length', function() {
./node_modules/mocha/mocha.js:1069 =>  *     test('#indexOf()', function() {
./node_modules/mocha/mocha.js:1078 =>  *     test('#length', function() {
./node_modules/mocha/mocha.js:1126 =>      * Describe a specification or test-case
./node_modules/mocha/mocha.js:1131 =>     context.test = function (title, fn) {
./node_modules/mocha/mocha.js:1132 =>       var test = new Test(title, fn);
./node_modules/mocha/mocha.js:1133 =>       test.file = file;
./node_modules/mocha/mocha.js:1134 =>       suites[0].addTest(test);
./node_modules/mocha/mocha.js:1135 =>       return test;
./node_modules/parents/test/win32.js:1 => var test = require('tap').test;
./node_modules/parents/test/win32.js:4 => test('win32', function (t) {
./node_modules/parents/test/win32.js:17 => test('win32 c:', function (t) {
./node_modules/parents/test/win32.js:23 => test('win32 network drive', function (t) {
./node_modules/parents/test/dirname.js:1 => var test = require('tap').test;
./node_modules/parents/test/dirname.js:4 => test('dirname', function (t) {
./node_modules/parents/test/dirname.js:16 => test('root', function (t) {
./node_modules/pako/dist/pako_inflate.js:87 => // Enable/Disable typed arrays use, for testing
./node_modules/pako/lib/inflate.js:185 =>   // Flag to properly process Z_BUF_ERROR on testing inflate call
./node_modules/pako/dist/pako_deflate.js:87 => // Enable/Disable typed arrays use, for testing
./node_modules/parse-asn1/test/index.js:1 => var test = require('tape')
./node_modules/parse-asn1/test/index.js:72 => function testIt (keys) {
./node_modules/parse-asn1/test/index.js:73 =>   test('key ' + (++i), function (t) {
./node_modules/parse-asn1/test/index.js:80 => testIt(dsa)
./node_modules/parse-asn1/test/index.js:81 => testIt(dsa2)
./node_modules/parse-asn1/test/index.js:82 => testIt(rsa1024)
./node_modules/parse-asn1/test/index.js:83 => testIt(ec)
./node_modules/parse-asn1/test/index.js:84 => testIt(rsa2028)
./node_modules/parse-asn1/test/index.js:85 => testIt(nonrsa1024)
./node_modules/parse-asn1/test/index.js:86 => testIt(ecpass)
./node_modules/parse-asn1/test/index.js:87 => testIt(dsapass)
./node_modules/parse-asn1/test/index.js:88 => testIt(dsapass2)
./node_modules/parse-asn1/test/index.js:89 => testIt(rsapass)
./node_modules/parse-asn1/test/index.js:90 => testIt(rsapass2)
./node_modules/parse-asn1/test/index.js:91 => testIt(pass1024)
./node_modules/parse-asn1/test/index.js:92 => testIt(pass1024)
./node_modules/pkginfo/examples/package.json:3 =>   "description": "A test fixture for pkginfo",
./node_modules/pkginfo/examples/package.json:6 =>   "keywords": ["test", "fixture"],
./node_modules/pkginfo/examples/package.json:8 =>   "scripts": { "test": "vows test/*-test.js --spec" },
./node_modules/pkginfo/test/pkginfo-test.js:2 =>  * pkginfo-test.js: Tests for the pkginfo module.
./node_modules/pkginfo/test/pkginfo-test.js:37 => function testExposes (options) {
./node_modules/pkginfo/test/pkginfo-test.js:58 =>     "and passed a single `string` argument": testExposes({
./node_modules/pkginfo/test/pkginfo-test.js:62 =>     "and passed multiple `string` arguments": testExposes({
./node_modules/pkginfo/test/pkginfo-test.js:66 =>     "and passed an `object` argument": testExposes({
./node_modules/pkginfo/test/pkginfo-test.js:70 =>     "and passed an `array` argument": testExposes({
./node_modules/pkginfo/test/pkginfo-test.js:74 =>     "and read from a specified directory": testExposes({
./node_modules/pkginfo/test/pkginfo-test.js:78 =>     "and passed no arguments": testExposes({
./node_modules/public-encrypt/test/nodeTests.js:2 => var test = require('tape');
./node_modules/public-encrypt/test/nodeTests.js:6 => test('node tests', function (t) {
./node_modules/public-encrypt/test/nodeTests.js:7 =>   var certPem = fs.readFileSync(__dirname + '/test_cert.pem', 'ascii');
./node_modules/public-encrypt/test/nodeTests.js:8 =>   var keyPem = fs.readFileSync(__dirname + '/test_key.pem', 'ascii');
./node_modules/public-encrypt/test/nodeTests.js:9 =>   var rsaPubPem = fs.readFileSync(__dirname + '/test_rsa_pubkey.pem',
./node_modules/public-encrypt/test/nodeTests.js:11 =>   var rsaKeyPem = fs.readFileSync(__dirname + '/test_rsa_privkey.pem',
./node_modules/public-encrypt/test/nodeTests.js:14 =>   __dirname + '/test_rsa_privkey_encrypted.pem', 'ascii');
./node_modules/public-encrypt/test/index.js:1 => var test = require('tape');
./node_modules/public-encrypt/test/index.js:48 => function _testIt(keys, message, t) {
./node_modules/public-encrypt/test/index.js:51 =>   t.test(message.toString(), function (t) {
./node_modules/public-encrypt/test/index.js:69 => function testIt(keys, message, t) {
./node_modules/public-encrypt/test/index.js:70 =>   _testIt(keys, message, t);
./node_modules/public-encrypt/test/index.js:71 =>   _testIt(paddingObject(keys, 1), Buffer.concat([message, new Buffer(' with RSA_PKCS1_PADDING')]), t);
./node_modules/public-encrypt/test/index.js:77 =>   _testIt(paddingObject(keys, 3), msg, t);
./node_modules/public-encrypt/test/index.js:101 => function testRun(i) {
./node_modules/public-encrypt/test/index.js:102 =>   test('run ' + i, function (t) {
./node_modules/public-encrypt/test/index.js:103 =>     testIt(rsa1024priv, new Buffer('1024 2 private keys'), t);
./node_modules/public-encrypt/test/index.js:104 =>     testIt(rsa1024, new Buffer('1024 keys'), t);
./node_modules/public-encrypt/test/index.js:105 =>     testIt(rsa2028, new Buffer('2028 keys'), t);
./node_modules/public-encrypt/test/index.js:106 =>     testIt(nonrsa1024, new Buffer('1024 keys non-rsa key'), t);
./node_modules/public-encrypt/test/index.js:107 =>     testIt(pass1024, new Buffer('1024 keys and password'), t);
./node_modules/public-encrypt/test/index.js:108 =>     testIt(nonrsa1024str, new Buffer('1024 keys non-rsa key as a string'), t);
./node_modules/public-encrypt/test/index.js:109 =>     testIt(pass2028, new Buffer('2028 rsa key with variant passwords'), t);
./node_modules/public-encrypt/test/index.js:116 =>   testRun(i);
./node_modules/querystring/test/index.js:24 => // test using assert
./node_modules/querystring/test/index.js:49 =>   // disable test that fails ['foo=%zx', 'foo=%25zx', {'foo': '%zx'}],
./node_modules/querystring/test/index.js:103 => exports['test basic'] = function(assert) {
./node_modules/querystring/test/index.js:109 => exports['test that the canonical qs is parsed properly'] = function(assert) {
./node_modules/querystring/test/index.js:110 =>   qsTestCases.forEach(function(testCase) {
./node_modules/querystring/test/index.js:111 =>     assert.deepEqual(testCase[2], qs.parse(testCase[0]),
./node_modules/querystring/test/index.js:112 =>                      'parse ' + testCase[0]);
./node_modules/querystring/test/index.js:117 => exports['test that the colon test cases can do the same'] = function(assert) {
./node_modules/querystring/test/index.js:118 =>   qsColonTestCases.forEach(function(testCase) {
./node_modules/querystring/test/index.js:119 =>     assert.deepEqual(testCase[2], qs.parse(testCase[0], ';', ':'),
./node_modules/querystring/test/index.js:120 =>                      'parse ' + testCase[0] + ' -> ; :');
./node_modules/querystring/test/index.js:124 => exports['test the weird objects, that they get parsed properly'] = function(assert) {
./node_modules/querystring/test/index.js:125 =>   qsWeirdObjects.forEach(function(testCase) {
./node_modules/querystring/test/index.js:126 =>     assert.deepEqual(testCase[2], qs.parse(testCase[1]),
./node_modules/querystring/test/index.js:127 =>                      'parse ' + testCase[1]);
./node_modules/querystring/test/index.js:131 => exports['test non munge test cases'] = function(assert) {
./node_modules/querystring/test/index.js:132 =>   qsNoMungeTestCases.forEach(function(testCase) {
./node_modules/querystring/test/index.js:133 =>     assert.deepEqual(testCase[0], qs.stringify(testCase[1], '&', '=', false),
./node_modules/querystring/test/index.js:134 =>                      'stringify ' + JSON.stringify(testCase[1]) + ' -> & =');
./node_modules/querystring/test/index.js:138 => exports['test the nested qs-in-qs case'] = function(assert) {
./node_modules/querystring/test/index.js:145 => exports['test nested in colon'] = function(assert) {
./node_modules/querystring/test/index.js:152 => exports['test stringifying'] = function(assert) {
./node_modules/querystring/test/index.js:153 =>   qsTestCases.forEach(function(testCase) {
./node_modules/querystring/test/index.js:154 =>     assert.equal(testCase[1], qs.stringify(testCase[2]),
./node_modules/querystring/test/index.js:155 =>                  'stringify ' + JSON.stringify(testCase[2]));
./node_modules/querystring/test/index.js:158 =>   qsColonTestCases.forEach(function(testCase) {
./node_modules/querystring/test/index.js:159 =>     assert.equal(testCase[1], qs.stringify(testCase[2], ';', ':'),
./node_modules/querystring/test/index.js:160 =>                  'stringify ' + JSON.stringify(testCase[2]) + ' -> ; :');
./node_modules/querystring/test/index.js:163 =>   qsWeirdObjects.forEach(function(testCase) {
./node_modules/querystring/test/index.js:164 =>     assert.equal(testCase[1], qs.stringify(testCase[0]),
./node_modules/querystring/test/index.js:165 =>                  'stringify ' + JSON.stringify(testCase[0]));
./node_modules/querystring/test/index.js:169 => exports['test stringifying nested'] = function(assert) {
./node_modules/querystring/test/index.js:191 => exports['test nested in colon'] = function(assert) {
./node_modules/querystring-es3/test/index.js:24 => // test using assert
./node_modules/querystring-es3/test/index.js:49 =>   // disable test that fails ['foo=%zx', 'foo=%25zx', {'foo': '%zx'}],
./node_modules/querystring-es3/test/index.js:103 => exports['test basic'] = function(assert) {
./node_modules/querystring-es3/test/index.js:109 => exports['test that the canonical qs is parsed properly'] = function(assert) {
./node_modules/querystring-es3/test/index.js:110 =>   qsTestCases.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:111 =>     assert.deepEqual(testCase[2], qs.parse(testCase[0]),
./node_modules/querystring-es3/test/index.js:112 =>                      'parse ' + testCase[0]);
./node_modules/querystring-es3/test/index.js:117 => exports['test that the colon test cases can do the same'] = function(assert) {
./node_modules/querystring-es3/test/index.js:118 =>   qsColonTestCases.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:119 =>     assert.deepEqual(testCase[2], qs.parse(testCase[0], ';', ':'),
./node_modules/querystring-es3/test/index.js:120 =>                      'parse ' + testCase[0] + ' -> ; :');
./node_modules/querystring-es3/test/index.js:124 => exports['test the weird objects, that they get parsed properly'] = function(assert) {
./node_modules/querystring-es3/test/index.js:125 =>   qsWeirdObjects.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:126 =>     assert.deepEqual(testCase[2], qs.parse(testCase[1]),
./node_modules/querystring-es3/test/index.js:127 =>                      'parse ' + testCase[1]);
./node_modules/querystring-es3/test/index.js:131 => exports['test non munge test cases'] = function(assert) {
./node_modules/querystring-es3/test/index.js:132 =>   qsNoMungeTestCases.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:133 =>     assert.deepEqual(testCase[0], qs.stringify(testCase[1], '&', '=', false),
./node_modules/querystring-es3/test/index.js:134 =>                      'stringify ' + JSON.stringify(testCase[1]) + ' -> & =');
./node_modules/querystring-es3/test/index.js:138 => exports['test the nested qs-in-qs case'] = function(assert) {
./node_modules/querystring-es3/test/index.js:145 => exports['test nested in colon'] = function(assert) {
./node_modules/querystring-es3/test/index.js:152 => exports['test stringifying'] = function(assert) {
./node_modules/querystring-es3/test/index.js:153 =>   qsTestCases.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:154 =>     assert.equal(testCase[1], qs.stringify(testCase[2]),
./node_modules/querystring-es3/test/index.js:155 =>                  'stringify ' + JSON.stringify(testCase[2]));
./node_modules/querystring-es3/test/index.js:158 =>   qsColonTestCases.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:159 =>     assert.equal(testCase[1], qs.stringify(testCase[2], ';', ':'),
./node_modules/querystring-es3/test/index.js:160 =>                  'stringify ' + JSON.stringify(testCase[2]) + ' -> ; :');
./node_modules/querystring-es3/test/index.js:163 =>   qsWeirdObjects.forEach(function(testCase) {
./node_modules/querystring-es3/test/index.js:164 =>     assert.equal(testCase[1], qs.stringify(testCase[0]),
./node_modules/querystring-es3/test/index.js:165 =>                  'stringify ' + JSON.stringify(testCase[0]));
./node_modules/querystring-es3/test/index.js:169 => exports['test stringifying nested'] = function(assert) {
./node_modules/querystring-es3/test/index.js:191 => exports['test nested in colon'] = function(assert) {
./node_modules/qs/test/utils.js:3 => var test = require('tape');
./node_modules/qs/test/utils.js:6 => test('merge()', function (t) {
./node_modules/qs/test/stringify.js:3 => var test = require('tape');
./node_modules/qs/test/stringify.js:7 => test('stringify()', function (t) {
./node_modules/qs/test/stringify.js:8 =>     t.test('stringifies a querystring object', function (st) {
./node_modules/qs/test/stringify.js:20 =>     t.test('stringifies a nested object', function (st) {
./node_modules/qs/test/stringify.js:26 =>     t.test('stringifies a nested object with dots notation', function (st) {
./node_modules/qs/test/stringify.js:32 =>     t.test('stringifies an array value', function (st) {
./node_modules/qs/test/stringify.js:51 =>     t.test('omits nulls when asked', function (st) {
./node_modules/qs/test/stringify.js:56 =>     t.test('omits nested nulls when asked', function (st) {
./node_modules/qs/test/stringify.js:61 =>     t.test('omits array indices when asked', function (st) {
./node_modules/qs/test/stringify.js:66 =>     t.test('stringifies a nested array value', function (st) {
./node_modules/qs/test/stringify.js:73 =>     t.test('stringifies a nested array value with dots notation', function (st) {
./node_modules/qs/test/stringify.js:101 =>     t.test('stringifies an object inside an array', function (st) {
./node_modules/qs/test/stringify.js:139 =>     t.test('stringifies an array with mixed objects and primitives', function (st) {
./node_modules/qs/test/stringify.js:159 =>     t.test('stringifies an object inside an array with dots notation', function (st) {
./node_modules/qs/test/stringify.js:213 =>     t.test('does not omit object keys when indices = false', function (st) {
./node_modules/qs/test/stringify.js:218 =>     t.test('uses indices notation for arrays when indices=true', function (st) {
./node_modules/qs/test/stringify.js:223 =>     t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {
./node_modules/qs/test/stringify.js:228 =>     t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {
./node_modules/qs/test/stringify.js:233 =>     t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {
./node_modules/qs/test/stringify.js:238 =>     t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {
./node_modules/read-only-stream/test/ro.js:1 => var test = require('tape');
./node_modules/read-only-stream/test/ro.js:6 => test('readonly', function (t) {
./node_modules/qs/test/parse.js:3 => var test = require('tape');
./node_modules/qs/test/parse.js:7 => test('parse()', function (t) {
./node_modules/qs/test/parse.js:8 =>     t.test('parses a simple string', function (st) {
./node_modules/qs/test/parse.js:33 =>     t.test('allows enabling dot notation', function (st) {
./node_modules/qs/test/parse.js:47 =>     t.test('only parses one level when depth = 1', function (st) {
./node_modules/qs/test/parse.js:55 =>     t.test('parses an explicit array', function (st) {
./node_modules/qs/test/parse.js:62 =>     t.test('parses a mix of simple and explicit arrays', function (st) {
./node_modules/qs/test/parse.js:79 =>     t.test('parses a nested array', function (st) {
./node_modules/qs/test/parse.js:85 =>     t.test('allows to specify array indices', function (st) {
./node_modules/qs/test/parse.js:94 =>     t.test('limits specific array indices to arrayLimit', function (st) {
./node_modules/qs/test/parse.js:102 =>     t.test('supports encoded = signs', function (st) {
./node_modules/qs/test/parse.js:107 =>     t.test('is ok with url encoded strings', function (st) {
./node_modules/qs/test/parse.js:113 =>     t.test('allows brackets in the value', function (st) {
./node_modules/qs/test/parse.js:119 =>     t.test('allows empty values', function (st) {
./node_modules/qs/test/parse.js:126 =>     t.test('transforms arrays to objects', function (st) {
./node_modules/qs/test/parse.js:141 =>     t.test('transforms arrays to objects (dot notation)', function (st) {
./node_modules/read-only-stream/test/streams1.js:1 => var test = require('tape');
./node_modules/read-only-stream/test/streams1.js:6 => test('streams1', function (t) {
./node_modules/read-only-stream/test/error.js:1 => var test = require('tape');
./node_modules/read-only-stream/test/error.js:5 => test('error', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:4 => var test            = debug  ? function () {} : require('tap').test
./node_modules/readdirp/test/readdirp-stream.js:5 => var test_           = !debug ? function () {} : require('tap').test
./node_modules/readdirp/test/readdirp-stream.js:22 => // see test/readdirp.js for test bed layout
./node_modules/readdirp/test/readdirp-stream.js:53 => test('\nintegrated', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:54 =>   t.test('\n# reading root without filter', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:72 =>   t.test('\n# normal: ["*.ext1", "*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:90 =>   t.test('\n# files only', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:108 =>   t.test('\n# directories only', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:126 =>   t.test('\n# both directories + files', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:144 =>   t.test('\n# directory filter with directories only', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:162 =>   t.test('\n# directory and file filters with both entries', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:180 =>   t.test('\n# negated: ["!*.ext1", "!*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:197 =>   t.test('\n# no options given', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:206 =>   t.test('\n# mixed: ["*.ext1", "!*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:218 => test('\napi separately', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:220 =>   t.test('\n# handleError', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:233 =>   t.test('\n# when stream is paused and then resumed', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:267 =>   t.test('\n# when a stream is paused it stops walking the fs', function (t) {
./node_modules/readdirp/test/readdirp-stream.js:296 =>   t.test('\n# when a stream is destroyed, it emits "closed", but no longer emits "data", "warn" and "error"', function (t) {
./node_modules/readdirp/test/readdirp.js:3 => var test     = require('tap').test
./node_modules/readdirp/test/readdirp.js:9 =>   , root     = path.join(__dirname, '../test/bed')
./node_modules/readdirp/test/readdirp.js:22 => Structure of test bed:
./node_modules/readdirp/test/readdirp.js:59 => test('\nreading root without filter', function (t) {
./node_modules/readdirp/test/readdirp.js:68 => test('\nreading root without filter using lstat', function (t) {
./node_modules/readdirp/test/readdirp.js:77 => test('\nreading root with symlinks using lstat', function (t) {
./node_modules/readdirp/test/readdirp.js:90 => test('\nreading non-standard fds', function (t) {
./node_modules/readdirp/test/readdirp.js:92 =>   var server = net.createServer().listen(path.join(root, 'test.sock'), function(){
./node_modules/readdirp/test/readdirp.js:104 => test('\nreading root using glob filter', function (t) {
./node_modules/readdirp/test/readdirp.js:106 =>   t.test('\n# "*.ext1"', function (t) {
./node_modules/readdirp/test/readdirp.js:113 =>   t.test('\n# ["*.ext1", "*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp.js:120 =>   t.test('\n# "root_dir1"', function (t) {
./node_modules/readdirp/test/readdirp.js:127 =>   t.test('\n# ["root_dir1", "*dir1_subdir1"]', function (t) {
./node_modules/readdirp/test/readdirp.js:135 =>   t.test('\n# negated: "!*.ext1"', function (t) {
./node_modules/readdirp/test/readdirp.js:142 =>   t.test('\n# negated: ["!*.ext1", "!*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp.js:150 =>   t.test('\n# mixed: ["*.ext1", "!*.ext3"]', function (t) {
./node_modules/readdirp/test/readdirp.js:158 =>   t.test('\n# leading and trailing spaces: [" *.ext1", "*.ext3 "]', function (t) {
./node_modules/readdirp/test/readdirp.js:165 =>   t.test('\n# leading and trailing spaces: [" !*.ext1", " !*.ext3 "]', function (t) {
./node_modules/readdirp/test/readdirp.js:173 =>   t.test('\n# ** glob pattern', function (t) {
./node_modules/readdirp/test/readdirp.js:182 => test('\n\nreading root using function filter', function (t) {
./node_modules/readdirp/test/readdirp.js:183 =>   t.test('\n# file filter -> "contains root_dir2"', function (t) {
./node_modules/readdirp/test/readdirp.js:194 =>   t.test('\n# directory filter -> "name has length 9"', function (t) {
./node_modules/readdirp/test/readdirp.js:206 => test('\nreading root specifying maximum depth', function (t) {
./node_modules/readdirp/test/readdirp.js:207 =>   t.test('\n# depth 1', function (t) {
./node_modules/readdirp/test/readdirp.js:215 => test('\nreading root with no recursion', function (t) {
./node_modules/readdirp/test/readdirp.js:216 =>   t.test('\n# depth 0', function (t) {
./node_modules/readdirp/test/readdirp.js:224 => test('\nprogress callbacks', function (t) {
./node_modules/readdirp/test/readdirp.js:243 => test('resolving of name, full and relative paths', function (t) {
./node_modules/readdirp/test/readdirp.js:248 =>       , fullPath      :  'test/bed/root_dir1/root_dir1_file1.ext1'
./node_modules/readdirp/test/readdirp.js:255 =>       , { root: '../test/bed/'   ,  prefix: ''     }
./node_modules/regenerator-transform/lib/emit.js:169 => Ep.jumpIf = function (test, toLoc) {
./node_modules/regenerator-transform/lib/emit.js:170 =>   t.assertExpression(test);
./node_modules/regenerator-transform/lib/emit.js:173 =>   this.emit(t.ifStatement(test, t.blockStatement([this.assign(this.contextProperty("next"), toLoc), t.breakStatement()])));
./node_modules/regenerator-transform/lib/emit.js:177 => Ep.jumpIfNot = function (test, toLoc) {
./node_modules/regenerator-transform/lib/emit.js:178 =>   t.assertExpression(test);
./node_modules/regenerator-transform/lib/emit.js:182 =>   if (t.isUnaryExpression(test) && test.operator === "!") {
./node_modules/regenerator-transform/lib/emit.js:184 =>     negatedTest = test.argument;
./node_modules/regenerator-transform/lib/emit.js:186 =>     negatedTest = t.unaryExpression("!", test);
./node_modules/regenerator-transform/src/emit.js:154 => Ep.jumpIf = function(test, toLoc) {
./node_modules/regenerator-transform/src/emit.js:155 =>   t.assertExpression(test);
./node_modules/regenerator-transform/src/emit.js:159 =>     test,
./node_modules/regenerator-transform/src/emit.js:168 => Ep.jumpIfNot = function(test, toLoc) {
./node_modules/regenerator-transform/src/emit.js:169 =>   t.assertExpression(test);
./node_modules/regenerator-transform/src/emit.js:173 =>   if (t.isUnaryExpression(test) &&
./node_modules/regenerator-transform/src/emit.js:174 =>       test.operator === "!") {
./node_modules/regenerator-transform/src/emit.js:176 =>     negatedTest = test.argument;
./node_modules/regenerator-transform/src/emit.js:178 =>     negatedTest = t.unaryExpression("!", test);
./node_modules/regjsparser/parser.js:669 =>         if (/^0{1,3}$/.test(match)) {
./node_modules/regjsparser/parser.js:731 =>         ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));
./node_modules/request/CHANGELOG.md:197 => - [#1584](https://github.com/request/request/pull/1584) Refactor test-default tests (according to comments in #1430) (@simov)
./node_modules/request/CHANGELOG.md:200 => - [#1570](https://github.com/request/request/pull/1570) Discovered tests that weren't properly running (@seanstrom)
./node_modules/request/CHANGELOG.md:210 => - [#1539](https://github.com/request/request/pull/1539) ensure the latest version of har-validator is included (@ahmadnassri)
./node_modules/request/CHANGELOG.md:211 => - [#1516](https://github.com/request/request/pull/1516) forever+pool test (@devTristan)
./node_modules/request/CHANGELOG.md:216 => - [#1521](https://github.com/request/request/pull/1521) Add promise tests (@simov)
./node_modules/request/CHANGELOG.md:224 => - [#1486](https://github.com/request/request/pull/1486) Add a test for the forever agent (@akshayp)
./node_modules/request/CHANGELOG.md:235 => - [#1442](https://github.com/request/request/pull/1442) Fixed the issue with strictSSL tests on  0.12 & io.js by explicitly setting a cipher that matches the cert. (@BBB, @nickmccurdy, @demohi, @simov, @0x4139)
./node_modules/request/CHANGELOG.md:238 => - [#1426](https://github.com/request/request/pull/1426) Fixing tests to pass on io.js and node 0.12 (only test-https.js stiff failing) (@mikeal)
./node_modules/request/CHANGELOG.md:248 => - [#1397](https://github.com/request/request/pull/1397) Improve pipe-from-file tests (@nylen)
./node_modules/request/CHANGELOG.md:259 => - [#1376](https://github.com/request/request/pull/1376) Use karma-browserify for tests. Add browser test coverage reporter. (@eiriksm)
./node_modules/request/CHANGELOG.md:261 => - [#1373](https://github.com/request/request/pull/1373) Rewrite tunnel test to be pure Node.js (@nylen)
./node_modules/request/CHANGELOG.md:262 => - [#1371](https://github.com/request/request/pull/1371) Upgrade test reporter (@nylen)
./node_modules/regjsparser/bin/parser:12 =>     if (/^(?:-h|--help|undefined)$/.test(first)) {
./node_modules/request/lib/har.js:166 =>   function test (type) {
./node_modules/request/lib/har.js:169 =>   if (test('application/x-www-form-urlencoded')) {
./node_modules/request/lib/har.js:172 =>   else if (test('application/json')) {
./node_modules/request/lib/har.js:178 =>   else if (test('multipart/form-data')) {
./node_modules/request/lib/auth.js:91 =>   var qop = /(^|,)\s*auth\s*($|,)/.test(challenge.qop) && 'auth'
./node_modules/request/README.md:670 => a validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.
./node_modules/request/README.md:720 => - `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain.  If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.
./node_modules/request/lib/redirect.js:103 =>   if (!isUrl.test(redirectTo)) {
./node_modules/resolve/lib/async.js:35 =>     if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[\\\/])/.test(x)) {
./node_modules/resolve/lib/async.js:38 =>         if (/\/$/.test(x) && res === y) {
./node_modules/resolve/lib/async.js:108 =>         if (process.platform === 'win32' && (/^\w:[\\\/]*$/).test(dir)) {
./node_modules/resolve/lib/async.js:111 =>         if (/[\\\/]node_modules[\\\/]*$/.test(dir)) return cb(null);
./node_modules/resolve/lib/node-modules-paths.js:15 =>     if (/^([A-Za-z]:)/.test(start)) {
./node_modules/resolve/lib/node-modules-paths.js:17 =>     } else if (/^\\\\/.test(start)) {
./node_modules/resolve/lib/sync.js:25 =>     if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[\\\/])/.test(x)) {
./node_modules/resolve/test/dotdot.js:2 => var test = require('tape');
./node_modules/resolve/test/dotdot.js:5 => test('dotdot', function (t) {
./node_modules/resolve/test/dotdot.js:20 => test('dotdot sync', function (t) {
./node_modules/resolve/test/core.js:1 => var test = require('tape');
./node_modules/resolve/test/core.js:4 => test('core modules', function (t) {
./node_modules/resolve/test/core.js:5 =>     t.test('isCore()', function (st) {
./node_modules/resolve/test/core.js:15 =>     t.test('core list', function (st) {
./node_modules/resolve/test/faulty_basedir.js:1 => var test = require('tape');
./node_modules/resolve/test/faulty_basedir.js:4 => test('faulty basedir must produce error in windows', { skip: process.platform !== 'win32' }, function (t) {
./node_modules/resolve/test/faulty_basedir.js:9 =>     resolve('tape/lib/test.js', { basedir: resolverDir }, function (err, res, pkg) {
./node_modules/resolve/test/filter_sync.js:2 => var test = require('tape');
./node_modules/resolve/test/filter_sync.js:5 => test('filter', function (t) {
./node_modules/resolve/test/filter.js:2 => var test = require('tape');
./node_modules/resolve/test/filter.js:5 => test('filter', function (t) {
./node_modules/resolve/test/module_dir.js:2 => var test = require('tape');
./node_modules/resolve/test/module_dir.js:5 => test('moduleDirectory strings', function (t) {
./node_modules/resolve/test/module_dir.js:27 => test('moduleDirectory array', function (t) {
./node_modules/resolve/test/node_path.js:2 => var test = require('tape');
./node_modules/resolve/test/node_path.js:5 => test('$NODE_PATH', function (t) {
./node_modules/resolve/test/node-modules-paths.js:1 => var test = require('tape');
./node_modules/resolve/test/node-modules-paths.js:34 => test('node-modules-paths', function (t) {
./node_modules/resolve/test/node-modules-paths.js:35 =>     t.test('no options', function (t) {
./node_modules/resolve/test/node-modules-paths.js:44 =>     t.test('empty options', function (t) {
./node_modules/resolve/test/node-modules-paths.js:53 =>     t.test('with paths option', function (t) {
./node_modules/resolve/test/node-modules-paths.js:63 =>     t.test('with moduleDirectory option', function (t) {
./node_modules/resolve/test/node-modules-paths.js:73 =>     t.test('with 1 moduleDirectory and paths options', function (t) {
./node_modules/resolve/test/node-modules-paths.js:84 =>     t.test('with 1+ moduleDirectory and paths options', function (t) {
./node_modules/resolve/test/nonstring.js:1 => var test = require('tape');
./node_modules/resolve/test/nonstring.js:4 => test('nonstring', function (t) {
./node_modules/resolve/test/mock.js:2 => var test = require('tape');
./node_modules/resolve/test/mock.js:5 => test('mock', function (t) {
./node_modules/resolve/test/mock.js:46 => test('mock from package', function (t) {
./node_modules/resolve/test/mock.js:88 => test('mock package', function (t) {
./node_modules/resolve/test/mock.js:116 => test('mock package from package', function (t) {
./node_modules/resolve/test/mock_sync.js:2 => var test = require('tape');
./node_modules/resolve/test/mock_sync.js:5 => test('mock', function (t) {
./node_modules/resolve/test/mock_sync.js:42 => test('mock package', function (t) {
./node_modules/resolve/test/pathfilter.js:2 => var test = require('tape');
./node_modules/resolve/test/pathfilter.js:5 => test('#62: deep module references and the pathFilter', function (t) {
./node_modules/resolve/test/precedence.js:2 => var test = require('tape');
./node_modules/resolve/test/precedence.js:5 => test('precedence', function (t) {
./node_modules/resolve/test/precedence.js:16 => test('./ should not load ${dir}.js', function (t) {
./node_modules/resolve/test/resolver_sync.js:2 => var test = require('tape');
./node_modules/resolve/test/resolver_sync.js:5 => test('foo', function (t) {
./node_modules/resolve/test/resolver_sync.js:25 => test('bar', function (t) {
./node_modules/resolve/test/resolver_sync.js:35 => test('baz', function (t) {
./node_modules/resolve/test/resolver_sync.js:45 => test('biz', function (t) {
./node_modules/resolve/test/resolver_sync.js:64 => test('normalize', function (t) {
./node_modules/resolve/test/resolver_sync.js:73 => test('cup', function (t) {
./node_modules/resolve/test/resolver_sync.js:98 => test('mug', function (t) {
./node_modules/resolve/test/resolver_sync.js:124 => test('other path', function (t) {
./node_modules/resolve/test/resolver_sync.js:159 => test('incorrect main', function (t) {
./node_modules/resolve/test/resolver_sync.js:171 => test('#25: node modules with the same name as node stdlib modules', function (t) {
./node_modules/resolve/test/resolver_sync.js:195 => test('#79 - re-throw non ENOENT errors from stat', function (t) {
./node_modules/resolve/test/subdirs.js:1 => var test = require('tape');
./node_modules/resolve/test/subdirs.js:5 => test('subdirs', function (t) {
./node_modules/sha.js/test/vectors.js:2 => var vectors = require('hash-test-vectors')
./node_modules/resolve/test/resolver.js:2 => var test = require('tape');
./node_modules/resolve/test/resolver.js:5 => test('async foo', function (t) {
./node_modules/resolve/test/resolver.js:39 => test('bar', function (t) {
./node_modules/resolve/test/resolver.js:62 => test('baz', function (t) {
./node_modules/resolve/test/resolver.js:79 => test('biz', function (t) {
./node_modules/resolve/test/resolver.js:156 => test('quux', function (t) {
./node_modules/resolve/test/resolver.js:167 => test('normalize', function (t) {
./node_modules/resolve/test/resolver.js:178 => test('cup', function (t) {
./node_modules/resolve/test/resolver.js:198 => test('mug', function (t) {
./node_modules/resolve/test/resolver.js:217 => test('other path', function (t) {
./node_modules/resolve/test/resolver.js:244 => test('incorrect main', function (t) {
./node_modules/shell-quote/test/env.js:1 => var test = require('tape');
./node_modules/shell-quote/test/env.js:4 => test('expand environment variables', function (t) {
./node_modules/shell-quote/test/env.js:22 => test('environment variables with metacharacters', function (t) {
./node_modules/shell-quote/test/env.js:30 => test('special shell parameters', function (t) {
./node_modules/shell-quote/test/comment.js:1 => var test = require('tape');
./node_modules/shell-quote/test/comment.js:4 => test('comment', function (t) {
./node_modules/shell-quote/test/env_fn.js:1 => var test = require('tape');
./node_modules/shell-quote/test/env_fn.js:4 => test('functional env expansion', function (t) {
./node_modules/shell-quote/test/op.js:1 => var test = require('tape');
./node_modules/shell-quote/test/op.js:4 => test('single operators', function (t) {
./node_modules/shell-quote/test/op.js:27 => test('double operators', function (t) {
./node_modules/shell-quote/test/op.js:59 => test('glob patterns', function (t) {
./node_modules/shell-quote/test/op.js:61 =>         parse('tap test/*.test.js'),
./node_modules/shell-quote/test/op.js:62 =>         [ 'tap', { op: 'glob', pattern: 'test/*.test.js' } ]
./node_modules/shell-quote/test/op.js:65 =>     t.same(parse('tap "test/*.test.js"'), ['tap', 'test/*.test.js']);
./node_modules/shell-quote/test/parse.js:1 => var test = require('tape');
./node_modules/shell-quote/test/parse.js:4 => test('parse shell commands', function (t) {
./node_modules/shell-quote/test/quote.js:1 => var test = require('tape');
./node_modules/shell-quote/test/quote.js:4 => test('quote', function (t) {
./node_modules/shell-quote/test/quote.js:26 => test('quote ops', function (t) {
./node_modules/shell-quote/test/set.js:1 => var test = require('tape');
./node_modules/shell-quote/test/set.js:4 => test('set env vars', function (t) {
./node_modules/source-map-support/webpack-test/index.html:3 => This test should say either "Test failed" or "Test passed":
./node_modules/source-map-support/webpack-test/script.js:10 =>   if (/\bscript\.js\b/.test(e.stack)) {
./node_modules/sntp/test/index.js:20 => var it = lab.test;
./node_modules/source-map-support/test.js:521 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:524 =>   fs.writeFileSync('.generated.js', 'exports.test = function() {' +
./node_modules/source-map-support/test.js:529 =>     require('./.generated').test();
./node_modules/source-map-support/test.js:536 => /* The following test duplicates some of the code in
./node_modules/source-map-support/test.js:542 =>   var source = [ 'throw new Error("test");' ];
./node_modules/source-map-support/test.js:544 =>     'Error: test',
./node_modules/source-map-support/test.js:545 =>     /^    at Object\.exports\.test \((?:.*\/)?line1\.js:1001:101\)$/
./node_modules/source-map-support/test.js:548 =>   fs.writeFileSync('.generated.js', 'exports.test = function() {' +
./node_modules/source-map-support/test.js:554 =>     require('./.generated').test();
./node_modules/source-map/lib/array-set.js:13 =>  * member is O(1), testing for membership is O(1), and finding the index of an
./node_modules/source-map-support/webpack-test/compiled.js:56 => 	  if (/\bscript\.js\b/.test(e.stack)) {
./node_modules/source-map-support/webpack-test/compiled.js:211 => 	  if (reSourceMap.test(sourceMappingURL)) {
./node_modules/sshpk/lib/fingerprint.js:90 => 		if (!base64RE.test(parts[1]))
./node_modules/sshpk/lib/fingerprint.js:104 => 		if (!md5RE.test(parts))
./node_modules/stream-browserify/test/buf.js:2 => var test = require('tape');
./node_modules/stream-browserify/test/buf.js:23 => test('.writable writing ArrayBuffer', function(t) {
./node_modules/stream-combiner2/test/index.js:4 => var test = require('tape')
./node_modules/stream-combiner2/test/index.js:6 => test('re-emit error object for old streams', function (test) {
./node_modules/stream-combiner2/test/index.js:7 =>   test.plan(1)
./node_modules/stream-combiner2/test/index.js:18 =>     test.equal(err, expectedErr)
./node_modules/stream-combiner2/test/index.js:24 => test('do not duplicate errors', function (test) {
./node_modules/stream-combiner2/test/index.js:38 =>     test.ok(errors, 'expected error count')
./node_modules/stream-combiner2/test/index.js:40 =>         return test.end();
./node_modules/stream-combiner2/test/index.js:47 => test('3 pipe do not duplicate errors', function (test) {
./node_modules/stream-combiner2/test/index.js:62 =>     test.ok(errors, 'expected error count')
./node_modules/stream-combiner2/test/index.js:64 =>         return test.end();
./node_modules/stream-combiner2/test/index.js:72 => test('0 argument through stream', function (test) {
./node_modules/stream-combiner2/test/index.js:73 =>   test.plan(3)
./node_modules/stream-combiner2/test/index.js:78 =>     test.equal(data.toString('utf8'), expected.shift())
./node_modules/stream-combiner2/test/index.js:85 => test('object mode', function (test) {
./node_modules/stream-combiner2/test/index.js:86 =>   test.plan(2)
./node_modules/stream-combiner2/test/index.js:91 =>     test.deepEqual(data, expected.shift())
./node_modules/stream-http/lib/capability.js:53 => // These next two tests unavoidably show warnings in Chrome. Since fetch will always
./node_modules/stream-splicer/test/combiner.js:6 => var test = require('tape');
./node_modules/stream-splicer/test/combiner.js:8 => test('combiner', function (t) {
./node_modules/stream-splicer/test/empty_no_data.js:3 => var test = require('tape');
./node_modules/stream-splicer/test/empty_no_data.js:5 => test('empty with no data', function (t) {
./node_modules/stream-splicer/test/combiner_stream.js:6 => var test = require('tape');
./node_modules/stream-splicer/test/combiner_stream.js:8 => test('combiner returned stream', function (t) {
./node_modules/stream-splicer/test/empty.js:3 => var test = require('tape');
./node_modules/stream-splicer/test/empty.js:5 => test('empty passthrough stream', function (t) {
./node_modules/stream-splicer/test/get.js:3 => var test = require('tape');
./node_modules/stream-splicer/test/get.js:5 => test('get', function (t) {
./node_modules/stream-splicer/test/get.js:26 => test('nested get', function (t) {
./node_modules/stream-splicer/test/multipush.js:6 => var test = require('tape');
./node_modules/stream-splicer/test/multipush.js:8 => test('multipush', function (t) {
./node_modules/stream-splicer/test/multiunshift.js:6 => var test = require('tape');
./node_modules/stream-splicer/test/multiunshift.js:8 => test('multiunshift', function (t) {
./node_modules/stream-splicer/test/nested.js:5 => var test = require('tape');
./node_modules/stream-splicer/test/nested.js:7 => test('nested splicer', function (t) {
./node_modules/stream-splicer/test/pop.js:5 => var test = require('tape');
./node_modules/stream-splicer/test/pop.js:7 => test('pop', function (t) {
./node_modules/stream-splicer/test/push.js:4 => var test = require('tape');
./node_modules/stream-splicer/test/push.js:6 => test('push', function (t) {
./node_modules/stream-splicer/test/nested_middle.js:5 => var test = require('tape');
./node_modules/stream-splicer/test/nested_middle.js:7 => test('nested middle splicer', function (t) {
./node_modules/stream-splicer/test/shift.js:3 => var test = require('tape');
./node_modules/stream-splicer/test/shift.js:5 => test('shift', function (t) {
./node_modules/stream-splicer/test/splice.js:5 => var test = require('tape');
./node_modules/stream-splicer/test/splice.js:7 => test('splice', function (t) {
./node_modules/stream-splicer/test/unshift.js:3 => var test = require('tape');
./node_modules/stream-splicer/test/unshift.js:5 => test('unshift', function (t) {
./node_modules/subarg/test/recursive.js:2 => var test = require('tape');
./node_modules/subarg/test/recursive.js:4 => test('recursive', function (t) {
./node_modules/subarg/test/arg.js:2 => var test = require('tape');
./node_modules/subarg/test/arg.js:4 => test('spaced multi sub-args', function (t) {
./node_modules/syntax-error/test/check.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/check.js:9 => test('check', function (t) {
./node_modules/syntax-error/test/html.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/html.js:8 => test('html', function (t) {
./node_modules/syntax-error/test/html.js:14 =>     t.ok(/foo.js:1/.test(err), 'foo.js:1');
./node_modules/syntax-error/test/ok.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/ok.js:9 => test('ok', function (t) {
./node_modules/syntax-error/test/run.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/run.js:8 => test('do not run sources', function (t) {
./node_modules/syntax-error/test/run2.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/run2.js:8 => test('do not run sources (2)', function (t) {
./node_modules/syntax-error/test/shebang.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/shebang.js:9 => test('shebang', function (t) {
./node_modules/through/test/auto-destroy.js:1 => var test = require('tape')
./node_modules/through/test/auto-destroy.js:6 => test('end before close', function (assert) {
./node_modules/syntax-error/test/yield.js:1 => var test = require('tap').test;
./node_modules/syntax-error/test/yield.js:9 => test('yield', function (t) {
./node_modules/through/test/end.js:1 => var test = require('tape')
./node_modules/through/test/end.js:6 => test('end before close', function (assert) {
./node_modules/through/test/end.js:28 => test('end only once', function (t) {
./node_modules/through/test/buffering.js:1 => var test = require('tape')
./node_modules/through/test/buffering.js:6 => test('buffering', function(assert) {
./node_modules/through/test/buffering.js:39 => test('buffering has data in queue, when ends', function (assert) {
./node_modules/through/test/index.js:2 => var test = require('tape')
./node_modules/through/test/index.js:8 =>   so there is less to break. if this test fails it must be
./node_modules/through/test/index.js:38 => test('simple defaults', function(assert) {
./node_modules/through/test/index.js:59 => test('simple functions', function(assert) {
./node_modules/through/test/index.js:85 => test('pauses', function(assert) {
./node_modules/through/test/index.js:119 => test('does not soft-end on `undefined`', function(assert) {
./node_modules/tmp/test/base.js:7 => // make sure that we do not test spam the global tmp
./node_modules/tmp/test/base.js:11 => function _spawnTestWithError(testFile, params, cb) {
./node_modules/tmp/test/base.js:12 =>   _spawnTest(true, testFile, params, cb);
./node_modules/tmp/test/base.js:15 => function _spawnTestWithoutError(testFile, params, cb) {
./node_modules/tmp/test/base.js:16 =>   _spawnTest(false, testFile, params, cb);
./node_modules/tmp/test/base.js:19 => function _spawnTest(passError, testFile, params, cb) {
./node_modules/tmp/test/base.js:22 =>     command = [ node_path, path.join(__dirname, testFile) ].concat(params).join(' ');
./node_modules/tmp/test/base.js:37 => function _testStat(stat, mode) {
./node_modules/tmp/test/base.js:43 => function _testPrefix(prefix) {
./node_modules/tmp/test/base.js:44 =>   return function _testPrefixGenerated(err, name) {
./node_modules/tmp/test/base.js:49 => function _testPrefixSync(prefix) {
./node_modules/tmp/test/base.js:50 =>   return function _testPrefixGeneratedSync(result) {
./node_modules/tmp/test/base.js:54 =>     _testPrefix(prefix)(null, result.name, result.fd);
./node_modules/tmp/test/base.js:58 => function _testPostfix(postfix) {
./node_modules/tmp/test/base.js:59 =>   return function _testPostfixGenerated(err, name) {
./node_modules/tmp/test/base.js:64 => function _testPostfixSync(postfix) {
./node_modules/tmp/test/base.js:65 =>   return function _testPostfixGeneratedSync(result) {
./node_modules/tmp/test/base.js:69 =>     _testPostfix(postfix)(null, result.name, result.fd);
./node_modules/tmp/test/base.js:73 => function _testKeep(type, keep, cb) {
./node_modules/tmp/test/base.js:77 => function _testKeepSync(type, keep, cb) {
./node_modules/tmp/test/base.js:81 => function _testGraceful(type, graceful, cb) {
./node_modules/tmp/test/base.js:85 => function _testGracefulSync(type, graceful, cb) {
./node_modules/tmp/test/base.js:102 => function _testName(expected){
./node_modules/tmp/test/base.js:103 =>   return function _testNameGenerated(err, name) {
./node_modules/tmp/test/base.js:108 => function _testNameSync(expected){
./node_modules/tmp/test/base.js:109 =>   return function _testNameGeneratedSync(result) {
./node_modules/tmp/test/base.js:113 =>     _testName(expected)(null, result.name, result.fd);
./node_modules/tmp/test/base.js:117 => function _testUnsafeCleanup(unsafe, cb) {
./node_modules/tmp/test/base.js:121 => function _testIssue62(cb) {
./node_modules/tmp/test/base.js:125 => function _testUnsafeCleanupSync(unsafe, cb) {
./node_modules/tmp/test/base.js:129 => function _testIssue62Sync(cb) {
./node_modules/tmp/test/base.js:133 => module.exports.testStat = _testStat;
./node_modules/tmp/test/base.js:134 => module.exports.testPrefix = _testPrefix;
./node_modules/tmp/test/base.js:135 => module.exports.testPrefixSync = _testPrefixSync;
./node_modules/tmp/test/base.js:136 => module.exports.testPostfix = _testPostfix;
./node_modules/tmp/test/base.js:137 => module.exports.testPostfixSync = _testPostfixSync;
./node_modules/tmp/test/base.js:138 => module.exports.testKeep = _testKeep;
./node_modules/tmp/test/base.js:139 => module.exports.testKeepSync = _testKeepSync;
./node_modules/tmp/test/base.js:140 => module.exports.testGraceful = _testGraceful;
./node_modules/tmp/test/base.js:141 => module.exports.testGracefulSync = _testGracefulSync;
./node_modules/tmp/test/base.js:144 => module.exports.testName = _testName;
./node_modules/tmp/test/base.js:145 => module.exports.testNameSync = _testNameSync;
./node_modules/tmp/test/base.js:146 => module.exports.testUnsafeCleanup = _testUnsafeCleanup;
./node_modules/tmp/test/base.js:147 => module.exports.testIssue62 = _testIssue62;
./node_modules/tmp/test/base.js:148 => module.exports.testUnsafeCleanupSync = _testUnsafeCleanupSync;
./node_modules/tmp/test/base.js:149 => module.exports.testIssue62Sync = _testIssue62Sync;
./node_modules/tmp/test/dir-test.js:13 => function _testDir(mode) {
./node_modules/tmp/test/dir-test.js:14 =>   return function _testDirGenerated(err, name) {
./node_modules/tmp/test/dir-test.js:20 =>     Test.testStat(stat, mode);
./node_modules/tmp/test/dir-test.js:30 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-test.js:31 =>     'should have the default prefix': Test.testPrefix('tmp-')
./node_modules/tmp/test/dir-test.js:41 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-test.js:42 =>     'should have the provided prefix': Test.testPrefix('something')
./node_modules/tmp/test/dir-test.js:52 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-test.js:53 =>     'should have the provided postfix': Test.testPostfix('.txt')
./node_modules/tmp/test/dir-test.js:63 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-test.js:64 =>     'should have the provided prefix': Test.testPrefix('clike-'),
./node_modules/tmp/test/dir-test.js:65 =>     'should have the provided postfix': Test.testPostfix('-postfix')
./node_modules/tmp/test/dir-test.js:75 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-test.js:76 =>     'should have the provided name': Test.testName(path.join(tmp.tmpdir, 'using-name'))
./node_modules/tmp/test/dir-test.js:86 =>     'should be a directory': _testDir(040750),
./node_modules/tmp/test/dir-test.js:87 =>     'should have the provided prefix': Test.testPrefix('foo'),
./node_modules/tmp/test/dir-test.js:88 =>     'should have the provided postfix': Test.testPostfix('bar')
./node_modules/tmp/test/dir-test.js:98 =>     'should be a directory': _testDir(040755),
./node_modules/tmp/test/dir-test.js:99 =>     'should have the provided prefix': Test.testPrefix('complicated'),
./node_modules/tmp/test/dir-test.js:100 =>     'should have the provided postfix': Test.testPostfix('options')
./node_modules/tmp/test/dir-test.js:111 =>   'keep testing': {
./node_modules/tmp/test/dir-test.js:113 =>       Test.testKeep('dir', '1', this.callback);
./node_modules/tmp/test/dir-test.js:119 =>       _testDir(040700)(err, name);
./node_modules/tmp/test/dir-test.js:124 =>   'unlink testing': {
./node_modules/tmp/test/dir-test.js:126 =>       Test.testKeep('dir', '0', this.callback);
./node_modules/tmp/test/dir-test.js:136 =>   'non graceful testing': {
./node_modules/tmp/test/dir-test.js:138 =>       Test.testGraceful('dir', '0', this.callback);
./node_modules/tmp/test/dir-test.js:144 =>       _testDir(040700)(err, name);
./node_modules/tmp/test/dir-test.js:149 =>   'graceful testing': {
./node_modules/tmp/test/dir-test.js:151 =>       Test.testGraceful('dir', '1', this.callback);
./node_modules/tmp/test/dir-test.js:163 =>       Test.testUnsafeCleanup('1', this.callback);
./node_modules/tmp/test/dir-test.js:187 =>       Test.testIssue62(this.callback);
./node_modules/tmp/test/dir-test.js:199 =>       Test.testUnsafeCleanup('0', this.callback);
./node_modules/tmp/test/dir-test.js:205 =>       _testDir(040700)(err, name);
./node_modules/tmp/test/file-test.js:13 => function _testFile(mode, fdTest) {
./node_modules/tmp/test/file-test.js:14 =>   return function _testFileGenerated(err, name, fd) {
./node_modules/tmp/test/file-test.js:21 =>     Test.testStat(stat, mode);
./node_modules/tmp/test/file-test.js:43 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-test.js:44 =>     'should have the default prefix': Test.testPrefix('tmp-'),
./node_modules/tmp/test/file-test.js:45 =>     'should have the default postfix': Test.testPostfix('.tmp')
./node_modules/tmp/test/file-test.js:55 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-test.js:56 =>     'should have the provided prefix': Test.testPrefix('something')
./node_modules/tmp/test/file-test.js:66 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-test.js:67 =>     'should have the provided postfix': Test.testPostfix('.txt')
./node_modules/tmp/test/file-test.js:77 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-test.js:78 =>     'should have the provided prefix': Test.testPrefix('clike-'),
./node_modules/tmp/test/file-test.js:79 =>     'should have the provided postfix': Test.testPostfix('-postfix')
./node_modules/tmp/test/file-test.js:89 =>     'should have the provided name': Test.testName(path.join(tmp.tmpdir, 'using-name.tmp')),
./node_modules/tmp/test/file-test.js:91 =>       _testFile(0100600, true);
./node_modules/tmp/test/file-test.js:103 =>     'should be a file': _testFile(0100640, true),
./node_modules/tmp/test/file-test.js:104 =>     'should have the provided prefix': Test.testPrefix('foo'),
./node_modules/tmp/test/file-test.js:105 =>     'should have the provided postfix': Test.testPostfix('bar')
./node_modules/tmp/test/file-test.js:115 =>     'should be a file': _testFile(0100644, true),
./node_modules/tmp/test/file-test.js:116 =>     'should have the provided prefix': Test.testPrefix('complicated'),
./node_modules/tmp/test/file-test.js:117 =>     'should have the provided postfix': Test.testPostfix('options')
./node_modules/tmp/test/file-test.js:128 =>   'keep testing': {
./node_modules/tmp/test/file-test.js:130 =>       Test.testKeep('file', '1', this.callback);
./node_modules/tmp/test/file-test.js:136 =>       _testFile(0100600, false)(err, name, null);
./node_modules/tmp/test/file-test.js:141 =>   'unlink testing': {
./node_modules/tmp/test/file-test.js:143 =>       Test.testKeep('file', '0', this.callback);
./node_modules/tmp/test/file-test.js:153 =>   'non graceful testing': {
./node_modules/tmp/test/file-test.js:155 =>       Test.testGraceful('file', '0', this.callback);
./node_modules/tmp/test/file-test.js:161 =>       _testFile(0100600, false)(err, name, null);
./node_modules/tmp/test/file-test.js:166 =>   'graceful testing': {
./node_modules/tmp/test/file-test.js:168 =>       Test.testGraceful('file', '1', this.callback);
./node_modules/tmp/test/file-sync-test.js:13 => function _testFile(mode, fdTest) {
./node_modules/tmp/test/file-sync-test.js:14 =>   return function _testFileGenerated(result) {
./node_modules/tmp/test/file-sync-test.js:21 =>     Test.testStat(stat, mode);
./node_modules/tmp/test/file-sync-test.js:42 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-sync-test.js:43 =>     'should have the default prefix': Test.testPrefixSync('tmp-'),
./node_modules/tmp/test/file-sync-test.js:44 =>     'should have the default postfix': Test.testPostfixSync('.tmp')
./node_modules/tmp/test/file-sync-test.js:53 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-sync-test.js:54 =>     'should have the provided prefix': Test.testPrefixSync('something')
./node_modules/tmp/test/file-sync-test.js:63 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-sync-test.js:64 =>     'should have the provided postfix': Test.testPostfixSync('.txt')
./node_modules/tmp/test/file-sync-test.js:73 =>     'should be a file': _testFile(0100600, true),
./node_modules/tmp/test/file-sync-test.js:74 =>     'should have the provided prefix': Test.testPrefixSync('clike-'),
./node_modules/tmp/test/file-sync-test.js:75 =>     'should have the provided postfix': Test.testPostfixSync('-postfix')
./node_modules/tmp/test/file-sync-test.js:84 =>     'should have the provided name': Test.testNameSync(path.join(tmp.tmpdir, 'using-name.tmp')),
./node_modules/tmp/test/file-sync-test.js:86 =>       _testFile(0100600, true);
./node_modules/tmp/test/file-sync-test.js:97 =>     'should be a file': _testFile(0100640, true),
./node_modules/tmp/test/file-sync-test.js:98 =>     'should have the provided prefix': Test.testPrefixSync('foo'),
./node_modules/tmp/test/file-sync-test.js:99 =>     'should have the provided postfix': Test.testPostfixSync('bar')
./node_modules/tmp/test/file-sync-test.js:108 =>     'should be a file': _testFile(0100644, true),
./node_modules/tmp/test/file-sync-test.js:109 =>     'should have the provided prefix': Test.testPrefixSync('complicated'),
./node_modules/tmp/test/file-sync-test.js:110 =>     'should have the provided postfix': Test.testPostfixSync('options')
./node_modules/tmp/test/file-sync-test.js:128 =>   'keep testing': {
./node_modules/tmp/test/file-sync-test.js:130 =>       Test.testKeepSync('file', '1', this.callback);
./node_modules/tmp/test/file-sync-test.js:136 =>       _testFile(0100600, false)({name:name});
./node_modules/tmp/test/file-sync-test.js:141 =>   'unlink testing': {
./node_modules/tmp/test/file-sync-test.js:143 =>       Test.testKeepSync('file', '0', this.callback);
./node_modules/tmp/test/file-sync-test.js:153 =>   'non graceful testing': {
./node_modules/tmp/test/file-sync-test.js:155 =>       Test.testGracefulSync('file', '0', this.callback);
./node_modules/tmp/test/file-sync-test.js:161 =>       _testFile(0100600, false)({name:name});
./node_modules/tmp/test/file-sync-test.js:166 =>   'graceful testing': {
./node_modules/tmp/test/file-sync-test.js:168 =>       Test.testGracefulSync('file', '1', this.callback);
./node_modules/tmp/test/unsafe-sync.js:17 =>     // testing target
./node_modules/tmp/test/dir-sync-test.js:13 => function _testDir(mode) {
./node_modules/tmp/test/dir-sync-test.js:14 =>   return function _testDirGenerated(result) {
./node_modules/tmp/test/dir-sync-test.js:20 =>     Test.testStat(stat, mode);
./node_modules/tmp/test/dir-sync-test.js:31 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-sync-test.js:32 =>     'should have the default prefix': Test.testPrefixSync('tmp-')
./node_modules/tmp/test/dir-sync-test.js:41 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-sync-test.js:42 =>     'should have the provided prefix': Test.testPrefixSync('something')
./node_modules/tmp/test/dir-sync-test.js:51 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-sync-test.js:52 =>     'should have the provided postfix': Test.testPostfixSync('.txt')
./node_modules/tmp/test/dir-sync-test.js:61 =>     'should be a directory': _testDir(040700),
./node_modules/tmp/test/dir-sync-test.js:62 =>     'should have the provided prefix': Test.testPrefixSync('clike-'),
./node_modules/tmp/test/dir-sync-test.js:63 =>     'should have the provided postfix': Test.testPostfixSync('-postfix')
./node_modules/tmp/test/dir-sync-test.js:72 =>     'should have the provided name': Test.testNameSync(path.join(tmp.tmpdir, 'using-name')),
./node_modules/tmp/test/dir-sync-test.js:74 =>       _testDir(040700)(result);
./node_modules/tmp/test/dir-sync-test.js:86 =>     'should be a directory': _testDir(040750),
./node_modules/tmp/test/dir-sync-test.js:87 =>     'should have the provided prefix': Test.testPrefixSync('foo'),
./node_modules/tmp/test/dir-sync-test.js:88 =>     'should have the provided postfix': Test.testPostfixSync('bar')
./node_modules/tmp/test/dir-sync-test.js:97 =>     'should be a directory': _testDir(040755),
./node_modules/tmp/test/dir-sync-test.js:98 =>     'should have the provided prefix': Test.testPrefixSync('complicated'),
./node_modules/tmp/test/dir-sync-test.js:99 =>     'should have the provided postfix': Test.testPostfixSync('options')
./node_modules/tmp/test/dir-sync-test.js:117 =>   'keep testing': {
./node_modules/tmp/test/dir-sync-test.js:119 =>       Test.testKeepSync('dir', '1', this.callback);
./node_modules/tmp/test/dir-sync-test.js:125 =>       _testDir(040700)({ name: name });
./node_modules/tmp/test/dir-sync-test.js:130 =>   'unlink testing': {
./node_modules/tmp/test/dir-sync-test.js:132 =>       Test.testKeepSync('dir', '0', this.callback);
./node_modules/tmp/test/dir-sync-test.js:142 =>   'non graceful testing': {
./node_modules/tmp/test/dir-sync-test.js:144 =>       Test.testGracefulSync('dir', '0', this.callback);
./node_modules/tmp/test/dir-sync-test.js:150 =>       _testDir(040700)({ name: name });
./node_modules/tmp/test/dir-sync-test.js:155 =>   'graceful testing': {
./node_modules/tmp/test/dir-sync-test.js:157 =>       Test.testGracefulSync('dir', '1', this.callback);
./node_modules/tmp/test/dir-sync-test.js:169 =>       Test.testUnsafeCleanupSync('1', this.callback);
./node_modules/tmp/test/dir-sync-test.js:193 =>       Test.testIssue62Sync(this.callback);
./node_modules/tmp/test/dir-sync-test.js:205 =>       Test.testUnsafeCleanupSync('0', this.callback);
./node_modules/tmp/test/dir-sync-test.js:211 =>        _testDir(040700)({name:name});
./node_modules/tmp/test/name-test.js:17 =>     'should have the default prefix': Test.testPrefix('tmp-')
./node_modules/tmp/test/name-test.js:26 =>     'should have the provided prefix': Test.testPrefix('something')
./node_modules/tmp/test/name-test.js:35 =>     'should have the provided postfix': Test.testPostfix('.txt')
./node_modules/tmp/test/name-test.js:45 =>     'should have the provided prefix': Test.testPrefix('clike-'),
./node_modules/tmp/test/name-test.js:46 =>     'should have the provided postfix': Test.testPostfix('-postfix'),
./node_modules/tmp/test/name-test.js:48 =>       assert.isTrue(/[a-zA-Z0-9]{6}/.test(name));
./node_modules/tmp/test/name-test.js:58 =>     'should have the provided prefix': Test.testPrefix('foo'),
./node_modules/tmp/test/name-test.js:59 =>     'should have the provided postfix': Test.testPostfix('bar')
./node_modules/tmp/test/unsafe.js:20 =>     // testing target
./node_modules/tough-cookie/lib/permuteDomain.js:35 => // array is in shortest-to-longest order.  Handy for indexing.
./node_modules/tough-cookie/README.md:372 => Retrieve a cookie with the given domain, path and key (a.k.a. name).  The RFC maintains that exactly one of these cookies should exist in a store.  If the store is using versioning, this means that the latest/newest such cookie should be returned.
./node_modules/transform-filter/test/test.js:48 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:49 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:50 =>       'modB/test.js'
./node_modules/transform-filter/test/test.js:55 =>       .and.calledWith('/absolute/modA/test.js', optsObj);
./node_modules/transform-filter/test/test.js:61 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:62 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:63 =>       'modB/test.js'
./node_modules/transform-filter/test/test.js:68 =>       .and.calledWith('/absolute/modA/test.js', optsObj)
./node_modules/transform-filter/test/test.js:69 =>       .and.calledWith('/absolute/modB/test.js', optsObj);
./node_modules/transform-filter/test/test.js:74 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:75 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:76 =>       'modB/test.js'
./node_modules/transform-filter/test/test.js:81 =>       .and.calledWith('/absolute/modA/test.js', optsObj)
./node_modules/transform-filter/test/test.js:82 =>       .and.calledWith('/absolute/modB/test.js', optsObj);
./node_modules/transform-filter/test/test.js:87 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:88 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:89 =>       'modB/test.js'
./node_modules/transform-filter/test/test.js:94 =>       .and.calledWith('/absolute/modA/test.js', optsObj);
./node_modules/transform-filter/test/test.js:99 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:100 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:101 =>       'modB/test.js'
./node_modules/transform-filter/test/test.js:106 =>       .and.calledWith('/absolute/modA/test.js', optsObj);
./node_modules/transform-filter/test/test.js:111 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:112 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:113 =>       'modA/test.md',
./node_modules/transform-filter/test/test.js:114 =>       'modB/test.js',
./node_modules/transform-filter/test/test.js:115 =>       'modB/test.coffee',
./node_modules/transform-filter/test/test.js:116 =>       'modC/test.js',
./node_modules/transform-filter/test/test.js:117 =>       'modC/test.coffee'
./node_modules/transform-filter/test/test.js:122 =>       .and.calledWith('/absolute/modA/test.js', optsObj)
./node_modules/transform-filter/test/test.js:123 =>       .and.calledWith('/absolute/modB/test.js', optsObj);
./node_modules/transform-filter/test/test.js:128 =>     runPaths(transformFilter(null,transform).bind(context), optsObj, 'modA/test.js');
./node_modules/transform-filter/test/test.js:134 =>       'modA/test.js',
./node_modules/transform-filter/test/test.js:135 =>       'modA/test.coffee',
./node_modules/transform-filter/test/test.js:136 =>       'modA/test.md',
./node_modules/transform-filter/test/test.js:137 =>       'modB/test.js',
./node_modules/transform-filter/test/test.js:138 =>       'modB/test.coffee',
./node_modules/transform-filter/test/test.js:139 =>       'modC/test.js',
./node_modules/transform-filter/test/test.js:140 =>       'modC/test.coffee'
./node_modules/transform-filter/test/test.js:145 =>       .and.calledWith('/absolute/modB/test.coffee', optsObj)
./node_modules/transform-filter/test/test.js:146 =>       .and.calledWith('/absolute/modB/test.js', optsObj);
./node_modules/type-detect/lib/type.js:17 =>  * the type of object being tested.
./node_modules/type-detect/lib/type.js:52 =>   this.tests = {};
./node_modules/type-detect/lib/type.js:66 =>  * @param {Mixed} object to test
./node_modules/type-detect/lib/type.js:73 =>  * #### .define (type, test)
./node_modules/type-detect/lib/type.js:75 =>  * Add a test to for the `.test()` assertion.
./node_modules/type-detect/lib/type.js:95 =>  * @param {RegExp|Function} test
./node_modules/type-detect/lib/type.js:99 => Library.prototype.define = function(type, test) {
./node_modules/type-detect/lib/type.js:100 =>   if (arguments.length === 1) return this.tests[type];
./node_modules/type-detect/lib/type.js:101 =>   this.tests[type] = test;
./node_modules/type-detect/lib/type.js:106 =>  * #### .test (obj, test)
./node_modules/type-detect/lib/type.js:110 =>  * use the user defined custom tests.
./node_modules/type-detect/lib/type.js:113 =>  * assert(lib.test('1', 'int'));
./node_modules/type-detect/lib/type.js:114 =>  * assert(lib.test('yes', 'bln'));
./node_modules/type-detect/lib/type.js:123 => Library.prototype.test = function(obj, type) {
./node_modules/type-detect/lib/type.js:125 =>   var test = this.tests[type];
./node_modules/type-detect/lib/type.js:127 =>   if (test && 'regexp' === getType(test)) {
./node_modules/type-detect/lib/type.js:128 =>     return test.test(obj);
./node_modules/type-detect/lib/type.js:129 =>   } else if (test && 'function' === getType(test)) {
./node_modules/type-detect/lib/type.js:130 =>     return test(obj);
./node_modules/type-detect/lib/type.js:132 =>     throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
./node_modules/typedarray/test/tarray.js:2 => var test = require('tape');
./node_modules/typedarray/test/tarray.js:4 => test('tiny u8a test', function (t) {
./node_modules/uglify-js/lib/ast.js:75 =>         if (/^\$/.test(i)) {
./node_modules/uglify-js/lib/output.js:53 =>         return /@preserve|@license|@cc_on/i.test(text);
./node_modules/uglify-js/lib/output.js:92 =>         if (typeof options.comments === "string" && /^\/.*\/[a-zA-Z]*$/.test(options.comments)) {
./node_modules/uglify-js/lib/output.js:101 =>                 return comment.type == "comment5" || comments.test(comment.value);
./node_modules/uglify-js/lib/output.js:153 =>                   return /[0-7]/.test(str.charAt(i+1)) ? "\\x00" : "\\0";
./node_modules/uglify-js/lib/output.js:220 =>             if ((!ch || ";}".indexOf(ch) < 0) && !/[;]$/.test(last)) {
./node_modules/uglify-js/lib/output.js:231 =>                     if (/^\s+$/.test(str)) {
./node_modules/uglify-js/lib/compress.js:149 =>         // XXX: this is a rather expensive way to test two node's equivalence:
./node_modules/uglify-js/lib/mozilla-ast.js:163 =>             return new (M.test ? AST_Case : AST_Default)({
./node_modules/uglify-js/lib/mozilla-ast.js:166 =>                 expression : from_moz(M.test),
./node_modules/uglify-js/lib/propmangle.js:157 =>         if (/^[0-9.]+$/.test(name)) return false;
./node_modules/uglify-js/lib/propmangle.js:163 =>         if (regex && !regex.test(name)) return false;
./node_modules/uglify-js/README.md:478 => The code generator tries to output shortest code possible by default.  In
./node_modules/uglify-js/tools/node.js:182 =>             return !/^\$/.test(prop);
./node_modules/uglify-to-browserify/test/index.js:3 => var test = fs.readFileSync(require.resolve('uglify-js/test/run-tests.js'), 'utf8')
./node_modules/uglify-to-browserify/test/index.js:9 =>     Function('module,require', test)({
./node_modules/uglify-to-browserify/test/index.js:10 =>       filename: require.resolve('uglify-js/test/run-tests.js')
./node_modules/uglify-to-browserify/test/index.js:15 =>         } else if (/^[a-z]+$/.test(name)) {
./node_modules/url/test.js:766 =>   'http://_jabber._tcp.google.com/test': {
./node_modules/url/test.js:771 =>     'href': 'http://_jabber._tcp.google.com/test',
./node_modules/url/test.js:772 =>     'pathname': '/test',
./node_modules/url/test.js:773 =>     'path': '/test',
./node_modules/url/test.js:776 =>   'http://user:pass@_jabber._tcp.google.com/test': {
./node_modules/url/test.js:782 =>     'href': 'http://user:pass@_jabber._tcp.google.com/test',
./node_modules/url/test.js:783 =>     'pathname': '/test',
./node_modules/url/test.js:784 =>     'path': '/test',
./node_modules/url/test.js:787 =>   'http://_jabber._tcp.google.com:80/test': {
./node_modules/url/test.js:793 =>     'href': 'http://_jabber._tcp.google.com:80/test',
./node_modules/url/test.js:794 =>     'pathname': '/test',
./node_modules/url/test.js:795 =>     'path': '/test',
./node_modules/url/test.js:798 =>   'http://user:pass@_jabber._tcp.google.com:80/test': {
./node_modules/url/test.js:805 =>     'href': 'http://user:pass@_jabber._tcp.google.com:80/test',
./node_modules/url/test.js:806 =>     'pathname': '/test',
./node_modules/url/test.js:807 =>     'path': '/test',
./node_modules/url/test.js:879 =>   test('parse(' + u + ')', function() {
./node_modules/uuid/test/test.js:9 =>   test(name, function() {
./node_modules/uuid/test/test.js:39 => test('msec', function() {
./node_modules/uuid/test/test.js:46 => test('exception thrown when > 10k ids created in 1ms', function() {
./node_modules/uuid/test/test.js:57 => test('clock regression by msec', function() {
./node_modules/uuid/test/test.js:67 => test('clock regression by nsec', function() {
./node_modules/uuid/test/test.js:77 => test('explicit options product expected id', function() {
./node_modules/uuid/test/test.js:88 => test('ids spanning 1ms boundary are 100ns apart', function() {
./node_modules/verror/tests/tst.inherit.js:2 =>  * tst.inherit.js: test that inheriting from VError and WError work as expected.
./node_modules/verror/tests/tst.verror.js:2 =>  * tst.verror.js: tests basic functionality of the VError class.
./node_modules/verror/tests/tst.verror.js:26 =>  * Node-specific implementation details in our testing of stack traces.
./node_modules/verror/tests/tst.verror.js:141 => 	return (new VError(options, 'test error'));
./node_modules/verror/tests/tst.verror.js:146 =>     'VError: test error',
./node_modules/verror/tests/tst.verror.js:154 =>     'VError: test error',
./node_modules/verror/tests/tst.werror.js:2 =>  * tst.werror.js: tests basic functionality of the WError class.
./node_modules/verror/tests/tst.werror.js:26 =>  * Node-specific implementation details in our testing of stack traces.
./node_modules/verror/tests/tst.werror.js:162 => 	return (new WError(options, 'test error'));
./node_modules/verror/tests/tst.werror.js:165 => mod_assert.equal(err.toString(), 'WError: test error');
./node_modules/verror/tests/tst.werror.js:168 =>     'WError: test error',
./node_modules/verror/tests/tst.werror.js:174 => mod_assert.equal(err.toString(), 'WError: test error');
./node_modules/verror/tests/tst.werror.js:177 =>     'WError: test error',
./node_modules/vm-browserify/test/vm.js:1 => var test = require('tape');
./node_modules/vm-browserify/test/vm.js:4 => test('vmRunInNewContext', function (t) {
./node_modules/vm-browserify/test/vm.js:25 => test('vmRunInContext', function (t) {
./node_modules/xmldom/sax.js:532 => 		if(len>1 && /!doctype/i.test(matchs[0][0])){
./node_modules/xmldom/sax.js:534 => 			var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
./node_modules/xmldom/sax.js:572 => 		if(!tagNamePattern.test(tagName)){
./node_modules/xmldom/sax.js:578 => 		if(!tagNamePattern.test(qName)){
./node_modules/yargs/CHANGELOG.md:221 => - [647d37f](https://github.com/bcoe/yargs/commit/647d37f164c20f4bafbf67dd9db6cd6e2cd3b49f) Merge branch 'rewrite-duplicate-test' of github.com:isbadawi/node-optimist (@chevex)
./node_modules/yargs/CHANGELOG.md:236 => - [d37bfe0](https://github.com/bcoe/yargs/commit/d37bfe05ae6d295a0ab481efe4881222412791f4) all tests passing using minimist (@substack)
./node_modules/yargs/CHANGELOG.md:237 => - [76f1352](https://github.com/bcoe/yargs/commit/76f135270399d01f2bbc621e524a5966e5c422fd) all parse tests now passing (@substack)
./node_modules/yargs/CHANGELOG.md:238 => - [a7b6754](https://github.com/bcoe/yargs/commit/a7b6754276c38d1565479a5685c3781aeb947816) using minimist, some tests passing (@substack)
./node_modules/yargs/CHANGELOG.md:244 => - [5a3dd1a](https://github.com/bcoe/yargs/commit/5a3dd1a4e0211a38613c6e02f61328e1031953fa) failing test for whitespace arg (@substack)
./node_modules/yargs/CHANGELOG.md:248 => - [b13bd4c](https://github.com/bcoe/yargs/commit/b13bd4cac856a9821d42fa173bdb58f089365a7d) failing test for parse() with modifiers (@substack)
./node_modules/yargs/CHANGELOG.md:254 => - [dafe3e1](https://github.com/bcoe/yargs/commit/dafe3e18d7c6e7c2d68e06559df0e5cbea3adb14) failing short test (@substack)
./node_modules/yargs/CHANGELOG.md:265 => - [5045122](https://github.com/bcoe/yargs/commit/5045122664c3f5b4805addf1be2148d5856f7ce8) set $0 properly in the tests (@substack)
./node_modules/yargs/CHANGELOG.md:269 => - [8f44aeb](https://github.com/bcoe/yargs/commit/8f44aeb74121ddd689580e2bf74ef86a605e9bf2) Fix failing test for aliased booleans. (@coderarity)
./node_modules/yargs/CHANGELOG.md:270 => - [b9f7b61](https://github.com/bcoe/yargs/commit/b9f7b613b1e68e11e6c23fbda9e555a517dcc976) Add failing test for short aliased booleans. (@coderarity)
./node_modules/yargs/CHANGELOG.md:279 => - [88e5d32](https://github.com/bcoe/yargs/commit/88e5d32295be6e544c8d355ff84e355af38a1c74) test/usage.js no longer hangs (@jfhbrook)
./node_modules/yargs/CHANGELOG.md:280 => - [e1e740c](https://github.com/bcoe/yargs/commit/e1e740c27082f3ce84deca2093d9db2ef735d0e5) two tests for combined boolean/alias opts parsing (@jfhbrook)
./node_modules/yargs/README.md:918 => To run the tests with npm, just do:
./node_modules/yargs/README.md:920 =>     npm test
./node_modules/yargs/lib/parser.js:46 =>     if (/-/.test(key) && !opts.alias[key]) {
./node_modules/yargs/lib/parser.js:115 =>         } else if (/^(true|false)$/.test(next)) {
./node_modules/yargs/lib/parser.js:173 =>         if (/[A-Za-z]/.test(letters[j])
./node_modules/yargs/lib/parser.js:174 =>         && /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
./node_modules/yargs/lib/parser.js:199 =>           if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1])
./node_modules/yargs/lib/parser.js:204 =>           } else if (args[i + 1] && /true|false/.test(args[i + 1])) {
./node_modules/yargs/lib/parser.js:249 =>       if (/^-/.test(args[ii])) break
./node_modules/yargs/lib/parser.js:263 =>     if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {
./test/tc0007/manifest.ttl:489 =>    test:informationResourceInput <test-cases/0060.html>;
./test/tc0007/manifest.ttl:490 =>    test:informationResourceResults <test-cases/0060.sparql>;
./test/tc0007/manifest.ttl:491 =>    test:purpose "Tests conformance with UTF-8 encoding";
./test/tc0007/manifest.ttl:492 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:493 => <test-cases/0061> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:495 =>    a test:TestCase;
./test/tc0007/manifest.ttl:496 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:497 =>    test:classification test:required;
./test/tc0007/manifest.ttl:498 =>    rdfatest:hostLanguage "xhtml1";
./test/tc0007/manifest.ttl:499 =>    test:informationResourceInput <test-cases/0061.html>;
./test/tc0007/manifest.ttl:500 =>    test:informationResourceResults <test-cases/0061.sparql>;
./test/tc0007/manifest.ttl:501 =>    test:purpose "Tests @rel in head using reserved, non-prefixed XHTML value";
./test/tc0007/manifest.ttl:502 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:503 => <test-cases/0062> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:505 =>    a test:TestCase;
./test/tc0007/manifest.ttl:506 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:507 =>    test:classification test:required;
./test/tc0007/manifest.ttl:508 =>    rdfatest:hostLanguage "xhtml1";
./test/tc0007/manifest.ttl:509 =>    test:informationResourceInput <test-cases/0062.html>;
./test/tc0007/manifest.ttl:510 =>    test:informationResourceResults <test-cases/0062.sparql>;
./test/tc0007/manifest.ttl:511 =>    test:purpose "Tests @rev in head using reserved, non-prefixed XHTML value";
./test/tc0007/manifest.ttl:512 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:513 => <test-cases/0063> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:515 =>    a test:TestCase;
./test/tc0007/manifest.ttl:516 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:517 =>    test:classification test:required;
./test/tc0007/manifest.ttl:518 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:519 =>    test:informationResourceInput <test-cases/0063.html>;
./test/tc0007/manifest.ttl:520 =>    test:informationResourceResults <test-cases/0063.sparql>;
./test/tc0007/manifest.ttl:521 =>    test:purpose "Tests @rel in head using reserved XHTML value and empty-prefix CURIE syntax";
./test/tc0007/manifest.ttl:522 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:523 => <test-cases/0064> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:525 =>    a test:TestCase;
./test/tc0007/manifest.ttl:526 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:527 =>    test:classification test:required;
./test/tc0007/manifest.ttl:528 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:529 =>    test:informationResourceInput <test-cases/0064.html>;
./test/tc0007/manifest.ttl:530 =>    test:informationResourceResults <test-cases/0064.sparql>;
./test/tc0007/manifest.ttl:531 =>    test:purpose "Tests if @about generates a proper triple when a safe CURIE is used";
./test/tc0007/manifest.ttl:532 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:533 => <test-cases/0065> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:535 =>    a test:TestCase;
./test/tc0007/manifest.ttl:536 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:537 =>    test:classification test:required;
./test/tc0007/manifest.ttl:538 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:539 =>    test:informationResourceInput <test-cases/0065.html>;
./test/tc0007/manifest.ttl:540 =>    test:informationResourceResults <test-cases/0065.sparql>;
./test/tc0007/manifest.ttl:541 =>    test:purpose "Tests if @rel properly connects triples generated when safe CURIEs are used";
./test/tc0007/manifest.ttl:542 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:543 => <test-cases/0066> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:545 =>    a test:TestCase;
./test/tc0007/manifest.ttl:546 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:547 =>    test:classification test:required;
./test/tc0007/manifest.ttl:548 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:549 =>    test:informationResourceInput <test-cases/0066.html>;
./test/tc0007/manifest.ttl:550 =>    test:informationResourceResults <test-cases/0066.sparql>;
./test/tc0007/manifest.ttl:551 =>    test:purpose "Test to make sure that @about (with current document) is implied in the head, and the proper triples are generated using @typeof";
./test/tc0007/manifest.ttl:552 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:553 => <test-cases/0067> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:555 =>    a test:TestCase;
./test/tc0007/manifest.ttl:556 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:557 =>    test:classification test:required;
./test/tc0007/manifest.ttl:558 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:559 =>    test:informationResourceInput <test-cases/0067.html>;
./test/tc0007/manifest.ttl:560 =>    test:informationResourceResults <test-cases/0067.sparql>;
./test/tc0007/manifest.ttl:561 =>    test:purpose "Test to make sure that @property in head uses the implied current document as the subject if no other subject is specified";
./test/tc0007/manifest.ttl:562 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:563 => <test-cases/0068> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:565 =>    a test:TestCase;
./test/tc0007/manifest.ttl:566 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:567 =>    test:classification test:required;
./test/tc0007/manifest.ttl:568 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:569 =>    test:informationResourceInput <test-cases/0068.html>;
./test/tc0007/manifest.ttl:570 =>    test:informationResourceResults <test-cases/0068.sparql>;
./test/tc0007/manifest.ttl:571 =>    test:purpose "Tests to ensure that relative URI is resolved correctly when used in @about";
./test/tc0007/manifest.ttl:572 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:573 => <test-cases/0069> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:575 =>    a test:TestCase;
./test/tc0007/manifest.ttl:576 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:577 =>    test:classification test:required;
./test/tc0007/manifest.ttl:578 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:579 =>    test:informationResourceInput <test-cases/0069.html>;
./test/tc0007/manifest.ttl:580 =>    test:informationResourceResults <test-cases/0069.sparql>;
./test/tc0007/manifest.ttl:581 =>    test:purpose "Tests to ensure that relative URI is resolved correctly when used in @href";
./test/tc0007/manifest.ttl:582 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:583 => <test-cases/0070> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:585 =>    a test:TestCase;
./test/tc0007/manifest.ttl:586 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:587 =>    test:classification test:required;
./test/tc0007/manifest.ttl:588 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:589 =>    test:informationResourceInput <test-cases/0070.html>;
./test/tc0007/manifest.ttl:590 =>    test:informationResourceResults <test-cases/0070.sparql>;
./test/tc0007/manifest.ttl:591 =>    test:purpose "Tests to ensure that relative URI is resolved correctly when used in @resource";
./test/tc0007/manifest.ttl:592 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:593 => <test-cases/0071> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:595 =>    a test:TestCase;
./test/tc0007/manifest.ttl:596 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:597 =>    test:classification test:required;
./test/tc0007/manifest.ttl:598 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:599 =>    test:informationResourceInput <test-cases/0071.html>;
./test/tc0007/manifest.ttl:600 =>    test:informationResourceResults <test-cases/0071.sparql>;
./test/tc0007/manifest.ttl:601 =>    test:purpose "Tests to ensure that a triple is generated even if @typeof and @about is not specified anywhere in the document";
./test/tc0007/manifest.ttl:602 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:603 => <test-cases/0072> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:605 =>    a test:TestCase;
./test/tc0007/manifest.ttl:606 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:607 =>    test:classification test:required;
./test/tc0007/manifest.ttl:608 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:609 =>    test:informationResourceInput <test-cases/0072.html>;
./test/tc0007/manifest.ttl:610 =>    test:informationResourceResults <test-cases/0072.sparql>;
./test/tc0007/manifest.ttl:611 =>    test:purpose "Tests to ensure that relative URIs are resolved correctly when used in @about with XHTML base set in head";
./test/tc0007/manifest.ttl:612 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:613 => <test-cases/0073> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:615 =>    a test:TestCase;
./test/tc0007/manifest.ttl:616 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:617 =>    test:classification test:required;
./test/tc0007/manifest.ttl:618 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:619 =>    test:informationResourceInput <test-cases/0073.html>;
./test/tc0007/manifest.ttl:620 =>    test:informationResourceResults <test-cases/0073.sparql>;
./test/tc0007/manifest.ttl:621 =>    test:purpose "Tests to ensure that relative URIs are resolved correctly when used in @resource with XHTML base set in head";
./test/tc0007/manifest.ttl:622 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:623 => <test-cases/0074> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:625 =>    a test:TestCase;
./test/tc0007/manifest.ttl:626 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:627 =>    test:classification test:required;
./test/tc0007/manifest.ttl:628 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:629 =>    test:informationResourceInput <test-cases/0074.html>;
./test/tc0007/manifest.ttl:630 =>    test:informationResourceResults <test-cases/0074.sparql>;
./test/tc0007/manifest.ttl:631 =>    test:purpose "Tests to ensure that relative URIs are resolved correctly when used in @href with XHTML base set in head";
./test/tc0007/manifest.ttl:632 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:633 => <test-cases/0075> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:635 =>    a test:TestCase;
./test/tc0007/manifest.ttl:636 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:637 =>    test:classification test:required;
./test/tc0007/manifest.ttl:638 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:639 =>    test:informationResourceInput <test-cases/0075.html>;
./test/tc0007/manifest.ttl:640 =>    test:informationResourceResults <test-cases/0075.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:441 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0049.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:442 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0049.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:450 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0050.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:451 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0050.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:459 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0051.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:460 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0051.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:468 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0052.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:469 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0052.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:477 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0053.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:478 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0053.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:486 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0054.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:487 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0054.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:495 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0055.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:496 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0055.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:504 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0056.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:505 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0056.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:513 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0057.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:514 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0057.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:522 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0058.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:523 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0058.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:531 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0059.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:532 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0059.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:540 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0060.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:541 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0060.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:549 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0061.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:550 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0061.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:558 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0062.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:559 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0062.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:567 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0063.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:568 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0063.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:351 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0035">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:353 =>         <dc:title>@src/@href test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:354 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0035.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:355 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0035.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:357 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:361 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0036">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:363 =>         <dc:title>@src/@resource test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:364 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0036.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:365 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0036.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:367 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:371 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0037">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:373 =>         <dc:title>@src/@href/@resource test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:374 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0037.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:375 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0037.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:377 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:381 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0038">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:383 =>         <dc:title>@rev - img[@src] test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:384 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0038.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:385 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0038.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:387 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:391 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0039">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:393 =>         <dc:title>@rev - @src/@href test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:394 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0039.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:395 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0039.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:397 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:401 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0040">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:403 =>         <dc:title>@rev - @src/@resource test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:404 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0040.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:405 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0040.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:407 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:411 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0041">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:413 =>         <dc:title>@rev - @src/@href/@resource test</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:414 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0041.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:415 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0041.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:417 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:421 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0042">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:423 =>         <dc:title>img[@src] test with omitted @about</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:424 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0042.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:425 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0042.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:427 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:432 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0043">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:434 =>         <dc:title>@src/@href test with omitted @about</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:435 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0043.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:436 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0043.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:438 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:442 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0044">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:444 =>         <dc:title>@src/@resource test with omitted @about</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:445 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0044.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:446 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0044.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:448 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:452 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0045">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:454 =>         <dc:title>@src/@href/@resource test with omitted @about</dc:title>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:455 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0045.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:456 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0045.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:458 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:462 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0046">
./test/tc0004/rdfcore/Manifest.rdf:193 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test003b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:194 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:196 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:198 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#semantic-equivalence-within-type-2">
./test/tc0004/rdfcore/Manifest.rdf:200 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:201 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />
./test/tc0004/rdfcore/Manifest.rdf:202 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:204 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:206 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:207 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:208 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:210 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:211 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test003b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:212 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:214 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:215 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test003a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:216 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:218 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:221 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-important-for-non-dt-entailment-1">
./test/tc0004/rdfcore/Manifest.rdf:223 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:224 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />-->
./test/tc0004/rdfcore/Manifest.rdf:225 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:226 => This test used to claim:
./test/tc0004/rdfcore/Manifest.rdf:230 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:232 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:233 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:235 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:236 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:237 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:239 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:240 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:241 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:243 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:245 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-important-for-non-dt-entailment-2">
./test/tc0004/rdfcore/Manifest.rdf:247 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:248 =>    <!--<test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" />-->
./test/tc0004/rdfcore/Manifest.rdf:249 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:250 => This test used to claim:
./test/tc0004/rdfcore/Manifest.rdf:254 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:256 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:257 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:259 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:260 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:261 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:263 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:264 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004c.nt" />
./test/tc0004/rdfcore/Manifest.rdf:265 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:267 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:269 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-ignored-for-numeric-types-1">
./test/tc0004/rdfcore/Manifest.rdf:271 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:272 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:273 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:275 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:277 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:278 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:279 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:281 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:282 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:283 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:285 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:286 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:287 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:289 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:291 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-ignored-for-numeric-types-2">
./test/tc0004/rdfcore/Manifest.rdf:293 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:294 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:295 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:297 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:299 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:300 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:301 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:303 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:304 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:305 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:307 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:308 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004c.nt" />
./test/tc0004/rdfcore/Manifest.rdf:309 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:311 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:313 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-ignored-for-numeric-types-3">
./test/tc0004/rdfcore/Manifest.rdf:315 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:316 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Nov/0611.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:317 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:319 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:321 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:322 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:323 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:325 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:326 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004c.nt" />
./test/tc0004/rdfcore/Manifest.rdf:327 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:329 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:330 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test004a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:331 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:333 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:336 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#semantic-equivalence-between-datatypes">
./test/tc0004/rdfcore/Manifest.rdf:338 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:339 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:340 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:342 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:344 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:345 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:346 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:347 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#decimal" />
./test/tc0004/rdfcore/Manifest.rdf:349 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:350 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test005a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:351 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:353 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:354 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test005b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:355 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:357 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:360 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#range-clash">
./test/tc0004/rdfcore/Manifest.rdf:362 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:363 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:364 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:367 =>    </test:description>
./node_modules/acorn/dist/acorn.js:314 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/acorn/dist/walk.js:239 =>   if (node.test) c(node.test, st, "Expression");
./node_modules/acorn/dist/walk.js:297 =>   c(node.test, st, "Expression");
./node_modules/acorn/dist/acorn_csp.js:314 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/acorn/src/identifier.js:112 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
./node_modules/acorn/src/identifier.js:126 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
./node_modules/acorn/src/statement.js:235 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
./node_modules/acorn/src/statement.js:277 =>   node.test = this.parseParenExpression()
./node_modules/acorn/src/statement.js:342 =>   node.test = this.type === tt.semi ? null : this.parseExpression()
./node_modules/acorn/src/tokenize.js:388 =>     if (lineBreak.test(ch)) this.raise(start, "Unterminated regular expression")
./node_modules/acorn/src/tokenize.js:406 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
./node_modules/async/README.md:817 => ### whilst(test, fn, callback)
./node_modules/async/README.md:819 => Repeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,
./node_modules/async/README.md:824 => * `test()` - synchronous truth test to perform before each execution of `fn`.
./node_modules/async/README.md:825 => * `fn(callback)` - A function which is called each time `test` passes. The function is
./node_modules/async/README.md:828 => * `callback(err)` - A callback which is called after the test fails and repeated
./node_modules/async/README.md:851 => ### doWhilst(fn, test, callback)
./node_modules/async/README.md:854 => the order of operations, the arguments `test` and `fn` are switched. 
./node_modules/async/README.md:861 => ### until(test, fn, callback)
./node_modules/async/README.md:863 => Repeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,
./node_modules/async/README.md:871 => ### doUntil(fn, test, callback)
./node_modules/async/README.md:873 => Like [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.
./node_modules/babylon/CHANGELOG.md:777 => * Add tests for export extensions ([#127](https://github.com/babel/babylon/pull/127)) (Daniel Tschinder)
./node_modules/babylon/CHANGELOG.md:835 => - Add codecoverage to tests @danez
./node_modules/babylon/CHANGELOG.md:836 => - Fix tests to not save expected output if we expect the test to fail @danez
./node_modules/babylon/CHANGELOG.md:837 => - Make a shallow clone of babel for testing @danez
./node_modules/babylon/CHANGELOG.md:877 => - Enable skipped tests ([#16](https://github.com/babel/babylon/pull/16)) @danez
./node_modules/babylon/CHANGELOG.md:878 => - Add script to test latest version of babylon with babel ([#21](https://github.com/babel/babylon/pull/21)) @danez
./node_modules/babylon/CHANGELOG.md:879 => - Upgrade test runner ava @kittens
./node_modules/babylon/CHANGELOG.md:882 => - Add node v6 to travis testing @hzoo
./node_modules/bn.js/lib/bn.js:665 =>     if (this.testn(width - 1)) {
./node_modules/babylon/lib/index.js:82 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
./node_modules/babylon/lib/index.js:95 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
./node_modules/browserify/changelog.markdown:862 => In the run-up to the 4.0, [module-deps](https://npmjs.org/package/module-deps) got an extensive rewrite with minimal test changes. Mostly it was just getting really messy because it was a giant ball-of-mud closure instead of a more straightforward prototype-based implementation with more clearly-defined methods.
./node_modules/browserify/bin/args.js:262 =>         if ((/[a-zA-Z]:[\\/]/.test(f)) && (pos == 1)){
./node_modules/chai/History.md:663 =>   * Fixing order of error message test.
./node_modules/chai/History.md:670 =>   * [test] browser build
./node_modules/chai/History.md:672 =>   * [refactor] remove Assertion.prototype.inspect for testable object inspection
./node_modules/chai/History.md:673 =>   * [refactor] object to test is now stored in flag, with ssfi and custom message
./node_modules/chai/History.md:677 =>   * [feature] testing utilities
./node_modules/chai/History.md:683 =>   * disabled stackTrack configuration tests until api is stable again
./node_modules/chai/History.md:687 =>   * tests for assert interface negatives. Closed #42
./node_modules/chai/History.md:749 =>   * Assertion#throw `should` tests updated
./node_modules/chai/History.md:750 =>   * Assertion#throw `expect` tests
./node_modules/chai/History.md:753 =>   * Add more tests for `empty` in `should`.
./node_modules/chai/History.md:754 =>   * Add more tests for `empty` in `expect`.
./node_modules/chai/History.md:762 =>   * have been test
./node_modules/chai/History.md:763 =>   * below tests
./node_modules/chai/History.md:779 =>   * Merge pull request #30 from logicalparadox/assert-tests
./node_modules/chai/History.md:781 =>   * Update `assert.doesNotThrow` test in order to check the use case when type is a string.
./node_modules/chai/History.md:782 =>   * Add test for `assert.ifError`.
./node_modules/chai/History.md:785 =>   * Add test for `assert.doesNotThrow`.
./node_modules/chai/History.md:786 =>   * Add test for `assert.throws`.
./node_modules/chai/History.md:787 =>   * Add test for `assert.length`.
./node_modules/chai/History.md:788 =>   * Add test for `assert.include`.
./node_modules/chai/History.md:789 =>   * Add test for `assert.isBoolean`.
./node_modules/chai/History.md:791 =>   * Add test for `assert.isNumber`.
./node_modules/chai/History.md:792 =>   * Add test for `assert.isString`.
./node_modules/chai/History.md:793 =>   * Add test for `assert.isArray`.
./node_modules/chai/History.md:794 =>   * Add test for `assert.isUndefined`.
./node_modules/chai/History.md:795 =>   * Add test for `assert.isNotNull`.
./node_modules/chai/History.md:798 =>   * Add test for `assert.isNull`.
./node_modules/chai/History.md:799 =>   * Add test for `assert.notDeepEqual`.
./node_modules/chai/History.md:800 =>   * Add test for `assert.deepEqual`.
./node_modules/chai/History.md:801 =>   * Add test for `assert.notStrictEqual`.
./node_modules/chai/History.md:802 =>   * Add test for `assert.strictEqual`.
./node_modules/chai/History.md:803 =>   * Add test for `assert.notEqual`.
./node_modules/chai/History.md:810 =>   * Add should tests for type checks.
./node_modules/chai/History.md:811 =>   * Add function type check test.
./node_modules/chai/History.md:812 =>   * Add more type checks tests.
./node_modules/chai/History.md:813 =>   * Add test for `new Number` type check.
./node_modules/chai/History.md:821 =>   * putting coverage and tests for docs in docs/out/support
./node_modules/chai/History.md:823 =>   * makefile copy necessary resources for tests in docs
./node_modules/chai/History.md:824 =>   * rename configuration test
./node_modules/chai/History.md:829 =>   * Add `.closeTo()` should test.
./node_modules/chai/History.md:830 =>   * Add `.closeTo()` expect test.
./node_modules/chai/History.md:833 =>   * `..` -> `()` in `.satisfy()` should test.
./node_modules/chai/History.md:837 =>   * Add `.satisfy()` should test.
./node_modules/chai/History.md:838 =>   * Add `.satisfy()` expect test.
./node_modules/chai/History.md:842 =>   * Add `respondTo` should test.
./node_modules/chai/History.md:843 =>   * Add `respondTo` expect test.
./node_modules/chai/History.md:856 =>   * Update test to be compatible with browsers that do not support err.stack
./node_modules/chai/History.md:857 =>   * udpated compiled chai.js and added to browser tests
./node_modules/chai/ReleaseNotes.md:645 => - Travis-CI now tests Node.js `v0.10.x`. Support for `v0.6.x` has been removed. `v0.8.x` is still tested as before.
./node_modules/chai/ReleaseNotes.md:685 => [chaijs.com](http://chaijs.com) for the latest version number as using the master branch
./node_modules/chai/ReleaseNotes.md:699 => **2. Configurable showDiff:** Some test runners (such as [mocha](http://visionmedia.github.com/mocha/))
./node_modules/chai/ReleaseNotes.md:729 => **1. Browser Testing**: Browser testing of the `./chai.js` file is now available in the command line
./node_modules/chai/ReleaseNotes.md:730 => via PhantomJS. `make test` and Travis-CI will now also rebuild and test `./chai.js`. Consequently, all
./node_modules/chai/ReleaseNotes.md:731 => pull requests will now be browser tested in this way.
./node_modules/chai/ReleaseNotes.md:737 => and include their credentials in `./test/auth/sauce.json`.
./node_modules/chai/chai.js:1212 =>    *     expect('test').to.have.ownProperty('length');
./node_modules/color-convert/color-convert-0.2.0.min.js:1 => var colorConvert=function(){var require=function(a,b){var c=require.resolve(a,b||""),d=require.modules[c],e=d._cached?d._cached:d();return e},__require=require;require.paths=[],require.modules={},require.resolve=function(a,b){var c=require.modules.path(),d=function(a){if(a==="."||a==="./")return".";var d=c.resolve(b,a);a.match(/^\.\.?\//)&&(b===""||b.match(/^\./))&&(d="./"+d);return d},e=[];!a.match(/\/|\./)&&require.modules[a]&&require.modules[a].builtin&&e.push(a);if(a.match(/^\.\.?\//))e.push(d(a));else{var f=b.split("/");for(var g=f.length;g>0;g--){var h=f.slice(0,g).join("/");h.length&&e.push(h+"/node_modules/"+a)}e.push("./node_modules/"+a),e.push(a)}for(var g=0;g<e.length;g++){var i=e[g],j=[[i+"/package.json",function(a){var b=require.modules[a]();if(b.main){var d=c.resolve(i,b.main);i.match(/^\./)&&(d="./"+d);return d}}],i,i+".js",i+".coffee",i+"/index.js",i+"/index.coffee"];for(var k=0;k<j.length;k++){var l=String,h=j[k];Array.isArray(h)&&(l=h[1],h=h[0]);if(require.modules[h]){var m=l(h);if(m){var n=["",".js",".coffee","/index.js","/index.coffee"].filter(function(a){return require.modules[m+a]})[0];if(n!==undefined)return m+n}}}}throw new Error("Cannot find module "+JSON.stringify(a))},typeof process=="undefined"&&(process={}),process.nextTick||(process.nextTick=function(a){setTimeout(a,0)}),process.title||(process.title="browser"),process.binding||(process.binding=function(a){if(a==="evals")return require("vm");throw new Error("No such module")}),process.cwd||(process.cwd=function(){return"."}),require.modules.events=function(){var a={exports:{}},b=a.exports,c=".",d="events",e=function(a){return __require(a,".")};e.resolve=function(a){return __require.resolve(name,".")},e.modules=__require.modules,__require.modules.events._cached=a.exports,function(){process.EventEmitter||(process.EventEmitter=function(){});var a=b.EventEmitter=process.EventEmitter,c=Array.isArray,d=10;a.prototype.setMaxListeners=function(a){this._events||(this._events={}),this._events.maxListeners=a},a.prototype.emit=function(a){if(a==="error")if(!this._events||!this._events.error||c(this._events.error)&&!this._events.error.length)throw arguments[1]instanceof Error?arguments[1]:new Error("Uncaught, unspecified 'error' event.");if(!this._events)return!1;var b=this._events[a];if(!b)return!1;if(typeof b=="function"){switch(arguments.length){case 1:b.call(this);break;case 2:b.call(this,arguments[1]);break;case 3:b.call(this,arguments[1],arguments[2]);break;default:var d=Array.prototype.slice.call(arguments,1);b.apply(this,d)}return!0}if(c(b)){var d=Array.prototype.slice.call(arguments,1),e=b.slice();for(var f=0,g=e.length;f<g;f++)e[f].apply(this,d);return!0}return!1},a.prototype.addListener=function(a,b){if("function"!=typeof b)throw new Error("addListener only takes instances of Function");this._events||(this._events={}),this.emit("newListener",a,b);if(!this._events[a])this._events[a]=b;else if(c(this._events[a])){if(!this._events[a].warned){var e;this._events.maxListeners!==undefined?e=this._events.maxListeners:e=d,e&&e>0&&this._events[a].length>e&&(this._events[a].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[a].length),console.trace())}this._events[a].push(b)}else this._events[a]=[this._events[a],b];return this},a.prototype.on=a.prototype.addListener,a.prototype.once=function(a,b){var c=this;c.on(a,function d(){c.removeListener(a,d),b.apply(this,arguments)});return this},a.prototype.removeListener=function(a,b){if("function"!=typeof b)throw new Error("removeListener only takes instances of Function");if(!this._events||!this._events[a])return this;var d=this._events[a];if(c(d)){var e=d.indexOf(b);if(e<0)return this;d.splice(e,1),d.length==0&&delete this._events[a]}else this._events[a]===b&&delete this._events[a];return this},a.prototype.removeAllListeners=function(a){a&&this._events&&this._events[a]&&(this._events[a]=null);return this},a.prototype.listeners=function(a){this._events||(this._events={}),this._events[a]||(this._events[a]=[]),c(this._events[a])||(this._events[a]=[this._events[a]]);return this._events[a]},e.modules.events.builtin=!0}.call(a.exports),__require.modules.events._cached=a.exports;return a.exports},require.modules.fs=function(){var a={exports:{}},b=a.exports,c=".",d="fs",e=function(a){return __require(a,".")};e.resolve=function(a){return __require.resolve(name,".")},e.modules=__require.modules,__require.modules.fs._cached=a.exports,function(){e.modules.fs.builtin=!0}.call(a.exports),__require.modules.fs._cached=a.exports;return a.exports},require.modules.json_shim=function(){var module={exports:{}},exports=module.exports,__dirname=".",__filename="json_shim",require=function(a){return __require(a,".")};require.resolve=function(a){return __require.resolve(name,".")},require.modules=__require.modules,__require.modules.json_shim._cached=module.exports,function(){typeof JSON=="undefined"&&(JSON={}),function(){function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i&&typeof i=="object"&&typeof i.toJSON=="function"&&(i=i.toJSON(a)),typeof rep=="function"&&(i=rep.call(b,a,i));switch(typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";gap+=indent,h=[];if(Object.prototype.toString.apply(i)==="[object Array]"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||"null";e=h.length===0?"[]":gap?"[\n"+gap+h.join(",\n"+gap)+"\n"+g+"]":"["+h.join(",")+"]",gap=g;return e}if(rep&&typeof rep=="object"){f=rep.length;for(c=0;c<f;c+=1)typeof rep[c]=="string"&&(d=rep[c],e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e))}else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e));e=h.length===0?"{}":gap?"{\n"+gap+h.join(",\n"+gap)+"\n"+g+"}":"{"+h.join(",")+"}",gap=g;return e}}function quote(a){escapable.lastIndex=0;return escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return typeof b=="string"?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function f(a){return a<10?"0"+a:a}"use strict",typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(a,b,c){var d;gap="",indent="";if(typeof c=="number")for(d=0;d<c;d+=1)indent+=" ";else typeof c=="string"&&(indent=c);rep=b;if(b&&typeof b!="function"&&(typeof b!="object"||typeof b.length!="number"))throw new Error("JSON.stringify");return str("",{"":a})}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e=="object")for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver=="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")})}(),require.modules.json_shim.builtin=!0}.call(module.exports),__require.modules.json_shim._cached=module.exports;return module.exports},require.modules.path=function(){var a={exports:{}},b=a.exports,c=".",d="path",e=function(a){return __require(a,".")};e.
./node_modules/combine-source-map/test/combine-source-map.js:281 => test('relative path when source and file name are the same', function(t) {
./node_modules/combine-source-map/test/combine-source-map.js:329 => test('remove comments', function (t) {
./node_modules/core-js/CHANGELOG.md:281 => * updated [`RegExp.escape`](https://github.com/zloirock/core-js/#ecmascript-7-proposals) to the [latest proposal](https://github.com/benjamingr/RexExp.escape)
./node_modules/crypto-browserify/example/bundle.js:453 =>  * Perform a simple self-test to see if the VM is working
./node_modules/crypto-browserify/example/bundle.js:455 => function sha1_vm_test()
./node_modules/ecc-jsbn/lib/ec.js:367 =>     if (betaValue.testBit(0) != yIsEven)
./node_modules/ecc-jsbn/lib/ec.js:452 =>     if (!this.q.testBit(0)) throw "unsupported";
./node_modules/ecc-jsbn/lib/ec.js:455 =>     if (this.q.testBit(1))
./node_modules/ecc-jsbn/lib/ec.js:494 =>             if (V.testBit(0))
./node_modules/ecc-jsbn/lib/ec.js:523 =>         if (k.testBit(j))
./node_modules/globals/globals.json:1074 => 		"test": false,
./node_modules/globals/globals.json:1155 => 		"Tinytest": false,
./node_modules/globals/globals.json:1229 => 	"atomtest": {
./node_modules/globals/globals.json:1238 => 	"embertest": {
./node_modules/function-bind/test/index.js:237 =>     t.test('sets a correct length without thisArg and too many arguments', function (st) {
./node_modules/function-bind/test/index.js:244 =>     t.test('sets a correct length with thisArg and too many arguments', function (st) {
./node_modules/hawk/README.md:556 => working on another port. A cross-platform test-suite is in the works.
./node_modules/hoek/test/index.js:365 =>         expect(copy._test).to.equal(0);
./node_modules/hoek/test/index.js:366 =>         copy.test = 5;
./node_modules/hoek/test/index.js:367 =>         expect(copy._test).to.equal(4);
./node_modules/hoek/test/index.js:538 =>         var a = { x: 1, y: 2, z: 3, v: 5, t: 'test', m: 'abc' };
./node_modules/hoek/test/index.js:553 =>         var a = { x: 1, y: 2, z: 3, v: 5, t: 'test', m: 'abc' };
./node_modules/hoek/test/index.js:562 =>         expect(d.t).to.deep.equal('test');
./node_modules/hoek/test/index.js:604 =>         g: 'test'
./node_modules/http-signature/lib/signer.js:345 =>     /* This is just for unit tests. */
./node_modules/inline-source-map/test/inline-source-map.js:281 =>   t.test('with offset', function (t) {
./node_modules/inline-source-map/test/inline-source-map.js:317 => test('inline mapping url with charset opt', function(t){
./node_modules/inline-source-map/test/inline-source-map.js:318 =>   t.test('set inline mapping url charset to gbk', function(t){
./node_modules/inline-source-map/test/inline-source-map.js:330 =>   t.test('default charset should be utf-8', function(t){
./node_modules/is-my-json-valid/test/misc.js:460 =>       { foo: 'test' },
./node_modules/is-my-json-valid/test/misc.js:461 =>       { foo: 'test' }
./node_modules/is-my-json-valid/test/misc.js:464 =>       { foo: 'test' },
./node_modules/is-my-json-valid/test/misc.js:465 =>       { baz: 'test' }
./node_modules/json-schema/draft-zyp-json-schema-04.xml:609 => 						<eref target="http://json-schema.org/links">http://json-schema.org/links</eref> (latest version) or
./node_modules/json-schema/draft-zyp-json-schema-03.xml:607 => 						<eref target="http://json-schema.org/links">http://json-schema.org/links</eref> (latest version) or
./node_modules/json3/lib/json3.js:161 =>                 // Simple parsing test.
./node_modules/jsonld/tests/test.js:298 => function addTest(manifest, test) {
./node_modules/jsonld/tests/test.js:299 =>   // skip unknown and explicitly skipped test types
./node_modules/jsonld/tests/test.js:300 =>   var testTypes = Object.keys(TEST_TYPES);
./node_modules/jsonld/tests/test.js:301 =>   if(!isJsonLdType(test, testTypes) || isJsonLdType(test, SKIP_TESTS)) {
./node_modules/jsonld/tests/test.js:303 =>       getJsonLdValues(test, '@type'),
./node_modules/jsonld/tests/test.js:304 =>       getJsonLdValues(test, 'type')
./node_modules/jsonld/tests/test.js:306 =>     console.log('Skipping test "' + test.name + '" of type: ' + type);
./node_modules/jsonld/tests/test.js:310 =>   var test_id = test['@id'] || test['id'];
./node_modules/jsonld/tests/test.js:311 =>   //var number = test_id.substr(2);
./node_modules/jsonld/tests/test.js:312 =>   test['@id'] = manifest.baseIri + basename(manifest.filename) + test_id;
./node_modules/jsonld/tests/test.js:313 =>   test.base = manifest.baseIri + test.input;
./node_modules/jsonld/tests/test.js:314 =>   test.manifest = manifest;
./node_modules/jsonld/tests/test.js:315 =>   var description = test_id + ' ' + (test.purpose || test.name);
./node_modules/jsonld/tests/test.js:317 =>   // get appropriate API and run test
./node_modules/jsonld/tests/test.js:321 =>     var testInfo = TEST_TYPES[getJsonLdTestType(test)];
./node_modules/jsonld/tests/test.js:322 =>     var fn = testInfo.fn;
./node_modules/jsonld/tests/test.js:323 =>     var params = testInfo.params;
./node_modules/jsonld/tests/test.js:324 =>     params = params.map(function(param) {return param(test);});
./node_modules/jsonld/tests/test.js:327 =>         if(isNegativeTest(test)) {
./node_modules/jsonld/tests/test.js:328 =>           compareExpectedError(test, err);
./node_modules/jsonld/tests/test.js:329 =>         // default is to assume positive and skip isPositiveTest(test) check
./node_modules/jsonld/tests/test.js:334 =>           testInfo.compare(test, result);
./node_modules/jsonld/tests/test.js:336 =>         earl.addAssertion(test, true);
./node_modules/jsonld/tests/test.js:349 =>         earl.addAssertion(test, false);
./node_modules/jsonld/tests/test.js:367 => function isPositiveTest(test) {
./node_modules/jsonld/tests/test.js:368 =>   return isJsonLdType(test, 'jld:PositiveEvaluationTest');
./node_modules/jsonld/tests/test.js:371 => function isNegativeTest(test) {
./node_modules/jsonld/tests/test.js:372 =>   return isJsonLdType(test, 'jld:NegativeEvaluationTest');
./node_modules/jsonld/tests/test.js:375 => function getJsonLdTestType(test) {
./node_modules/jsonld/tests/test.js:378 =>     if(isJsonLdType(test, types[i])) {
./node_modules/jsonld/tests/test.js:397 =>   return function(test) {
./node_modules/jsonld/tests/test.js:398 =>     if(!test[property]) {
./node_modules/jsonld/tests/test.js:401 =>     return test.manifest.baseIri + test[property];
./node_modules/jsonld/tests/test.js:406 =>   return function(test) {
./node_modules/jsonld/tests/test.js:407 =>     if(!test[property]) {
./node_modules/jsonld/tests/test.js:410 =>     var filename = joinPath(test.dirname, test[property]);
./node_modules/jsonld/tests/test.js:416 =>   return function(test) {
./node_modules/jsonld/tests/test.js:417 =>     if(!test[property]) {
./node_modules/jsonld/tests/test.js:420 =>     var filename = joinPath(test.dirname, test[property]);
./node_modules/jsonld/tests/test.js:426 =>   return function(test) {
./node_modules/jsonld/tests/test.js:428 =>       documentLoader: createDocumentLoader(test)
./node_modules/jsonld/tests/test.js:431 =>     var testOptions = test.option || {};
./node_modules/jsonld/tests/test.js:432 =>     for(var key in testOptions) {
./node_modules/jsonld/tests/test.js:434 =>         options[key] = testOptions[key];
./node_modules/jsonld/tests/test.js:445 =>         var filename = joinPath(test.dirname, options[key]);
./node_modules/jsonld/tests/test.js:455 => function _getExpectProperty(test) {
./node_modules/jsonld/tests/test.js:456 =>   if('expect' in test) {
./node_modules/jsonld/tests/test.js:458 =>   } else if('result' in test) {
./node_modules/jsonld/tests/test.js:465 => function compareExpectedJson(test, result) {
./node_modules/jsonld/tests/test.js:467 =>     var expect = readTestJson(_getExpectProperty(test))(test);
./node_modules/jsonld/tests/test.js:479 => function compareExpectedNQuads(test, result) {
./node_modules/jsonld/tests/test.js:481 =>     var expect = readTestNQuads(_getExpectProperty(test))(test);
./node_modules/jsonld/tests/test.js:493 => function compareExpectedError(test, err) {
./node_modules/jsonld/tests/test.js:495 =>     var expect = test[_getExpectProperty(test)];
./node_modules/jsonld/tests/test.js:602 =>  * Creates a test remote document loader.
./node_modules/jsonld/tests/test.js:604 =>  * @param test the test to use the document loader for.
./node_modules/jsonld/tests/test.js:608 => function createDocumentLoader(test) {
./node_modules/jsonld/tests/test.js:609 =>   var base = 'http://json-ld.org/test-suite';
./node_modules/jsonld/tests/test.js:612 =>     // always load remote-doc tests remotely in node
./node_modules/jsonld/tests/test.js:613 =>     if(_nodejs && test.manifest.name === 'Remote document') {
./node_modules/jsonld/tests/test.js:619 =>       // attempt to load official test-suite files or relative URLs locally
./node_modules/lodash.bind/index.js:853 =>     (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash/lodash.min.js:46 => }return t}}function Vr(n,t,r){function e(){return(this&&this!==Zn&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=1&t,i=Hr(n);return e}function Kr(n){return function(t){t=zu(t);var r=Bn.test(t)?$(t):F,e=r?r[0]:t.charAt(0);return t=r?zr(r,1).join(""):t.slice(1),e[n]()+t}}function Gr(n){return function(t){return h($u(Tu(t).replace(In,"")),n,"")}}function Hr(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:
./node_modules/lodash/lodash.min.js:51 => return t=l(t,S(je())),lr(function(e){var u=this;return n(t,function(n){return r(n,u,e)})})})}function ee(n,t){t=t===F?" ":jr(t);var r=t.length;return 2>r?r?ar(t,n):t:(r=ar(t,Ri(n/T(t))),Bn.test(t)?zr($(r),0,n).join(""):r.slice(0,n))}function ue(n,t,e,u){function i(){for(var t=-1,c=arguments.length,a=-1,l=u.length,s=Hu(l+c),h=this&&this!==Zn&&this instanceof i?f:n;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++t];return r(h,o?e:this,s)}var o=1&t,f=Hr(n);return i}function ie(n){return function(t,r,e){
./node_modules/minifyify/test/bundles.js:250 => module.exports = tests;
./node_modules/minifyify/lib/minifier.js:455 =>   if (!/^\w:|^\//.test(file)) {
./node_modules/mocha/CHANGELOG.md:507 =>   * [#1749] - Fix maximum call stack error on large amount of tests ([@tinganho])
./node_modules/mocha/CHANGELOG.md:508 =>   * [#1230] - Decorate failed hook titles with test title ([@duncanbeevers])
./node_modules/mocha/CHANGELOG.md:511 =>   * [#1781] - Fix hook error tests ([@glenjamin])
./node_modules/mocha/CHANGELOG.md:597 =>   * [#1327] - fix tests running twice, a regression issue. ([#1686], [@danielstjules])
./node_modules/mocha/CHANGELOG.md:598 =>   * [#1675] - add integration tests ([@danielstjules])
./node_modules/mocha/CHANGELOG.md:630 =>   * improve: dry up reporter/base test
./node_modules/mocha/CHANGELOG.md:664 =>   * fix insanity in http tests
./node_modules/mocha/package.json:1307 =>       "name": "yuitest",
./node_modules/mocha/package.json:1308 =>       "email": "developer.yuitest+github@cjhat.net",
./node_modules/mocha/package.json:1309 =>       "url": "https://github.com/yuitest"
./node_modules/mocha/package.json:1340 =>   "description": "simple, flexible, fun test framework",
./node_modules/mocha/bin/_mocha:356 => // default files to test/*.{js,coffee}
./node_modules/mocha/bin/_mocha:359 =>   args.push('test');
./node_modules/mocha/bin/_mocha:368 =>       console.error('Warning: Could not find any test files matching pattern: ' + arg);
./node_modules/mocha/bin/_mocha:379 =>   console.error('No test files found');
./node_modules/mocha/lib/mocha.js:398 =>  * Set the number of times to retry failed tests.
./node_modules/mocha/lib/mocha.js:438 =>  * Makes all tests async (accepting a callback)
./node_modules/mocha/lib/mocha.js:479 =>  * Run tests and invoke `fn()` when complete.
./node_modules/mocha/lib/runner.js:420 =>  * Run the current test and callback `fn(err)`.
./node_modules/mocha/lib/runner.js:427 =>   var test = this.test;
./node_modules/mocha/lib/runner.js:429 =>   if (!test) {
./node_modules/mocha/lib/runner.js:433 =>     test.asyncOnly = true;
./node_modules/mocha/lib/runner.js:437 =>     test.allowUncaught = true;
./node_modules/mocha/lib/runner.js:438 =>     return test.run(fn);
./node_modules/mocha/lib/runner.js:441 =>     test.on('error', function (err) {
./node_modules/mocha/lib/runner.js:442 =>       self.fail(test, err);
./node_modules/mocha/lib/runner.js:444 =>     test.run(fn);
./node_modules/mocha/lib/runner.js:451 =>  * Run tests in the given `suite` and invoke the callback `fn()` when complete.
./node_modules/mocha/lib/runner.js:459 =>   var tests = suite.tests.slice();
./node_modules/mocha/lib/runner.js:460 =>   var test;
./node_modules/mocha/lib/runner.js:502 =>     // next test
./node_modules/mocha/lib/runner.js:503 =>     test = tests.shift();
./node_modules/mocha/lib/runner.js:506 =>     if (!test) {
./node_modules/mocha/lib/runner.js:511 =>     var match = self._grep.test(test.fullTitle());
./node_modules/mocha/lib/runner.js:519 =>       // all tests. The run immediately function also comes with
./node_modules/mocha/lib/runner.js:521 =>       // if we run the whole test suite, because running the whole
./node_modules/mocha/lib/runner.js:522 =>       // test suite don't do any immediate recursive loops. Thus,
./node_modules/mocha/lib/runner.js:532 =>     if (test.isPending()) {
./node_modules/mocha/lib/runner.js:533 =>       self.emit('pending', test);
./node_modules/mocha/lib/runner.js:534 =>       self.emit('test end', test);
./node_modules/mocha/lib/runner.js:538 =>     // execute test and hook(s)
./node_modules/mocha/lib/runner.js:539 =>     self.emit('test', self.test = test);
./node_modules/mocha/lib/runner.js:541 =>       if (test.isPending()) {
./node_modules/mocha/lib/runner.js:542 =>         self.emit('pending', test);
./node_modules/mocha/lib/runner.js:543 =>         self.emit('test end', test);
./node_modules/mocha/lib/runner.js:549 =>       self.currentRunnable = self.test;
./node_modules/mocha/lib/runner.js:551 =>         test = self.test;
./node_modules/mocha/lib/runner.js:553 =>           var retry = test.currentRetry();
./node_modules/mocha/lib/runner.js:555 =>             test.pending = true;
./node_modules/mocha/lib/runner.js:556 =>             self.emit('pending', test);
./node_modules/mocha/lib/runner.js:557 =>           } else if (retry < test.retries()) {
./node_modules/mocha/lib/runner.js:558 =>             var clonedTest = test.clone();
./node_modules/mocha/lib/runner.js:560 =>             tests.unshift(clonedTest);
./node_modules/mocha/lib/runner.js:566 =>             self.fail(test, err);
./node_modules/mocha/lib/runner.js:568 =>           self.emit('test end', test);
./node_modules/mocha/lib/runner.js:577 =>         test.state = 'passed';
./node_modules/mocha/lib/runner.js:578 =>         self.emit('pass', test);
./node_modules/mocha/lib/runner.js:579 =>         self.emit('test end', test);
./node_modules/mocha/lib/runner.js:633 =>     // Avoid grep neglecting large number of tests causing a
./node_modules/mocha/lib/runner.js:656 =>       // remove reference to test
./node_modules/mocha/lib/runner.js:657 =>       delete self.test;
./node_modules/mocha/lib/runner.js:696 =>     runnable = new Runnable('Uncaught error outside test suite');
./node_modules/mocha/lib/runner.js:719 =>   // recover from test
./node_modules/mocha/lib/runner.js:720 =>   if (runnable.type === 'test') {
./node_modules/mocha/lib/runner.js:721 =>     this.emit('test end', runnable);
./node_modules/mocha/lib/suite.js:376 =>   }, 0) + this.tests.length;
./node_modules/mocha/lib/suite.js:380 =>  * Iterates through each suite recursively to find all tests. Applies a
./node_modules/mocha/lib/suite.js:381 =>  * function in the format `fn(test)`.
./node_modules/mocha/lib/suite.js:388 =>   utils.forEach(this.tests, fn);
./node_modules/mocha/lib/utils.js:395 =>  * @param {*} value The value to test.
./node_modules/mocha/lib/utils.js:557 =>  * @param {*} value The value to test.
./node_modules/n3/lib/N3Store.js:264 =>         // If subject and object are given, the object index will be the fastest.
./node_modules/n3/lib/N3Store.js:268 =>         // If only subject and possibly predicate are given, the subject index will be the fastest.
./node_modules/n3/lib/N3Store.js:273 =>       // If only predicate and possibly object are given, the predicate index will be the fastest.
./node_modules/n3/lib/N3Store.js:277 =>       // If only object is given, the object index will be the fastest.
./node_modules/n3/lib/N3Store.js:318 =>         // If subject and object are given, the object index will be the fastest.
./node_modules/n3/lib/N3Store.js:321 =>         // If only subject and possibly predicate are given, the subject index will be the fastest.
./node_modules/n3/lib/N3Store.js:325 =>       // If only predicate and possibly object are given, the predicate index will be the fastest.
./node_modules/n3/lib/N3Store.js:329 =>       // If only object is possibly given, the object index will be the fastest.
./node_modules/n3/lib/N3Lexer.js:181 =>                   (match[1] ? 'double' : (/^[+\-]?\d+$/.test(match[0]) ? 'integer' : 'decimal'));
./node_modules/n3/lib/N3Lexer.js:255 =>         if (inputFinished || (!/^'''|^"""/.test(input) && /\n|\r/.test(input)))
./node_modules/n3/lib/N3Parser.js:279 =>         if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Parser.js:311 =>       if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Parser.js:431 =>         if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/spec/SpecTester.js:220 =>       if (/\.nq/.test(expected)) {
./node_modules/n3/spec/SpecTester.js:225 =>            function (error, stdout) { callback(error, /^matched\s*$/.test(stdout), stdout); });
./node_modules/n3/spec/SpecTester.js:237 => // Generate an EARL report with the given test results
./node_modules/n3/spec/SpecTester.js:238 => SpecTester.prototype._generateEarlReport = function (tests, callback) {
./node_modules/n3/spec/SpecTester.js:282 =>   tests.forEach(function (test, id) {
./node_modules/n3/spec/SpecTester.js:283 =>     var testUrl = manifest + test.id;
./node_modules/n3/spec/SpecTester.js:284 =>     report.addTriple(testUrl, prefixes.rdf + 'type', prefixes.earl + 'TestCriterion');
./node_modules/n3/spec/SpecTester.js:285 =>     report.addTriple(testUrl, prefixes.rdf + 'type', prefixes.earl + 'TestCase');
./node_modules/n3/spec/SpecTester.js:286 =>     report.addTriple(testUrl, prefixes.dc  + 'title', test.name);
./node_modules/n3/spec/SpecTester.js:287 =>     report.addTriple(testUrl, prefixes.dc  + 'description', test.comment);
./node_modules/n3/spec/SpecTester.js:288 =>     report.addTriple(testUrl, prefixes.mf  + 'action', url.resolve(manifest, test.action));
./node_modules/n3/spec/SpecTester.js:289 =>     if (test.result)
./node_modules/n3/spec/SpecTester.js:290 =>       report.addTriple(testUrl, prefixes.mf + 'result', url.resolve(manifest, test.result));
./node_modules/n3/spec/SpecTester.js:291 =>     report.addTriple(testUrl, prefixes.earl + 'assertions', '_:assertions' + id);
./node_modules/n3/spec/SpecTester.js:296 =>     report.addTriple('_:assertion' + id, prefixes.earl + 'test', manifest + test.id);
./node_modules/n3/spec/SpecTester.js:301 =>     report.addTriple('_:result' + id, prefixes.earl + 'outcome', prefixes.earl + (test.success ? 'passed' : 'failed'));
./node_modules/n3/spec/SpecTester.js:304 =>   report.end(function () { callback(null, tests); });
./node_modules/mocha/mocha.js:1139 =>      * Exclusive test-case.
./node_modules/mocha/mocha.js:1142 =>     context.test.only = function (title, fn) {
./node_modules/mocha/mocha.js:1143 =>       return common.test.only(mocha, context.test(title, fn));
./node_modules/mocha/mocha.js:1146 =>     context.test.skip = common.test.skip;
./node_modules/mocha/mocha.js:1147 =>     context.test.retries = common.test.retries;
./node_modules/mocha/mocha.js:1151 => },{"../test":36,"./common":9}],13:[function(require,module,exports){
./node_modules/mocha/mocha.js:1158 => var Test = require('../test');
./node_modules/mocha/mocha.js:1169 =>  *          test('should return -1 when not present', function() {
./node_modules/mocha/mocha.js:1173 =>  *          test('should return the index when present', function() {
./node_modules/mocha/mocha.js:1199 =>      * nested suites and/or tests.
./node_modules/mocha/mocha.js:1221 =>      * Exclusive test-case.
./node_modules/mocha/mocha.js:1232 =>      * Describe a specification or test-case with the given `title` and
./node_modules/mocha/mocha.js:1235 =>     context.test = function (title, fn) {
./node_modules/mocha/mocha.js:1240 =>       var test = new Test(title, fn);
./node_modules/mocha/mocha.js:1241 =>       test.file = file;
./node_modules/mocha/mocha.js:1242 =>       suite.addTest(test);
./node_modules/mocha/mocha.js:1243 =>       return test;
./node_modules/mocha/mocha.js:1247 =>      * Exclusive test-case.
./node_modules/mocha/mocha.js:1250 =>     context.test.only = function (title, fn) {
./node_modules/mocha/mocha.js:1251 =>       return common.test.only(mocha, context.test(title, fn));
./node_modules/mocha/mocha.js:1254 =>     context.test.skip = common.test.skip;
./node_modules/mocha/mocha.js:1255 =>     context.test.retries = common.test.retries;
./node_modules/mocha/mocha.js:1259 => },{"../test":36,"./common":9}],14:[function(require,module,exports){
./node_modules/mocha/mocha.js:1305 => exports.Test = require('./test');
./node_modules/mocha/mocha.js:1327 =>  *   - `retries` number of times to retry failed tests
./node_modules/mocha/mocha.js:1328 =>  *   - `bail` bail on the first test failure
./node_modules/mocha/mocha.js:1329 =>  *   - `slow` milliseconds to wait before considering a test slow
./node_modules/mocha/mocha.js:1332 =>  *   - `grep` string or regexp to filter tests with
./node_modules/mocha/mocha.js:1381 =>  * Add test `file`.
./node_modules/mocha/mocha.js:1435 =>  * Set test UI `name`, defaults to "bdd".
./node_modules/mocha/mocha.js:1458 =>     exports.it = context.it || context.test;
./node_modules/querystring/test/common-index.js:3 => require("test").run(require("./index"))
./node_modules/querystring-es3/test/common-index.js:3 => require("test").run(require("./index"))
./node_modules/qs/test/stringify.js:243 =>     t.test('stringifies a complicated object', function (st) {
./node_modules/qs/test/stringify.js:248 =>     t.test('stringifies an empty value', function (st) {
./node_modules/qs/test/stringify.js:262 =>     t.test('stringifies a null object', { skip: !Object.create }, function (st) {
./node_modules/qs/test/stringify.js:269 =>     t.test('returns an empty string for invalid input', function (st) {
./node_modules/qs/test/stringify.js:277 =>     t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {
./node_modules/qs/test/stringify.js:285 =>     t.test('drops keys with a value of undefined', function (st) {
./node_modules/qs/test/stringify.js:294 =>     t.test('url encodes values', function (st) {
./node_modules/qs/test/stringify.js:299 =>     t.test('stringifies a date', function (st) {
./node_modules/qs/test/stringify.js:306 =>     t.test('stringifies the weird object from qs', function (st) {
./node_modules/qs/test/stringify.js:311 =>     t.test('skips properties that are part of the object prototype', function (st) {
./node_modules/qs/test/stringify.js:312 =>         Object.prototype.crash = 'test';
./node_modules/qs/test/stringify.js:319 =>     t.test('stringifies boolean values', function (st) {
./node_modules/qs/test/stringify.js:327 =>     t.test('stringifies buffer values', function (st) {
./node_modules/qs/test/stringify.js:328 =>         st.equal(qs.stringify({ a: new Buffer('test') }), 'a=test');
./node_modules/qs/test/stringify.js:329 =>         st.equal(qs.stringify({ a: { b: new Buffer('test') } }), 'a%5Bb%5D=test');
./node_modules/qs/test/stringify.js:333 =>     t.test('stringifies an object using an alternative delimiter', function (st) {
./node_modules/qs/test/stringify.js:338 =>     t.test('doesn\'t blow up when Buffer global is missing', function (st) {
./node_modules/qs/test/stringify.js:347 =>     t.test('selects properties when filter=array', function (st) {
./node_modules/qs/test/stringify.js:379 =>     t.test('supports custom representations when filter=function', function (st) {
./node_modules/qs/test/stringify.js:401 =>     t.test('can disable uri encoding', function (st) {
./node_modules/qs/test/stringify.js:408 =>     t.test('can sort the keys', function (st) {
./node_modules/qs/test/stringify.js:417 =>     t.test('can sort the keys at depth 3 or more too', function (st) {
./node_modules/qs/test/stringify.js:438 =>     t.test('can stringify with custom encoding', function (st) {
./node_modules/qs/test/stringify.js:455 =>     t.test('throws error with wrong encoder', function (st) {
./node_modules/qs/test/parse.js:157 =>     t.test('correctly prunes undefined values when converting an array to an object', function (st) {
./node_modules/qs/test/parse.js:162 =>     t.test('supports malformed uri characters', function (st) {
./node_modules/qs/test/parse.js:169 =>     t.test('doesn\'t produce empty keys', function (st) {
./node_modules/qs/test/parse.js:174 =>     t.test('cannot access Object prototype', function (st) {
./node_modules/qs/test/parse.js:181 =>     t.test('parses arrays of objects', function (st) {
./node_modules/qs/test/parse.js:187 =>     t.test('allows for empty strings in arrays', function (st) {
./node_modules/qs/test/parse.js:220 =>     t.test('compacts sparse arrays', function (st) {
./node_modules/qs/test/parse.js:228 =>     t.test('parses semi-parsed strings', function (st) {
./node_modules/qs/test/parse.js:234 =>     t.test('parses buffers correctly', function (st) {
./node_modules/qs/test/parse.js:235 =>         var b = new Buffer('test');
./node_modules/qs/test/parse.js:240 =>     t.test('continues parsing when no parent is found', function (st) {
./node_modules/qs/test/parse.js:247 =>     t.test('does not error when parsing a very long array', function (st) {
./node_modules/qs/test/parse.js:260 =>     t.test('should not throw when a native prototype has an enumerable property', { parallel: false }, function (st) {
./node_modules/qs/test/parse.js:272 =>     t.test('parses a string with an alternative string delimiter', function (st) {
./node_modules/qs/test/parse.js:277 =>     t.test('parses a string with an alternative RegExp delimiter', function (st) {
./node_modules/qs/test/parse.js:282 =>     t.test('does not use non-splittable objects as delimiters', function (st) {
./node_modules/qs/test/parse.js:287 =>     t.test('allows overriding parameter limit', function (st) {
./node_modules/qs/test/parse.js:292 =>     t.test('allows setting the parameter limit to Infinity', function (st) {
./node_modules/qs/test/parse.js:297 =>     t.test('allows overriding array limit', function (st) {
./node_modules/qs/test/parse.js:304 =>     t.test('allows disabling array parsing', function (st) {
./node_modules/qs/test/parse.js:309 =>     t.test('parses an object', function (st) {
./node_modules/qs/test/parse.js:328 =>     t.test('parses an object in dot notation', function (st) {
./node_modules/qs/test/parse.js:347 =>     t.test('parses an object and not child values', function (st) {
./node_modules/qs/test/parse.js:349 =>             'user[name]': { 'pop[bob]': { test: 3 } },
./node_modules/qs/test/parse.js:355 =>                 name: { 'pop[bob]': { test: 3 } },
./node_modules/qs/test/parse.js:366 =>     t.test('does not blow up when Buffer global is missing', function (st) {
./node_modules/qs/test/parse.js:375 =>     t.test('does not crash when parsing circular references', function (st) {
./node_modules/qs/test/parse.js:393 =>     t.test('parses null objects correctly', { skip: !Object.create }, function (st) {
./node_modules/readdirp/test/readdirp.js:263 =>     t.test('\n' + util.inspect(op), function (t) {
./node_modules/regenerator-transform/lib/emit.js:405 =>         self.jumpIfNot(self.explodeExpression(path.get("test")), after);
./node_modules/regenerator-transform/lib/emit.js:416 =>         var test = loc();
./node_modules/regenerator-transform/lib/emit.js:420 =>         self.leapManager.withEntry(new leap.LoopEntry(after, test, labelId), function () {
./node_modules/regenerator-transform/lib/emit.js:423 =>         self.mark(test);
./node_modules/regenerator-transform/lib/emit.js:424 =>         self.jumpIf(self.explodeExpression(path.get("test")), first);
./node_modules/regenerator-transform/lib/emit.js:442 =>         if (stmt.test) {
./node_modules/regenerator-transform/lib/emit.js:443 =>           self.jumpIfNot(self.explodeExpression(path.get("test")), after);
./node_modules/regenerator-transform/lib/emit.js:445 =>           // No test means continue unconditionally.
./node_modules/regenerator-transform/src/emit.js:440 =>     self.jumpIfNot(self.explodeExpression(path.get("test")), after);
./node_modules/regenerator-transform/src/emit.js:452 =>     let test = loc();
./node_modules/regenerator-transform/src/emit.js:457 =>       new leap.LoopEntry(after, test, labelId),
./node_modules/regenerator-transform/src/emit.js:460 =>     self.mark(test);
./node_modules/regenerator-transform/src/emit.js:461 =>     self.jumpIf(self.explodeExpression(path.get("test")), first);
./node_modules/regenerator-transform/src/emit.js:479 =>     if (stmt.test) {
./node_modules/regenerator-transform/src/emit.js:480 =>       self.jumpIfNot(self.explodeExpression(path.get("test")), after);
./node_modules/regenerator-transform/src/emit.js:482 =>       // No test means continue unconditionally.
./node_modules/regenerator-transform/src/emit.js:574 =>     // test expressions overwrite values like context.sent.
./node_modules/regenerator-transform/src/emit.js:592 =>       if (c.test) {
./node_modules/regenerator-transform/src/emit.js:594 =>           t.binaryExpression("===", disc, c.test),
./node_modules/request/CHANGELOG.md:270 => - [#1337](https://github.com/request/request/pull/1337) Standardize test ports on 6767 (@nylen)
./node_modules/request/CHANGELOG.md:274 => - [#1338](https://github.com/request/request/pull/1338) Always wait for server.close() callback in tests (@nylen)
./node_modules/request/CHANGELOG.md:275 => - [#1342](https://github.com/request/request/pull/1342) Add mock https server and redo start of browser tests for this purpose. (@eiriksm)
./node_modules/request/CHANGELOG.md:278 => - [#1332](https://github.com/request/request/pull/1332) Add clean script to remove test-browser.js after the tests run (@seanstrom)
./node_modules/request/CHANGELOG.md:290 => - [#1308](https://github.com/request/request/pull/1308) Add browser test to keep track of browserify compability. (@eiriksm)
./node_modules/request/CHANGELOG.md:313 => - [#1223](https://github.com/request/request/pull/1223) Show latest version number instead of "upcoming" in changelog (@nylen)
./node_modules/request/CHANGELOG.md:322 => - [#1212](https://github.com/request/request/pull/1212) Improve tests/test-timeout.js (@nylen)
./node_modules/request/CHANGELOG.md:330 => - [#1209](https://github.com/request/request/pull/1209) Improve multipart form append test (@simov)
./node_modules/request/CHANGELOG.md:337 => - [#1196](https://github.com/request/request/pull/1196) Upgrade taper test reporter to v0.3.0 (@nylen)
./node_modules/request/CHANGELOG.md:346 => - [#1179](https://github.com/request/request/pull/1179) Lint tests directory (@nylen)
./node_modules/resolve/test/resolver.js:256 => test('without basedir', function (t) {
./node_modules/resolve/test/resolver.js:260 =>     var tester = require(path.join(dir, 'main.js'));
./node_modules/resolve/test/resolver.js:262 =>     tester(t, function (err, res, pkg) {
./node_modules/resolve/test/resolver.js:271 => test('#25: node modules with the same name as node stdlib modules', function (t) {
./node_modules/source-map-support/webpack-test/compiled.js:382 => 	    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];
./node_modules/tough-cookie/lib/cookie.js:234 =>   if (punycode && /[^\u0001-\u007f]/.test(str)) {
./node_modules/tough-cookie/lib/cookie.js:345 =>   if (CONTROL_CHARS.test(c.key) || CONTROL_CHARS.test(c.value)) {
./node_modules/tough-cookie/lib/cookie.js:414 =>         if (/^-?[0-9]+$/.test(av_value)) {
./node_modules/uglify-js/bin/uglifyjs:212 =>   if (/^\/.*\/[a-zA-Z]*$/.test(str)) {
./node_modules/uglify-js/lib/output.js:258 =>                 || (/^[\+\-\/]$/.test(ch) && ch == prev))
./node_modules/uglify-js/lib/output.js:407 =>                 if (!EXPECT_DIRECTIVE.test(OUTPUT)) {
./node_modules/uglify-js/lib/mozilla-ast.js:234 =>     map("IfStatement", AST_If, "test>condition, consequent>body, alternate>alternative");
./node_modules/uglify-js/lib/mozilla-ast.js:242 =>     map("WhileStatement", AST_While, "test>condition, body>body");
./node_modules/uglify-js/lib/mozilla-ast.js:243 =>     map("DoWhileStatement", AST_Do, "test>condition, body>body");
./node_modules/uglify-js/lib/mozilla-ast.js:244 =>     map("ForStatement", AST_For, "init>init, test>condition, update>step, body>body");
./node_modules/uglify-js/lib/mozilla-ast.js:254 =>     map("ConditionalExpression", AST_Conditional, "test>condition, consequent>consequent, alternate>alternative");
./node_modules/uglify-js/lib/mozilla-ast.js:303 =>             test: to_moz(M.expression),
./node_modules/uglify-js/lib/parse.js:134 =>         || (code >= 0xaa && UNICODE.letter.test(String.fromCharCode(code)));
./node_modules/uglify-js/lib/parse.js:146 =>     return UNICODE.digit.test(String.fromCharCode(code));
./node_modules/uglify-js/lib/parse.js:150 =>     return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);
./node_modules/uglify-js/lib/parse.js:154 =>     return UNICODE.connector_punctuation.test(ch);
./node_modules/uglify-js/lib/parse.js:158 =>     return !RESERVED_WORDS(name) && /^[a-z_$][a-z0-9_$]*$/i.test(name);
./node_modules/uglify-js/lib/parse.js:178 =>     return /^[a-z_$][a-z0-9_$]*$/i.test(str);
./node_modules/uglify-js/lib/parse.js:182 =>     if (RE_HEX_NUMBER.test(num)) {
./node_modules/uglify-js/lib/parse.js:184 =>     } else if (RE_OCT_NUMBER.test(num)) {
./node_modules/uglify-js/lib/scope.js:379 =>     return lastComment && /@const\b/.test(lastComment.value);
./node_modules/uglify-js/tools/node.js:306 =>                 if (rx.test(entries[i]))
./node_modules/url/test.js:954 =>   test('parse(' + u + ')', function() {
./node_modules/url/test.js:967 => // some extra formatting tests, just to verify
./node_modules/url/test.js:1070 =>   'dash-test://foo/bar': {
./node_modules/url/test.js:1071 =>     'href': 'dash-test://foo/bar',
./node_modules/url/test.js:1073 =>     'protocol': 'dash-test:',
./node_modules/url/test.js:1077 =>   'dash-test:foo/bar': {
./node_modules/url/test.js:1078 =>     'href': 'dash-test:foo/bar',
./node_modules/url/test.js:1080 =>     'protocol': 'dash-test:',
./node_modules/url/test.js:1083 =>   'dot.test://foo/bar': {
./node_modules/url/test.js:1084 =>     'href': 'dot.test://foo/bar',
./node_modules/url/test.js:1086 =>     'protocol': 'dot.test:',
./node_modules/url/test.js:1090 =>   'dot.test:foo/bar': {
./node_modules/url/test.js:1091 =>     'href': 'dot.test:foo/bar',
./node_modules/url/test.js:1093 =>     'protocol': 'dot.test:',
./node_modules/url/test.js:1159 =>   test('format(' + u + ')', function() {
./node_modules/url/test.js:1223 =>   test('resolve(' + [relativeTest[0], relativeTest[1]] + ')', function() {
./node_modules/xmldom/dom.js:1023 => 		if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
./node_modules/xmldom/dom.js:1026 => 			if(isHTML && /^script$/i.test(nodeName)){
./node_modules/yargs/CHANGELOG.md:294 => - [b01bda8](https://github.com/bcoe/yargs/commit/b01bda8d86e455bbf74ce497864cb8ab5b9fb847) [fix test] Update to ensure optimist is aware of default booleans. Associated tests included (@indexzero)
./node_modules/yargs/CHANGELOG.md:295 => - [aa753e7](https://github.com/bcoe/yargs/commit/aa753e7c54fb3a12f513769a0ff6d54aa0f63943) [dist test] Update devDependencies in package.json. Update test pathing to be more npm and require.paths future-proof (@indexzero)
./node_modules/yargs/CHANGELOG.md:304 => - [691eda3](https://github.com/bcoe/yargs/commit/691eda354df97b5a86168317abcbcaabdc08a0fb) failing test for multi-aliasing (@substack)
./node_modules/yargs/CHANGELOG.md:307 => - [75aecce](https://github.com/bcoe/yargs/commit/75aeccea74329094072f95800e02c275e7d999aa) options works again, too lazy to write a proper test right now (@substack)
./node_modules/yargs/CHANGELOG.md:320 => - [89f0d04](https://github.com/bcoe/yargs/commit/89f0d043cbccd302f10ab30c2069e05d2bf817c9) defaults work again, all tests pass (@substack)
./node_modules/yargs/CHANGELOG.md:321 => - [dd87333](https://github.com/bcoe/yargs/commit/dd8733365423006a6e4156372ebb55f98323af58) update test error messages, down to 2 failing tests (@substack)
./node_modules/yargs/CHANGELOG.md:322 => - [53f7bc6](https://github.com/bcoe/yargs/commit/53f7bc626b9875f2abdfc5dd7a80bde7f14143a3) fix for bools doubling up, passes the parse test again, others fail (@substack)
./node_modules/yargs/CHANGELOG.md:323 => - [2213e2d](https://github.com/bcoe/yargs/commit/2213e2ddc7263226fba717fb041dc3fde9bc2ee4) refactored for an argv getter, failing several tests (@substack)
./node_modules/yargs/CHANGELOG.md:324 => - [d1e7379](https://github.com/bcoe/yargs/commit/d1e737970f15c6c006bebdd8917706827ff2f0f2) just rescan for now, alias test passes (@substack)
./node_modules/yargs/CHANGELOG.md:325 => - [b2f8c99](https://github.com/bcoe/yargs/commit/b2f8c99cc477a8eb0fdf4cf178e1785b63185cfd) failing alias test (@substack)
./node_modules/yargs/CHANGELOG.md:332 => - [bcfe973](https://github.com/bcoe/yargs/commit/bcfe9731d7f90d4632281b8a52e8d76eb0195ae6) .string() but failing test (@substack)
./node_modules/yargs/CHANGELOG.md:333 => - [1987aca](https://github.com/bcoe/yargs/commit/1987aca28c7ba4e8796c07bbc547cb984804c826) test hex strings (@substack)
./node_modules/yargs/CHANGELOG.md:338 => - [0e380b9](https://github.com/bcoe/yargs/commit/0e380b92c4ef4e3c8dac1da18b5c31d85b1d02c9) boolean() with passing test (@substack)
./node_modules/yargs/CHANGELOG.md:341 => - [343b8af](https://github.com/bcoe/yargs/commit/343b8afefd98af274ebe21b5a16b3a949ec5429f) whichNodeArgs test fails too (@substack)
./node_modules/yargs/CHANGELOG.md:342 => - [63df2f3](https://github.com/bcoe/yargs/commit/63df2f371f31e63d7f1dec2cbf0022a5f08da9d2) replicated mnot's bug in whichNodeEmpty test (@substack)
./node_modules/yargs/CHANGELOG.md:343 => - [35473a4](https://github.com/bcoe/yargs/commit/35473a4d93a45e5e7e512af8bb54ebb532997ae1) test for ./bin usage (@substack)
./test/tc0004/rdfcore/datatypes/test001.nt:11 => # $Id: test001.nt,v 1.3 2003/08/18 09:29:18 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test001.rdf:15 => 	http://www.w3.org/2000/10/rdf-tests/rdfcore/ntriples/test.nt
./test/tc0004/rdfcore/datatypes/test001.rdf:17 =>   $Id: test001.rdf,v 1.2 2002/11/20 14:51:34 jgrant Exp $
./test/tc0004/rdfcore/amp-in-url/test001.rdf:14 =>   Description: the purpose of this test case is to show
./test/tc0004/rdfcore/amp-in-url/test001.rdf:32 =>   $Id: test001.rdf,v 1.5 2001/09/27 21:39:27 barstow Exp $
./test/tc0004/rdfcore/amp-in-url/test001.nt:13 => # $Id: test001.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/datatypes/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/11/19 14:04:16 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test002b.nt:11 => # $Id: test002b.nt,v 1.1 2002/12/11 17:03:07 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test002.rdf:16 =>   $Id: test002.rdf,v 1.1 2002/11/19 14:04:16 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test003a.nt:13 => # $Id: test003a.nt,v 1.1 2002/11/19 16:50:04 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test005b.nt:13 => # $Id: test005b.nt,v 1.2 2002/12/11 16:49:41 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test006.nt:13 => # $Id: test006.nt,v 1.1 2002/12/13 11:22:19 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test003b.nt:13 => # $Id: test003b.nt,v 1.1 2002/11/19 16:50:04 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test008b.nt:11 => # $Id: test008b.nt,v 1.1 2002/12/13 11:53:00 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test008a.nt:11 => # $Id: test008a.nt,v 1.1 2002/12/13 11:53:00 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test005a.nt:13 => # $Id: test005a.nt,v 1.1 2002/11/19 17:02:56 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test009b.nt:11 => # $Id: test009b.nt,v 1.1 2002/12/13 11:53:00 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test010.nt:13 => # $Id: test010.nt,v 1.1 2002/12/13 11:53:00 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test009a.nt:11 => # $Id: test009a.nt,v 1.1 2002/12/13 11:53:00 jgrant Exp $
./test/tc0004/rdfcore/datatypes/test011b.nt:14 => # $Id: test011b.nt,v 1.1 2003/09/03 12:22:06 jgrant Exp $
./test/tc0004/rdfcore/datatypes-intensional/test002.nt:15 => # $Id: test002.nt,v 1.1 2003/09/03 12:05:35 jgrant Exp $
./test/tc0004/rdfcore/datatypes-intensional/test001.nt:15 => # $Id: test001.nt,v 1.1 2003/09/03 12:05:35 jgrant Exp $
./test/tc0004/rdfcore/horst-01/test002.rdf:26 =>   $Id: test002.rdf,v 1.1 2003/07/18 05:21:30 jcarroll Exp $
./test/tc0004/rdfcore/horst-01/test003.rdf:24 =>   $Id: test003.rdf,v 1.1 2003/07/18 05:21:30 jcarroll Exp $
./test/tc0004/rdfcore/horst-01/test001.rdf:23 =>   $Id: test001.rdf,v 1.1 2003/07/18 05:21:30 jcarroll Exp $
./test/tc0004/rdfcore/datatypes/test011a.nt:14 => # $Id: test011a.nt,v 1.1 2003/09/03 12:22:06 jgrant Exp $
./test/tc0004/rdfcore/horst-01/test004.rdf:28 =>   $Id: test004.rdf,v 1.1 2003/07/18 05:21:30 jcarroll Exp $
./test/tc0004/rdfcore/pfps-10/test001a.nt:11 => # $Id: test001a.nt,v 1.1 2003/08/18 09:40:01 jgrant Exp $
./test/tc0004/rdfcore/rdf-charmod-uris/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/04/29 09:46:57 dbeckett2 Exp $
./test/tc0004/rdfcore/pfps-10/test001b.nt:11 => # $Id: test001b.nt,v 1.1 2003/08/18 09:40:01 jgrant Exp $
./test/tc0004/rdfcore/rdf-charmod-literals/test001.rdf:16 =>     White test case from
./test/tc0004/rdfcore/rdf-charmod-literals/test001.rdf:19 =>   $Id: test001.rdf,v 1.1 2002/04/29 10:35:03 jgrant Exp $
./test/tc0004/rdfcore/rdf-charmod-literals/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/04/29 10:35:03 jgrant Exp $
./test/tc0004/rdfcore/rdf-charmod-uris/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/04/29 09:46:57 dbeckett2 Exp $
./test/tc0004/rdfcore/rdf-charmod-uris/test001.rdf:21 =>   $Id: test001.rdf,v 1.1 2002/04/29 09:46:57 dbeckett2 Exp $
./test/tc0004/rdfcore/rdf-charmod-uris/test002.rdf:22 =>   $Id: test002.rdf,v 1.1 2002/04/29 09:46:57 dbeckett2 Exp $
./test/tc0004/rdfcore/rdf-element-not-mandatory/test001.rdf:8 =>   $Id: test001.rdf,v 1.1 2003/10/08 13:00:58 jgrant Exp $
./test/tc0004/rdfcore/rdf-element-not-mandatory/test001.nt:5 => # $Id: test001.nt,v 1.1 2003/10/08 13:00:58 jgrant Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/error001.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/error001.rdf,v 1.6 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/error002.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/error002.rdf,v 1.4 2001/12/20 22:10:28 bmcbride Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test001.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test001.rdf,v 1.8 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test001.rdf:19 =>   $Id: test001.rdf,v 1.8 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test002.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test002.rdf,v 1.6 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test002.rdf:8 =>         This test case is concerned only with defining the 
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test002.rdf:25 =>   $Id: test002.rdf,v 1.6 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf,v 1.4 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf:19 =>   $Id: test004.rdf,v 1.4 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test003.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test003.rdf,v 1.4 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test003.rdf:18 =>   $Id: test003.rdf,v 1.4 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:bar .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_1> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:19 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> "1" .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:24 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:25 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:bar .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:26 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_4> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test004.nt:27 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf#e4> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> _:res2 . 
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf:3 =>         Test:  test06
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf,v 1.6 2003/07/24 15:51:02 jcarroll Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test007.rdf:3 =>         Test:  test07
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test007.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test007.rdf,v 1.5 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test008.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test008.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0003.nt:11 => # $Id: test0003.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0001.nt:11 => # $Id: test0001.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0003.rdf:11 =>   $Id: test0003.rdf,v 1.3 2001/10/18 21:04:11 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0001.rdf:11 =>   $Id: test0001.rdf,v 1.3 2001/10/18 21:04:11 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0004.nt:11 => # $Id: test0004.nt,v 1.3 2001/10/04 16:01:45 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0004.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0004.rdf#foo> <http://example.org/property> "bar" .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0004.rdf:11 =>   $Id: test0004.rdf,v 1.3 2001/10/18 21:04:11 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0005.rdf:11 =>   $Id: test0005.rdf,v 1.3 2001/10/18 21:04:11 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0006.nt:11 => # $Id: test0006.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0005.nt:11 => # $Id: test0005.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0009.rdf:11 =>   $Id: test0009.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0006.rdf:11 =>   $Id: test0006.rdf,v 1.3 2001/10/18 21:04:11 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0010.nt:11 => # $Id: test0010.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0009.nt:11 => # $Id: test0009.nt,v 1.2 2001/09/06 21:07:19 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0011.nt:11 => # $Id: test0011.nt,v 1.3 2001/10/04 16:01:45 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0011.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0011.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq> .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0011.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0011.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_1> "bar" .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0011.rdf:11 =>   $Id: test0011.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0010.rdf:11 =>   $Id: test0010.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0012.nt:11 => # $Id: test0012.nt,v 1.3 2001/10/04 16:01:45 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0012.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0012.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag> .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0012.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0012.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_1> "bar" .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0012.rdf:11 =>   $Id: test0012.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0013.nt:11 => # $Id: test0013.nt,v 1.3 2001/10/04 16:01:45 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0013.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0013.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt> .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0013.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0013.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_1> "bar" .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0013.rdf:11 =>   $Id: test0013.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0014.rdf:11 =>   $Id: test0014.rdf,v 1.2 2001/09/06 21:23:35 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0014.nt:11 => # $Id: test0014.nt,v 1.3 2001/10/04 16:01:45 barstow Exp $
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0014.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0014.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq> .
./test/tc0004/rdfcore/rdf-ns-prefix-confusion/test0014.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0014.rdf#container> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_1> "bar" .
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/error1.rdf:14 => Base URI: http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/error1.rdf
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test1.rdf:14 => Base URI: http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test1.rdf
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test2.rdf:11 =>   $Id: test2.rdf,v 1.9 2002/07/26 04:06:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test2.rdf:14 => Base URI: http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test2.rdf
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test2.nt:11 => # $Id: test2.nt,v 1.4 2002/07/26 04:06:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test2.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test2.rdf#D\u00FCrst> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "abc" .
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test3.nt:11 => # $Id: test3.nt,v 1.1 2002/07/26 04:06:57 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test3.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test3.rdf#D\u00FCrst> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "abc" .
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test3.rdf:11 =>   $Id: test3.rdf,v 1.1 2002/07/26 04:06:57 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test3.rdf:14 => Base URI: http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test3.rdf
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test1.nt:11 => # $Id: test1.nt,v 1.2 2001/09/06 21:07:20 barstow Exp $
./test/tc0004/rdfcore/rdfms-difference-between-ID-and-about/test1.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test1.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "abc" .
./test/tc0004/rdfcore/rdfms-empty-property-elements/error002.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error002.nrdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/error003.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error003.nrdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/error001.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error001.nrdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test002.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test002.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test001.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test001.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test003.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test003.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test004.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test004.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test005.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test005.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> <http://random.ioctl.org/#bar> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test005.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://random.ioctl.org/#someProperty> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test005.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> "" .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test006.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test006.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test006.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> <http://random.ioctl.org/#bar> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test006.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://random.ioctl.org/#someProperty> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test006.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> _:a1 .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test005.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test009.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test009.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test009.rdf:21 =>  As test003.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test007.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test007.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test007.rdf:21 =>  As test001.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test008.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test008.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test008.rdf:21 =>  As test002.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> <http://random.ioctl.org/#bar> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://random.ioctl.org/#someProperty> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> "" .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test011.rdf:21 =>  As test005.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> <http://random.ioctl.org/#bar> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://random.ioctl.org/#someProperty> .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf#foo> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> _:a1 .
./test/tc0004/rdfcore/rdfms-empty-property-elements/test010.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test010.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test010.rdf:21 =>  As test004.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test012.rdf:21 =>  As test006.rdf; this uses an explicit closing tag.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test013.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test013.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test015.rdf:18 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test015.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test015.rdf:27 =>  from test014 as far as XML is concerned.
./test/tc0004/rdfcore/rdfms-empty-property-elements/test014.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test014.rdf
./test/tc0004/rdfcore/rdfms-empty-property-elements/test016.nt:11 => # $Id: test016.nt,v 1.1 2002/07/26 04:26:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-empty-property-elements/test017.nt:11 => # $Id: test017.nt,v 1.1 2002/07/26 04:26:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-empty-property-elements/test017.rdf:11 =>   $Id: test017.rdf,v 1.1 2002/07/26 04:26:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-empty-property-elements/test017.rdf:16 =>  Like test001.rdf but with a comment 
./test/tc0004/rdfcore/rdfms-empty-property-elements/test016.rdf:11 =>   $Id: test016.rdf,v 1.1 2002/07/26 04:26:56 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-empty-property-elements/test016.rdf:16 =>  Like test001.rdf but with a processing instruction 
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test001.rdf:22 =>   $Id: test001.rdf,v 1.1 2001/10/10 12:54:15 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test001.nt:11 => # $Id: test001.nt,v 1.2 2001/10/10 13:10:05 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test002.nt:11 => # $Id: test002.nt,v 1.2 2001/10/10 13:10:05 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test002.rdf:22 =>   $Id: test002.rdf,v 1.1 2001/10/10 12:55:18 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test003.nt:11 => # $Id: test003.nt,v 1.2 2001/10/10 13:10:05 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test004.nt:11 => # $Id: test004.nt,v 1.2 2001/10/10 13:10:05 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test003.rdf:22 =>   $Id: test003.rdf,v 1.1 2001/10/10 13:06:59 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test005.nt:11 => # $Id: test005.nt,v 1.2 2001/10/10 13:10:05 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test004.rdf:22 =>   $Id: test004.rdf,v 1.1 2001/10/10 13:07:07 barstow Exp $
./test/tc0004/rdfcore/rdfms-identity-anon-resources/test005.rdf:22 =>   $Id: test005.rdf,v 1.1 2001/10/10 13:07:07 barstow Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf:5 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf:20 =>   $Id: test001.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/03/08 10:55:12 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:j88090 .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://example.org/prop1> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test001.nt:19 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> _:j88091 .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf:5 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf:20 =>   $Id: test004.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test002.rdf:5 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test002.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test002.rdf:20 =>   $Id: test002.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./node_modules/yargs/lib/parser.js:389 =>         if (/-/.test(x)) {
./node_modules/yargs/lib/parser.js:439 =>     if (/^0x[0-9a-f]+$/i.test(x)) return true
./node_modules/yargs/lib/parser.js:440 =>     return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x)
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.nt:11 => # $Id: test004.nt,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:j88101 .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://example.org/prop1> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test004.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> <http://example.org/object> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.nt:11 => # $Id: test005.nt,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:j88106 .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://example.org/prop1> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.nt:19 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> <http://example.org/object> .
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf:5 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf:20 =>   $Id: test005.rdf,v 1.1 2002/03/08 10:55:13 dajobe Exp $
./test/tc0004/rdfcore/rdfms-duplicate-member-props/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/05/08 13:37:09 jgrant Exp $
./test/tc0004/rdfcore/rdfms-para196/test001.rdf:3 =>         Test:  test001
./test/tc0004/rdfcore/rdfms-para196/test001.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-para196/test001.rdf,v 1.1 2002/02/14 19:10:34 dajobe Exp $
./test/tc0004/rdfcore/rdfms-para196/test001.rdf:6 =>         test case showing that the 2nd URI in M&S Paragraph 196 is
./test/tc0004/rdfcore/rdfms-para196/test001.rdf:23 =>   $Id: test001.rdf,v 1.1 2002/02/14 19:10:34 dajobe Exp $
./test/tc0004/rdfcore/rdfms-para196/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/02/14 19:10:34 dajobe Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-002.rdf:18 =>   $Id: test-002.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-003.rdf:18 =>   $Id: test-003.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-004.rdf:18 =>   $Id: test-004.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-005.rdf:18 =>   $Id: test-005.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-006.rdf:18 =>   $Id: test-006.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-007.rdf:18 =>   $Id: test-007.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-001.rdf:18 =>   $Id: test-001.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-008.rdf:18 =>   $Id: test-008.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-009.rdf:18 =>   $Id: test-009.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-duplicate-member-props/test001.rdf:3 =>         Test:  test001
./test/tc0004/rdfcore/rdfms-duplicate-member-props/test001.rdf:4 =>         $Header: /w3ccvs/WWW/2000/10/rdf-tests/rdfcore/rdfms-duplicate-member-props/test001.rdf,v 1.1 2002/05/08 13:37:09 jgrant Exp $
./test/tc0004/rdfcore/rdfms-duplicate-member-props/test001.rdf:22 =>   $Id: test001.rdf,v 1.1 2002/05/08 13:37:09 jgrant Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-010.rdf:18 =>   $Id: test-010.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-011.rdf:18 =>   $Id: test-011.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-012.rdf:18 =>   $Id: test-012.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-014.rdf:18 =>   $Id: test-014.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-015.rdf:18 =>   $Id: test-015.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-016.rdf:18 =>   $Id: test-016.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-017.rdf:18 =>   $Id: test-017.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-018.rdf:18 =>   $Id: test-018.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-019.rdf:18 =>   $Id: test-019.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-020.rdf:18 =>   $Id: test-020.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-022.rdf:18 =>   $Id: test-022.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-021.rdf:18 =>   $Id: test-021.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-023.rdf:18 =>   $Id: test-023.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-025.rdf:18 =>   $Id: test-025.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-024.rdf:18 =>   $Id: test-024.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-026.rdf:18 =>   $Id: test-026.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-028.rdf:18 =>   $Id: test-028.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-027.rdf:18 =>   $Id: test-027.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-013.rdf:18 =>   $Id: test-013.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-029.rdf:18 =>   $Id: test-029.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-031.rdf:18 =>   $Id: test-031.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-032.rdf:18 =>   $Id: test-032.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-034.rdf:18 =>   $Id: test-034.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-033.rdf:18 =>   $Id: test-033.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-035.rdf:18 =>   $Id: test-035.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-036.rdf:18 =>   $Id: test-036.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-037.rdf:18 =>   $Id: test-037.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-rdf-names-use/test-030.rdf:18 =>   $Id: test-030.rdf,v 1.2 2002/08/07 13:17:50 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test001.nt:11 => # $Id: test001.nt,v 1.2 2003/07/24 15:51:04 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test001.rdf:13 =>   Author: Jos De Roo (test case), Jeremy Carroll (comment)
./test/tc0004/rdfcore/rdfms-seq-representation/test001.rdf:15 =>   $Id: test001.rdf,v 1.1 2002/09/17 19:03:20 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/12/13 16:48:03 jgrant Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test003b.nt:11 => # $Id: test003b.nt,v 1.1 2002/12/13 16:48:03 jgrant Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test003a.nt:11 => # $Id: test003a.nt,v 1.1 2002/12/13 16:48:03 jgrant Exp $
./test/tc0004/rdfcore/rdfms-seq-representation/test004.nt:11 => # $Id: test004.nt,v 1.1 2002/12/13 16:48:04 jgrant Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test002.rdf:19 =>   $Id: test002.rdf,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test001.rdf:17 =>   $Id: test001.rdf,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test003.nt:11 => # $Id: test003.nt,v 1.2 2003/07/24 15:51:06 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test003.rdf:18 =>   $Id: test003.rdf,v 1.2 2003/07/24 15:51:06 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.nt:11 => # $Id: test004.nt,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.rdf#reify>  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement> .
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#subject> _:j0 .
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate> <http://example.org/property1> .
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.rdf#reify> <http://www.w3.org/1999/02/22-rdf-syntax-ns#object> _:j1A .
./test/tc0004/rdfcore/rdfms-reification-required/test001.rdf:11 => $Id: test001.rdf,v 1.3 2002/04/05 11:32:03 bmcbride Exp $
./test/tc0004/rdfcore/rdfms-reification-required/test001.rdf:17 => http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-reification-required/test001.rdf
./test/tc0004/rdfcore/rdfms-syntax-incomplete/test004.rdf:18 =>   $Id: test004.rdf,v 1.1 2002/07/30 09:46:05 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-reification-required/test001.nt:11 => # $Id: test001.nt,v 1.3 2002/04/05 11:32:03 bmcbride Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test002.nt:11 => # $Id: test002.nt,v 1.3 2003/07/24 15:51:08 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test001.rdf:21 =>   $Id: test001.rdf,v 1.2 2002/04/08 14:42:17 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test001.nt:11 => # $Id: test001.nt,v 1.2 2002/11/22 11:20:52 jgrant Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test003.nt:11 => # $Id: test003.nt,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test002.rdf:20 =>   $Id: test002.rdf,v 1.3 2003/07/24 19:56:32 dbeckett2 Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test003.rdf:19 =>   $Id: test003.rdf,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test004.nt:11 => # $Id: test004.nt,v 1.2 2002/12/13 11:32:46 jgrant Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test005.nt:11 => # $Id: test005.nt,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test004.rdf:19 =>   $Id: test004.rdf,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test005.rdf:19 =>   $Id: test005.rdf,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test006.nt:11 => # $Id: test006.nt,v 1.2 2002/12/13 11:32:46 jgrant Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test006.rdf:19 =>   $Id: test006.rdf,v 1.1 2002/04/05 22:22:30 dajobe Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test007a.nt:11 => # $Id: test007a.nt,v 1.1 2002/12/18 15:49:29 jgrant Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test007b.nt:11 => # $Id: test007b.nt,v 1.1 2002/12/18 15:49:29 jgrant Exp $
./test/tc0004/rdfcore/rdfms-xmllang/test007c.nt:11 => # $Id: test007c.nt,v 1.1 2002/12/18 15:49:29 jgrant Exp $
./test/tc0004/rdfcore/rdfms-uri-substructure/test001.rdf:11 => $Id: test001.rdf,v 1.1 2002/03/29 15:09:58 bmcbride Exp $
./test/tc0004/rdfcore/rdfs-domain-and-range/premises006.rdf:20 =>     xml:base="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/premises006.rdf" >
./test/tc0004/rdfcore/rdfs-domain-and-range/nonconclusions006.rdf:20 =>     xml:base="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/nonconclusions006.rdf" >
./test/tc0004/rdfcore/rdfs-domain-and-range/nonconclusions005.rdf:20 =>     xml:base="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/nonconclusions005.rdf" >
./test/tc0004/rdfcore/rdfs-domain-and-range/test001.nt:10 => # $Id: test001.nt,v 1.5 2001/10/17 08:19:32 josderoo Exp $
./test/tc0004/rdfcore/rdfs-domain-and-range/test002.nt:10 => # $Id: test002.nt,v 1.5 2001/10/17 08:21:13 josderoo Exp $
./test/tc0004/rdfcore/rdfs-entailment/test001.nt:11 => # $Id: test001.nt,v 1.1 2003/11/13 10:21:45 jgrant Exp $
./test/tc0004/rdfcore/rdfs-domain-and-range/premises005.rdf:20 =>     xml:base="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/premises005.rdf" >
./test/tc0004/rdfcore/rdfms-uri-substructure/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/03/29 15:09:58 bmcbride Exp $
./test/tc0004/rdfcore/rdfms-uri-substructure/test001.nt:13 => # Input file for a serialization test
./test/tc0004/rdfcore/rdfs-entailment/test002.nt:11 => # $Id: test002.nt,v 1.1 2003/11/13 10:21:45 jgrant Exp $
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:26 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#A">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:27 =>         <rdfs:subClassOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#B"/>
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:30 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#B">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:31 =>         <rdfs:subClassOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#A"/>
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:34 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#X">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf:35 =>         <rdfs:subClassOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#X"/>
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.nt:12 => # $Id: test001.nt,v 1.3 2001/10/01 13:43:50 barstow Exp $
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#A> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#B> .
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#B> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#A> .
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#X> <http://www.w3.org/2000/01/rdf-schema#subPropertyOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#X> .
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:28 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#A">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:29 =>         <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#B"/>
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:32 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#B">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:33 =>         <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#A"/>
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:36 =>     <rdf:Description rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#X">
./test/tc0004/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf:37 =>         <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001#X"/>
./test/tc0004/rdfcore/rdfs-subPropertyOf-semantics/test001.nt:15 => # $Id: test001.nt,v 1.4 2002/04/05 13:25:37 josderoo Exp $
./test/tc0004/rdfcore/rdfs-subPropertyOf-semantics/test002.nt:15 => # $Id: test002.nt,v 1.2 2002/04/05 13:25:45 josderoo Exp $
./test/tc0004/rdfcore/rdfs-subClassOf-a-Property/test001.nt:12 => # $Id: test001.nt,v 1.1 2002/12/18 15:44:22 jgrant Exp $
./test/tc0004/rdfcore/tex-01/test001.rdf:21 =>   $Id: test001.rdf,v 1.2 2003/05/09 10:39:49 jcarroll Exp $
./test/tc0004/rdfcore/unrecognised-xml-attributes/test001.nt:10 => # $Id: test001.nt,v 1.1 2002/04/13 13:30:00 jgrant Exp $
./test/tc0004/rdfcore/tex-01/test002.rdf:21 =>   $Id: test002.rdf,v 1.2 2003/05/09 10:39:49 jcarroll Exp $
./test/tc0004/rdfcore/unrecognised-xml-attributes/test002.nt:10 => # $Id: test002.nt,v 1.1 2002/04/13 13:30:00 jgrant Exp $
./test/tc0004/rdfcore/unrecognised-xml-attributes/test002.rdf:17 =>   Although here it is not testing something in the xml namespace; but
./test/tc0004/rdfcore/unrecognised-xml-attributes/test002.rdf:24 =>   $Id: test002.rdf,v 1.1 2002/04/13 13:30:00 jgrant Exp $
./test/tc0004/rdfcore/unrecognised-xml-attributes/test001.rdf:22 =>   $Id: test001.rdf,v 1.1 2002/04/13 13:30:00 jgrant Exp $
./test/tc0004/rdfcore/xml-canon/test001.nt:13 => # $Id: test001.nt,v 1.1 2003/08/18 10:09:29 jgrant Exp $
./test/tc0004/rdfcore/xml-canon/test001.rdf:15 =>   $Id: test001.rdf,v 1.1 2003/08/18 10:09:29 jgrant Exp $
./test/tc0004/rdfcore/xmlbase/test001.rdf:17 =>   $Id: test001.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test001.nt:11 => # $Id: test001.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.nt:12 => # $Id: test001.nt,v 1.3 2001/10/01 13:45:20 barstow Exp $
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#A> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#B> .
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#B> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#A> .
./test/tc0004/rdfcore/rdfs-no-cycles-in-subClassOf/test001.nt:17 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#X> <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001#X> .
./test/tc0004/rdfcore/xmlbase/test002.rdf:16 =>   $Id: test002.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test002.nt:11 => # $Id: test002.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test003.nt:11 => # $Id: test003.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test004.nt:11 => # $Id: test004.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test003.rdf:16 =>   $Id: test003.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test004.rdf:16 =>   $Id: test004.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test006.rdf:16 =>   $Id: test006.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test007.nt:11 => # $Id: test007.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test006.nt:11 => # $Id: test006.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test008.nt:11 => # $Id: test008.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test008.rdf:16 =>   $Id: test008.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test007.rdf:16 =>   $Id: test007.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test009.nt:11 => # $Id: test009.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test009.rdf:16 =>   $Id: test009.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test010.nt:11 => # $Id: test010.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test010.rdf:16 =>   $Id: test010.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test011.rdf:17 =>   $Id: test011.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test013.rdf:16 =>   $Id: test013.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test013.nt:11 => # $Id: test013.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlbase/test014.nt:11 => # $Id: test014.nt,v 1.2 2002/11/15 11:45:42 jgrant Exp $
./test/tc0004/rdfcore/xmlbase/test014.nt:15 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test014.rdf#frag> <http://example.org/value> "v" .
./test/tc0004/rdfcore/xmlbase/test014.rdf:17 =>   $Id: test014.rdf,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlsch-02/test001.rdf:21 =>   $Id: test001.rdf,v 1.1 2003/05/12 20:07:01 jcarroll Exp $
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:14 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:16 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_3> "3" .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:18 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "foobar" .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:21 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>  <http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt> .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:23 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#_2> "2" .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:25 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "foobar" .
./test/tc0004/rdfcore/rdf-containers-syntax-vs-schema/test006.nt:27 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf#e2> <http://www.w3.org/1999/02/22-rdf-syntax-ns#value> "barfoo" .
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:576 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0064.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:577 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0064.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:585 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0065.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:586 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0065.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:594 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0066.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:595 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0066.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:603 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0067.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:604 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0067.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:612 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0068.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:613 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0068.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:621 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0069.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:622 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0069.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:630 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0070.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:631 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0070.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:639 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0071.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:640 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0071.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:648 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0072.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:649 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0072.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:657 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0073.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:658 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0073.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:666 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0074.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:667 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0074.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:675 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0075.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:676 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0075.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:684 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0076.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:685 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0076.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:693 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0077.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:694 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0077.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:702 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0078.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:703 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0078.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:465 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0046.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:466 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0046.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:468 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:472 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0047">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:475 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0047.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:476 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0047.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:478 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:482 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0048">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:485 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0048.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:486 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0048.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:488 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:492 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0049">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:495 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0049.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:496 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0049.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:498 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:502 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0050">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:505 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0050.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:506 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0050.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:508 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:512 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0051">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:515 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0051.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:516 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0051.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:518 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:522 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0052">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:525 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0052.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:526 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0052.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:528 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:532 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0053">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:535 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0053.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:536 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0053.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:538 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:542 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0054">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:545 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0054.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:546 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0054.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:548 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:552 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0055">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:555 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0055.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:556 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0055.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:558 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:562 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0056">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:565 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0056.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:566 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0056.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:568 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:572 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0057">
./test/tc0004/rdfcore/xmlbase/test011.nt:11 => # $Id: test011.nt,v 1.1 2002/03/08 12:21:41 dajobe Exp $
./test/tc0004/rdfcore/xmlsch-02/test003.rdf:21 =>   $Id: test003.rdf,v 1.1 2003/05/12 20:07:01 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-xml-literal-namespaces/test001.nt:10 => # $Id: test001.nt,v 1.1 2002/11/22 13:59:59 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-xml-literal-namespaces/test001.nt:13 => <http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/test001.rdf#John_Smith> <http://my.example.org/Name>  "\n      <html:h1 xmlns:html=\"http://NoHTML.example.org\">\n        <b xmlns=\"http://www.w3.org/1999/xhtml\">John</b>\n      </html:h1>\n   "^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral> .
./test/tc0004/rdfcore/xmlsch-02/test002.rdf:21 =>   $Id: test002.rdf,v 1.3 2003/05/12 20:12:03 jcarroll Exp $
./test/tc0007/manifest.ttl:641 =>    test:purpose "Tests to ensure that the XHTML+RDFa reserved word 'license' when used in @rel (with no @about) generates the proper triple";
./test/tc0007/manifest.ttl:642 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:643 => <test-cases/0076> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:645 =>    a test:TestCase;
./test/tc0007/manifest.ttl:646 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:647 =>    test:classification test:required;
./test/tc0007/manifest.ttl:648 =>    rdfatest:hostLanguage "xhtml1";
./test/tc0007/manifest.ttl:649 =>    test:informationResourceInput <test-cases/0076.html>;
./test/tc0007/manifest.ttl:650 =>    test:informationResourceResults <test-cases/0076.sparql>;
./test/tc0007/manifest.ttl:651 =>    test:purpose "Tests to ensure that all reserved XHTML words are supported in @rel";
./test/tc0007/manifest.ttl:652 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:653 => <test-cases/0077> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:655 =>    a test:TestCase;
./test/tc0007/manifest.ttl:656 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:657 =>    test:classification test:required;
./test/tc0007/manifest.ttl:658 =>    rdfatest:hostLanguage "xhtml1";
./test/tc0007/manifest.ttl:659 =>    test:informationResourceInput <test-cases/0077.html>;
./test/tc0007/manifest.ttl:660 =>    test:informationResourceResults <test-cases/0077.sparql>;
./test/tc0007/manifest.ttl:661 =>    test:purpose "Tests to ensure that all reserved XHTML words are supported in @rev";
./test/tc0007/manifest.ttl:662 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:663 => <test-cases/0078> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:665 =>    a test:TestCase;
./test/tc0007/manifest.ttl:666 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:667 =>    test:classification test:required;
./test/tc0007/manifest.ttl:668 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:669 =>    test:informationResourceInput <test-cases/0078.html>;
./test/tc0007/manifest.ttl:670 =>    test:informationResourceResults <test-cases/0078.sparql>;
./test/tc0007/manifest.ttl:671 =>    test:purpose "Tests multiple ways of handling incomplete triples; the first two triples should use the same bnode as subject ('merged'). The third should have a separate bNode.";
./test/tc0007/manifest.ttl:672 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:673 => <test-cases/0079> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:675 =>    a test:TestCase;
./test/tc0007/manifest.ttl:676 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:677 =>    test:classification test:required;
./test/tc0007/manifest.ttl:678 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:679 =>    test:informationResourceInput <test-cases/0079.html>;
./test/tc0007/manifest.ttl:680 =>    test:informationResourceResults <test-cases/0079.sparql>;
./test/tc0007/manifest.ttl:681 =>    test:purpose "Tests role of @resource and @href in completing incomplete triples (including their mutual priorities)";
./test/tc0007/manifest.ttl:682 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:683 => <test-cases/0080> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:685 =>    a test:TestCase;
./test/tc0007/manifest.ttl:686 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:687 =>    test:classification test:required;
./test/tc0007/manifest.ttl:688 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:689 =>    test:informationResourceInput <test-cases/0080.html>;
./test/tc0007/manifest.ttl:690 =>    test:informationResourceResults <test-cases/0080.sparql>;
./test/tc0007/manifest.ttl:691 =>    test:purpose "Tests if @about has a higher priority than @resource in handling incomplete triples";
./test/tc0007/manifest.ttl:692 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:693 => <test-cases/0081> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:695 =>    a test:TestCase;
./test/tc0007/manifest.ttl:696 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:697 =>    test:classification test:required;
./test/tc0007/manifest.ttl:698 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:699 =>    test:informationResourceInput <test-cases/0081.html>;
./test/tc0007/manifest.ttl:700 =>    test:informationResourceResults <test-cases/0081.sparql>;
./test/tc0007/manifest.ttl:701 =>    test:purpose "Tests multiple ways of handling incomplete triples, this time with @rev";
./test/tc0007/manifest.ttl:702 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:703 => <test-cases/0082> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:705 =>    a test:TestCase;
./test/tc0007/manifest.ttl:706 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:707 =>    test:classification test:required;
./test/tc0007/manifest.ttl:708 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:709 =>    test:informationResourceInput <test-cases/0082.html>;
./test/tc0007/manifest.ttl:710 =>    test:informationResourceResults <test-cases/0082.sparql>;
./test/tc0007/manifest.ttl:711 =>    test:purpose "Tests multiple ways of handling incomplete triples, this time with both @rel and @rev";
./test/tc0007/manifest.ttl:712 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:713 => <test-cases/0083> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:715 =>    a test:TestCase;
./test/tc0007/manifest.ttl:716 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:717 =>    test:classification test:required;
./test/tc0007/manifest.ttl:718 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:719 =>    test:informationResourceInput <test-cases/0083.html>;
./test/tc0007/manifest.ttl:720 =>    test:informationResourceResults <test-cases/0083.sparql>;
./test/tc0007/manifest.ttl:721 =>    test:purpose "Tests multiple ways of handling incomplete triples; the first two triples should use the same bNode as subject ('merged'); the third case should use @about";
./test/tc0007/manifest.ttl:722 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:723 => <test-cases/0084> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:725 =>    a test:TestCase;
./test/tc0007/manifest.ttl:726 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:727 =>    test:classification test:required;
./test/tc0007/manifest.ttl:728 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:729 =>    test:informationResourceInput <test-cases/0084.html>;
./test/tc0007/manifest.ttl:730 =>    test:informationResourceResults <test-cases/0084.sparql>;
./test/tc0007/manifest.ttl:731 =>    test:purpose "Tests multiple ways of handling incomplete triples, this time with both @rel and @rev. There is an intermediate div that should be ignored by the process";
./test/tc0007/manifest.ttl:732 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:733 => <test-cases/0085> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:735 =>    a test:TestCase;
./test/tc0007/manifest.ttl:736 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:737 =>    test:classification test:required;
./test/tc0007/manifest.ttl:738 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:739 =>    test:informationResourceInput <test-cases/0085.html>;
./test/tc0007/manifest.ttl:740 =>    test:informationResourceResults <test-cases/0085.sparql>;
./test/tc0007/manifest.ttl:741 =>    test:purpose "Tests the role of @resource and @href in completing incomplete triples (including their mutual priorities), but with an intermediate layer (ie, bNode) added";
./test/tc0007/manifest.ttl:742 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:743 => <test-cases/0087> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:745 =>    a test:TestCase;
./test/tc0007/manifest.ttl:746 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:747 =>    test:classification test:required;
./test/tc0007/manifest.ttl:748 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:749 =>    test:informationResourceInput <test-cases/0087.html>;
./test/tc0007/manifest.ttl:750 =>    test:informationResourceResults <test-cases/0087.sparql>;
./test/tc0007/manifest.ttl:751 =>    test:purpose "Tests to ensure that all reserved XHTML words are supported in @rel (with :xxx)";
./test/tc0007/manifest.ttl:752 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:753 => <test-cases/0088> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:755 =>    a test:TestCase;
./test/tc0007/manifest.ttl:756 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:757 =>    test:classification test:required;
./test/tc0007/manifest.ttl:758 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:759 =>    test:informationResourceInput <test-cases/0088.html>;
./test/tc0007/manifest.ttl:760 =>    test:informationResourceResults <test-cases/0088.sparql>;
./test/tc0007/manifest.ttl:761 =>    test:purpose "Test the interpretation of the CURIE \"_:\"";
./test/tc0007/manifest.ttl:762 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:763 => <test-cases/0089> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:765 =>    a test:TestCase;
./test/tc0007/manifest.ttl:766 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:767 =>    test:classification test:required;
./test/tc0007/manifest.ttl:768 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:769 =>    test:informationResourceInput <test-cases/0089.html>;
./test/tc0007/manifest.ttl:770 =>    test:informationResourceResults <test-cases/0089.sparql>;
./test/tc0007/manifest.ttl:771 =>    test:purpose "Tests to ensure that @src sets a new subject (focuses on @typeof).";
./test/tc0007/manifest.ttl:772 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:773 => <test-cases/0090> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:775 =>    a test:TestCase;
./test/tc0007/manifest.ttl:776 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:777 =>    test:classification test:required;
./test/tc0007/manifest.ttl:778 =>    rdfatest:hostLanguage "xhtml1", "html4";
./test/tc0007/manifest.ttl:779 =>    test:informationResourceInput <test-cases/0090.html>;
./test/tc0007/manifest.ttl:780 =>    test:informationResourceResults <test-cases/0090.sparql>;
./test/tc0007/manifest.ttl:781 =>    test:purpose "Tests to ensure that @src sets a new subject (focuses on @rel/@href).";
./test/tc0007/manifest.ttl:782 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:783 => <test-cases/0091> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:785 =>    a test:TestCase;
./test/tc0007/manifest.ttl:786 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:787 =>    test:classification test:required;
./test/tc0004/rdfcore/Manifest.rdf:369 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:370 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:371 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:372 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#decimal" />
./test/tc0004/rdfcore/Manifest.rdf:373 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#string" />
./test/tc0004/rdfcore/Manifest.rdf:375 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:376 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:377 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:379 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:380 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:381 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:383 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:386 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#language-and-xml-literal">
./test/tc0004/rdfcore/Manifest.rdf:388 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:389 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:391 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:395 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:397 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:398 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:399 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:400 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral" />
./test/tc0004/rdfcore/Manifest.rdf:402 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:403 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test007a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:404 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:406 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:407 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test007b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:408 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:410 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:413 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#test008">
./test/tc0004/rdfcore/Manifest.rdf:415 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:416 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0131.html" />
./test/tc0004/rdfcore/Manifest.rdf:417 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:419 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:421 =>     <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#simpleEntailment" />
./test/tc0004/rdfcore/Manifest.rdf:423 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:424 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test008a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:425 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:427 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:428 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test008b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:429 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:431 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:434 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#test009">
./test/tc0004/rdfcore/Manifest.rdf:436 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:437 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0131.html" />
./test/tc0004/rdfcore/Manifest.rdf:438 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:440 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:442 =>     <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#simpleEntailment" />
./test/tc0004/rdfcore/Manifest.rdf:444 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:445 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test009a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:446 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:448 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:449 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test009b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:450 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:452 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:455 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#test010">
./test/tc0004/rdfcore/Manifest.rdf:457 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:458 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Oct/0131.html" />
./test/tc0004/rdfcore/Manifest.rdf:459 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:461 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:463 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:464 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:465 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:466 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral" />
./test/tc0004/rdfcore/Manifest.rdf:468 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:469 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test010.nt" />
./test/tc0004/rdfcore/Manifest.rdf:470 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:472 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:473 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:474 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:476 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:478 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/Manifest.rdf#plain-literal-and-xsd-string">
./test/tc0004/rdfcore/Manifest.rdf:480 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:481 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Sep/0003.html" />
./test/tc0004/rdfcore/Manifest.rdf:482 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:485 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:487 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:488 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:489 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:490 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#string" />
./test/tc0004/rdfcore/Manifest.rdf:492 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:493 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test011a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:494 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:496 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:497 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes/test011b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:498 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:500 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:506 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/Manifest.rdf#subClassOf-intensional">
./test/tc0004/rdfcore/Manifest.rdf:508 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:509 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:511 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:513 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:515 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:517 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:519 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:520 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:521 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:522 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:524 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:525 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:526 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:527 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:529 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:531 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/Manifest.rdf#subPropertyOf-intensional">
./test/tc0004/rdfcore/Manifest.rdf:533 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:534 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:536 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:538 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:540 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:542 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:543 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#integer" />
./test/tc0004/rdfcore/Manifest.rdf:545 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#string" />
./test/tc0004/rdfcore/Manifest.rdf:548 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:549 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:550 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:551 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:553 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:554 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:555 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/horst-01/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:556 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:558 => </test:NegativeEntailmentTest>
./node_modules/acorn/dist/acorn_loose.js:674 =>   return this.tok.type === tt.eof || this.tok.type === tt.braceR || lineBreak.test(this.input.slice(this.last.end, this.tok.start));
./test/tc0004/rdfcore/rdfms-xml-literal-namespaces/test002.nt:10 => # $Id: test002.nt,v 1.1 2002/11/22 13:59:59 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-xml-literal-namespaces/test001.rdf:19 =>   $Id: test001.rdf,v 1.2 2002/11/22 13:52:15 jcarroll Exp $
./test/tc0004/rdfcore/rdfms-xml-literal-namespaces/test002.rdf:18 =>   $Id: test002.rdf,v 1.2 2002/11/22 13:59:59 jcarroll Exp $
./node_modules/acorn/src/loose/tokenize.js:42 =>       if (/unterminated/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:44 =>         if (/string/.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:46 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:50 =>         } else if (/template/.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:57 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:59 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:64 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:67 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/acorn/src/loose/tokenize.js:89 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) ||
./node_modules/acorn/src/loose/tokenize.js:90 =>     /[enwfd]/.test(ch) &&
./node_modules/acorn/src/loose/tokenize.js:91 =>     /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))
./node_modules/acorn/src/loose/parseutil.js:75 =>     lineBreak.test(this.input.slice(this.last.end, this.tok.start))
./node_modules/acorn/src/walk/index.js:56 => function makeTest(test) {
./node_modules/acorn/src/walk/index.js:57 =>   if (typeof test == "string")
./node_modules/acorn/src/walk/index.js:58 =>     return type => type == test
./node_modules/acorn/src/walk/index.js:59 =>   else if (!test)
./node_modules/acorn/src/walk/index.js:62 =>     return test
./node_modules/acorn/src/walk/index.js:72 => export function findNodeAt(node, start, end, test, base, state) {
./node_modules/acorn/src/walk/index.js:73 =>   test = makeTest(test)
./node_modules/acorn/src/walk/index.js:81 =>       if (test(type, node) &&
./node_modules/acorn/src/walk/index.js:94 => export function findNodeAround(node, pos, test, base, state) {
./node_modules/acorn/src/walk/index.js:95 =>   test = makeTest(test)
./node_modules/acorn/src/walk/index.js:102 =>       if (test(type, node)) throw new Found(node, st)
./node_modules/acorn/src/walk/index.js:111 => export function findNodeAfter(node, pos, test, base, state) {
./node_modules/acorn/src/walk/index.js:112 =>   test = makeTest(test)
./node_modules/acorn/src/walk/index.js:118 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st)
./node_modules/acorn/src/walk/index.js:128 => export function findNodeBefore(node, pos, test, base, state) {
./node_modules/acorn/src/walk/index.js:129 =>   test = makeTest(test)
./node_modules/acorn/src/walk/index.js:135 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
./node_modules/acorn/src/walk/index.js:168 =>   c(node.test, st, "Expression")
./node_modules/acorn/src/walk/index.js:182 =>     if (cs.test) c(cs.test, st, "Expression")
./node_modules/acorn/src/walk/index.js:198 =>   c(node.test, st, "Expression")
./node_modules/acorn/src/walk/index.js:203 =>   if (node.test) c(node.test, st, "Expression")
./node_modules/acorn/src/loose/expression.js:72 =>     node.test = expr
./node_modules/acorn/src/loose/expression.js:101 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression")
./node_modules/acorn/src/loose/statement.js:41 =>     node.test = this.eat(tt._while) ? this.parseParenExpression() : this.dummyIdent()
./node_modules/acorn/src/loose/statement.js:68 =>     node.test = this.parseParenExpression()
./node_modules/acorn/src/loose/statement.js:95 =>         if (isCase) cur.test = this.parseExpression()
./node_modules/acorn/src/loose/statement.js:96 =>         else cur.test = null
./node_modules/acorn/src/loose/statement.js:102 =>           cur.test = null
./node_modules/acorn/src/loose/statement.js:143 =>     node.test = this.parseParenExpression()
./node_modules/acorn/src/loose/statement.js:202 =>   node.test = node.update = null
./node_modules/acorn/src/loose/statement.js:203 =>   if (this.eat(tt.semi) && this.tok.type !== tt.semi) node.test = this.parseExpression()
./node_modules/asn1/tst/ber/writer.test.js:3 => var test = require('tap').test;
./node_modules/asn1/tst/ber/writer.test.js:15 => test('load library', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:23 => test('write byte', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:37 => test('write 1 byte int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:53 => test('write 2 byte int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:70 => test('write 3 byte int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:88 => test('write 4 byte int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:108 => test('write 1 byte negative int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:125 => test('write 2 byte negative int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:143 => test('write 3 byte negative int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:162 => test('write 4 byte negative int', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:182 => test('write boolean', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:202 => test('write string', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:216 => test('write buffer', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:239 => test('write string array', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:259 => test('resize internal buffer', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:274 => test('sequence', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:294 => test('nested sequence', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:321 => test('LDAP bind message', function(t) {
./node_modules/asn1/tst/ber/writer.test.js:322 =>   var dn = 'cn=foo,ou=unit,o=test';
./node_modules/acorn/src/tokenize.js:490 =>   else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
./node_modules/async/lib/async.js:673 =>     async.whilst = function (test, iterator, callback) {
./node_modules/async/lib/async.js:674 =>         if (test()) {
./node_modules/async/lib/async.js:679 =>                 async.whilst(test, iterator, callback);
./node_modules/async/lib/async.js:687 =>     async.doWhilst = function (iterator, test, callback) {
./node_modules/async/lib/async.js:693 =>             if (test.apply(null, args)) {
./node_modules/async/lib/async.js:694 =>                 async.doWhilst(iterator, test, callback);
./node_modules/async/lib/async.js:702 =>     async.until = function (test, iterator, callback) {
./node_modules/async/lib/async.js:703 =>         if (!test()) {
./node_modules/async/lib/async.js:708 =>                 async.until(test, iterator, callback);
./node_modules/async/lib/async.js:716 =>     async.doUntil = function (iterator, test, callback) {
./node_modules/async/lib/async.js:722 =>             if (!test.apply(null, args)) {
./node_modules/async/lib/async.js:723 =>                 async.doUntil(iterator, test, callback);
./node_modules/asn1/tst/ber/reader.test.js:3 => var test = require('tap').test;
./node_modules/asn1/tst/ber/reader.test.js:15 => test('load library', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:28 => test('read byte', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:36 => test('read 1 byte int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:45 => test('read 2 byte int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:54 => test('read 3 byte int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:63 => test('read 4 byte int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:72 => test('read 1 byte negative int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:81 => test('read 2 byte negative int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:90 => test('read 3 byte negative int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:99 => test('read 4 byte negative int', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:108 => test('read boolean true', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:117 => test('read boolean false', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:126 => test('read enumeration', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:135 => test('read string', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:136 =>   var dn = 'cn=foo,ou=unit,o=test';
./node_modules/asn1/tst/ber/reader.test.js:149 => test('read sequence', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:160 => test('anonymous LDAPv3 bind', function(t) {
./node_modules/asn1/tst/ber/reader.test.js:177 =>   // Start testing ^^
./node_modules/asn1/tst/ber/reader.test.js:194 => test('long string', function(t) {
./node_modules/babel-generator/lib/generators/expressions.js:69 =>   this.print(node.test, node);
./node_modules/babel-generator/lib/generators/statements.js:45 =>   this.print(node.test, node);
./node_modules/babel-generator/lib/generators/statements.js:87 =>   if (node.test) {
./node_modules/babel-generator/lib/generators/statements.js:89 =>     this.print(node.test, node);
./node_modules/babel-generator/lib/generators/statements.js:106 =>   this.print(node.test, node);
./node_modules/babel-generator/lib/generators/statements.js:144 =>   this.print(node.test, node);
./node_modules/babel-generator/lib/generators/statements.js:230 =>   if (node.test) {
./node_modules/babel-generator/lib/generators/statements.js:233 =>     this.print(node.test, node);
./node_modules/babel-generator/lib/node/parentheses.js:136 =>   if (t.isWhileStatement(parent) && parent.test === node) {
./node_modules/babel-generator/lib/node/parentheses.js:140 =>   if (t.isIfStatement(parent) && parent.test === node) {
./node_modules/babel-generator/lib/node/parentheses.js:152 =>   return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) && node === parent.test;
./node_modules/babel-generator/lib/node/parentheses.js:193 =>   if (t.isConditionalExpression(parent, { test: node })) {
./node_modules/babel-generator/lib/node/parentheses.js:240 =>     if (t.isCallExpression(parent, { callee: node }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, { object: node }) || t.isConditional(parent, { test: node }) || t.isBinary(parent, { left: node }) || t.isAssignmentExpression(parent, { left: node })) {
./node_modules/babel-plugin-transform-es2015-block-scoping/lib/index.js:626 =>         body.push(t.ifStatement(t.binaryExpression("===", ret, single.test), single.consequent[0]));
./node_modules/babel-register/node_modules/mkdirp/package.json:90 =>     "test": "tap test/*.js"
./node_modules/asn1/lib/ber/writer.js:179 =>   if (!/^([0-9]+\.){3,}[0-9]+$/.test(s))
./node_modules/babel-traverse/lib/path/evaluation.js:126 =>       var testResult = evaluate(path.get("test"));
./node_modules/babel-traverse/lib/path/evaluation.js:128 =>       if (testResult) {
./node_modules/babel-types/README.md:1621 => t.switchCase(test, consequent)
./node_modules/babel-types/README.md:1626 =>  - `test`: `Expression` (default: `null`)
./node_modules/babel-types/README.md:1928 => t.whileStatement(test, body)
./node_modules/babel-types/README.md:1935 =>  - `test`: `Expression` (required)
./node_modules/babel-types/lib/definitions/core.js:133 =>   visitor: ["test", "consequent", "alternate"],
./node_modules/babel-types/lib/definitions/core.js:135 =>     test: {
./node_modules/babel-types/lib/definitions/core.js:164 =>   visitor: ["test", "body"],
./node_modules/babel-types/lib/definitions/core.js:166 =>     test: {
./node_modules/babel-types/lib/definitions/core.js:217 =>   visitor: ["init", "test", "update", "body"],
./node_modules/babel-types/lib/definitions/core.js:224 =>     test: {
./node_modules/babel-types/lib/definitions/core.js:305 =>   visitor: ["test", "consequent", "alternate"],
./node_modules/babel-types/lib/definitions/core.js:308 =>     test: {
./node_modules/babylon/lib/index.js:433 =>     if (lineBreak.test(this.input.slice(this.state.end))) {
./node_modules/browser-resolve/node_modules/resolve/package.json:87 =>     "test": "tape test/*.js"
./node_modules/browserify/changelog.markdown:1151 => pieces going on and the packages can have their own tests and documentation.
./node_modules/bn.js/test/pummel/dh-group-test.js:7 => describe('BN.js/Slow DH test', function () {
./node_modules/browser-resolve/node_modules/resolve/readme.markdown:60 => * opts.isFile - function to asynchronously test whether a file exists
./node_modules/browser-resolve/node_modules/resolve/readme.markdown:108 => * opts.isFile - function to synchronously test whether a file exists
./node_modules/browserify/test/ignore/by-relative.js:2 =>  * This test is to check to make sure that files that are ignored do not get
./node_modules/browserify-zlib/test/ignored/test-zlib-dictionary-fail.js:31 =>     assert(/Missing dictionary/.test(err.message));
./node_modules/browserify-zlib/test/ignored/test-zlib-dictionary-fail.js:34 =>   // String "test" encoded with dictionary "dict".
./node_modules/browserify-zlib/test/ignored/test-zlib-dictionary-fail.js:43 =>     assert(/Bad dictionary/.test(err.message));
./node_modules/browserify-zlib/test/ignored/test-zlib-dictionary-fail.js:46 =>   // String "test" encoded with dictionary "dict".
./node_modules/browserify-zlib/test/ignored/test-zlib-dictionary.js:22 => // test compression/decompression with dictionary
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:18 => // For backwards compatibility of old .parent property test that if buf is not
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:41 => // Now test protecting users from doing stupid things
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:75 =>     assert(/'offset' is out of bounds/.test(err.message));
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:80 =>     assert(/'length' is out of bounds/.test(err.message));
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:103 =>     assert(/'offset' is out of bounds/.test(err.message));
./node_modules/buffer/test/node/test-buffer-arraybuffer.js:108 =>     assert(/'length' is out of bounds/.test(err.message));
./node_modules/buffer/test/node/test-buffer-alloc.js:206 => // console.log('test copy at negative sourceEnd');
./node_modules/buffer/test/node/test-buffer-alloc.js:231 =>   b.write('test string', 0, 5, 'invalid');
./node_modules/buffer/test/node/test-buffer-fill.js:15 => testBufs('abc');
./node_modules/buffer/test/node/test-buffer-fill.js:16 => testBufs('\u0222aa');
./node_modules/buffer/test/node/test-buffer-fill.js:17 => testBufs('a\u0234b\u0235c\u0236');
./node_modules/buffer/test/node/test-buffer-fill.js:18 => testBufs('abc', 4);
./node_modules/buffer/test/node/test-buffer-fill.js:19 => testBufs('abc', 5);
./node_modules/buffer/test/node/test-buffer-fill.js:20 => testBufs('abc', SIZE);
./node_modules/buffer/test/node/test-buffer-fill.js:21 => testBufs('\u0222aa', 2);
./node_modules/buffer/test/node/test-buffer-fill.js:22 => testBufs('\u0222aa', 8);
./node_modules/buffer/test/node/test-buffer-fill.js:23 => testBufs('a\u0234b\u0235c\u0236', 4);
./node_modules/buffer/test/node/test-buffer-fill.js:24 => testBufs('a\u0234b\u0235c\u0236', 12);
./node_modules/buffer/test/node/test-buffer-fill.js:25 => testBufs('abc', 4, -1);
./node_modules/buffer/test/node/test-buffer-fill.js:26 => testBufs('abc', 4, 1);
./node_modules/buffer/test/node/test-buffer-fill.js:27 => testBufs('abc', 5, 1);
./node_modules/buffer/test/node/test-buffer-fill.js:28 => testBufs('\u0222aa', 2, -1);
./node_modules/buffer/test/node/test-buffer-fill.js:29 => testBufs('\u0222aa', 8, 1);
./node_modules/buffer/test/node/test-buffer-fill.js:30 => testBufs('a\u0234b\u0235c\u0236', 4, -1);
./node_modules/buffer/test/node/test-buffer-fill.js:31 => testBufs('a\u0234b\u0235c\u0236', 4, 1);
./node_modules/buffer/test/node/test-buffer-fill.js:32 => testBufs('a\u0234b\u0235c\u0236', 12, 1);
./node_modules/buffer/test/node/test-buffer-fill.js:36 => testBufs('abc', 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:37 => testBufs('\u0222aa', 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:38 => testBufs('a\u0234b\u0235c\u0236', 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:39 => testBufs('abc', 4, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:40 => testBufs('abc', 5, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:41 => testBufs('abc', SIZE, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:42 => testBufs('\u0222aa', 2, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:43 => testBufs('\u0222aa', 8, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:44 => testBufs('a\u0234b\u0235c\u0236', 4, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:45 => testBufs('a\u0234b\u0235c\u0236', 12, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:46 => testBufs('abc', 4, -1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:47 => testBufs('abc', 4, 1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:48 => testBufs('abc', 5, 1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:49 => testBufs('\u0222aa', 2, -1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:50 => testBufs('\u0222aa', 8, 1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:51 => testBufs('a\u0234b\u0235c\u0236', 4, -1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:52 => testBufs('a\u0234b\u0235c\u0236', 4, 1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:53 => testBufs('a\u0234b\u0235c\u0236', 12, 1, 'utf8');
./node_modules/buffer/test/node/test-buffer-fill.js:58 => testBufs('abc', 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:59 => testBufs('\u0222aa', 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:60 => testBufs('a\u0234b\u0235c\u0236', 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:61 => testBufs('abc', 4, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:62 => testBufs('abc', 5, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:63 => testBufs('abc', SIZE, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:64 => testBufs('\u0222aa', 2, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:65 => testBufs('\u0222aa', 8, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:66 => testBufs('a\u0234b\u0235c\u0236', 4, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:67 => testBufs('a\u0234b\u0235c\u0236', 12, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:68 => testBufs('abc', 4, -1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:69 => testBufs('abc', 4, 1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:70 => testBufs('abc', 5, 1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:71 => testBufs('\u0222aa', 2, -1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:72 => testBufs('\u0222aa', 8, 1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:73 => testBufs('a\u0234b\u0235c\u0236', 4, -1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:74 => testBufs('a\u0234b\u0235c\u0236', 4, 1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:75 => testBufs('a\u0234b\u0235c\u0236', 12, 1, 'binary');
./node_modules/buffer/test/node/test-buffer-fill.js:79 => testBufs('abc', 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:80 => testBufs('\u0222aa', 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:81 => testBufs('a\u0234b\u0235c\u0236', 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:82 => testBufs('abc', 4, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:83 => testBufs('abc', 5, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:84 => testBufs('abc', SIZE, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:85 => testBufs('\u0222aa', 2, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:86 => testBufs('\u0222aa', 8, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:87 => testBufs('a\u0234b\u0235c\u0236', 4, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:88 => testBufs('a\u0234b\u0235c\u0236', 12, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:89 => testBufs('abc', 4, -1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:90 => testBufs('abc', 4, 1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:91 => testBufs('abc', 5, 1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:92 => testBufs('\u0222aa', 2, -1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:93 => testBufs('\u0222aa', 8, 1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:94 => testBufs('a\u0234b\u0235c\u0236', 4, -1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:95 => testBufs('a\u0234b\u0235c\u0236', 4, 1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:96 => testBufs('a\u0234b\u0235c\u0236', 12, 1, 'latin1');
./node_modules/buffer/test/node/test-buffer-fill.js:100 => testBufs('abc', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:101 => testBufs('\u0222aa', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:102 => testBufs('a\u0234b\u0235c\u0236', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:103 => testBufs('abc', 4, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:104 => testBufs('abc', SIZE, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:105 => testBufs('\u0222aa', 2, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:106 => testBufs('\u0222aa', 8, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:107 => testBufs('a\u0234b\u0235c\u0236', 4, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:108 => testBufs('a\u0234b\u0235c\u0236', 12, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:109 => testBufs('abc', 4, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:110 => testBufs('abc', 4, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:111 => testBufs('abc', 5, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:112 => testBufs('\u0222aa', 2, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:113 => testBufs('\u0222aa', 8, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:114 => testBufs('a\u0234b\u0235c\u0236', 4, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:115 => testBufs('a\u0234b\u0235c\u0236', 4, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:116 => testBufs('a\u0234b\u0235c\u0236', 12, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:122 => testBufs('616263', 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:123 => testBufs('c8a26161', 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:124 => testBufs('61c8b462c8b563c8b6', 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:125 => testBufs('616263', 4, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:126 => testBufs('616263', 5, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:127 => testBufs('616263', SIZE, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:128 => testBufs('c8a26161', 2, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:129 => testBufs('c8a26161', 8, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:130 => testBufs('61c8b462c8b563c8b6', 4, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:131 => testBufs('61c8b462c8b563c8b6', 12, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:132 => testBufs('616263', 4, -1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:133 => testBufs('616263', 4, 1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:134 => testBufs('616263', 5, 1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:135 => testBufs('c8a26161', 2, -1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:136 => testBufs('c8a26161', 8, 1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:137 => testBufs('61c8b462c8b563c8b6', 4, -1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:138 => testBufs('61c8b462c8b563c8b6', 4, 1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:139 => testBufs('61c8b462c8b563c8b6', 12, 1, 'hex');
./node_modules/buffer/test/node/test-buffer-fill.js:146 => testBufs('YWJj', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:147 => testBufs('yKJhYQ==', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:148 => testBufs('Yci0Ysi1Y8i2', 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:149 => testBufs('YWJj', 4, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:150 => testBufs('YWJj', SIZE, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:151 => testBufs('yKJhYQ==', 2, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:152 => testBufs('yKJhYQ==', 8, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:153 => testBufs('Yci0Ysi1Y8i2', 4, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:154 => testBufs('Yci0Ysi1Y8i2', 12, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:155 => testBufs('YWJj', 4, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:156 => testBufs('YWJj', 4, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:157 => testBufs('YWJj', 5, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:158 => testBufs('yKJhYQ==', 2, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:159 => testBufs('yKJhYQ==', 8, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:160 => testBufs('Yci0Ysi1Y8i2', 4, -1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:161 => testBufs('Yci0Ysi1Y8i2', 4, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:162 => testBufs('Yci0Ysi1Y8i2', 12, 1, 'ucs2');
./node_modules/buffer/test/node/test-buffer-fill.js:265 => function testBufs(string, offset, length, encoding) {
./node_modules/buffer/test/node/test-buffer-includes.js:70 => // test offsets
./node_modules/buffer/test/node/test-buffer-includes.js:83 => // test hex encoding
./node_modules/buffer/test/node/test-buffer-includes.js:95 => // test base64 encoding
./node_modules/buffer/test/node/test-buffer-includes.js:107 => // test ascii encoding
./node_modules/buffer/test/node/test-buffer-includes.js:119 => // test latin1 encoding
./node_modules/buffer/test/node/test-buffer-includes.js:131 => // test binary encoding
./node_modules/buffer/test/node/test-buffer-includes.js:144 => // test usc2 encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:70 => // test offsets
./node_modules/buffer/test/node/test-buffer-indexof.js:83 => // test hex encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:95 => // test base64 encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:107 => // test ascii encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:119 => // test latin1 encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:146 => // test binary encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:174 => // test optional offset with passed encoding
./node_modules/buffer/test/node/test-buffer-indexof.js:179 =>   // test usc2 encoding
./node_modules/buffer/test/node/test-buffer-zero-fill-reset.js:9 => function testUint8Array(ui) {
./node_modules/buffer/test/node/test-buffer-zero-fill-reset.js:20 =>   assert.ok(testUint8Array(ui), 'Uint8Array is not zero-filled');
./node_modules/buffer/test/node/test-buffer-zero-fill-cli.js:21 => // contain all zeroes. The test is run multiple
./node_modules/chai/History.md:887 =>   * remove html/json/headers testign
./node_modules/chai/History.md:888 =>   * regex error.message testing
./node_modules/chai/History.md:889 =>   * tests for using plugins
./node_modules/chai/History.md:926 =>   * added assert tests to browser test runner
./node_modules/chai/History.md:932 =>   * some tests for assert module
./node_modules/chai/History.md:943 =>   * browser tests pass
./node_modules/chai/History.md:945 =>   * test for should (not) exist
./node_modules/chai/History.md:948 =>   * convert tests to tdd
./node_modules/chai/History.md:957 =>   * added should tests to browser
./node_modules/chai/History.md:958 =>   * new expect empty tests
./node_modules/chai/History.md:959 =>   * should test browser compat
./node_modules/chai/History.md:971 =>   * browser version built with pre/suffix … all tests passing
./node_modules/chai/History.md:976 =>   * compile for browser tests.. all pass
./node_modules/chai/History.md:978 =>   * throw tests
./node_modules/chai/History.md:982 =>   * removed object() test
./node_modules/chai/History.md:1004 =>   * added exist test
./node_modules/chai/History.md:1012 =>   * testing travis failure
./node_modules/chai/History.md:1020 =>   * browser tests expect (all working)
./node_modules/chai/History.md:1023 =>   * expect tests browser compatible
./node_modules/chai/History.md:1024 =>   * tests for should and expect (all pass)
./node_modules/chai/History.md:1026 =>   * should compatibility testing
./node_modules/chai/History.md:1038 =>   * added mocha for testing
./node_modules/chai/History.md:1050 =>   * test browser build
./node_modules/chai/chai.js:1240 =>    *     expect('test').to.have.ownPropertyDescriptor('length');
./node_modules/chai/chai.js:1241 =>    *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });
./node_modules/chai/chai.js:1242 =>    *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });
./node_modules/chai/chai.js:1243 =>    *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);
./node_modules/chai/chai.js:1244 =>    *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');
./node_modules/color-convert/color-convert-0.2.0.js:1331 =>         return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
./node_modules/combine-source-map/node_modules/convert-source-map/package.json:92 =>     "test": "tap test/*.js"
./node_modules/buffer/test/node/test-buffer.js:208 => // console.log('test copy at negative sourceEnd');
./node_modules/buffer/test/node/test-buffer.js:233 =>   b.write('test string', 0, 5, 'invalid');
./node_modules/concat-stream/node_modules/readable-stream/package.json:108 =>     "browser": "npm run write-zuul && zuul -- test/browser.js",
./node_modules/concat-stream/node_modules/readable-stream/package.json:109 =>     "test": "tap test/parallel/*.js test/ours/*.js",
./node_modules/chai/lib/chai/assertion.js:87 =>    * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
./node_modules/chai/lib/chai/assertion.js:90 =>    * @param {Philosophical} expression to be tested
./node_modules/chai/lib/chai/assertion.js:100 =>     var ok = util.test(this, arguments);
./node_modules/console-browserify/test/static/index.html:6 =>     <script src="/testem.js"></script>
./node_modules/console-browserify/test/static/index.html:7 =>     <script src="test-adapter.js"></script>
./node_modules/console-browserify/test/static/test-adapter.js:12 =>             , tests: []
./node_modules/console-browserify/test/static/test-adapter.js:15 =>         socket.emit('tests-start')
./node_modules/console-browserify/test/static/test-adapter.js:21 =>                 var test = {
./node_modules/console-browserify/test/static/test-adapter.js:40 =>                 // console.log("emitted test", test)
./node_modules/console-browserify/test/static/test-adapter.js:41 =>                 socket.emit('test-result', test)
./node_modules/console-browserify/test/static/test-adapter.js:42 =>                 results.tests.push(test)
./node_modules/console-browserify/test/static/test-adapter.js:43 =>             } else if (msg === '# ok' || msg.match(/^# tests \d+/)){
./node_modules/console-browserify/test/static/test-adapter.js:44 =>                 // console.log("emitted all test")
./node_modules/console-browserify/test/static/test-adapter.js:45 =>                 socket.emit('all-test-results', results)
./node_modules/core-js/library/modules/es6.array.sort.js:7 =>   , test      = [1, 2, 3];
./node_modules/core-js/library/modules/es6.array.sort.js:11 =>   test.sort(undefined);
./node_modules/core-js/library/modules/es6.array.sort.js:14 =>   test.sort(null);
./node_modules/core-js/library/modules/es6.promise.js:28 =>     // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/core-js/library/modules/web.timers.js:7 =>   , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/core-js/library/modules/_set-proto.js:11 =>     function(test, buggy, set){
./node_modules/core-js/library/modules/_set-proto.js:14 =>         set(test, []);
./node_modules/core-js/library/modules/_set-proto.js:15 =>         buggy = !(test instanceof Array);
./node_modules/core-js/library/modules/_parse-int.js:8 =>   return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/core-js/library/modules/_string-html.js:16 =>     var test = ''[NAME]('"');
./node_modules/core-js/library/modules/_string-html.js:17 =>     return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/crypto-browserify/example/bundle.js:630 => require.define("/test.js", function (require, module, exports, __dirname, __filename) {
./node_modules/crypto-browserify/example/bundle.js:637 => require("/test.js");
./node_modules/dashdash/node_modules/assert-plus/CHANGES.md:14 => - Add basic unit test coverage
./node_modules/dashdash/node_modules/assert-plus/package.json:112 =>     "test": "tape tests/*.js | ./node_modules/.bin/faucet"
./node_modules/crypto-browserify/test/node/dh.js:1 => var test = require('tape')
./node_modules/crypto-browserify/test/node/dh.js:5 => test('diffie-hellman mod groups', function (t) {
./node_modules/crypto-browserify/test/node/dh.js:9 =>     t.test(mod, function (t) {
./node_modules/crypto-browserify/test/node/dh.js:29 => test('diffie-hellman key lengths', function (t) {
./node_modules/crypto-browserify/test/node/dh.js:33 =>     t.test('' + len, function (t) {
./node_modules/deep-eql/node_modules/type-detect/History.md:6 =>  * index,test: support browserify
./node_modules/deep-eql/node_modules/type-detect/History.md:13 =>  * library: [test] ensure test runs
./node_modules/deep-eql/node_modules/type-detect/History.md:15 =>  * tests: add tests
./node_modules/deep-eql/node_modules/type-detect/History.md:17 =>  * pkg: prepare for coverage based tests
./node_modules/date-now/test/static/index.html:5 =>     <script src="/testem.js"></script>
./node_modules/deep-eql/node_modules/type-detect/package.json:88 =>     "test": "make test"
./node_modules/dashdash/node_modules/assert-plus/README.md:5 => NODE\_NDEBUG, and (2) some API wrappers for argument testing.  Like
./node_modules/dashdash/node_modules/assert-plus/README.md:32 =>     at test (/home/mark/work/foo/foo.js:3:9)
./node_modules/dashdash/node_modules/assert-plus/README.md:44 =>     function test(foo) {
./node_modules/dashdash/node_modules/assert-plus/README.md:52 =>     function test(foo) {
./node_modules/dashdash/node_modules/assert-plus/assert.js:92 =>             return typeof (arg) === 'string' && UUID_REGEXP.test(arg);
./node_modules/dashdash/node_modules/assert-plus/assert.js:205 =>     /* export ourselves (for unit tests _only_) */
./node_modules/deep-eql/node_modules/type-detect/README.md:116 => * **@param** _{Mixed}_ object to test
./node_modules/deep-eql/node_modules/type-detect/README.md:128 => #### .define (type, test)
./node_modules/deep-eql/node_modules/type-detect/README.md:131 => * **@param** _{RegExp|Function}_ test 
./node_modules/deep-eql/node_modules/type-detect/README.md:133 => Add a test to for the `.test()` assertion.
./node_modules/deep-eql/node_modules/type-detect/README.md:153 => #### .test (obj, test)
./node_modules/deep-eql/node_modules/type-detect/README.md:161 => use the user defined custom tests.
./node_modules/deep-eql/node_modules/type-detect/README.md:164 => assert(lib.test('1', 'int'));
./node_modules/deep-eql/node_modules/type-detect/README.md:165 => assert(lib.test('yes', 'bln'));
./node_modules/detective/node_modules/acorn/package.json:273 =>     "prepublish": "npm test",
./node_modules/detective/node_modules/acorn/package.json:274 =>     "pretest": "npm run build",
./node_modules/detective/node_modules/acorn/package.json:275 =>     "test": "node test/run.js"
./node_modules/es6-promise/dist/test/index.html:11 =>   <script src="/testem.js"></script>
./node_modules/es6-promise/dist/test/es6-promise.js:59 =>     // test for web worker but not in IE10
./node_modules/es6-promise/dist/test/mocha.css:61 => #mocha .test {
./node_modules/es6-promise/dist/test/mocha.css:66 => #mocha .test.pending:hover h2::after {
./node_modules/es6-promise/dist/test/mocha.css:71 => #mocha .test.pass.medium .duration {
./node_modules/es6-promise/dist/test/mocha.css:75 => #mocha .test.pass.slow .duration {
./node_modules/es6-promise/dist/test/mocha.css:79 => #mocha .test.pass::before {
./node_modules/es6-promise/dist/test/mocha.css:88 => #mocha .test.pass .duration {
./node_modules/es6-promise/dist/test/mocha.css:103 => #mocha .test.pass.fast .duration {
./node_modules/es6-promise/dist/test/mocha.css:107 => #mocha .test.pending {
./node_modules/es6-promise/dist/test/mocha.css:111 => #mocha .test.pending::before {
./node_modules/es6-promise/dist/test/mocha.css:116 => #mocha .test.fail {
./node_modules/es6-promise/dist/test/mocha.css:120 => #mocha .test.fail pre {
./node_modules/es6-promise/dist/test/mocha.css:124 => #mocha .test.fail::before {
./node_modules/es6-promise/dist/test/mocha.css:133 => #mocha .test pre.error {
./node_modules/es6-promise/dist/test/mocha.css:144 => #mocha .test pre {
./node_modules/es6-promise/dist/test/mocha.css:163 => #mocha .test h2 {
./node_modules/es6-promise/dist/test/mocha.css:167 => #mocha .test a.replay {
./node_modules/es6-promise/dist/test/mocha.css:189 => #mocha .test:hover a.replay {
./node_modules/es6-promise/dist/test/mocha.css:193 => #mocha-report.pass .test.fail {
./node_modules/es6-promise/dist/test/mocha.css:197 => #mocha-report.fail .test.pass {
./node_modules/es6-promise/dist/test/mocha.css:201 => #mocha-report.pending .test.pass,
./node_modules/es6-promise/dist/test/mocha.css:202 => #mocha-report.pending .test.fail {
./node_modules/es6-promise/dist/test/mocha.css:205 => #mocha-report.pending .test.pass.pending {
./node_modules/es6-promise/dist/test/json3.js:70 =>         // Return cached feature test result.
./node_modules/es6-promise/dist/test/json3.js:88 =>             // A test function object with a custom `toJSON` method.
./node_modules/es6-promise/dist/test/json3.js:107 =>                 // FF 3.1b3 pass this test.
./node_modules/es6-promise/dist/test/json3.js:129 =>                 // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
./node_modules/es6-promise/lib/es6-promise/asap.js:35 => // test for web worker but not in IE10
./node_modules/es6-promise/dist/test/browserify.js:2 => require('./test-adapter.js');
./node_modules/es6-promise/dist/test/browserify.js:3 => require('./scheduler-test.js');
./node_modules/es6-promise/dist/test/browserify.js:4 => require('./extension-test.js');
./node_modules/es6-promise/dist/test/browserify.js:5 => require('promises-aplus-tests-phantom/lib/testFiles');
./node_modules/es6-promise/dist/test/browserify.js:7 => },{"./extension-test.js":52,"./scheduler-test.js":53,"./test-adapter.js":54,"promises-aplus-tests-phantom/lib/testFiles":7}],2:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:143 => // 4. Pure assertion tests whether a value is truthy, as determined
./node_modules/es6-promise/dist/test/browserify.js:147 => // message_opt);. To test strictly for the value true, use
./node_modules/es6-promise/dist/test/browserify.js:155 => // 5. The equality assertion tests shallow, coercive equality with
./node_modules/es6-promise/dist/test/browserify.js:163 => // 6. The non-equality assertion tests for whether two objects are not equal
./node_modules/es6-promise/dist/test/browserify.js:172 => // 7. The equivalence assertion tests a deep equality relation.
./node_modules/es6-promise/dist/test/mocha.js:198 =>         if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {
./node_modules/fs-grep/node_modules/colors/package.json:91 =>     "test": "node tests/basic-test.js && node tests/safe-test.js"
./node_modules/fs-grep/node_modules/colors/ReadMe.md:99 => ## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)
./node_modules/fs-grep/node_modules/colors/ReadMe.md:175 => console.log('test'.custom);
./node_modules/getpass/node_modules/assert-plus/CHANGES.md:14 => - Add basic unit test coverage
./node_modules/getpass/node_modules/assert-plus/package.json:112 =>     "test": "tape tests/*.js | ./node_modules/.bin/faucet"
./node_modules/getpass/node_modules/assert-plus/assert.js:92 =>             return typeof (arg) === 'string' && UUID_REGEXP.test(arg);
./node_modules/getpass/node_modules/assert-plus/assert.js:205 =>     /* export ourselves (for unit tests _only_) */
./node_modules/getpass/node_modules/assert-plus/README.md:5 => NODE\_NDEBUG, and (2) some API wrappers for argument testing.  Like
./node_modules/getpass/node_modules/assert-plus/README.md:32 =>     at test (/home/mark/work/foo/foo.js:3:9)
./node_modules/getpass/node_modules/assert-plus/README.md:44 =>     function test(foo) {
./node_modules/getpass/node_modules/assert-plus/README.md:52 =>     function test(foo) {
./node_modules/hoek/lib/index.js:697 =>     if (process.env.NODE_ENV === 'test' || exports.abortThrow === true) {
./node_modules/hoek/lib/index.js:803 =>         !/^[\w\-]*$/.test(value)) {
./node_modules/hoek/lib/index.js:824 =>     exports.assert(/^[ \w\!#\$%&'\(\)\*\+,\-\.\/\:;<\=>\?@\[\]\^`\{\|\}~\"\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');
./node_modules/hoek/lib/index.js:896 =>     return !!/^(?:[a-zA-Z]:[\\\/])|(?:[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/])/.test(path);        // C:\ or \\something\something
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json:8 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json:27 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json:41 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json:57 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json:74 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json:10 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json:40 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json:64 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json:80 =>         "tests": [
./node_modules/is-my-json-valid/test/fixtures/cosmic.js:62 =>     name : "test",
./node_modules/is-my-json-valid/test/json-schema-draft4/anyOf.json:14 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/anyOf.json:50 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/allOf.json:20 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/allOf.json:63 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/allOf.json:99 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/default.json:12 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/default.json:36 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/dependencies.json:7 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/dependencies.json:40 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/dependencies.json:85 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/definitions.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/definitions.json:20 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/enum.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/enum.json:21 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/enum.json:49 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:16 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:27 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:38 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:49 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:60 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:74 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:85 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json:99 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/maxLength.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:26 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:47 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:63 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:94 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/format.json:120 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/maxItems.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/items.json:7 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/items.json:33 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/maxProperties.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/maximum.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/maximum.json:29 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/minimum.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/minimum.json:29 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/minLength.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json:26 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json:47 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json:63 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/nullAndFormat.json:5 =>     "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/minItems.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/not.json:7 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/not.json:25 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/not.json:55 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/not.json:82 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/minProperties.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/patternProperties.json:10 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/patternProperties.json:46 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/patternProperties.json:87 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/oneOf.json:14 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/oneOf.json:50 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/nullAndObject.json:10 =>     "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/properties.json:10 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/properties.json:49 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/pattern.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/ref.json:10 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/ref.json:41 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/ref.json:62 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/ref.json:87 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/ref.json:115 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json:21 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json:39 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json:61 =>         "tests": [
./node_modules/jsdiff-cli/node_modules/diff/package.json:91 =>     "test": "node_modules/.bin/mocha test/*.js"
./node_modules/is-my-json-valid/test/json-schema-draft4/required.json:11 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/required.json:31 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:5 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:46 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:87 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:128 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:169 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:210 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:251 =>         "tests": [
./node_modules/is-my-json-valid/test/json-schema-draft4/uniqueItems.json:5 =>         "tests": [
./node_modules/jsbn/index.js:1115 =>     // (public) test primality with certainty >= 1-.5^t
./node_modules/jsbn/index.js:1193 =>     BigInteger.prototype.testBit = bnTestBit;
./node_modules/json5/lib/json5.js:597 =>     // export for use in tests
./node_modules/json5/lib/json5.js:671 =>         return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
./node_modules/jsonld/node_modules/xmldom/package.json:126 =>     "test": "proof platform win32 && proof test */*/*.t.js || t/test"
./node_modules/jsdiff-cli/node_modules/diff/diff.js:139 =>         if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {
./node_modules/jsdiff-cli/node_modules/diff/diff.js:219 =>         if (!/\n$/.test(current.value) && (isLast || isLastOfType)) {
./node_modules/jsonld/node_modules/xmldom/readme.md:17 =>         '\t<child>test</child>\n'+
./node_modules/jsonld/node_modules/xmldom/dom-parser.js:19 => 	if(/\/x?html?$/.test(mimeType)){
./node_modules/jsonld/tests/new-embed-api/frame-0001-out.jsonld:7 =>     "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0001-out.jsonld:10 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0001-out.jsonld:15 =>         "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0001-out.jsonld:21 =>         "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:10 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:12 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:15 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:19 =>       "ex:contains": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:20 =>       "ex:bookmark": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0001-in.jsonld:23 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0002-out.jsonld:7 =>     "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0002-out.jsonld:10 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0002-out.jsonld:15 =>         "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0002-out.jsonld:21 =>         "@id": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:10 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:12 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:15 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:19 =>       "ex:contains": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:22 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0003-in.jsonld:26 =>       "ex:topic": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:10 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:12 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:15 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:19 =>       "ex:contains": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:20 =>       "ex:topic": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0002-in.jsonld:23 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0003-out.jsonld:7 =>     "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0003-out.jsonld:10 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0003-out.jsonld:15 =>         "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0003-out.jsonld:20 =>           "@id": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:7 =>     "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:11 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:16 =>         "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:22 =>             "@id": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:25 =>             "@id": "http://example.org/test/#library2",
./node_modules/jsonld/tests/new-embed-api/frame-0004-out.jsonld:34 =>     "@id": "http://example.org/test/#library2",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:10 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:13 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:16 =>       "@id": "http://example.org/test/#library2",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:21 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:25 =>       "ex:contains": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:28 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:34 =>           "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0004-in.jsonld:35 =>           "http://example.org/test/#library2"
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:11 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:15 =>         "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:20 =>           "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:26 =>               "@id": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:29 =>               "@id": "http://example.org/test/#library2",
./node_modules/jsonld/tests/new-embed-api/frame-0005-out.jsonld:37 =>     "ex:hasLibrary": "http://example.org/test/#library2"
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:13 =>       "ex:hasLibrary": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:14 =>       "ex:hasLibrary": "http://example.org/test/#library2"
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:17 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:20 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:23 =>       "@id": "http://example.org/test/#library2",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:28 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:32 =>       "ex:contains": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:35 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:41 =>           "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0005-in.jsonld:42 =>           "http://example.org/test/#library2"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:11 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:13 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:16 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:21 =>         "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:22 =>         "http://example.org/test#chapter2"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:24 =>       "ex:bookmark": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:27 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:32 =>         "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:33 =>         "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:34 =>         "http://example.org/test#subject3"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:38 =>       "@id": "http://example.org/test#chapter2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:43 =>         "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:44 =>         "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:45 =>         "http://example.org/test#subject5"
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:49 =>       "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:54 =>       "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:59 =>       "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:64 =>       "@id": "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0006-in.jsonld:69 =>       "@id": "http://example.org/test#subject5",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:8 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:11 =>         "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:17 =>             "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:23 =>                 "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:28 =>                 "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:33 =>                 "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:40 =>             "@id": "http://example.org/test#chapter2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:46 =>                 "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:51 =>                 "@id": "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:56 =>                 "@id": "http://example.org/test#subject5",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:64 =>           "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:70 =>               "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:75 =>               "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0006-out.jsonld:80 =>               "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:12 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:14 =>       "ex:contains": "http://example.org/test#book"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:17 =>       "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:22 =>         "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:23 =>         "http://example.org/test#chapter2"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:25 =>       "ex:bookmark": "http://example.org/test#chapter"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:28 =>       "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:32 =>       "dc:subject": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:34 =>         "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:35 =>         "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:36 =>         "http://example.org/test#subject3"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:40 =>       "@id": "http://example.org/test#chapter2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:45 =>         "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:46 =>         "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:47 =>         "http://example.org/test#subject5"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:51 =>       "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:54 =>       "ex:relatesTo": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:57 =>       "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:62 =>       "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:67 =>       "@id": "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0007-in.jsonld:72 =>       "@id": "http://example.org/test#subject5",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:8 =>       "@id": "http://example.org/test/#library",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:11 =>         "@id": "http://example.org/test#book",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:17 =>             "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:21 =>             "dc:subject": {"@id": "http://example.org/test/#library"},
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:24 =>                 "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:27 =>                 "ex:relatesTo": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:30 =>                 "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:35 =>                 "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:42 =>             "@id": "http://example.org/test#chapter2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:48 =>                 "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:51 =>                 "ex:relatesTo": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:54 =>                 "@id": "http://example.org/test#subject4",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:59 =>                 "@id": "http://example.org/test#subject5",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:67 =>           "@id": "http://example.org/test#chapter",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:71 =>           "dc:subject": {"@id": "http://example.org/test/#library"},
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:74 =>               "@id": "http://example.org/test#subject1",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:77 =>               "ex:relatesTo": "http://example.org/test/#library"
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:80 =>               "@id": "http://example.org/test#subject2",
./node_modules/jsonld/tests/new-embed-api/frame-0007-out.jsonld:85 =>               "@id": "http://example.org/test#subject3",
./node_modules/jsonld/tests/test.js:639 =>     var options = test.option;
./node_modules/jsonld/tests/test.js:640 =>     if(options && url === test.base) {
./node_modules/jsonld/tests/test.js:642 =>         doc.documentUrl = test.manifest.baseIri + options.redirectTo;
./node_modules/jsonld/tests/test.js:700 =>       'earl:test': {'@type': '@id'},
./node_modules/jsonld/tests/test.js:744 => EarlReport.prototype.addAssertion = function(test, pass) {
./node_modules/jsonld/tests/test.js:749 =>     'earl:test': test['@id'],
./node_modules/jsonld/tests/new-embed-api/manifest.jsonld:2 =>   "@context": "http://json-ld.org/test-suite/context.jsonld",
./node_modules/jsonld/tests/new-embed-api/manifest.jsonld:6 =>   "description": "JSON-LD framing tests use object comparison.",
./node_modules/labeled-stream-splicer/node_modules/isarray/package.json:83 =>     "test": "tap test/*.js"
./node_modules/jsonld/tests/webidl/idlharness.js:6 => [1] http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
./node_modules/jsonld/tests/webidl/idlharness.js:8 => [3] http://www.w3.org/2004/10/27-testcases
./node_modules/jsonld/tests/webidl/idlharness.js:12 =>  * This file automatically generates browser tests for WebIDL interfaces, using
./node_modules/jsonld/tests/webidl/idlharness.js:13 =>  * the testharness.js framework.  To use, first include the following:
./node_modules/jsonld/tests/webidl/idlharness.js:15 =>  *   <script src=/resources/testharness.js></script>
./node_modules/jsonld/tests/webidl/idlharness.js:16 =>  *   <script src=/resources/testharnessreport.js></script>
./node_modules/jsonld/tests/webidl/idlharness.js:44 =>  *   idl_array.add_untested_idls("interface Node { readonly attribute DOMString nodeName; };");
./node_modules/jsonld/tests/webidl/idlharness.js:47 =>  *   idl_array.test();
./node_modules/jsonld/tests/webidl/idlharness.js:49 =>  * This tests that window.Document exists and meets all the requirements of
./node_modules/jsonld/tests/webidl/idlharness.js:50 =>  * WebIDL.  It also tests that window.document (the result of evaluating the
./node_modules/jsonld/tests/webidl/idlharness.js:53 =>  * primary interface is Document.  It does not test that window.Node exists,
./node_modules/jsonld/tests/webidl/idlharness.js:54 =>  * which is what you want if the Node interface is already tested in some other
./node_modules/jsonld/tests/webidl/idlharness.js:72 =>  *   IdlArray.  All the definitions will be tested when you run test().  If
./node_modules/jsonld/tests/webidl/idlharness.js:76 =>  *   or add_untested_idls().
./node_modules/jsonld/tests/webidl/idlharness.js:78 =>  * add_untested_idls(idl_string):
./node_modules/jsonld/tests/webidl/idlharness.js:79 =>  *   Like add_idls(), but the definitions will not be tested.  If an untested
./node_modules/jsonld/tests/webidl/idlharness.js:80 =>  *   interface is added and then extended with a tested partial interface, the
./node_modules/jsonld/tests/webidl/idlharness.js:81 =>  *   members of the partial interface will still be tested.  Also, all the
./node_modules/jsonld/tests/webidl/idlharness.js:82 =>  *   members will still be tested for objects added with add_objects(), because
./node_modules/jsonld/tests/webidl/idlharness.js:83 =>  *   you probably want to test that (for instance) window.document has all the
./node_modules/jsonld/tests/webidl/idlharness.js:85 =>  *   is tested in a different test suite.
./node_modules/jsonld/tests/webidl/idlharness.js:90 =>  *   exception is tested, every string registered for it with add_objects()
./node_modules/jsonld/tests/webidl/idlharness.js:91 =>  *   will be evaluated, and tests will be run on the result to verify that it
./node_modules/jsonld/tests/webidl/idlharness.js:93 =>  *   test anything about [NoInterfaceObject] interfaces, and there are many
./node_modules/jsonld/tests/webidl/idlharness.js:94 =>  *   tests that can't be run on any interface without an object to fiddle with.
./node_modules/jsonld/tests/webidl/idlharness.js:99 =>  *   inherit from Node, this will automatically test that document implements
./node_modules/jsonld/tests/webidl/idlharness.js:104 =>  *   arguments, the test suite will try calling it with too few arguments to
./node_modules/jsonld/tests/webidl/idlharness.js:107 =>  *   preventing the test suite from running correctly.
./node_modules/jsonld/tests/webidl/idlharness.js:109 =>  * prevent_multiple_testing(name):
./node_modules/jsonld/tests/webidl/idlharness.js:110 =>  *   This is a niche method for use in case you're testing many objects that
./node_modules/jsonld/tests/webidl/idlharness.js:111 =>  *   implement the same interfaces, and don't want to retest the same
./node_modules/jsonld/tests/webidl/idlharness.js:113 =>  *   that all inherit from HTMLElement, so the HTML test suite has something
./node_modules/jsonld/tests/webidl/idlharness.js:122 =>  *   retest that each and every one of those elements implements HTMLElement,
./node_modules/jsonld/tests/webidl/idlharness.js:123 =>  *   Element, and Node, which would be thousands of basically redundant tests.
./node_modules/jsonld/tests/webidl/idlharness.js:124 =>  *   The test suite therefore calls prevent_multiple_testing("HTMLElement").
./node_modules/jsonld/tests/webidl/idlharness.js:125 =>  *   This means that once one object has been tested to implement HTMLElement
./node_modules/jsonld/tests/webidl/idlharness.js:127 =>  *   above, the harness would test that document.documentElement correctly
./node_modules/jsonld/tests/webidl/idlharness.js:129 =>  *   document.head would only be tested for HTMLHeadElement, and so on for
./node_modules/jsonld/tests/webidl/idlharness.js:132 =>  * test():
./node_modules/jsonld/tests/webidl/idlharness.js:133 =>  *   Run all tests.  This should be called after you've called all other
./node_modules/jsonld/tests/webidl/idlharness.js:141 =>  * especially IdlInterface.  The entry point for all IdlObjects is .test(),
./node_modules/jsonld/tests/webidl/idlharness.js:142 =>  * which is called by IdlArray.test().  An IdlObject is conceptually just
./node_modules/jsonld/tests/webidl/idlharness.js:143 =>  * "thing we want to run tests on", and an IdlArray is an array of IdlObjects
./node_modules/lexical-scope/test/files/labels.js:1 => test_label1: while(true) {
./node_modules/lexical-scope/test/files/labels.js:2 =>   break test_label1;
./node_modules/lexical-scope/test/files/labels.js:3 =>   continue test_label1;
./node_modules/lexical-scope/test/files/labels.js:7 => test_label2: while(true) {
./node_modules/lexical-scope/test/files/labels.js:8 =>     break test_label2;
./node_modules/lexical-scope/test/files/labels.js:9 =>     continue test_label2;
./node_modules/lodash.bind/index.js:1200 =>   var isBinary = reIsBinary.test(value);
./node_modules/lodash.bind/index.js:1201 =>   return (isBinary || reIsOctal.test(value))
./node_modules/lodash.bind/index.js:1203 =>     : (reIsBadHex.test(value) ? NAN : +value);
./node_modules/lodash/lodash.js:1161 =>     return reHasUnicode.test(string);
./node_modules/lodash/lodash.js:1172 =>     return reHasUnicodeWord.test(string);
./node_modules/lodash/lodash.min.js:62 => !!t&&(typeof n=="number"||wn.test(n))&&-1<n&&0==n%1&&n<t}function ze(n,t,r){if(!bu(r))return false;var e=typeof t;return!!("number"==e?pu(r)&&Re(t,r.length):"string"==e&&t in r)&&hu(r[t],n)}function We(n,t){if(af(n))return false;var r=typeof n;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=n&&!Au(n))||(rn.test(n)||!tn.test(n)||null!=t&&n in ni(t))}function Be(n){var t=be(n),r=On[t];return typeof r=="function"&&t in Mn.prototype&&(n===r||(t=_o(r),!!t&&n===t[0]))}function Le(n){var t=n&&n.constructor;
./node_modules/lodash/lodash.min.js:74 => n=n.replace(cn,"");var t=bn.test(n);return t||jn.test(n)?Fn(n.slice(2),t?2:8):yn.test(n)?P:+n}function Ru(n){return Tr(n,Uu(n))}function zu(n){return null==n?"":jr(n)}function Wu(n,t,r){return n=null==n?F:It(n,t),n===F?r:n}function Bu(n,t){return null!=n&&ke(n,t,Lt)}function Lu(n){return pu(n)?Gn(n):Ht(n)}function Uu(n){if(pu(n))n=Gn(n,true);else if(bu(n)){var t,r=Le(n),e=[];for(t in n)("constructor"!=t||!r&&ci.call(n,t))&&e.push(t);n=e}else{if(t=[],null!=n)for(r in ni(n))t.push(r);n=t}return n}function Cu(n,t){
./node_modules/lodash/lodash.min.js:75 => if(null==n)return{};var r=l(ye(n),function(n){return[n]});return t=je(t),ur(n,r,function(n,r){return t(n,r[0])})}function Du(n){return null==n?[]:I(n,Lu(n))}function Mu(n){return Nf(zu(n).toLowerCase())}function Tu(n){return(n=zu(n))&&n.replace(mn,rt).replace(Rn,"")}function $u(n,t,r){return n=zu(n),t=r?F:t,t===F?Ln.test(n)?n.match(Wn)||[]:n.match(_n)||[]:n.match(t)||[]}function Fu(n){return function(){return n}}function Nu(n){return n}function Pu(n){return Gt(typeof n=="function"?n:dt(n,1))}function Zu(n,t,r){
./node_modules/minifyify/node_modules/mkdirp/package.json:102 =>     "test": "tap test/*.js"
./node_modules/jsonld/tests/webidl/testharness.js:6 => [1] http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
./node_modules/jsonld/tests/webidl/testharness.js:8 => [3] http://www.w3.org/2004/10/27-testcases
./node_modules/jsonld/tests/webidl/testharness.js:14 =>  * This file provides a framework for writing testcases. It is intended to
./node_modules/jsonld/tests/webidl/testharness.js:16 =>  * for testing synchronous and asynchronous DOM features in a way that
./node_modules/jsonld/tests/webidl/testharness.js:17 =>  * promotes clear, robust, tests.
./node_modules/jsonld/tests/webidl/testharness.js:21 =>  * To use this file, import the script and the testharnessreport script into
./node_modules/jsonld/tests/webidl/testharness.js:22 =>  * the test document:
./node_modules/jsonld/tests/webidl/testharness.js:23 =>  * <script src="/resources/testharness.js"></script>
./node_modules/jsonld/tests/webidl/testharness.js:24 =>  * <script src="/resources/testharnessreport.js"></script>
./node_modules/jsonld/tests/webidl/testharness.js:26 =>  * Within each file one may define one or more tests. Each test is atomic
./node_modules/jsonld/tests/webidl/testharness.js:27 =>  * in the sense that a single test has a single result (pass/fail/timeout).
./node_modules/jsonld/tests/webidl/testharness.js:28 =>  * Within each test one may have a number of asserts. The test fails at the
./node_modules/jsonld/tests/webidl/testharness.js:29 =>  * first failing assert, and the remainder of the test is (typically) not run.
./node_modules/jsonld/tests/webidl/testharness.js:31 =>  * If the file containing the tests is a HTML file with an element of id "log"
./node_modules/jsonld/tests/webidl/testharness.js:32 =>  * this will be populated with a table containing the test results after all
./node_modules/jsonld/tests/webidl/testharness.js:33 =>  * the tests have run.
./node_modules/jsonld/tests/webidl/testharness.js:35 =>  * NOTE: By default tests must be created before the load event fires. For ways
./node_modules/jsonld/tests/webidl/testharness.js:36 =>  *       to create tests after the load event, see "Determining when all tests
./node_modules/jsonld/tests/webidl/testharness.js:41 =>  * To create a synchronous test use the test() function:
./node_modules/jsonld/tests/webidl/testharness.js:43 =>  * test(test_function, name, properties)
./node_modules/jsonld/tests/webidl/testharness.js:45 =>  * test_function is a function that contains the code to test. For example a
./node_modules/jsonld/tests/webidl/testharness.js:46 =>  * trivial passing test would be:
./node_modules/jsonld/tests/webidl/testharness.js:48 =>  * test(function() {assert_true(true)}, "assert_true with true")
./node_modules/jsonld/tests/webidl/testharness.js:50 =>  * The function passed in is run in the test() call.
./node_modules/jsonld/tests/webidl/testharness.js:52 =>  * properties is an object that overrides default test properties. The
./node_modules/jsonld/tests/webidl/testharness.js:54 =>  *    timeout - the test timeout in ms
./node_modules/jsonld/tests/webidl/testharness.js:57 =>  * test(test_function, "Sample test", {timeout:1000})
./node_modules/jsonld/tests/webidl/testharness.js:59 =>  * would run test_function with a timeout of 1s.
./node_modules/jsonld/tests/webidl/testharness.js:61 =>  * Additionally, test-specific metadata can be passed in the properties. These
./node_modules/jsonld/tests/webidl/testharness.js:62 =>  * are used when the individual test has different metadata from that stored
./node_modules/jsonld/tests/webidl/testharness.js:66 =>  *    help - The url of the part of the specification being tested
./node_modules/jsonld/tests/webidl/testharness.js:68 =>  *    assert - A human readable description of what the test is attempting
./node_modules/jsonld/tests/webidl/testharness.js:71 =>  *    author - Name and contact information for the author of the test in the
./node_modules/jsonld/tests/webidl/testharness.js:77 =>  * a test may depend on one or more events or other callbacks. The API provided
./node_modules/jsonld/tests/webidl/testharness.js:78 =>  * for testing these features is indended to be rather low-level but hopefully
./node_modules/jsonld/tests/webidl/testharness.js:81 =>  * To create a test, one starts by getting a Test object using async_test:
./node_modules/jsonld/tests/webidl/testharness.js:83 =>  * async_test(name, properties)
./node_modules/jsonld/tests/webidl/testharness.js:86 =>  * var t = async_test("Simple async test")
./node_modules/jsonld/tests/webidl/testharness.js:88 =>  * Assertions can be added to the test by calling the step method of the test
./node_modules/jsonld/tests/webidl/testharness.js:89 =>  * object with a function containing the test assertions:
./node_modules/jsonld/tests/webidl/testharness.js:97 =>  * As a convenience, async_test can also takes a function as first argument.
./node_modules/jsonld/tests/webidl/testharness.js:98 =>  * This function is called with the test object as both its `this` object and
./node_modules/jsonld/tests/webidl/testharness.js:101 =>  * async_test(function(t) {
./node_modules/jsonld/tests/webidl/testharness.js:105 =>  * }, "Simple async test");
./node_modules/jsonld/tests/webidl/testharness.js:108 =>  * tests instances.
./node_modules/jsonld/tests/webidl/testharness.js:110 =>  * The properties argument is identical to that for test().
./node_modules/jsonld/tests/webidl/testharness.js:114 =>  * which returns a function that, when called runs a test step. For example
./node_modules/jsonld/tests/webidl/testharness.js:130 =>  * a test fails
./node_modules/jsonld/tests/webidl/testharness.js:132 =>  * NOTE: All asserts must be located in a test() or a step of an async_test().
./node_modules/jsonld/tests/webidl/testharness.js:134 =>  *       and may cause a file to stop testing.
./node_modules/jsonld/tests/webidl/testharness.js:138 =>  * Sometimes tests require non-trivial setup that may fail. For this purpose
./node_modules/jsonld/tests/webidl/testharness.js:146 =>  * any tests have returned results. Properties are global properties of the test
./node_modules/jsonld/tests/webidl/testharness.js:150 =>  *           tests to complete (this is different to the per-test timeout
./node_modules/jsonld/tests/webidl/testharness.js:151 =>  *           because async tests do not start their timer until .step is called)
./node_modules/jsonld/tests/webidl/testharness.js:154 =>  *                 tests complete (see below)
./node_modules/jsonld/tests/webidl/testharness.js:158 =>  *                   document in some cases e.g. a SVG test loaded in an HTML
./node_modules/jsonld/tests/webidl/testharness.js:163 =>  *                    use when integrating with some existing test framework
./node_modules/jsonld/tests/webidl/testharness.js:167 =>  *                            needed when e.g. testing the window.onerror
./node_modules/jsonld/tests/webidl/testharness.js:170 =>  * == Determining when all tests are complete ==
./node_modules/jsonld/tests/webidl/testharness.js:172 =>  * By default the test harness will assume there are no more results to come
./node_modules/jsonld/tests/webidl/testharness.js:178 =>  * true in a call to setup(). If explicit_done is true, the test harness will
./node_modules/jsonld/tests/webidl/testharness.js:182 =>  * == Generating tests ==
./node_modules/jsonld/tests/webidl/testharness.js:187 =>  * (synchronous) tests that are internally similar but vary in the parameters
./node_modules/jsonld/tests/webidl/testharness.js:188 =>  * used. To make this easier, the generate_tests function allows a single
./node_modules/jsonld/tests/webidl/testharness.js:191 =>  * generate_tests(test_function, parameter_lists, properties)
./node_modules/jsonld/tests/webidl/testharness.js:195 =>  * generate_tests(assert_equals, [
./node_modules/jsonld/tests/webidl/testharness.js:202 =>  * test(function() {assert_equals(1+1, 2)}, "Sum one and one")
./node_modules/jsonld/tests/webidl/testharness.js:203 =>  * test(function() {assert_equals(1+0, 1)}, "Sum one and zero")
./node_modules/jsonld/tests/webidl/testharness.js:206 =>  * the test.
./node_modules/jsonld/tests/webidl/testharness.js:208 =>  * The properties argument is identical to that for test(). This may be a
./node_modules/jsonld/tests/webidl/testharness.js:209 =>  * single object (used for all generated tests) or an array.
./node_modules/minifyify/test/plugin-api.js:241 => module.exports = tests;
./node_modules/mocha/CHANGELOG.md:672 =>   * Improve error output when a test fails with a non-error
./node_modules/mocha/CHANGELOG.md:674 =>   * Allow skip from test context for #332
./node_modules/mocha/CHANGELOG.md:676 =>   * Added a reminder about the done() callback to test timeout error messages
./node_modules/mocha/CHANGELOG.md:677 =>   * fixes #1496, in Mocha.run(fn), check if fn exists before executing it, added tests too
./node_modules/mocha/CHANGELOG.md:679 =>   * test(utils|ms|*): test existing units
./node_modules/mocha/CHANGELOG.md:686 =>   * in runnable test, comparing to undefined error's message rather than a literal
./node_modules/mocha/CHANGELOG.md:687 =>   * Fix test running output truncation on async STDIO
./node_modules/mocha/CHANGELOG.md:703 =>  * Use existing test URL builder in failed replay links
./node_modules/mocha/CHANGELOG.md:706 =>  * fix tests (whoops)
./node_modules/mocha/CHANGELOG.md:708 =>  * Preserve pathname when linking to individual tests
./node_modules/mocha/CHANGELOG.md:709 =>  * Fix test
./node_modules/mocha/CHANGELOG.md:711 =>  * after hooks now being called on failed tests when using bail, fixes #1093
./node_modules/mocha/CHANGELOG.md:712 =>  * fix throwing undefined/null now makes tests fail, fixes #1395
./node_modules/mocha/CHANGELOG.md:737 =>  * fix: html reporter - preserve query params when navigating to suites/tests (#1358)
./node_modules/mocha/CHANGELOG.md:738 =>  * fix: json stream reporter add error message to failed test
./node_modules/mocha/CHANGELOG.md:762 =>  * fix: respect err.showDiff, add Base reporter test (#810)
./node_modules/mocha/CHANGELOG.md:791 =>   * fix: fail tests that return a promise if promise is rejected w/o a reason (#1224)
./node_modules/mocha/CHANGELOG.md:792 =>   * fix: showing failed tests in doc reporter (#1117)
./node_modules/mocha/CHANGELOG.md:871 =>   * add: Runnable.globals(arr) for per test global whitelist (#1046)
./node_modules/mocha/CHANGELOG.md:874 =>   * fix: duplicate test output for multi-line specs in spec reporter (#1006)
./node_modules/mocha/package.json:1390 =>     "test",
./node_modules/mocha/package.json:1415 =>     "test": "make test"
./node_modules/mocha/lib/runner.js:747 =>  * (before/after/beforeEach/afterEach) and tests of a Suite.
./node_modules/mocha/lib/runner.js:778 =>   for (var i = 0; i < suite.tests.length; i++) {
./node_modules/mocha/lib/runner.js:779 =>     delete suite.tests[i].fn;
./node_modules/mocha/lib/runner.js:866 =>     // If the suite contains `only` tests, run those and ignore any nested suites.
./node_modules/mocha/lib/runner.js:867 =>     suite.tests = suite._onlyTests;
./node_modules/mocha/lib/runner.js:870 =>     // Otherwise, do not run any of the tests in this suite.
./node_modules/mocha/lib/runner.js:871 =>     suite.tests = [];
./node_modules/mocha/lib/runner.js:873 =>       // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.
./node_modules/mocha/lib/runner.js:874 =>       // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.
./node_modules/mocha/lib/runner.js:879 =>     // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.
./node_modules/mocha/lib/runner.js:885 =>   return suite.tests.length || suite.suites.length;
./node_modules/mocha/lib/runner.js:889 =>  * Determines whether a suite has an `only` test or suite as a descendant.
./node_modules/mocha/lib/runner.js:910 =>     if (/^\d+/.test(key)) {
./node_modules/mocha/lib/runner.js:917 =>     if (global.navigator && (/^getInterface/).test(key)) {
./node_modules/mocha/lib/runner.js:923 =>     if (global.navigator && (/^\d+/).test(key)) {
./node_modules/mocha/lib/runner.js:928 =>     if (/^mocha-/.test(key)) {
./node_modules/mocha/lib/browser/events.js:18 =>  * @param {*} val The value to test.
./node_modules/mocha/lib/interfaces/exports.js:8 => var Test = require('../test');
./node_modules/mocha/lib/interfaces/exports.js:51 =>             var test = new Test(key, fn);
./node_modules/mocha/lib/interfaces/exports.js:52 =>             test.file = file;
./node_modules/mocha/lib/interfaces/exports.js:53 =>             suites[0].addTest(test);
./node_modules/mocha/lib/interfaces/bdd.js:7 => var Test = require('../test');
./node_modules/mocha/lib/interfaces/bdd.js:40 =>      * and/or tests.
./node_modules/mocha/lib/interfaces/bdd.js:76 =>      * Describe a specification or test-case
./node_modules/mocha/lib/interfaces/bdd.js:86 =>       var test = new Test(title, fn);
./node_modules/mocha/lib/interfaces/bdd.js:87 =>       test.file = file;
./node_modules/mocha/lib/interfaces/bdd.js:88 =>       suite.addTest(test);
./node_modules/mocha/lib/interfaces/bdd.js:89 =>       return test;
./node_modules/mocha/lib/interfaces/bdd.js:93 =>      * Exclusive test-case.
./node_modules/mocha/lib/interfaces/bdd.js:97 =>       return common.test.only(mocha, context.it(title, fn));
./node_modules/mocha/lib/interfaces/bdd.js:101 =>      * Pending test case.
./node_modules/mocha/lib/interfaces/qunit.js:7 => var Test = require('../test');
./node_modules/mocha/lib/interfaces/qunit.js:14 =>  *     test('#length', function() {
./node_modules/mocha/lib/interfaces/qunit.js:19 =>  *     test('#indexOf()', function() {
./node_modules/mocha/lib/interfaces/qunit.js:28 =>  *     test('#length', function() {
./node_modules/mocha/lib/interfaces/qunit.js:76 =>      * Describe a specification or test-case
./node_modules/mocha/lib/interfaces/qunit.js:81 =>     context.test = function (title, fn) {
./node_modules/mocha/lib/interfaces/qunit.js:82 =>       var test = new Test(title, fn);
./node_modules/mocha/lib/interfaces/qunit.js:83 =>       test.file = file;
./node_modules/mocha/lib/interfaces/qunit.js:84 =>       suites[0].addTest(test);
./node_modules/mocha/lib/interfaces/qunit.js:85 =>       return test;
./node_modules/mocha/lib/interfaces/qunit.js:89 =>      * Exclusive test-case.
./node_modules/mocha/lib/interfaces/qunit.js:92 =>     context.test.only = function (title, fn) {
./node_modules/mocha/lib/interfaces/qunit.js:93 =>       return common.test.only(mocha, context.test(title, fn));
./node_modules/mocha/lib/interfaces/qunit.js:96 =>     context.test.skip = common.test.skip;
./node_modules/mocha/lib/interfaces/qunit.js:97 =>     context.test.retries = common.test.retries;
./node_modules/mocha/lib/interfaces/tdd.js:7 => var Test = require('../test');
./node_modules/mocha/lib/interfaces/tdd.js:18 =>  *          test('should return -1 when not present', function() {
./node_modules/mocha/lib/interfaces/tdd.js:22 =>  *          test('should return the index when present', function() {
./node_modules/mocha/lib/interfaces/tdd.js:48 =>      * nested suites and/or tests.
./node_modules/mocha/lib/interfaces/tdd.js:70 =>      * Exclusive test-case.
./node_modules/mocha/lib/interfaces/tdd.js:81 =>      * Describe a specification or test-case with the given `title` and
./node_modules/mocha/lib/interfaces/tdd.js:84 =>     context.test = function (title, fn) {
./node_modules/mocha/lib/interfaces/tdd.js:89 =>       var test = new Test(title, fn);
./node_modules/mocha/lib/interfaces/tdd.js:90 =>       test.file = file;
./node_modules/mocha/lib/interfaces/tdd.js:91 =>       suite.addTest(test);
./node_modules/mocha/lib/interfaces/tdd.js:92 =>       return test;
./node_modules/mocha/lib/interfaces/tdd.js:96 =>      * Exclusive test-case.
./node_modules/mocha/lib/interfaces/tdd.js:99 =>     context.test.only = function (title, fn) {
./node_modules/mocha/lib/interfaces/tdd.js:100 =>       return common.test.only(mocha, context.test(title, fn));
./node_modules/mocha/lib/interfaces/tdd.js:103 =>     context.test.skip = common.test.skip;
./node_modules/mocha/lib/interfaces/tdd.js:104 =>     context.test.retries = common.test.retries;
./node_modules/mocha/lib/reporters/dot.js:18 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/mocha/lib/reporters/dot.js:41 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/dot.js:45 =>     if (test.speed === 'slow') {
./node_modules/mocha/lib/reporters/dot.js:48 =>       process.stdout.write(color(test.speed, Base.symbols.dot));
./node_modules/mocha/lib/reporters/base.js:167 =>   failures.forEach(function (test, i) {
./node_modules/mocha/lib/reporters/base.js:175 =>     var err = test.err;
./node_modules/mocha/lib/reporters/base.js:225 =>     console.log(fmt, (i + 1), test.fullTitle(), msg, stack);
./node_modules/mocha/lib/reporters/base.js:234 =>  * stats such as test duration, number
./node_modules/mocha/lib/reporters/base.js:235 =>  * of tests passed / failed etc.
./node_modules/mocha/lib/reporters/base.js:242 =>   var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };
./node_modules/mocha/lib/reporters/base.js:261 =>   runner.on('test end', function () {
./node_modules/mocha/lib/reporters/base.js:262 =>     stats.tests = stats.tests || 0;
./node_modules/mocha/lib/reporters/base.js:263 =>     stats.tests++;
./node_modules/mocha/lib/reporters/base.js:266 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/base.js:269 =>     if (test.duration > test.slow()) {
./node_modules/mocha/lib/reporters/base.js:270 =>       test.speed = 'slow';
./node_modules/mocha/lib/reporters/base.js:271 =>     } else if (test.duration > test.slow() / 2) {
./node_modules/mocha/lib/reporters/base.js:272 =>       test.speed = 'medium';
./node_modules/mocha/lib/reporters/base.js:274 =>       test.speed = 'fast';
./node_modules/mocha/lib/reporters/base.js:280 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/lib/reporters/base.js:283 =>     test.err = err;
./node_modules/mocha/lib/reporters/base.js:284 =>     failures.push(test);
./node_modules/mocha/lib/interfaces/common.js:29 =>      * Execute before running tests.
./node_modules/mocha/lib/interfaces/common.js:39 =>      * Execute after running tests.
./node_modules/mocha/lib/interfaces/common.js:49 =>      * Execute before each test case.
./node_modules/mocha/lib/interfaces/common.js:59 =>      * Execute after each test case.
./node_modules/mocha/lib/interfaces/common.js:124 =>     test: {
./node_modules/mocha/lib/interfaces/common.js:127 =>        * Exclusive test-case.
./node_modules/mocha/lib/interfaces/common.js:130 =>        * @param {Function} test
./node_modules/mocha/lib/interfaces/common.js:133 =>       only: function (mocha, test) {
./node_modules/mocha/lib/interfaces/common.js:134 =>         test.parent._onlyTests = test.parent._onlyTests.concat(test);
./node_modules/mocha/lib/interfaces/common.js:136 =>         return test;
./node_modules/mocha/lib/interfaces/common.js:140 =>        * Pending test case.
./node_modules/mocha/lib/interfaces/common.js:145 =>         context.test(title);
./node_modules/mocha/lib/reporters/doc.js:52 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/doc.js:53 =>     console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));
./node_modules/mocha/lib/reporters/doc.js:54 =>     var code = utils.escape(utils.clean(test.body));
./node_modules/mocha/lib/reporters/doc.js:58 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/lib/reporters/doc.js:59 =>     console.log('%s  <dt class="error">%s</dt>', indent(), utils.escape(test.title));
./node_modules/mocha/lib/reporters/doc.js:60 =>     var code = utils.escape(utils.clean(test.body));
./node_modules/mocha/lib/reporters/json-stream.js:17 =>  * Initialize a new `List` test reporter.
./node_modules/mocha/lib/reporters/json-stream.js:32 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/json-stream.js:33 =>     console.log(JSON.stringify(['pass', clean(test)]));
./node_modules/mocha/lib/reporters/json-stream.js:36 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/lib/reporters/json-stream.js:37 =>     test = clean(test);
./node_modules/mocha/lib/reporters/json-stream.js:38 =>     test.err = err.message;
./node_modules/mocha/lib/reporters/json-stream.js:39 =>     test.stack = err.stack || null;
./node_modules/mocha/lib/reporters/json-stream.js:40 =>     console.log(JSON.stringify(['fail', test]));
./node_modules/mocha/lib/reporters/json-stream.js:49 =>  * Return a plain-object representation of `test`
./node_modules/mocha/lib/reporters/json-stream.js:53 =>  * @param {Object} test
./node_modules/mocha/lib/reporters/json-stream.js:56 => function clean (test) {
./node_modules/mocha/lib/reporters/json-stream.js:58 =>     title: test.title,
./node_modules/mocha/lib/reporters/json-stream.js:59 =>     fullTitle: test.fullTitle(),
./node_modules/mocha/lib/reporters/json-stream.js:60 =>     duration: test.duration,
./node_modules/mocha/lib/reporters/json-stream.js:61 =>     currentRetry: test.currentRetry()
./node_modules/mocha/lib/reporters/html.js:88 =>     var name = (/pass/).test(report.className) ? '' : ' pass';
./node_modules/mocha/lib/reporters/html.js:91 =>       hideSuitesWithout('test pass');
./node_modules/mocha/lib/reporters/html.js:99 =>     var name = (/fail/).test(report.className) ? '' : ' fail';
./node_modules/mocha/lib/reporters/html.js:102 =>       hideSuitesWithout('test fail');
./node_modules/mocha/lib/reporters/html.js:136 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/html.js:137 =>     var url = self.testURL(test);
./node_modules/mocha/lib/reporters/html.js:138 =>     var markup = '<li class="test pass %e"><h2>%e<span class="duration">%ems</span> ' +
./node_modules/mocha/lib/reporters/html.js:140 =>     var el = fragment(markup, test.speed, test.title, test.duration, url);
./node_modules/mocha/lib/reporters/html.js:141 =>     self.addCodeToggle(el, test.body);
./node_modules/mocha/lib/reporters/html.js:146 =>   runner.on('fail', function (test) {
./node_modules/mocha/lib/reporters/html.js:147 =>     var el = fragment('<li class="test fail"><h2>%e <a href="%e" class="replay">‣</a></h2></li>',
./node_modules/mocha/lib/reporters/html.js:148 =>       test.title, self.testURL(test));
./node_modules/mocha/lib/reporters/html.js:150 =>     var message = test.err.toString();
./node_modules/mocha/lib/reporters/html.js:155 =>       message = test.err.message;
./node_modules/mocha/lib/reporters/html.js:158 =>     if (test.err.stack) {
./node_modules/mocha/lib/reporters/html.js:159 =>       var indexOfMessage = test.err.stack.indexOf(test.err.message);
./node_modules/mocha/lib/reporters/html.js:161 =>         stackString = test.err.stack;
./node_modules/mocha/lib/reporters/html.js:163 =>         stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);
./node_modules/mocha/lib/reporters/html.js:165 =>     } else if (test.err.sourceURL && test.err.line !== undefined) {
./node_modules/mocha/lib/reporters/html.js:167 =>       stackString = '\n(' + test.err.sourceURL + ':' + test.err.line + ')';
./node_modules/mocha/lib/reporters/html.js:172 =>     if (test.err.htmlMessage && stackString) {
./node_modules/mocha/lib/reporters/html.js:174 =>         test.err.htmlMessage, stackString));
./node_modules/mocha/lib/reporters/html.js:175 =>     } else if (test.err.htmlMessage) {
./node_modules/mocha/lib/reporters/html.js:176 =>       el.appendChild(fragment('<div class="html-error">%s</div>', test.err.htmlMessage));
./node_modules/mocha/lib/reporters/html.js:181 =>     self.addCodeToggle(el, test.body);
./node_modules/mocha/lib/reporters/html.js:186 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/html.js:187 =>     var el = fragment('<li class="test pass pending"><h2>%e</h2></li>', test.title);
./node_modules/mocha/lib/reporters/html.js:201 =>     var percent = stats.tests / runner.total * 100 | 0;
./node_modules/mocha/lib/reporters/html.js:241 =>  * Provide test URL.
./node_modules/mocha/lib/reporters/html.js:243 =>  * @param {Object} [test]
./node_modules/mocha/lib/reporters/html.js:245 => HTML.prototype.testURL = function (test) {
./node_modules/mocha/lib/reporters/html.js:246 =>   return makeUrl(test.fullTitle());
./node_modules/mocha/lib/reporters/html.js:250 =>  * Adds code toggle functionality for the provided test's list element.
./node_modules/mocha/lib/reporters/landing.js:63 =>   runner.on('test end', function (test) {
./node_modules/mocha/lib/reporters/landing.js:68 =>     if (test.state === 'failed') {
./node_modules/mocha/lib/reporters/list.js:19 =>  * Initialize a new `List` test reporter.
./node_modules/mocha/lib/reporters/list.js:34 =>   runner.on('test', function (test) {
./node_modules/mocha/lib/reporters/list.js:35 =>     process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));
./node_modules/mocha/lib/reporters/list.js:38 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/list.js:41 =>     console.log(fmt, test.fullTitle());
./node_modules/mocha/lib/reporters/list.js:44 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/list.js:47 =>       color(test.speed, '%dms');
./node_modules/mocha/lib/reporters/list.js:49 =>     console.log(fmt, test.fullTitle(), test.duration);
./node_modules/mocha/lib/reporters/list.js:52 =>   runner.on('fail', function (test) {
./node_modules/mocha/lib/reporters/list.js:54 =>     console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());
./node_modules/mocha/lib/reporters/json.js:25 =>   var tests = [];
./node_modules/mocha/lib/reporters/json.js:30 =>   runner.on('test end', function (test) {
./node_modules/mocha/lib/reporters/json.js:31 =>     tests.push(test);
./node_modules/mocha/lib/reporters/json.js:34 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/json.js:35 =>     passes.push(test);
./node_modules/mocha/lib/reporters/json.js:38 =>   runner.on('fail', function (test) {
./node_modules/mocha/lib/reporters/json.js:39 =>     failures.push(test);
./node_modules/mocha/lib/reporters/json.js:42 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/json.js:43 =>     pending.push(test);
./node_modules/mocha/lib/reporters/json.js:49 =>       tests: tests.map(clean),
./node_modules/mocha/lib/reporters/json.js:55 =>     runner.testResults = obj;
./node_modules/mocha/lib/reporters/json.js:62 =>  * Return a plain-object representation of `test`
./node_modules/mocha/lib/reporters/json.js:66 =>  * @param {Object} test
./node_modules/mocha/lib/reporters/json.js:69 => function clean (test) {
./node_modules/mocha/lib/reporters/json.js:71 =>     title: test.title,
./node_modules/mocha/lib/reporters/json.js:72 =>     fullTitle: test.fullTitle(),
./node_modules/mocha/lib/reporters/json.js:73 =>     duration: test.duration,
./node_modules/mocha/lib/reporters/json.js:74 =>     currentRetry: test.currentRetry(),
./node_modules/mocha/lib/reporters/json.js:75 =>     err: errorJSON(test.err || {})
./node_modules/mocha/lib/reporters/min.js:17 =>  * Initialize a new `Min` minimal test reporter (best used with --watch).
./node_modules/mocha/lib/reporters/tap.js:33 =>   runner.on('test end', function () {
./node_modules/mocha/lib/reporters/tap.js:37 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/tap.js:38 =>     console.log('ok %d %s # SKIP -', n, title(test));
./node_modules/mocha/lib/reporters/tap.js:41 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/tap.js:43 =>     console.log('ok %d %s', n, title(test));
./node_modules/mocha/lib/reporters/tap.js:46 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/lib/reporters/tap.js:48 =>     console.log('not ok %d %s', n, title(test));
./node_modules/mocha/lib/reporters/tap.js:55 =>     console.log('# tests ' + (passes + failures));
./node_modules/mocha/lib/reporters/tap.js:62 =>  * Return a TAP-safe title of `test`
./node_modules/mocha/lib/reporters/tap.js:65 =>  * @param {Object} test
./node_modules/mocha/lib/reporters/tap.js:68 => function title (test) {
./node_modules/mocha/lib/reporters/tap.js:69 =>   return test.fullTitle().replace(/#/g, '');
./node_modules/mocha/lib/reporters/spec.js:18 =>  * Initialize a new `Spec` test reporter.
./node_modules/mocha/lib/reporters/spec.js:50 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/spec.js:52 =>     console.log(fmt, test.title);
./node_modules/mocha/lib/reporters/spec.js:55 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/spec.js:57 =>     if (test.speed === 'fast') {
./node_modules/mocha/lib/reporters/spec.js:61 =>       console.log(fmt, test.title);
./node_modules/mocha/lib/reporters/spec.js:66 =>         color(test.speed, ' (%dms)');
./node_modules/mocha/lib/reporters/spec.js:67 =>       console.log(fmt, test.title, test.duration);
./node_modules/mocha/lib/reporters/spec.js:71 =>   runner.on('fail', function (test) {
./node_modules/mocha/lib/reporters/spec.js:72 =>     console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);
./node_modules/mocha/lib/reporters/progress.js:25 =>  * Initialize a new `Progress` bar test reporter.
./node_modules/mocha/lib/reporters/progress.js:48 =>   // tests started
./node_modules/mocha/lib/reporters/progress.js:54 =>   // tests complete
./node_modules/mocha/lib/reporters/progress.js:55 =>   runner.on('test end', function () {
./node_modules/mocha/lib/reporters/progress.js:79 =>   // tests are complete, output some stats
./node_modules/mocha/node_modules/debug/bower.json:25 =>     "test",
./node_modules/mocha/node_modules/debug/bower.json:26 =>     "tests"
./node_modules/mocha/lib/reporters/markdown.js:86 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/markdown.js:87 =>     var code = utils.clean(test.body);
./node_modules/mocha/lib/reporters/markdown.js:88 =>     buf += test.title + '.\n';
./node_modules/mocha/lib/reporters/nyan.js:17 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/mocha/lib/reporters/nyan.js:85 =>  * of passes, failures and pending tests.
./node_modules/mocha/lib/reporters/xunit.js:43 =>   var tests = [];
./node_modules/mocha/lib/reporters/xunit.js:54 =>   runner.on('pending', function (test) {
./node_modules/mocha/lib/reporters/xunit.js:55 =>     tests.push(test);
./node_modules/mocha/lib/reporters/xunit.js:58 =>   runner.on('pass', function (test) {
./node_modules/mocha/lib/reporters/xunit.js:59 =>     tests.push(test);
./node_modules/mocha/lib/reporters/xunit.js:62 =>   runner.on('fail', function (test) {
./node_modules/mocha/lib/reporters/xunit.js:63 =>     tests.push(test);
./node_modules/mocha/lib/reporters/xunit.js:67 =>     self.write(tag('testsuite', {
./node_modules/mocha/lib/reporters/xunit.js:69 =>       tests: stats.tests,
./node_modules/mocha/lib/reporters/xunit.js:72 =>       skipped: stats.tests - stats.failures - stats.passes,
./node_modules/mocha/lib/reporters/xunit.js:77 =>     tests.forEach(function (t) {
./node_modules/mocha/lib/reporters/xunit.js:78 =>       self.test(t);
./node_modules/mocha/lib/reporters/xunit.js:81 =>     self.write('</testsuite>');
./node_modules/mocha/lib/reporters/xunit.js:122 =>  * Output tag for the given `test.`
./node_modules/mocha/lib/reporters/xunit.js:124 =>  * @param {Test} test
./node_modules/mocha/lib/reporters/xunit.js:126 => XUnit.prototype.test = function (test) {
./node_modules/mocha/lib/reporters/xunit.js:128 =>     classname: test.parent.fullTitle(),
./node_modules/mocha/lib/reporters/xunit.js:129 =>     name: test.title,
./node_modules/mocha/lib/reporters/xunit.js:130 =>     time: (test.duration / 1000) || 0
./node_modules/mocha/lib/reporters/xunit.js:133 =>   if (test.state === 'failed') {
./node_modules/mocha/lib/reporters/xunit.js:134 =>     var err = test.err;
./node_modules/mocha/lib/reporters/xunit.js:135 =>     this.write(tag('testcase', attrs, false, tag('failure', {}, false, escape(err.message) + '\n' + escape(err.stack))));
./node_modules/mocha/lib/reporters/xunit.js:136 =>   } else if (test.isPending()) {
./node_modules/mocha/lib/reporters/xunit.js:137 =>     this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));
./node_modules/mocha/lib/reporters/xunit.js:139 =>     this.write(tag('testcase', attrs, true));
./node_modules/mocha/node_modules/debug/debug.js:174 =>     if (exports.skips[i].test(name)) {
./node_modules/mocha/node_modules/debug/debug.js:179 =>     if (exports.names[i].test(name)) {
./node_modules/mocha/node_modules/glob/changelog.md:33 => - Pass all tests on Windows
./node_modules/mocha/node_modules/debug/node.js:148 =>   // Note stream._type is used for test-module-load-list.js
./node_modules/mocha/node_modules/debug/node.js:180 =>       // Test: ./node test/fixtures/echo.js < /etc/passwd
./node_modules/mocha/node_modules/glob/package.json:107 =>     "test": "tap test/*.js --cov",
./node_modules/mocha/node_modules/glob/package.json:108 =>     "test-regen": "npm run profclean && TEST_REGEN=1 node test/00-setup.js"
./node_modules/mocha/node_modules/glob/common.js:157 =>         var notDir = !(/\/$/.test(e))
./node_modules/mocha/node_modules/mkdirp/package.json:102 =>     "test": "tap test/*.js"
./node_modules/mocha/node_modules/glob/glob.js:21 => //     // by pruning it out, and testing the resulting pattern
./node_modules/mocha/node_modules/ms/History.md:11 =>  * add time abbreviations, updated tests and readme for the new units
./node_modules/mocha/node_modules/ms/History.md:61 =>   * refactor tests to facilitate ms(number) [visionmedia]
./node_modules/mocha/node_modules/glob/README.md:81 => `test/simple/basic.js`.
./node_modules/mocha/node_modules/supports-color/package.json:118 =>     "test": "xo && mocha",
./node_modules/mocha/node_modules/glob/sync.js:196 =>   // now test all matched entries as stand-ins for that part
./node_modules/mocha/lib/utils.js:697 =>     if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {
./node_modules/mocha/lib/utils.js:777 =>       if (/\(?.+:\d+:\d+\)?$/.test(line)) {
./node_modules/mocha/node_modules/supports-color/index.js:57 => 	if (/^xterm-256(?:color)?/.test(process.env.TERM)) {
./node_modules/mocha/node_modules/supports-color/index.js:61 => 	if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
./node_modules/n3/lib/N3Parser.js:504 =>     if (this._base === null || absoluteIRI.test(token.value))
./node_modules/n3/lib/N3Parser.js:519 =>                     absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));
./node_modules/n3/lib/N3Parser.js:600 =>     if (!dotSegments.test(iri))
./node_modules/node-mkdirp/node_modules/camelcase/package.json:104 =>     "test": "xo && ava"
./node_modules/node-mkdirp/node_modules/camelcase/index.js:9 => 		if (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {
./node_modules/node-mkdirp/node_modules/camelcase/index.js:36 => 	if (!(/[_.\- ]+/).test(str)) {
./node_modules/node-mkdirp/node_modules/window-size/package.json:104 =>     "pretest": "semistandard",
./node_modules/node-mkdirp/node_modules/window-size/package.json:105 =>     "test": "tap --coverage test.js"
./node_modules/node-mkdirp/node_modules/cliui/package.json:62 =>         "test"
./node_modules/node-mkdirp/node_modules/cliui/package.json:118 =>     "pretest": "standard",
./node_modules/node-mkdirp/node_modules/cliui/package.json:119 =>     "test": "nyc mocha",
./node_modules/node-mkdirp/node_modules/yargs/package.json:162 =>     "pretest": "standard",
./node_modules/node-mkdirp/node_modules/yargs/package.json:163 =>     "test": "nyc --cache mocha --timeout=4000 --check-leaks"
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:8 => - [#325](https://github.com/bcoe/yargs/pull/325) Tweaks to make tests pass again on Windows (@isaacs)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:42 => - [#266](https://github.com/bcoe/yargs/pull/266) adds case for -- after -- in parser test (@geophree)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:54 => - [#253](https://github.com/bcoe/yargs/pull/253) fixes for tests on Windows (@bcoe)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:65 => - [#244](https://github.com/bcoe/yargs/pull/244) adds Windows CI testing (@bcoe)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:66 => - [#245](https://github.com/bcoe/yargs/pull/245) adds OSX CI testing (@bcoe, @nexdrew)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:144 => - [0291360](https://github.com/bcoe/yargs/commit/02913606285ce31ce81d7f12c48d8a3029776ec7) fixed tests, switched to nyc for coverage, fixed security issue, added Lin as collaborator (@bcoe)
./node_modules/mocha/mocha.js:1464 =>     exports.test = context.test || context.it;
./node_modules/mocha/mocha.js:1499 =>       var msg = stats.failures + ' of ' + runner.total + ' tests failed';
./node_modules/mocha/mocha.js:1502 =>       notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {
./node_modules/mocha/mocha.js:1658 =>  * Set the number of times to retry failed tests.
./node_modules/mocha/mocha.js:1698 =>  * Makes all tests async (accepting a callback)
./node_modules/mocha/mocha.js:1739 =>  * Run tests and invoke `fn()` when complete.
./node_modules/mocha/mocha.js:1785 => },{"./context":6,"./hook":7,"./interfaces":11,"./reporters":21,"./runnable":33,"./runner":34,"./suite":35,"./test":36,"./utils":38,"_process":67,"escape-string-regexp":47,"growl":49,"path":42}],15:[function(require,module,exports){
./node_modules/output-file-sync/node_modules/mkdirp/package.json:102 =>     "test": "tap test/*.js"
./node_modules/pako/dist/pako.js:588 =>   // Flag to properly process Z_BUF_ERROR on testing inflate call
./node_modules/node-mkdirp/node_modules/cliui/index.js:43 =>     /[\t\n]/.test(arguments[0])
./node_modules/node-mkdirp/node_modules/cliui/index.js:169 =>     if (/[.']-+[.']/.test(ts)) return ''
./node_modules/node-mkdirp/node_modules/yargs/index.js:32 =>       if (i === 0 && /\b(node|iojs)$/.test(x)) return
./node_modules/pako/lib/zlib/inflate.js:168 =>   if (state.wrap) {       /* to support ill-conceived Java test suite */
./node_modules/pako/lib/zlib/inftrees.js:73 =>    for the first code of the shortest length, and the codes are integer
./node_modules/pako/lib/utils/common.js:86 => // Enable/Disable typed arrays use, for testing
./node_modules/qs/test/stringify.js:462 =>     t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {
./node_modules/qs/test/stringify.js:474 =>     t.test('serializeDate option', function (st) {
./node_modules/qs/test/stringify.js:508 =>     t.test('RFC 1738 spaces serialization', function (st) {
./node_modules/qs/test/stringify.js:514 =>     t.test('RFC 3986 spaces serialization', function (st) {
./node_modules/qs/test/stringify.js:520 =>     t.test('Backward compatibility to RFC 3986', function (st) {
./node_modules/qs/test/stringify.js:525 =>     t.test('Edge cases and unknown formats', function (st) {
./node_modules/qs/test/parse.js:404 =>     t.test('parses dates correctly', function (st) {
./node_modules/qs/test/parse.js:410 =>     t.test('parses regular expressions correctly', function (st) {
./node_modules/qs/test/parse.js:411 =>         var re = /^test$/;
./node_modules/qs/test/parse.js:416 =>     t.test('does not allow overwriting prototype properties', function (st) {
./node_modules/qs/test/parse.js:429 =>     t.test('can allow overwriting prototype properties', function (st) {
./node_modules/qs/test/parse.js:442 =>     t.test('params starting with a closing bracket', function (st) {
./node_modules/qs/test/parse.js:447 =>     t.test('can return null objects', { skip: !Object.create }, function (st) {
./node_modules/qs/test/parse.js:462 =>     t.test('can parse with custom encoding', function (st) {
./node_modules/qs/test/parse.js:478 =>     t.test('throws error with wrong decoder', function (st) {
./node_modules/regenerator-transform/lib/emit.js:513 =>         // test expressions overwrite values like context.sent.
./node_modules/regenerator-transform/lib/emit.js:528 =>           if (c.test) {
./node_modules/regenerator-transform/lib/emit.js:529 =>             condition = t.conditionalExpression(t.binaryExpression("===", disc, c.test), caseLocs[i] = loc(), condition);
./node_modules/regenerator-transform/lib/emit.js:562 =>         self.jumpIfNot(self.explodeExpression(path.get("test")), elseLoc || after);
./node_modules/readable-stream/lib/_stream_readable.js:805 => // exposed for testing purposes only.
./node_modules/regenerator-transform/src/emit.js:634 =>       self.explodeExpression(path.get("test")),
./node_modules/pkginfo/examples/subdir/package.json:3 =>   "description": "A test fixture for pkginfo",
./node_modules/pkginfo/examples/subdir/package.json:6 =>   "keywords": ["test", "fixture"],
./node_modules/pkginfo/examples/subdir/package.json:8 =>   "scripts": { "test": "vows test/*-test.js --spec" },
./node_modules/regjsparser/node_modules/jsesc/package.json:54 =>   "description": "A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.",
./node_modules/regjsparser/node_modules/jsesc/package.json:67 =>     "test": "tests"
./node_modules/regjsparser/node_modules/jsesc/package.json:110 =>     "test": "node tests/tests.js"
./node_modules/request/CHANGELOG.md:355 => - [#1164](https://github.com/request/request/pull/1164) Disable tests/test-timeout.js on Travis (@nylen)
./node_modules/request/CHANGELOG.md:356 => - [#1153](https://github.com/request/request/pull/1153) Document how to run a single test (@nylen)
./node_modules/request/CHANGELOG.md:362 => - [#1151](https://github.com/request/request/pull/1151) Fix localAddress test on OS X (@nylen)
./node_modules/request/CHANGELOG.md:365 => - [#1143](https://github.com/request/request/pull/1143) Rewrite all tests to use tape (@nylen)
./node_modules/request/CHANGELOG.md:369 => - [#1130](https://github.com/request/request/pull/1130) documentation fix: add note about npm test for contributing (@FredKSchott)
./node_modules/request/CHANGELOG.md:375 => - [#1128](https://github.com/request/request/pull/1128) Add test for setCookie regression (@nylen)
./node_modules/request/CHANGELOG.md:376 => - [#1127](https://github.com/request/request/pull/1127) added tests around using objects as values in a query string (@bcoe)
./node_modules/request/README.md:985 =>     , uri: 'http://mikeal.iriscouch.com/testjs/' + rand
./node_modules/request/README.md:995 =>         console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)
./node_modules/regjsparser/node_modules/jsesc/README.md:3 => This is a JavaScript library for [escaping JavaScript strings](http://mathiasbynens.be/notes/javascript-escapes) while generating the shortest possible valid ASCII-only output. [Here’s an online demo.](http://mothereff.in/js-escapes)
./node_modules/regjsparser/node_modules/jsesc/README.md:73 => This function takes a value and returns an escaped version of the value where any characters that are not printable ASCII symbols are escaped using the shortest possible (but valid) [escape sequences for use in JavaScript strings](http://mathiasbynens.be/notes/javascript-escapes). The first supported value type is strings:
./node_modules/request/request.js:1170 =>     if (!/^application\/x-www-form-urlencoded\b/.test(self.getHeader('content-type'))) {
./node_modules/request/request.js:1212 =>       if (!/^application\/x-www-form-urlencoded\b/.test(self.getHeader('content-type'))) {
./node_modules/regjsparser/node_modules/jsesc/jsesc.js:199 => 				if (regexWhitelist.test(character)) {
./node_modules/regjsparser/node_modules/jsesc/jsesc.js:217 => 				!regexDigit.test(string.charAt(index + 1))
./node_modules/regjsparser/node_modules/jsesc/jsesc.js:222 => 			if (regexSingleEscape.test(character)) {
./node_modules/source-map-support/webpack-test/compiled.js:576 => 	    // to support other uncaught exception handlers (in test frameworks, for
./node_modules/source-map-support/webpack-test/compiled.js:598 => 	// cached from whatever global is present so that test runners that stub it
./node_modules/sshpk/node_modules/assert-plus/package.json:112 =>     "test": "tape tests/*.js | ./node_modules/.bin/faucet"
./node_modules/sshpk/node_modules/assert-plus/README.md:5 => NODE\_NDEBUG, and (2) some API wrappers for argument testing.  Like
./node_modules/sshpk/node_modules/assert-plus/README.md:32 =>     at test (/home/mark/work/foo/foo.js:3:9)
./node_modules/sshpk/node_modules/assert-plus/README.md:44 =>     function test(foo) {
./node_modules/sshpk/node_modules/assert-plus/README.md:52 =>     function test(foo) {
./node_modules/sshpk/node_modules/assert-plus/CHANGES.md:14 => - Add basic unit test coverage
./node_modules/sshpk/node_modules/assert-plus/assert.js:92 =>             return typeof (arg) === 'string' && UUID_REGEXP.test(arg);
./node_modules/sshpk/node_modules/assert-plus/assert.js:205 =>     /* export ourselves (for unit tests _only_) */
./node_modules/stream-http/test/browser/abort.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/abort.js:7 => test('abort before response', function (t) {
./node_modules/stream-http/test/browser/abort.js:15 => test('abort on response', function (t) {
./node_modules/stream-http/test/browser/abort.js:30 => test('abort on data', function (t) {
./node_modules/stream-http/test/browser/binary-streaming.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/binary-streaming.js:28 => test('binary streaming', function (t) {
./node_modules/stream-http/test/browser/binary-streaming.js:53 => test('large binary request without streaming', function (t) {
./node_modules/stream-http/test/browser/cookie.js:2 => var test = require('tape')
./node_modules/stream-http/test/browser/cookie.js:6 => test('cookie', function (t) {
./node_modules/stream-http/test/browser/binary.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/binary.js:16 => test('binary download', function (t) {
./node_modules/stream-http/test/browser/disable-fetch.js:2 => var test = require('tape')
./node_modules/stream-http/test/browser/disable-fetch.js:6 => test('disable fetch', function (t) {
./node_modules/stream-http/test/browser/delete.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/delete.js:9 => test('delete empty', function (t) {
./node_modules/stream-http/test/browser/error.js.disabled:2 => var test = require('tape')
./node_modules/stream-http/test/browser/error.js.disabled:6 => test('error handling', function (t) {
./node_modules/stream-http/test/browser/post-binary.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/post-binary.js:20 => test('post binary', function (t) {
./node_modules/stream-http/test/browser/headers.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/headers.js:8 => test('headers', function (t) {
./node_modules/stream-http/test/browser/headers.js:10 => 		path: '/testHeaders?Response-Header=bar&Response-Header-2=BAR2',
./node_modules/stream-http/test/browser/headers.js:19 => 			if (lowerKey.indexOf('test-') === 0)
./node_modules/stream-http/test/browser/headers.js:22 => 		var header1Pos = rawHeaders.indexOf('test-response-header')
./node_modules/stream-http/test/browser/headers.js:25 => 		var header2Pos = rawHeaders.indexOf('test-response-header-2')
./node_modules/stream-http/test/browser/headers.js:30 => 		t.equal(res.headers['test-response-header'], 'bar', 'response header 1')
./node_modules/stream-http/test/browser/headers.js:31 => 		t.equal(res.headers['test-response-header-2'], 'BAR2', 'response header 2')
./node_modules/stream-http/test/browser/headers.js:37 => 			t.equal(body['test-request-header'], 'foo', 'request header 1')
./node_modules/stream-http/test/browser/headers.js:38 => 			t.equal(body['test-request-header-2'], 'FOO2', 'request header 2')
./node_modules/stream-http/test/browser/headers.js:49 => test('content-type response header', function (t) {
./node_modules/stream-http/test/browser/headers.js:50 => 	http.get('/testHeaders', function (res) {
./node_modules/stream-http/test/browser/headers.js:64 => test('content-type response header with forced streaming', function (t) {
./node_modules/stream-http/test/browser/headers.js:66 => 		path: '/testHeaders',
./node_modules/stream-http/test/browser/post-text.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/post-text.js:9 => test('post text', function (t) {
./node_modules/stream-http/test/browser/post-text.js:30 => test('post text with data in end()', function (t) {
./node_modules/stream-http/test/browser/text-streaming.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/text-streaming.js:23 => test('text streaming', function (t) {
./node_modules/stream-http/test/browser/webworker.js:2 => var test = require('tape')
./node_modules/stream-http/test/browser/webworker.js:19 => test('binary download in WebWorker', {
./node_modules/stream-http/test/browser/webworker.js:24 => 	var testUrl = url.resolve(global.location.href, '/browserify.png')
./node_modules/stream-http/test/browser/webworker.js:31 => 	worker.postMessage(testUrl)
./node_modules/stream-http/test/browser/auth.js:2 => var test = require('tape')
./node_modules/stream-http/test/browser/auth.js:6 => test('authentication', function (t) {
./node_modules/stream-http/test/browser/timeout.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/timeout.js:17 => test('emits timeout events', function (t) {
./node_modules/stream-http/test/browser/timeout.js:28 =>         t.end() // the test will timeout if this does not happen
./node_modules/subarg/node_modules/minimist/package.json:88 =>     "coverage": "covert test/*.js",
./node_modules/subarg/node_modules/minimist/package.json:89 =>     "test": "tap test/*.js"
./node_modules/subarg/node_modules/minimist/package.json:91 =>   "testling": {
./node_modules/subarg/node_modules/minimist/package.json:92 =>     "files": "test/*.js",
./node_modules/subarg/node_modules/minimist/package.json:94 =>       "ie/6..latest",
./node_modules/subarg/node_modules/minimist/package.json:96 =>       "firefox/latest",
./node_modules/subarg/node_modules/minimist/package.json:98 =>       "chrome/latest",
./node_modules/subarg/node_modules/minimist/package.json:100 =>       "safari/latest",
./node_modules/stream-http/test/browser/text.js:3 => var test = require('tape')
./node_modules/stream-http/test/browser/text.js:24 => test('basic functionality', function (t) {
./node_modules/stream-http/test/browser/text.js:27 => 			var testUrl = url.resolve(global.location.href, '/basic.txt')
./node_modules/stream-http/test/browser/text.js:28 => 			// Redirects aren't tested, but presumably only browser bugs
./node_modules/stream-http/test/browser/text.js:30 => 			t.equals(res.url, testUrl, 'response url correct')
./node_modules/stream-http/test/node/http-browserify.js:1 => // These tests are teken from http-browserify to ensure compatibility with
./node_modules/stream-http/test/node/http-browserify.js:3 => var test = require('tape')
./node_modules/stream-http/test/node/http-browserify.js:20 => test('Test simple url string', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:21 => 	var testUrl = { path: '/api/foo' }
./node_modules/stream-http/test/node/http-browserify.js:22 => 	var request = http.get(testUrl, noop)
./node_modules/stream-http/test/node/http-browserify.js:30 => test('Test full url object', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:31 => 	var testUrl = {
./node_modules/stream-http/test/node/http-browserify.js:45 => 	var request = http.get(testUrl, noop)
./node_modules/stream-http/test/node/http-browserify.js:52 => test('Test alt protocol', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:67 => test('Test page with \'file:\' protocol', function (t) {
./node_modules/stream-http/test/node/http-browserify.js:86 => test('Test string as parameters', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:87 => 	var testUrl = '/api/foo'
./node_modules/stream-http/test/node/http-browserify.js:88 => 	var request = http.get(testUrl, noop)
./node_modules/stream-http/test/node/http-browserify.js:95 => test('Test withCredentials param', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:110 => test('Test ipv6 address', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:111 => 	var testUrl = 'http://[::1]:80/foo'
./node_modules/stream-http/test/node/http-browserify.js:112 => 	var request = http.get(testUrl, noop)
./node_modules/stream-http/test/node/http-browserify.js:119 => test('Test relative path in url', function(t) {
./node_modules/stream-http/test/node/http-browserify.js:128 => test('Cleanup', function (t) {
./node_modules/stream-http/test/server/index.js:20 => // so the streaming tests always pass
./node_modules/stream-http/test/server/index.js:26 => app.get('/testHeaders', function (req, res) {
./node_modules/stream-http/test/server/index.js:40 => 		if (key.indexOf('test-') === 0)
./node_modules/subarg/node_modules/minimist/index.js:50 =>         return (flags.allBools && /^--[^=]+$/.test(arg)) ||
./node_modules/subarg/node_modules/minimist/index.js:97 =>         if (/^--.+=/.test(arg)) {
./node_modules/subarg/node_modules/minimist/index.js:109 =>         else if (/^--no-.+/.test(arg)) {
./node_modules/subarg/node_modules/minimist/index.js:113 =>         else if (/^--.+/.test(arg)) {
./node_modules/subarg/node_modules/minimist/index.js:116 =>             if (next !== undefined && !/^-/.test(next)
./node_modules/subarg/node_modules/minimist/index.js:123 =>             else if (/^(true|false)$/.test(next)) {
./node_modules/subarg/node_modules/minimist/index.js:131 =>         else if (/^-[^-]+/.test(arg)) {
./node_modules/subarg/node_modules/minimist/index.js:143 =>                 if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {
./node_modules/subarg/node_modules/minimist/index.js:149 =>                 if (/[A-Za-z]/.test(letters[j])
./node_modules/subarg/node_modules/minimist/index.js:150 =>                 && /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
./node_modules/subarg/node_modules/minimist/index.js:168 =>                 if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])
./node_modules/subarg/node_modules/minimist/index.js:174 =>                 else if (args[i+1] && /true|false/.test(args[i+1])) {
./node_modules/subarg/node_modules/minimist/index.js:233 =>     if (/^0x[0-9a-f]+$/i.test(x)) return true;
./node_modules/subarg/node_modules/minimist/index.js:234 =>     return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
./node_modules/syntax-error/node_modules/acorn/package.json:218 =>     "test": "node test/run.js"
./node_modules/subarg/node_modules/minimist/readme.markdown:8 => [![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)
./node_modules/tough-cookie/lib/cookie.js:563 => // array is in longest-to-shortest order.  Handy for indexing.
./node_modules/tough-cookie/lib/cookie.js:711 =>   if (!COOKIE_OCTETS.test(this.value)) {
./node_modules/tough-cookie/lib/cookie.js:720 =>   if (this.path != null && !PATH_VALUE.test(this.path)) {
./node_modules/tough-cookie/lib/cookie.js:727 =>       return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this
./node_modules/tough-cookie/lib/cookie.js:805 => // S5.3 says to give the "latest representable date" for which we use Infinity
./node_modules/uglify-js/bin/uglifyjs:518 =>     for (var i in o) if (o.hasOwnProperty(i) && /-/.test(i)) {
./node_modules/uglify-js/lib/output.js:509 =>                 /comment[134]/.test(comments[0].type) &&
./node_modules/uglify-js/lib/output.js:516 =>                 if (/comment[134]/.test(c.type)) {
./node_modules/uglify-js/lib/output.js:663 =>             if (value < 0 || /^0/.test(make_num(value))) {
./node_modules/uglify-js/lib/compress.js:445 =>                 return /@ngInject/.test(comment.value);
./node_modules/uglify-js/lib/parse.js:302 =>         if (/^(?:num|string|regexp)$/i.test(type)) {
./node_modules/uglify-js/lib/parse.js:352 =>         if (RE_OCT_NUMBER.test(num) && next_token.has_directive("use strict")) {
./node_modules/uglify-js/node_modules/async/package.json:91 =>     "test": "nodeunit test/test-async.js"
./node_modules/typedarray/test/server/undef_globals.js:1 => var test = require('tape');
./node_modules/typedarray/test/server/undef_globals.js:6 => test('u8a without globals', function (t) {
./node_modules/url/node_modules/punycode/package.json:112 =>     "test": "node tests/tests.js"
./node_modules/url/node_modules/punycode/README.md:152 => ## Unit tests & code coverage
./node_modules/url/node_modules/punycode/README.md:154 => After cloning this repository, run `npm install --dev` to install the dependencies needed for Punycode.js development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.
./node_modules/url/node_modules/punycode/README.md:156 => Once that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, PhantomJS, and web browsers as well, use `grunt test`.
./node_modules/util/node_modules/inherits/package.json:82 =>     "test": "node test"
./node_modules/uglify-js/node_modules/async/README.md:89 => So far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:
./node_modules/util/node_modules/inherits/test.js:4 => function test(c) {
./node_modules/util/node_modules/inherits/test.js:15 =>   test(this)
./node_modules/util/node_modules/inherits/test.js:23 => test(c)
./node_modules/util/test/browser/inspect.js:27 => test('util.inspect - test for sparse array', function () {
./node_modules/util/test/browser/inspect.js:36 => test('util.inspect -  exceptions should print the error message, not \'{}\'', function () {
./node_modules/util/test/node/format.js:35 => assert.equal(util.format('test'), 'test');
./node_modules/util/test/node/debug.js:31 =>   test('foo,tud,bar', true);
./node_modules/util/test/node/debug.js:32 =>   test('foo,tud', true);
./node_modules/util/test/node/debug.js:33 =>   test('tud,bar', true);
./node_modules/util/test/node/debug.js:34 =>   test('tud', true);
./node_modules/util/test/node/debug.js:35 =>   test('foo,bar', false);
./node_modules/util/test/node/debug.js:36 =>   test('', false);
./node_modules/util/test/node/debug.js:39 => function test(environ, shouldWrite) {
./node_modules/url/test.js:1244 =>   test('parse(' + val + ')', function() {
./node_modules/url/test.js:1252 => // http://code.google.com/p/chironjs/source/browse/trunk/src/test/http/url.js
./node_modules/url/test.js:1283 =>   // http://gbiv.com/protocols/uri/test/rel_examples1.html
./node_modules/url/test.js:1341 =>   // http://gbiv.com/protocols/uri/test/rel_examples2.html
./node_modules/url/test.js:1363 =>   // http://gbiv.com/protocols/uri/test/rel_examples3.html
./node_modules/url/test.js:1380 =>   // http://gbiv.com/protocols/uri/test/rel_examples4.html
./node_modules/url/test.js:1400 =>   // http://gbiv.com/protocols/uri/test/rel_examples5.html
./node_modules/url/test.js:1420 =>   // from Dan Connelly's tests in http://www.w3.org/2000/10/swap/uripath.py
./node_modules/url/test.js:1434 =>    'file:/swap/test/animal.rdf',
./node_modules/url/test.js:1435 =>    'file:/swap/test/animal.rdf#Animal'],
./node_modules/util/test/node/log.js:36 => var tests = [
./node_modules/util/test/node/log.js:48 => // test util.log()
./node_modules/util/test/node/log.js:49 => tests.forEach(function(test) {
./node_modules/util/test/node/log.js:50 =>   util.log(test.input);
./node_modules/util/test/node/log.js:55 =>   assert.equal(match[1], test.output);
./node_modules/util/test/node/inspect.js:28 => // test the internal isDate implementation
./node_modules/util/test/node/inspect.js:36 => // test for sparse array
./node_modules/util/test/node/inspect.js:44 => // test for property descriptors
./node_modules/util/test/node/inspect.js:109 => function test_color_style(style, input, implicit) {
./node_modules/util/test/node/inspect.js:122 => test_color_style('special', function(){});
./node_modules/util/test/node/inspect.js:123 => test_color_style('number', 123.456);
./node_modules/util/test/node/inspect.js:124 => test_color_style('boolean', true);
./node_modules/util/test/node/inspect.js:125 => test_color_style('undefined', undefined);
./node_modules/util/test/node/inspect.js:126 => test_color_style('null', null);
./node_modules/util/test/node/inspect.js:127 => test_color_style('string', 'test string');
./node_modules/util/test/node/inspect.js:128 => test_color_style('date', new Date);
./node_modules/util/test/node/inspect.js:129 => test_color_style('regexp', /regexp/);
./node_modules/util/test/node/inspect.js:170 => function test_lines(input) {
./node_modules/util/test/node/inspect.js:180 => test_lines([1, 2, 3, 4, 5, 6, 7]);
./node_modules/util/test/node/inspect.js:181 => test_lines(function() {
./node_modules/util/test/node/inspect.js:188 => test_lines({foo: 'bar', baz: 35, b: {a: 35}});
./node_modules/util/test/node/inspect.js:189 => test_lines({
./node_modules/util/test/browser/is.js:28 => test('util.isArray', function () {
./node_modules/util/test/browser/is.js:41 => test('util.isRegExp', function () {
./node_modules/util/test/browser/is.js:51 => test('util.isDate', function () {
./node_modules/util/test/browser/is.js:61 => test('util.isError', function () {
./node_modules/util/test/browser/is.js:71 => test('util._extend', function () {
./node_modules/util/test/browser/is.js:81 => test('util.isBuffer', function () {
./node_modules/yargs/CHANGELOG.md:348 => - [bcec56b](https://github.com/bcoe/yargs/commit/bcec56b3d031e018064cbb691539ccc4f28c14ad) failing test for not-implemented auto numification (@substack)
./node_modules/yargs/CHANGELOG.md:352 => - [cd7f8c5](https://github.com/bcoe/yargs/commit/cd7f8c55f0b82b79b690d14c5f806851236998a1) passing tests for new .default() behavior (@substack)
./node_modules/yargs/CHANGELOG.md:354 => - [4e6c7ab](https://github.com/bcoe/yargs/commit/4e6c7aba6374ac9ebc6259ecf91f13af7bce40e3) test for coffee usage (@substack)
./node_modules/yargs/CHANGELOG.md:355 => - [d54ffcc](https://github.com/bcoe/yargs/commit/d54ffccf2a5a905f51ed5108f7c647f35d64ae23) new --key value style with passing tests. NOTE: changes existing behavior (@substack)
./node_modules/yargs/CHANGELOG.md:358 => - [56b2b1d](https://github.com/bcoe/yargs/commit/56b2b1de8d11f8a2b91979d8ae2d6db02d8fe64d) test coverage for the falsy check() usage (@substack)
./node_modules/yargs/CHANGELOG.md:360 => - [857bd2d](https://github.com/bcoe/yargs/commit/857bd2db933a5aaa9cfecba0ced2dc9b415f8111) tests for demandCount, back up to 100% coverage (@substack)
./node_modules/yargs/CHANGELOG.md:365 => - [2e5e196](https://github.com/bcoe/yargs/commit/2e5e1960fc19afb21fb3293752316eaa8bcd3609) usage test hacking around process and console (@substack)
./node_modules/yargs/CHANGELOG.md:370 => - [da74dea](https://github.com/bcoe/yargs/commit/da74dea799a9b59dbf022cbb8001bfdb0d52eec9) more tests for long and short captures (@substack)
./node_modules/yargs/CHANGELOG.md:371 => - [ab6387e](https://github.com/bcoe/yargs/commit/ab6387e6769ca4af82ca94c4c67c7319f0d9fcfa) silly bug in the tests with s/not/no/, all tests pass now (@substack)
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:711 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0079.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:712 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0079.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:720 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0080.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:721 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0080.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:729 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0081.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:730 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0081.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:738 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0082.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:739 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0082.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:747 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0083.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:748 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0083.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:756 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0084.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:757 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0084.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:765 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0085.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:766 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0085.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:775 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0086.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:776 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0086.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:784 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0087.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:785 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0087.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:793 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0088.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:794 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0088.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:802 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0089.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:803 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0089.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:811 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0090.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:812 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0090.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:820 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0091.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:821 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0091.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:829 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0092.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:830 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0092.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:575 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0057.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:576 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0057.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:578 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:582 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0058">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:585 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0058.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:586 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0058.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:588 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:592 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0059">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:595 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0059.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:596 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0059.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:598 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:602 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0060">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:605 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0060.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:606 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0060.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:608 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:612 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0061">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:615 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0061.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:616 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0061.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:618 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:622 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0062">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:625 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0062.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:626 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0062.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:628 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:632 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0063">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:635 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0063.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:636 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0063.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:638 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:642 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0064">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:645 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0064.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:646 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0064.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:648 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:652 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0065">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:655 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0065.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:656 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0065.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:658 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:662 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0066">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:665 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0066.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:666 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0066.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:668 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:672 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0067">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:675 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0067.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:676 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0067.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:678 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:682 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0068">
./test/tc0007/manifest.ttl:788 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:789 =>    test:informationResourceInput <test-cases/0091.html>;
./test/tc0007/manifest.ttl:790 =>    test:informationResourceResults <test-cases/0091.sparql>;
./test/tc0007/manifest.ttl:791 =>    test:purpose "Tests to ensure that non-reserved, un-prefixed CURIEs, when used in @property, generate triples.";
./test/tc0007/manifest.ttl:792 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:793 => <test-cases/0093> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:795 =>    a test:TestCase;
./test/tc0007/manifest.ttl:796 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:797 =>    test:classification test:required;
./test/tc0007/manifest.ttl:798 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:799 =>    test:informationResourceInput <test-cases/0093.html>;
./test/tc0007/manifest.ttl:800 =>    test:informationResourceResults <test-cases/0093.sparql>;
./test/tc0007/manifest.ttl:801 =>    test:purpose "Tests the explicit specification of an RDF XMLLiteral with @datatype using a non-RDF namespace, yielding a user-data-typed literal";
./test/tc0007/manifest.ttl:802 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:803 => <test-cases/0099> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:805 =>    a test:TestCase;
./test/tc0007/manifest.ttl:806 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:807 =>    test:classification test:required;
./test/tc0007/manifest.ttl:808 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:809 =>    test:informationResourceInput <test-cases/0099.html>;
./test/tc0007/manifest.ttl:810 =>    test:informationResourceResults <test-cases/0099.sparql>;
./test/tc0007/manifest.ttl:811 =>    test:purpose "Tests the preservation of white space in literals.";
./test/tc0007/manifest.ttl:812 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:813 => <test-cases/0104> dc:contributor "Fabien Gandon";
./test/tc0007/manifest.ttl:815 =>    a test:TestCase;
./test/tc0007/manifest.ttl:816 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:817 =>    test:classification test:required;
./test/tc0007/manifest.ttl:818 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:819 =>    test:informationResourceInput <test-cases/0104.html>;
./test/tc0007/manifest.ttl:820 =>    test:informationResourceResults <test-cases/0104.sparql>;
./test/tc0007/manifest.ttl:821 =>    test:purpose "Tests rdf:value with blank nodes to give a value with a unit";
./test/tc0007/manifest.ttl:822 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:823 => <test-cases/0106> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:825 =>    a test:TestCase;
./test/tc0007/manifest.ttl:826 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:827 =>    test:classification test:required;
./test/tc0007/manifest.ttl:828 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:829 =>    test:informationResourceInput <test-cases/0106.html>;
./test/tc0007/manifest.ttl:830 =>    test:informationResourceResults <test-cases/0106.sparql>;
./test/tc0007/manifest.ttl:831 =>    test:purpose "Tests the behavior of triple generation in the case where the inner @rel is defined, but is blank, which halts chaining.";
./test/tc0007/manifest.ttl:832 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:833 => <test-cases/0107> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:835 =>    a test:TestCase;
./test/tc0007/manifest.ttl:836 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:837 =>    test:classification test:required;
./test/tc0007/manifest.ttl:839 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:840 =>    test:informationResourceInput <test-cases/0107.html>;
./test/tc0007/manifest.ttl:841 =>    test:informationResourceResults <test-cases/0107.sparql>;
./test/tc0007/manifest.ttl:842 =>    test:purpose "Checks to make sure that that while we shouldn't garbage collect bnodes no triples are generated.";
./test/tc0007/manifest.ttl:843 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:844 => <test-cases/0108> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:846 =>    a test:TestCase;
./test/tc0007/manifest.ttl:847 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:848 =>    test:classification test:required;
./test/tc0007/manifest.ttl:849 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:850 =>    test:informationResourceInput <test-cases/0108.html>;
./test/tc0007/manifest.ttl:851 =>    test:informationResourceResults <test-cases/0108.sparql>;
./test/tc0007/manifest.ttl:852 =>    test:purpose """Checks to make sure that the RDFa parser emits a plain literal when the datatype is specified as "" and preserves the xml:lang value. The text, with control characters and whitespace preserved, reads "Greek
./test/tc0007/manifest.ttl:855 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:856 => <test-cases/0109> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:858 =>    a test:TestCase;
./test/tc0007/manifest.ttl:859 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:860 =>    test:classification test:required;
./test/tc0007/manifest.ttl:861 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:862 =>    test:informationResourceInput <test-cases/0109.html>;
./test/tc0007/manifest.ttl:863 =>    test:informationResourceResults <test-cases/0109.sparql>;
./test/tc0007/manifest.ttl:864 =>    test:purpose "Tests to make sure that @xml:base is ignored in XHTML+RDFa 1.0. The input test document is invalid XHTML.";
./test/tc0007/manifest.ttl:865 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:866 => <test-cases/0110> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:868 =>    a test:TestCase;
./test/tc0007/manifest.ttl:869 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:870 =>    test:classification test:required;
./test/tc0007/manifest.ttl:871 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:872 =>    test:informationResourceInput <test-cases/0110.html>;
./test/tc0007/manifest.ttl:873 =>    test:informationResourceResults <test-cases/0110.sparql>;
./test/tc0007/manifest.ttl:874 =>    test:purpose "Tests to make sure that a bNode is generated even though no nested @about exists.";
./test/tc0007/manifest.ttl:875 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:876 => <test-cases/0111> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:878 =>    a test:TestCase;
./test/tc0007/manifest.ttl:879 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:880 =>    test:classification test:required;
./test/tc0007/manifest.ttl:881 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:882 =>    test:informationResourceInput <test-cases/0111.html>;
./test/tc0007/manifest.ttl:883 =>    test:informationResourceResults <test-cases/0111.sparql>;
./test/tc0007/manifest.ttl:884 =>    test:purpose "Tests to make sure that two bNodes are generated after three levels of nesting and that the last div does not generate a triple.";
./test/tc0007/manifest.ttl:885 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:886 => <test-cases/0112> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:888 =>    a test:TestCase;
./test/tc0007/manifest.ttl:889 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:890 =>    test:classification test:required;
./test/tc0007/manifest.ttl:891 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:892 =>    test:informationResourceInput <test-cases/0112.html>;
./test/tc0007/manifest.ttl:893 =>    test:informationResourceResults <test-cases/0112.sparql>;
./test/tc0007/manifest.ttl:894 =>    test:purpose "Checks to make sure that the RDFa parser emits a plain literal when the datatype is specified as \"\".";
./test/tc0007/manifest.ttl:895 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:896 => <test-cases/0113> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:898 =>    a test:TestCase;
./test/tc0007/manifest.ttl:899 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:900 =>    test:classification test:required;
./test/tc0007/manifest.ttl:901 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:902 =>    test:informationResourceInput <test-cases/0113.html>;
./test/tc0007/manifest.ttl:903 =>    test:informationResourceResults <test-cases/0113.sparql>;
./test/tc0007/manifest.ttl:904 =>    test:purpose "Checks to make sure that an element with @property and no child nodes generates empty plain literal.";
./test/tc0007/manifest.ttl:905 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:906 => <test-cases/0114> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:908 =>    a test:TestCase;
./test/tc0007/manifest.ttl:909 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:910 =>    test:classification test:required;
./test/tc0007/manifest.ttl:911 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:912 =>    test:informationResourceInput <test-cases/0114.html>;
./test/tc0007/manifest.ttl:913 =>    test:informationResourceResults <test-cases/0114.sparql>;
./test/tc0007/manifest.ttl:914 =>    test:purpose "Checks to make sure that a relative URI is resolved correctly according to RFC3986, section 5 (even when the relative URI is invalid, in this case).";
./test/tc0007/manifest.ttl:915 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:916 => <test-cases/0115> dc:contributor "Ivan Herman",
./test/tc0007/manifest.ttl:919 =>    a test:TestCase;
./test/tc0007/manifest.ttl:920 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:921 =>    test:classification test:required;
./test/tc0007/manifest.ttl:922 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:923 =>    test:informationResourceInput <test-cases/0115.html>;
./test/tc0007/manifest.ttl:924 =>    test:informationResourceResults <test-cases/0115.sparql>;
./test/tc0007/manifest.ttl:925 =>    test:purpose "Checks to make sure that XML Entities are treated properly by the RDFa parser.";
./test/tc0007/manifest.ttl:926 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:927 => <test-cases/0117> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:929 =>    a test:TestCase;
./test/tc0007/manifest.ttl:930 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:931 =>    test:classification test:required;
./test/tc0007/manifest.ttl:932 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:933 =>    test:informationResourceInput <test-cases/0117.html>;
./test/tc0004/rdfcore/Manifest.rdf:564 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/pfps-10/Manifest.rdf#non-well-formed-literal-1">
./test/tc0004/rdfcore/Manifest.rdf:566 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:567 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/www-rdf-comments/2003AprJun/0080.html" />
./test/tc0004/rdfcore/Manifest.rdf:568 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:570 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:572 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:573 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:575 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:576 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/pfps-10/test001a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:577 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:579 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:580 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/pfps-10/test001b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:581 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:583 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:586 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:588 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-literals" />
./test/tc0004/rdfcore/Manifest.rdf:590 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:591 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0056.html" />
./test/tc0004/rdfcore/Manifest.rdf:593 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0016.html" />
./test/tc0004/rdfcore/Manifest.rdf:594 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:597 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:599 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:600 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:601 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:603 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:604 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:605 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:607 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:610 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:612 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-literals" />
./test/tc0004/rdfcore/Manifest.rdf:614 =>    <test:status>WITHDRAWN</test:status>
./test/tc0004/rdfcore/Manifest.rdf:615 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Nov/0063.html" />
./test/tc0004/rdfcore/Manifest.rdf:617 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0016.html" />
./test/tc0004/rdfcore/Manifest.rdf:618 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:621 => This test case has been WITHDRAWN in light of changes to NFC handling
./test/tc0004/rdfcore/Manifest.rdf:623 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:625 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:626 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:627 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:629 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:632 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:634 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-literals" />
./test/tc0004/rdfcore/Manifest.rdf:636 =>    <test:status>WITHDRAWN</test:status>
./test/tc0004/rdfcore/Manifest.rdf:637 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Nov/0063.html" />
./test/tc0004/rdfcore/Manifest.rdf:639 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0016.html" />
./test/tc0004/rdfcore/Manifest.rdf:640 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:643 => This test case has been WITHDRAWN in light of changes to NFC handling
./test/tc0004/rdfcore/Manifest.rdf:645 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:647 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:648 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-literals/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:649 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:651 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:653 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:655 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-uris" />
./test/tc0004/rdfcore/Manifest.rdf:657 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:658 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0474.html" />
./test/tc0004/rdfcore/Manifest.rdf:660 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0113.html" />
./test/tc0004/rdfcore/Manifest.rdf:661 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:665 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:667 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:668 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:669 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:671 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:672 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:673 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:675 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:677 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:679 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-uris" />
./test/tc0004/rdfcore/Manifest.rdf:681 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:682 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0474.html" />
./test/tc0004/rdfcore/Manifest.rdf:684 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0113.html" />
./test/tc0004/rdfcore/Manifest.rdf:685 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:688 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:690 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:691 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:692 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:694 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:695 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:696 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:698 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:702 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:704 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-uris" />
./test/tc0004/rdfcore/Manifest.rdf:706 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:707 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0474.html" />
./test/tc0004/rdfcore/Manifest.rdf:709 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0113.html" />
./test/tc0004/rdfcore/Manifest.rdf:710 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:712 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:714 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:715 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:716 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:718 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:721 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:723 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-uris" />
./test/tc0004/rdfcore/Manifest.rdf:724 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:725 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0474.html" />
./test/tc0004/rdfcore/Manifest.rdf:727 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0113.html" />
./test/tc0004/rdfcore/Manifest.rdf:729 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:733 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:735 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:737 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:738 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:739 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:741 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:742 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:743 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:745 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:748 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:750 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-uris" />
./test/tc0004/rdfcore/Manifest.rdf:751 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:752 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0474.html" />
./node_modules/acorn/dist/acorn.js:934 =>     node.test = expr;
./node_modules/acorn/dist/acorn_csp.js:934 =>     node.test = expr;
./node_modules/acorn/dist/acorn_loose.js:801 =>       node.test = this.eat(tt._while) ? this.parseParenExpression() : this.dummyIdent();
./node_modules/acorn/dist/acorn_loose.js:827 =>       node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_loose.js:856 =>           if (isCase) cur.test = this.parseExpression();else cur.test = null;
./node_modules/acorn/dist/acorn_loose.js:862 =>             cur.test = null;
./node_modules/acorn/dist/acorn_loose.js:903 =>       node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_loose.js:962 =>   node.test = node.update = null;
./node_modules/acorn/dist/acorn_loose.js:963 =>   if (this.eat(tt.semi) && this.tok.type !== tt.semi) node.test = this.parseExpression();
./node_modules/acorn/src/walk/index.js:254 =>   c(node.test, st, "Expression")
./node_modules/asn1/tst/ber/writer.test.js:357 => test('Write OID', function(t) {
./node_modules/async/README.md:1447 =>     async.apply(fs.writeFile, 'testfile1', 'test1'),
./node_modules/async/README.md:1448 =>     async.apply(fs.writeFile, 'testfile2', 'test2'),
./node_modules/async/README.md:1456 =>         fs.writeFile('testfile1', 'test1', callback);
./node_modules/async/README.md:1459 =>         fs.writeFile('testfile2', 'test2', callback);
./node_modules/babel-types/lib/definitions/core.js:559 =>   visitor: ["test", "consequent"],
./node_modules/babel-types/lib/definitions/core.js:561 =>     test: {
./node_modules/babylon/lib/index.js:731 =>   // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/browserify/test/comment/main.js:2 => // test
./node_modules/buffer/test/node/test-buffer-alloc.js:354 => // testing for smart defaults and ability to pass string values as offset
./node_modules/buffer/test/node/test-buffer-alloc.js:363 => // ASCII slice test
./node_modules/buffer/test/node/test-buffer-alloc.js:395 => // UTF-8 slice test
./node_modules/buffer/test/node/test-buffer-alloc.js:441 =>   // Bug regression test
./node_modules/buffer/test/node/test-buffer-alloc.js:442 =>   var testValue = '\u00F6\u65E5\u672C\u8A9E'; // ö日本語
./node_modules/buffer/test/node/test-buffer-alloc.js:444 =>   var size = buffer.write(testValue, 0, 'utf8');
./node_modules/buffer/test/node/test-buffer-alloc.js:447 =>   assert.equal(slice, testValue);
./node_modules/buffer/test/node/test-buffer-alloc.js:531 =>   // test that regular and URL-safe base64 both work
./node_modules/buffer/test/node/test-buffer-includes.js:290 => // test truncation of Number arguments to uint8
./node_modules/buffer/test/node/test-buffer-includes.js:292 =>   var buf = Buffer.from('this is a test');
./node_modules/buffer/test/node/test-buffer-indexof.js:347 => // Buffer.lastIndexOf, so only testing the separate lastIndexOf semantics.
./node_modules/chai/chai.js:1527 =>    * (as determined using `instanceof`), optionally with a RegExp or string inclusion test
./node_modules/chai/chai.js:1745 =>    * Asserts that the target passes a given truth test.
./node_modules/color-convert/color-convert-0.2.0.js:1548 =>             if (cx.test(text)) {
./node_modules/color-convert/color-convert-0.2.0.js:1569 =>                     .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
./node_modules/buffer/test/node/test-buffer.js:356 => // testing for smart defaults and ability to pass string values as offset
./node_modules/buffer/test/node/test-buffer.js:365 => // ASCII slice test
./node_modules/buffer/test/node/test-buffer.js:397 => // UTF-8 slice test
./node_modules/buffer/test/node/test-buffer.js:443 =>   // Bug regression test
./node_modules/buffer/test/node/test-buffer.js:444 =>   var testValue = '\u00F6\u65E5\u672C\u8A9E'; // ö日本語
./node_modules/buffer/test/node/test-buffer.js:446 =>   var size = buffer.write(testValue, 0, 'utf8');
./node_modules/buffer/test/node/test-buffer.js:449 =>   assert.equal(slice, testValue);
./node_modules/buffer/test/node/test-buffer.js:533 =>   // test that regular and URL-safe base64 both work
./node_modules/detective/node_modules/acorn/README.md:288 => **findNodeAt**`(node, start, end, test, base, state)` tries to
./node_modules/detective/node_modules/acorn/README.md:290 => satisfies the predicate `test`. `start` and `end` can be either `null`
./node_modules/detective/node_modules/acorn/README.md:291 => (as wildcard) or a number. `test` may be a string (indicating a node
./node_modules/detective/node_modules/acorn/README.md:295 => Nodes are tested from inner to outer, so if two nodes match the
./node_modules/detective/node_modules/acorn/README.md:298 => **findNodeAround**`(node, pos, test, base, state)` is a lot like
./node_modules/detective/node_modules/acorn/README.md:302 => **findNodeAfter**`(node, pos, test, base, state)` is similar to
./node_modules/detective/node_modules/acorn/README.md:304 => (testing outer nodes before inner nodes).
./node_modules/detective/node_modules/acorn/README.md:339 => The command-line test runner (`npm test`) uses the ES6 modules. The
./node_modules/detective/node_modules/acorn/README.md:340 => browser-based test page (`test/index.html`) uses the compiled modules.
./node_modules/es6-promise/dist/test/json3.js:161 =>                 // Simple parsing test.
./node_modules/es6-promise/dist/test/browserify.js:259 =>   //~~~cheap key test
./node_modules/es6-promise/dist/test/browserify.js:265 =>   //~~~possibly expensive deep test
./node_modules/es6-promise/dist/test/browserify.js:273 => // 8. The non-equivalence assertion tests for any deep inequality.
./node_modules/es6-promise/dist/test/browserify.js:282 => // 9. The strict equality assertion tests strict equality, as determined by ===.
./node_modules/es6-promise/dist/test/browserify.js:291 => // 10. The strict non-equality assertion tests for strict inequality, as
./node_modules/es6-promise/dist/test/browserify.js:306 =>     return expected.test(actual);
./node_modules/es6-promise/dist/test/mocha.js:278 =>         if (!/\n$/.test(current.value) && (isLast || isLastOfType)) {
./node_modules/esutils/lib/code.js:108 =>         return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
./node_modules/esutils/lib/code.js:112 =>         return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
./node_modules/esutils/lib/code.js:116 =>         return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
./node_modules/esutils/lib/code.js:120 =>         return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
./node_modules/hoek/test/index.js:1134 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:1147 =>         expect(copy.test).to.equal(1);
./node_modules/hoek/test/index.js:1155 =>         Object.defineProperty(obj, 'test', {
./node_modules/hoek/test/index.js:1165 =>         Object.defineProperty(ref, 'test', {
./node_modules/is-my-json-valid/test/json-schema-draft4/type.json:292 =>         "tests": [
./node_modules/jsonld/node_modules/xmldom/sax.js:278 => //			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
./node_modules/jsonld/node_modules/xmldom/sax.js:417 => 	if(/^(?:script|textarea)$/i.test(tagName)){
./node_modules/jsonld/node_modules/xmldom/sax.js:420 => 		if(/[&<]/.test(text)){
./node_modules/jsonld/node_modules/xmldom/sax.js:421 => 			if(/^script$/i.test(tagName)){
./node_modules/jsonld/node_modules/xmldom/sax.js:422 => 				//if(!/\]\]>/.test(text)){
./node_modules/jsonld/node_modules/xmldom/sax.js:481 => 		if(len>1 && /!doctype/i.test(matchs[0][0])){
./node_modules/jsonld/node_modules/xmldom/sax.js:483 => 			var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
./node_modules/jsonld/node_modules/xmldom/sax.js:521 => 		if(!tagNamePattern.test(tagName)){
./node_modules/jsonld/node_modules/xmldom/sax.js:527 => 		if(!tagNamePattern.test(qName)){
./node_modules/lexical-scope/bench/jquery.js:2 => (function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cv(a){if(!ck[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){cl||(cl=c.createElement("iframe"),cl.frameBorder=cl.width=cl.height=0),b.appendChild(cl);if(!cm||!cl.createElement)cm=(cl.contentWindow||cl.contentDocument).document,cm.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),cm.close();d=cm.createElement(a),cm.body.appendChild(d),e=f.css(d,"display"),b.removeChild(cl)}ck[a]=e}return ck[a]}function cu(a,b){var c={};f.each(cq.concat.apply([],cq.slice(0,b)),function(){c[this]=a});return c}function ct(){cr=b}function cs(){setTimeout(ct,0);return cr=f.now()}function cj(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ci(){try{return new a.XMLHttpRequest}catch(b){}}function cc(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function cb(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function ca(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bE.test(a)?d(a,e):ca(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)ca(a+"["+e+"]",b[e],c,d);else d(a,b)}function b_(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function b$(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bT,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=b$(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=b$(a,c,d,e,"*",g));return l}function bZ(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bP),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bC(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bx:by,g=0,h=e.length;if(d>0){if(c!=="border")for(;g<h;g++)c||(d-=parseFloat(f.css(a,"padding"+e[g]))||0),c==="margin"?d+=parseFloat(f.css(a,c+e[g]))||0:d-=parseFloat(f.css(a,"border"+e[g]+"Width"))||0;return d+"px"}d=bz(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0;if(c)for(;g<h;g++)d+=parseFloat(f.css(a,"padding"+e[g]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+e[g]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+e[g]))||0);return d+"px"}function bp(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.1",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.lengt
./node_modules/jsonld/tests/webidl/idlharness.js:190 =>      * IdlInterface or IdlException.  These are the things that test() will run
./node_modules/jsonld/tests/webidl/idlharness.js:191 =>      * tests on.
./node_modules/jsonld/tests/webidl/idlharness.js:199 =>      * see documentation at the start of the file.  The actual tests will be
./node_modules/jsonld/tests/webidl/idlharness.js:200 =>      * run by calling this.members[name].test_object(obj) for each obj in
./node_modules/jsonld/tests/webidl/idlharness.js:211 =>      * tests.
./node_modules/jsonld/tests/webidl/idlharness.js:236 => IdlArray.prototype.add_untested_idls = function(raw_idls)
./node_modules/jsonld/tests/webidl/idlharness.js:243 =>         parsed_idls[i].untested = true;
./node_modules/jsonld/tests/webidl/idlharness.js:248 =>                 parsed_idls[i].members[j].untested = true;
./node_modules/jsonld/tests/webidl/idlharness.js:260 =>      * Internal helper called by add_idls() and add_untested_idls().
./node_modules/jsonld/tests/webidl/idlharness.js:262 =>      * "definitions" production.  The add_untested_idls() entry point
./node_modules/jsonld/tests/webidl/idlharness.js:263 =>      * additionally sets an .untested property on each object (and its
./node_modules/jsonld/tests/webidl/idlharness.js:264 =>      * .members) so that they'll be skipped by test() -- they'll only be
./node_modules/jsonld/tests/webidl/idlharness.js:265 =>      * used for base interfaces of tested interfaces, return types, etc.
./node_modules/jsonld/tests/webidl/idlharness.js:301 =>             // Nothing to test, but we need the dictionary info around for type
./node_modules/jsonld/tests/webidl/idlharness.js:349 => IdlArray.prototype.prevent_multiple_testing = function(name)
./node_modules/jsonld/tests/webidl/idlharness.js:353 =>     this.members[name].prevent_multiple_testing = true;
./node_modules/jsonld/tests/webidl/idlharness.js:361 =>      * Helper function for test().  Returns an array of things that implement
./node_modules/jsonld/tests/webidl/idlharness.js:387 => IdlArray.prototype.test = function()
./node_modules/lodash/lodash.js:1368 =>     while (reUnicode.test(string)) {
./node_modules/lodash/lodash.min.js:85 => var t=zt(n);if(n=(n="[object Object]"==t?n.constructor:F)?Fe(n):"")switch(n){case Yi:return"[object DataView]";case Qi:return"[object Map]";case Xi:return"[object Promise]";case no:return"[object Set]";case to:return"[object WeakMap]"}return t});var bo=oi?gu:Gu,xo=Me(lo),jo=Ii||function(n,t){return Zn.setTimeout(n,t)},wo=Me(so),mo=function(n){n=lu(n,function(n){return 500===t.size&&t.clear(),n});var t=n.cache;return n}(function(n){var t=[];return en.test(n)&&t.push(""),n.replace(un,function(n,r,e,u){
./node_modules/jsonld/tests/webidl/testharness.js:216 =>  * result - happens when a test result is recieved
./node_modules/jsonld/tests/webidl/testharness.js:219 =>  * The page defining the tests may add callbacks for these events by calling
./node_modules/jsonld/tests/webidl/testharness.js:223 =>  *   add_result_callback(callback) - callback called with a test argument
./node_modules/jsonld/tests/webidl/testharness.js:224 =>  *   add_completion_callback(callback) - callback called with an array of tests
./node_modules/jsonld/tests/webidl/testharness.js:227 =>  * tests have the following properties:
./node_modules/jsonld/tests/webidl/testharness.js:229 =>  *           NOTRUN properties on the test object
./node_modules/jsonld/tests/webidl/testharness.js:240 =>  * In order to collect the results of multiple pages containing tests, the test
./node_modules/jsonld/tests/webidl/testharness.js:253 =>  * Where supported, the test harness will also send messages using
./node_modules/jsonld/tests/webidl/testharness.js:264 =>  * result - { type: "result", test: Test }
./node_modules/jsonld/tests/webidl/testharness.js:265 =>  * complete - { type: "complete", tests: [Test, ...], status: TestsStatus }
./node_modules/jsonld/tests/webidl/testharness.js:331 =>  *               tests, a constant is also supported, e.g., "TIMEOUT_ERR")
./node_modules/jsonld/tests/webidl/testharness.js:345 =>  *   with signature assert_func(actual, expected, args_1, ..., args_N). Note that tests
./node_modules/jsonld/tests/webidl/testharness.js:362 =>     // default timeout is 5 seconds, test can override if needed
./node_modules/jsonld/tests/webidl/testharness.js:366 =>       test_timeout:2000
./node_modules/jsonld/tests/webidl/testharness.js:372 =>     // where to get testharness.css from.  It's enclosed in an extra closure to
./node_modules/jsonld/tests/webidl/testharness.js:389 =>             if (src && src.slice(src.length - "testharness.js".length) === "testharness.js")
./node_modules/jsonld/tests/webidl/testharness.js:391 =>                 script_prefix = src.slice(0, src.length - "testharness.js".length);
./node_modules/jsonld/tests/webidl/testharness.js:412 =>     function test(func, name, properties)
./node_modules/jsonld/tests/webidl/testharness.js:414 =>         var test_name = name ? name : next_default_name();
./node_modules/mocha/CHANGELOG.md:881 =>   * fix: xunit reporter returning test duration a NaN (#1039)
./node_modules/mocha/CHANGELOG.md:893 =>   * fix: show pending test details in xunit reporter (#1051)
./node_modules/mocha/CHANGELOG.md:896 =>   * fix: wrapping long lines in test results (#1030, #1031)
./node_modules/mocha/CHANGELOG.md:904 =>   * add: able to override tests links in html reporters (#776)
./node_modules/mocha/CHANGELOG.md:915 =>   * add: sort test files with --sort (#813)
./node_modules/mocha/CHANGELOG.md:928 =>  * remove test.js from .gitignore
./node_modules/mocha/CHANGELOG.md:960 =>  * add test.only, test.skip to qunit interface
./node_modules/mocha/CHANGELOG.md:962 =>  * change `mocha init` tests.html to index.html
./node_modules/mocha/CHANGELOG.md:1025 =>   * add play button to html reporter to rerun a single test
./node_modules/mocha/CHANGELOG.md:1028 =>   * fix encoding of test-case ?grep. Closes #637
./node_modules/mocha/CHANGELOG.md:1102 =>   * fix error when clicking pending test in HTML reporter
./node_modules/mocha/CHANGELOG.md:1114 =>   * fix `done()` called multiple times with an error test
./node_modules/mocha/CHANGELOG.md:1125 =>   * Added `this.test.error(err)` support to after each hooks. Closes #287
./node_modules/mocha/CHANGELOG.md:1131 =>   * Remove `--growl` from test/mocha.opts. Closes #289
./node_modules/mocha/node_modules/glob/glob.js:435 =>   // now test all matched entries as stand-ins for that part
./node_modules/mocha/node_modules/glob/glob.js:634 =>   // test without the globstar, and with every child both below
./node_modules/mocha/node_modules/glob/README.md:349 => Any change to behavior (including bugfixes) must come with a test.
./node_modules/mocha/node_modules/glob/README.md:351 => Patches that fail tests or reduce performance will be rejected.
./node_modules/mocha/node_modules/glob/README.md:354 => # to run tests
./node_modules/mocha/node_modules/glob/README.md:355 => npm test
./node_modules/mocha/node_modules/glob/README.md:357 => # to re-generate test fixtures
./node_modules/mocha/node_modules/glob/README.md:358 => npm run test-regen
./node_modules/mocha/node_modules/glob/sync.js:345 =>   // test without the globstar, and with every child both below
./node_modules/mocha/node_modules/glob/sync.js:388 =>     var trail = /[\/\\]$/.test(prefix)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:185 => - [4e588e0](https://github.com/bcoe/yargs/commit/4e588e055afbeb9336533095f051496e3977f515) accidentally left testing logic in (@bcoe)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:245 => - [d6edd98](https://github.com/bcoe/yargs/commit/d6edd9848826e7389ed1393858c45d03961365fd) in-prep for further refactoring, and a 3.x release I've shuffled some things around and gotten test-coverage to 100%. (@bcoe)
./node_modules/mocha/mocha.js:2103 =>   failures.forEach(function (test, i) {
./node_modules/mocha/mocha.js:2111 =>     var err = test.err;
./node_modules/mocha/mocha.js:2161 =>     console.log(fmt, (i + 1), test.fullTitle(), msg, stack);
./node_modules/mocha/mocha.js:2170 =>  * stats such as test duration, number
./node_modules/mocha/mocha.js:2171 =>  * of tests passed / failed etc.
./node_modules/mocha/mocha.js:2178 =>   var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };
./node_modules/mocha/mocha.js:2197 =>   runner.on('test end', function () {
./node_modules/mocha/mocha.js:2198 =>     stats.tests = stats.tests || 0;
./node_modules/mocha/mocha.js:2199 =>     stats.tests++;
./node_modules/mocha/mocha.js:2202 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:2205 =>     if (test.duration > test.slow()) {
./node_modules/mocha/mocha.js:2206 =>       test.speed = 'slow';
./node_modules/mocha/mocha.js:2207 =>     } else if (test.duration > test.slow() / 2) {
./node_modules/mocha/mocha.js:2208 =>       test.speed = 'medium';
./node_modules/mocha/mocha.js:2210 =>       test.speed = 'fast';
./node_modules/mocha/mocha.js:2216 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/mocha.js:2219 =>     test.err = err;
./node_modules/mocha/mocha.js:2220 =>     failures.push(test);
./node_modules/pako/dist/pako.js:909 => // Enable/Disable typed arrays use, for testing
./node_modules/pako/dist/pako_inflate.js:959 =>   if (state.wrap) {       /* to support ill-conceived Java test suite */
./node_modules/node-mkdirp/node_modules/yargs/index.js:644 => // exported for tests
./node_modules/regenerator-transform/src/emit.js:1105 =>     let test = self.explodeExpression(path.get("test"));
./node_modules/regenerator-transform/src/emit.js:1107 =>     self.jumpIfNot(test, elseLoc);
./node_modules/request/CHANGELOG.md:467 => - [#869](https://github.com/request/request/pull/869) Pipefilter test (@tgohn)
./node_modules/request/CHANGELOG.md:521 => - [#659](https://github.com/request/request/pull/659) fix failure when running with NODE_DEBUG=request, and a test for that (@jrgm)
./node_modules/regjsparser/node_modules/jsesc/README.md:355 => This library has been tested in at least Chrome 27-29, Firefox 3-22, Safari 4-6, Opera 10-12, IE 6-10, Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, and Rhino 1.7RC4.
./node_modules/regjsparser/node_modules/jsesc/README.md:359 => ## Unit tests & code coverage
./node_modules/regjsparser/node_modules/jsesc/README.md:361 => After cloning this repository, run `npm install` to install the dependencies needed for development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.
./node_modules/regjsparser/node_modules/jsesc/README.md:363 => Once that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use `grunt test`.
./node_modules/source-map-support/webpack-test/compiled.js:801 => 	 *   === true    Use Uint8Array implementation (fastest)
./node_modules/source-map-support/browser-source-map-support.js:104 => {};Object.getOwnPropertyNames(Object.getPrototypeOf(a)).forEach(function(c){b[c]=/^(?:is|get)/.test(c)?function(){return a[c].call(a)}:a[c]});b.toString=n;return b}function b(b){if(b.isNative())return b;var c=b.getFileName()||b.getScriptNameOrSourceURL();if(c){var d=b.getLineNumber(),e=b.getColumnNumber()-1;1!==d||k()||b.isEval()||(e-=62);var f=a({source:c,line:d,column:e});b=t(b);b.getFileName=function(){return f.source};b.getLineNumber=function(){return f.line};b.getColumnNumber=function(){return f.column+
./node_modules/syntax-error/node_modules/acorn/README.md:283 => **findNodeAt**`(node, start, end, test, base, state)` tries to
./node_modules/syntax-error/node_modules/acorn/README.md:285 => satisfies the predicate `test`. `start` and `end` can be either `null`
./node_modules/syntax-error/node_modules/acorn/README.md:286 => (as wildcard) or a number. `test` may be a string (indicating a node
./node_modules/syntax-error/node_modules/acorn/README.md:290 => Nodes are tested from inner to outer, so if two nodes match the
./node_modules/syntax-error/node_modules/acorn/README.md:293 => **findNodeAround**`(node, pos, test, base, state)` is a lot like
./node_modules/syntax-error/node_modules/acorn/README.md:297 => **findNodeAfter**`(node, pos, test, base, state)` is similar to
./node_modules/syntax-error/node_modules/acorn/README.md:299 => (testing outer nodes before inner nodes).
./node_modules/syntax-error/node_modules/acorn/README.md:334 => The command-line test runner (`npm test`) uses the ES6 modules. The
./node_modules/syntax-error/node_modules/acorn/README.md:335 => browser-based test page (`test/index.html`) uses the compiled modules.
./node_modules/url/node_modules/punycode/punycode.js:455 => 			return regexPunycode.test(string)
./node_modules/url/node_modules/punycode/punycode.js:474 => 			return regexNonASCII.test(string)
./node_modules/uglify-js/node_modules/async/README.md:321 => Returns a new array of all the values which pass an async truth test.
./node_modules/uglify-js/node_modules/async/README.md:324 => way node libraries work with truth tests like fs.exists. This operation is
./node_modules/uglify-js/node_modules/async/README.md:331 => * iterator(item, callback) - A truth test to apply to each item in the array.
./node_modules/uglify-js/node_modules/async/README.md:361 => The opposite of filter. Removes values that pass an async truth test.
./node_modules/uglify-js/node_modules/async/README.md:428 => Returns the first value in a list that passes an async truth test. The
./node_modules/uglify-js/node_modules/async/README.md:431 => the first item in the original array (in terms of order) that passes the test.
./node_modules/uglify-js/node_modules/async/README.md:438 => * iterator(item, callback) - A truth test to apply to each item in the array.
./node_modules/uglify-js/node_modules/async/README.md:443 =>   the first item in the array that passes the truth test (iterator) or the
./node_modules/uglify-js/node_modules/async/README.md:461 => terms of array order) that passes the truth test.
./node_modules/uglify-js/node_modules/async/README.md:502 => Returns true if at least one element in the array satisfies an async test.
./node_modules/uglify-js/node_modules/async/README.md:505 => way node libraries work with truth tests like fs.exists. Once any iterator
./node_modules/url/test.js:1450 =>    'file:/devel/WWW/2000/10/swap/test/reluri-1.n3',
./node_modules/url/test.js:1453 =>    'file:/home/connolly/w3ccvs/WWW/2000/10/swap/test/reluri-1.n3',
./node_modules/url/test.js:1461 =>   // Graham Klyne's tests
./node_modules/url/test.js:1538 =>   test('resolve(' + [relativeTest[1], relativeTest[0]] + ')', function() {
./node_modules/url/test.js:1555 => test('resolveObject(' + [relativeTest[0], relativeTest[1]] + ')', function() {
./node_modules/url/test.js:1571 => // the test: ['.//g', 'f:/a', 'f://g'] is a fundamental problem
./node_modules/url/test.js:1578 => // to be a lot of work for an edge case.  Right now I remove the test
./node_modules/url/test.js:1586 =>   test('resolveObject(' + [relativeTest[1], relativeTest[0]] + ')', function() {
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:838 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0093.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:839 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0093.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:847 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0094.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:848 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0094.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:857 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0095.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:858 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0095.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:867 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0096.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:868 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0096.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:877 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0097.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:878 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0097.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:886 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0098.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:887 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0098.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:895 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0099.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:896 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0099.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:904 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0100.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:905 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0100.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:913 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0101.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:914 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0101.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:922 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0102.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:923 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0102.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:932 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0103.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:933 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0103.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:941 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0104.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:942 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0104.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:950 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0105.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:951 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0105.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:685 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0068.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:686 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0068.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:688 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:692 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0069">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:695 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0069.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:696 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0069.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:698 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:702 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0070">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:705 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0070.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:706 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0070.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:708 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:712 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0071">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:715 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0071.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:716 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0071.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:718 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:722 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0072">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:725 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0072.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:726 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0072.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:728 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:732 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0073">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:735 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0073.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:736 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0073.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:738 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:742 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0074">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:745 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0074.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:746 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0074.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:748 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:752 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0075">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:755 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0075.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:756 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0075.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:758 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:762 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0076">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:765 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0076.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:766 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0076.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:768 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:772 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0077">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:775 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0077.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:776 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0077.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:778 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:782 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0078">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:785 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0078.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:786 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0078.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:788 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/manifest.ttl:934 =>    test:informationResourceResults <test-cases/0117.sparql>;
./test/tc0007/manifest.ttl:935 =>    test:purpose "Checks to make sure that fragment identifiers are stripped from [base] when used to generate triples.";
./test/tc0007/manifest.ttl:936 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:937 => <test-cases/0118> dc:contributor "Ben Adida";
./test/tc0007/manifest.ttl:939 =>    a test:TestCase;
./test/tc0007/manifest.ttl:940 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:941 =>    test:classification test:required;
./test/tc0007/manifest.ttl:942 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:943 =>    test:informationResourceInput <test-cases/0118.html>;
./test/tc0007/manifest.ttl:944 =>    test:informationResourceResults <test-cases/0118.sparql>;
./test/tc0007/manifest.ttl:945 =>    test:purpose """Checks to make sure that the empty
./test/tc0007/manifest.ttl:947 =>   generating triples. This test sets the subject in a chain using @href
./test/tc0007/manifest.ttl:951 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:952 => <test-cases/0119> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:954 =>    a test:TestCase;
./test/tc0007/manifest.ttl:955 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:956 =>    test:classification test:required;
./test/tc0007/manifest.ttl:957 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:958 =>    test:informationResourceInput <test-cases/0119.html>;
./test/tc0007/manifest.ttl:959 =>    test:informationResourceResults <test-cases/0119.sparql>;
./test/tc0007/manifest.ttl:960 =>    test:purpose """Checks to make sure that an RDFa processor expands CURIEs having only a prefix and a
./test/tc0007/manifest.ttl:963 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:964 => <test-cases/0120> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:966 =>    a test:TestCase;
./test/tc0007/manifest.ttl:967 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:968 =>    test:classification test:required;
./test/tc0007/manifest.ttl:969 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:970 =>    test:informationResourceInput <test-cases/0120.html>;
./test/tc0007/manifest.ttl:971 =>    test:informationResourceResults <test-cases/0120.sparql>;
./test/tc0007/manifest.ttl:972 =>    test:purpose """Checks to make sure that an RDFa processor expands CURIEs having only a colon to the
./test/tc0007/manifest.ttl:973 =>   default prefix "http://www.w3.org/1999/test-cases/vocab#".
./test/tc0007/manifest.ttl:975 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:976 => <test-cases/0121> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:978 =>    a test:TestCase;
./test/tc0007/manifest.ttl:979 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:980 =>    test:classification test:required;
./test/tc0007/manifest.ttl:981 =>    rdfatest:hostLanguage "xml1", "xhtml1", "xhtml5";
./test/tc0007/manifest.ttl:982 =>    test:informationResourceInput <test-cases/0121.html>;
./test/tc0007/manifest.ttl:983 =>    test:informationResourceResults <test-cases/0121.sparql>;
./test/tc0007/manifest.ttl:984 =>    test:purpose """Checks to make sure RDFa processors resolve the empty CURIE correctly. Note that this is not valid HTML due to recursive <p> elements.""";
./test/tc0007/manifest.ttl:985 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:986 => <test-cases/0122> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:988 =>    a test:TestCase;
./test/tc0007/manifest.ttl:989 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:990 =>    test:classification test:required;
./test/tc0007/manifest.ttl:992 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:993 =>    test:informationResourceInput <test-cases/0122.html>;
./test/tc0007/manifest.ttl:994 =>    test:informationResourceResults <test-cases/0122.sparql>;
./test/tc0007/manifest.ttl:995 =>    test:purpose """Checks to make sure that resource="[]" does not set the object since RDFa does not allow non-prefixed CURIEs.
./test/tc0007/manifest.ttl:997 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:998 => <test-cases/0126> dc:contributor "Shane P. McCarron";
./test/tc0007/manifest.ttl:1000 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1001 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1002 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1003 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1004 =>    test:informationResourceInput <test-cases/0126.html>;
./test/tc0007/manifest.ttl:1005 =>    test:informationResourceResults <test-cases/0126.sparql>;
./test/tc0007/manifest.ttl:1006 =>    test:purpose "Checks to ensure that multiple (white space separated) values in @typeof trigger multiple rdf:type triples.";
./test/tc0007/manifest.ttl:1007 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1008 => <test-cases/0131> dc:contributor "Philip Taylor";
./test/tc0007/manifest.ttl:1010 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1011 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1012 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1014 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1015 =>    test:informationResourceInput <test-cases/0131.html>;
./test/tc0007/manifest.ttl:1016 =>    test:informationResourceResults <test-cases/0131.sparql>;
./test/tc0007/manifest.ttl:1017 =>    test:purpose "Ensures that multiple whitespace alternatives in attributes are allowed.";
./test/tc0007/manifest.ttl:1018 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1019 => <test-cases/0134> dc:contributor "Philip Taylor";
./test/tc0007/manifest.ttl:1021 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1022 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1023 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1025 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1026 =>    test:informationResourceInput <test-cases/0134.html>;
./test/tc0007/manifest.ttl:1027 =>    test:informationResourceResults <test-cases/0134.sparql>;
./test/tc0007/manifest.ttl:1028 =>    test:purpose "Ensures that mixed-case reserved words generate triples.";
./test/tc0007/manifest.ttl:1029 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1030 => <test-cases/0140> dc:contributor "Philip Taylor";
./test/tc0007/manifest.ttl:1032 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1033 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1034 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1036 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1037 =>    test:informationResourceInput <test-cases/0140.html>;
./test/tc0007/manifest.ttl:1038 =>    test:informationResourceResults <test-cases/0140.sparql>;
./test/tc0007/manifest.ttl:1039 =>    test:purpose "Ensures that a prefix cannot start with an underscore character when specified using xmlns.";
./test/tc0007/manifest.ttl:1040 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1041 => <test-cases/0147> dc:contributor "Philip Taylor";
./test/tc0007/manifest.ttl:1043 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1044 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1045 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1047 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1048 =>    test:informationResourceInput <test-cases/0147.html>;
./test/tc0007/manifest.ttl:1049 =>    test:informationResourceResults <test-cases/0147.sparql>;
./test/tc0007/manifest.ttl:1050 =>    test:purpose "Ensures that RDFa processors allow the prefix 'xmlzzz', even though it is a reserved prefix in XML.";
./test/tc0007/manifest.ttl:1051 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1052 => <test-cases/0172> dc:contributor "KANZAKI, Masahide";
./test/tc0007/manifest.ttl:1054 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1055 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1056 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1058 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1059 =>    test:informationResourceInput <test-cases/0172.html>;
./test/tc0007/manifest.ttl:1060 =>    test:informationResourceResults <test-cases/0172.sparql>;
./test/tc0007/manifest.ttl:1061 =>    test:purpose "Checks to ensure that when @datatype=\"\" is used on an element that contains child nodes, that the literal that is generated is a plain literal.";
./test/tc0007/manifest.ttl:1062 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1063 => <test-cases/0173> dc:contributor "KANZAKI, Masahide";
./test/tc0007/manifest.ttl:1065 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1066 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1067 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1069 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1070 =>    test:informationResourceInput <test-cases/0173.html>;
./test/tc0007/manifest.ttl:1071 =>    test:informationResourceResults <test-cases/0173.sparql>;
./test/tc0007/manifest.ttl:1072 =>    test:purpose "Checks to ensure that when @xml:lang=\"\" is used that any parent element language setting is cleared and a language-less literal is generated.";
./test/tc0007/manifest.ttl:1073 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1074 => <test-cases/0174> dc:contributor "I. Stewartson";
./test/tc0007/manifest.ttl:1076 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1077 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1078 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1080 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1081 =>    test:informationResourceInput <test-cases/0174.html>;
./test/tc0007/manifest.ttl:1082 =>    test:informationResourceResults <test-cases/0174.sparql>;
./test/tc0004/rdfcore/Manifest.rdf:754 =>    <test:discussion rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Apr/0113.html" />
./test/tc0004/rdfcore/Manifest.rdf:756 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:760 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:762 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:764 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:765 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:766 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:768 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:769 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-charmod-uris/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:770 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:772 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:775 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:777 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:778 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:779 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:780 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:781 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:783 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:785 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:786 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:787 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:789 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:792 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:794 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:795 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:796 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:797 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:798 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:800 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:802 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:803 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:804 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:806 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:809 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:811 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:812 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:813 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:814 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:815 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:817 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:819 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:820 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:821 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:823 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:824 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:825 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:827 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:830 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:832 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:833 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:834 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:835 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:836 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:838 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:840 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:841 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:842 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:844 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:845 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:846 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:848 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:851 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:853 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:854 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:855 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:856 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:857 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:859 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:861 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:862 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:863 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:865 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:866 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:867 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:869 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:872 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:874 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:875 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:876 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:877 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:878 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:880 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:882 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:883 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:884 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:886 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:887 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:888 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:890 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:893 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:895 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:896 =>    <test:status>OBSOLETED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:897 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:898 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:899 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:901 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:903 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:904 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:905 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:907 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:908 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:909 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:911 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:914 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test006">
./test/tc0004/rdfcore/Manifest.rdf:916 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:917 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:918 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:919 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:920 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:922 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:924 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:925 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:926 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:928 =>    <test:outputDocument>
./node_modules/acorn/dist/acorn_loose.js:1234 =>       if (/unterminated/i.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1236 =>         if (/string/.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1238 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1244 =>         } else if (/template/.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1251 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1253 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/asn1.js/lib/asn1/encoders/der.js:87 =>   } else if (/str$/.test(tag)) {
./node_modules/async/README.md:1578 => form. Handy for testing.
./node_modules/asn1.js/lib/asn1/decoders/der.js:161 =>   } else if (/str$/.test(tag)) {
./node_modules/babel-register/node_modules/mkdirp/test/clobber.js:4 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/clobber.js:20 => test('clobber-pre', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/clobber.js:31 => test('clobber', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/chmod.js:4 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/chmod.js:18 => test('chmod-pre', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/chmod.js:31 => test('chmod', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/opts_fs.js:3 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/opts_fs.js:8 => test('opts.fs', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/mkdirp.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/mkdirp.js:9 => test('woo', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/perm.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/perm.js:9 => test('async perm', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/perm.js:26 => test('async root perm', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/perm_sync.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/perm_sync.js:9 => test('sync perm', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/perm_sync.js:24 => test('sync root perm', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/rel.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/rel.js:9 => test('rel', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/opts_fs_sync.js:3 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/opts_fs_sync.js:8 => test('opts.fs sync', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/race.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/race.js:9 => test('race', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/return.js:4 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/return.js:6 => test('return value', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/return.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/babel-register/node_modules/mkdirp/test/return_sync.js:4 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/return_sync.js:6 => test('return value', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/return_sync.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/babel-register/node_modules/mkdirp/test/return_sync.js:17 =>     // Note that this will throw on failure, which will fail the test.
./node_modules/babel-register/node_modules/mkdirp/test/root.js:4 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/root.js:7 => test('root', function (t) {
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:45 =>   var testType = getConditionalAnnotation(path, name);
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:46 =>   if (testType) {
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:48 =>       var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:51 =>         return testConstantViolations.indexOf(path) < 0;
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:54 =>       types.push(testType.typeAnnotation);
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:145 =>       if (path.key === "test") {
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:160 =>   var test = ifStatement.get("test");
./node_modules/babel-traverse/lib/path/inference/inferer-reference.js:161 =>   var paths = [test];
./node_modules/babel-traverse/lib/path/lib/removal-hooks.js:5 =>   var removeParent = self.key === "test" && (parent.isWhile() || parent.isSwitchCase()) || self.key === "declaration" && parent.isExportDeclaration() || self.key === "body" && parent.isLabeledStatement() || self.listKey === "declarations" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === "expression" && parent.isExpressionStatement();
./node_modules/babel-types/lib/definitions/core.js:678 =>   visitor: ["test", "body"],
./node_modules/babel-types/lib/definitions/core.js:681 =>     test: {
./node_modules/babylon/lib/index.js:872 =>           if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/babylon/lib/index.js:984 =>       if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {
./node_modules/babel-register/node_modules/mkdirp/test/umask.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/umask.js:9 => test('implicit mode from umask', function (t) {
./node_modules/babel-register/node_modules/mkdirp/test/sync.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/sync.js:9 => test('sync', function (t) {
./node_modules/browser-resolve/node_modules/resolve/lib/async.js:34 =>     if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[\\\/])/.test(x)) {
./node_modules/browser-resolve/node_modules/resolve/lib/async.js:37 =>         if (/\/$/.test(x) && res === y) {
./node_modules/browser-resolve/node_modules/resolve/lib/async.js:100 =>         if (process.platform === 'win32' && /^\w:[\\\/]*$/.test(dir)) {
./node_modules/browser-resolve/node_modules/resolve/lib/async.js:103 =>         if (/[\\\/]node_modules[\\\/]*$/.test(dir)) return cb(null);
./node_modules/babel-register/node_modules/mkdirp/test/umask_sync.js:5 => var test = require('tap').test;
./node_modules/babel-register/node_modules/mkdirp/test/umask_sync.js:9 => test('umask sync modes', function (t) {
./node_modules/browser-resolve/node_modules/resolve/lib/node-modules-paths.js:14 =>     if (/^([A-Za-z]:)/.test(start)) {
./node_modules/browser-resolve/node_modules/resolve/lib/node-modules-paths.js:16 =>     } else if (/^\\\\/.test(start)) {
./node_modules/browser-resolve/node_modules/resolve/test/core.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/core.js:4 => test('core modules', function (t) {
./node_modules/browser-resolve/node_modules/resolve/lib/sync.js:21 =>     if (/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[\\\/])/.test(x)) {
./node_modules/browser-resolve/node_modules/resolve/test/faulty_basedir.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/faulty_basedir.js:5 => // not sure what's up with this test anymore
./node_modules/browser-resolve/node_modules/resolve/test/faulty_basedir.js:8 => test('faulty basedir must produce error in windows', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/faulty_basedir.js:13 =>     resolve('tape/lib/test.js', { basedir : resolverDir }, function (err, res, pkg) {
./node_modules/browser-resolve/node_modules/resolve/test/dotdot.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/dotdot.js:5 => test('dotdot', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/dotdot.js:20 => test('dotdot sync', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/filter.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/filter.js:4 => test('filter', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/filter_sync.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/filter_sync.js:4 => test('filter', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock_sync.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/mock_sync.js:4 => test('mock', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock_sync.js:42 => test('mock package', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/mock.js:4 => test('mock', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock.js:44 => test('mock from package', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock.js:85 => test('mock package', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/mock.js:114 => test('mock package from package', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/module_dir.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/module_dir.js:5 => test('moduleDirectory strings', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/module_dir.js:27 => test('moduleDirectory array', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/nonstring.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/nonstring.js:4 => test('nonstring', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/node_path.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/node_path.js:5 => test('$NODE_PATH', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/pathfilter.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/pathfilter.js:4 => test('#62: deep module references and the pathFilter', function(t){
./node_modules/browser-resolve/node_modules/resolve/test/subdirs.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/subdirs.js:5 => test('subdirs', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:1 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:4 => test('foo', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:24 => test('bar', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:34 => test('baz', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:44 => test('biz', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:63 => test('normalize', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:72 => test('cup', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:99 => test('mug', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:125 => test('other path', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:159 => test('incorrect main', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver_sync.js:171 => test('#25: node modules with the same name as node stdlib modules', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:5 => test('async foo', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:38 => test('bar', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:61 => test('baz', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:78 => test('biz', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:155 => test('quux', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:166 => test('normalize', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:177 => test('cup', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:198 => test('mug', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:219 => test('other path', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:245 => test('incorrect main', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:257 => test('without basedir', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/precedence.js:2 => var test = require('tape');
./node_modules/browser-resolve/node_modules/resolve/test/precedence.js:5 => test('precedence', function (t) {
./node_modules/browser-resolve/node_modules/resolve/test/precedence.js:16 => test('./ should not load ${dir}.js', function (t) {
./node_modules/buffer/test/node/test-buffer-alloc.js:697 => // Regression test for https://github.com/nodejs/node/issues/3496.
./node_modules/buffer/test/node/test-buffer-alloc.js:728 => // test hex toString
./node_modules/buffer/test/node/test-buffer-indexof.js:467 => // The above tests test the LINEAR and SINGLE-CHAR strategies.
./node_modules/buffer/test/node/test-buffer-indexof.js:468 => // Now, we test the BOYER-MOORE-HORSPOOL strategy.
./node_modules/buffer/test/node/test-buffer-indexof.js:496 => // Expensive reverse searches. Stress test lastIndexOf:
./node_modules/buffer/test/node/test-buffer-indexof.js:508 => // test truncation of Number arguments to uint8
./node_modules/buffer/test/node/test-buffer-indexof.js:510 =>   var buf = Buffer.from('this is a test');
./node_modules/chai/lib/chai/interface/assert.js:24 =>    * Write your own test expressions.
./node_modules/chai/lib/chai/interface/assert.js:29 =>    * @param {Mixed} expression to test for truthiness
./node_modules/chai/lib/chai/interface/assert.js:37 =>     var test = new Assertion(null, null, chai.assert);
./node_modules/chai/lib/chai/interface/assert.js:38 =>     test.assert(
./node_modules/chai/lib/chai/interface/assert.js:78 =>    * @param {Mixed} object to test
./node_modules/chai/lib/chai/interface/assert.js:98 =>    * @param {Mixed} object to test
./node_modules/chai/lib/chai/interface/assert.js:124 =>     var test = new Assertion(act, msg, assert.equal);
./node_modules/chai/lib/chai/interface/assert.js:126 =>     test.assert(
./node_modules/chai/lib/chai/interface/assert.js:127 =>         exp == flag(test, 'object')
./node_modules/chai/lib/chai/interface/assert.js:151 =>     var test = new Assertion(act, msg, assert.notEqual);
./node_modules/chai/lib/chai/interface/assert.js:153 =>     test.assert(
./node_modules/chai/lib/chai/interface/assert.js:154 =>         exp != flag(test, 'object')
./node_modules/chai/lib/chai/core/assertions.js:18 =>    * do not provide testing capabilities unless they
./node_modules/chai/lib/chai/core/assertions.js:140 =>    *     expect('test').to.be.a('string');
./node_modules/chai/lib/chai/utils/addChainableMethod.js:100 =>             if (!excludeNames.test(asserterName)) {
./node_modules/chai/lib/chai/utils/expectTypes.js:10 =>  * Ensures that the object being tested against is of a valid type.
./node_modules/chai/lib/chai/utils/expectTypes.js:39 =>       'object tested must be ' + str + ', but ' + type(obj) + ' given'
./node_modules/chai/lib/chai/utils/index.js:14 =>  * test utility
./node_modules/chai/lib/chai/utils/index.js:17 => exports.test = require('./test');
./node_modules/chai/lib/chai/utils/test.js:2 =>  * Chai - test utility
./node_modules/chai/lib/chai/utils/test.js:14 =>  * # test(object, expression)
./node_modules/chai/lib/chai/utils/test.js:21 =>  * @name test
./node_modules/buffer/test/node/test-buffer.js:697 => // Regression test for https://github.com/nodejs/node/issues/3496.
./node_modules/buffer/test/node/test-buffer.js:725 => // test hex toString
./node_modules/combine-source-map/node_modules/convert-source-map/test/map-file-comment.js:4 => var test = require('tap').test
./node_modules/combine-source-map/node_modules/convert-source-map/test/map-file-comment.js:9 => test('\nresolving a "/*# sourceMappingURL=map-file-comment.css.map*/" style comment inside a given css content', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/map-file-comment.js:30 => test('\nresolving a "//# sourceMappingURL=map-file-comment.css.map" style comment inside a given css content', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/map-file-comment.js:51 => test('\nresolving a /*# sourceMappingURL=data:application/json;base64,... */ style comment inside a given css content', function(t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:4 => var test = require('tap').test
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:11 =>   return rx.test(prefix + 'sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9' + suffix)
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:17 =>   return rx.test(prefix + 'sourceMappingURL=data:application/json;charset' + sep +'utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlcyI6WyJmdW5jdGlvbiBmb28oKSB7XG4gY29uc29sZS5sb2coXCJoZWxsbyBJIGFtIGZvb1wiKTtcbiBjb25zb2xlLmxvZyhcIndobyBhcmUgeW91XCIpO1xufVxuXG5mb28oKTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSJ9' + suffix)
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:21 => test('comment regex old spec - @', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:45 => test('comment regex new spec - #', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:70 =>   return mapFileRx.test(s1 + 'sourceMappingURL=foo.js.map' + s2)
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:73 => test('mapFileComment regex old spec - @', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:93 => test('mapFileComment regex new spec - #', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:112 => test('mapFileComment regex /* */ old spec - @', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/comment-regex.js:126 => test('mapFileComment regex /* */ new spec - #', function (t) {
./node_modules/concat-stream/node_modules/readable-stream/doc/stream.markdown:250 => $ node test.js
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:4 => var test = require('tap').test
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:17 => test('different formats', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:36 => test('to object returns a copy', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:44 => test('to multi-line map', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:51 => test('from source', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:78 => test('from source with a large source', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:105 => test('remove comments', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:126 => test('remove map file comments', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:144 => test('pretty json', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:155 => test('adding properties', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:170 => test('setting properties', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:189 => test('getting properties', function (t) {
./node_modules/combine-source-map/node_modules/convert-source-map/test/convert-source-map.js:197 => test('return null fromSource when largeSource is true', function(t) {
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:29 =>  * the type of object being tested.
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:60 =>   this.tests = {};
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:74 =>  * @param {Mixed} object to test
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:81 =>  * #### .define (type, test)
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:83 =>  * Add a test to for the `.test()` assertion.
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:103 =>  * @param {RegExp|Function} test
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:107 => Library.prototype.define = function (type, test) {
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:108 =>   if (arguments.length === 1) return this.tests[type];
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:109 =>   this.tests[type] = test;
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:114 =>  * #### .test (obj, test)
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:118 =>  * use the user defined custom tests.
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:121 =>  * assert(lib.test('1', 'int'));
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:122 =>  * assert(lib.test('yes', 'bln'));
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:131 => Library.prototype.test = function (obj, type) {
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:133 =>   var test = this.tests[type];
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:135 =>   if (test && 'regexp' === getType(test)) {
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:136 =>     return test.test(obj);
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:137 =>   } else if (test && 'function' === getType(test)) {
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:138 =>     return test(obj);
./node_modules/deep-eql/node_modules/type-detect/lib/type.js:140 =>     throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:102 =>       acorn.lineBreak.test(this.input.slice(this.last.end, this.tok.start))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:218 =>         if (/unterminated/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:220 =>           if (/string/.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:222 =>           } else if (/regular expr/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:226 =>           } else if (/template/.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:233 =>         } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:235 =>         } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:96 =>     lineBreak.test(this.input.slice(this.last.end, this.tok.start))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:212 =>       if (/unterminated/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:214 =>         if (/string/.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:216 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:220 =>         } else if (/template/.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:227 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:229 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:234 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:237 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:261 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) ||
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:262 =>     /[enwfd]/.test(ch) &&
./node_modules/detective/node_modules/acorn/dist/walk.es.js:56 => function makeTest(test) {
./node_modules/detective/node_modules/acorn/dist/walk.es.js:57 =>   if (typeof test == "string")
./node_modules/detective/node_modules/acorn/dist/walk.es.js:58 =>     return function (type) { return type == test; }
./node_modules/detective/node_modules/acorn/dist/walk.es.js:59 =>   else if (!test)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:62 =>     return test
./node_modules/detective/node_modules/acorn/dist/walk.es.js:70 => function findNodeAt(node, start, end, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.es.js:71 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:81 =>           test(type, node))
./node_modules/detective/node_modules/acorn/dist/walk.es.js:92 => function findNodeAround(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.es.js:93 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:100 =>       if (test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:109 => function findNodeAfter(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.es.js:110 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:116 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:126 => function findNodeBefore(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.es.js:127 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.es.js:133 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
./node_modules/detective/node_modules/acorn/dist/walk.es.js:172 =>   c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.es.js:186 =>     if (cs.test) c(cs.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.es.js:206 =>   c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.es.js:211 =>   if (node.test) c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.js:62 =>   function makeTest(test) {
./node_modules/detective/node_modules/acorn/dist/walk.js:63 =>     if (typeof test == "string")
./node_modules/detective/node_modules/acorn/dist/walk.js:64 =>       return function (type) { return type == test; }
./node_modules/detective/node_modules/acorn/dist/walk.js:65 =>     else if (!test)
./node_modules/detective/node_modules/acorn/dist/walk.js:68 =>       return test
./node_modules/detective/node_modules/acorn/dist/walk.js:76 =>   function findNodeAt(node, start, end, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.js:77 =>     test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.js:87 =>             test(type, node))
./node_modules/detective/node_modules/acorn/dist/walk.js:98 =>   function findNodeAround(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.js:99 =>     test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.js:106 =>         if (test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/dist/walk.js:115 =>   function findNodeAfter(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.js:116 =>     test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.js:122 =>         if (node.start >= pos && test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/dist/walk.js:132 =>   function findNodeBefore(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/dist/walk.js:133 =>     test = makeTest(test)
./node_modules/detective/node_modules/acorn/dist/walk.js:139 =>       if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
./node_modules/detective/node_modules/acorn/dist/walk.js:178 =>     c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.js:192 =>       if (cs.test) c(cs.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.js:212 =>     c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.js:217 =>     if (node.test) c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/parseutil.js:17 => // Predicate that tests whether the next token is of the given
./node_modules/detective/node_modules/acorn/src/parseutil.js:52 =>     lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/src/lval.js:176 =>     if (this.strict && this.reservedWordsStrictBind.test(expr.name))
./node_modules/detective/node_modules/acorn/src/expression.js:131 =>     node.test = expr
./node_modules/detective/node_modules/acorn/src/state.js:84 =>   isKeyword(word) { return this.keywords.test(word) }
./node_modules/detective/node_modules/acorn/src/state.js:85 =>   isReservedWord(word) { return this.reservedWords.test(word) }
./node_modules/detective/node_modules/acorn/src/tokencontext.js:41 =>     return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/src/statement.js:151 =>   node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/src/statement.js:203 =>   node.test = this.parseParenExpression()
./node_modules/elliptic/lib/elliptic/eddsa/index.js:12 =>   assert(curve === 'ed25519', 'only tested with ed25519 so far');
./node_modules/detective/node_modules/acorn/src/tokenize.js:63 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/detective/node_modules/acorn/src/tokenize.js:178 =>         if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/detective/node_modules/acorn/src/tokenize.js:264 =>         lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/es6-promise/dist/test/browserify.js:593 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/es6-promise/dist/test/mocha.js:812 =>   this.test = this._runnable = runnable;
./node_modules/es6-promise/dist/test/mocha.js:817 =>  * Set test timeout `ms`.
./node_modules/es6-promise/dist/test/mocha.js:831 =>  * Set test timeout `enabled`.
./node_modules/es6-promise/dist/test/mocha.js:845 =>  * Set test slowness threshold `ms`.
./node_modules/es6-promise/dist/test/mocha.js:867 =>     if ('test' == key) return;
./node_modules/es6-promise/dist/test/mocha.js:912 =>  * Get or set the test `err`.
./node_modules/es6-promise/dist/test/mocha.js:938 =>   , Test = require('../test')
./node_modules/es6-promise/dist/test/mocha.js:965 =>      * Execute before running tests.
./node_modules/es6-promise/dist/test/mocha.js:973 =>      * Execute after running tests.
./node_modules/es6-promise/dist/test/mocha.js:981 =>      * Execute before each test case.
./node_modules/es6-promise/dist/test/mocha.js:989 =>      * Execute after each test case.
./node_modules/es6-promise/dist/test/mocha.js:999 =>      * and/or tests.
./node_modules/hoek/test/index.js:1340 =>     it('tests strings', function (done) {
./node_modules/hoek/test/index.js:1358 =>     it('tests arrays', function (done) {
./node_modules/hoek/test/index.js:1382 =>     it('tests objects', function (done) {
./node_modules/JSONStream/test/fixtures/all_npm.json:232 => {"id":"async_testing","key":"async_testing","value":{"rev":"14-0275d8b608d8644dfe8d68a81fa07e98"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:252 => {"id":"autotest","key":"autotest","value":{"rev":"7-e319995dd0e1fbd935c14c46b1234f77"}},
./node_modules/jsonld/tests/webidl/idlharness.js:432 =>     // Now run test() on every member, and test_object() for every object.
./node_modules/jsonld/tests/webidl/idlharness.js:435 =>         this.members[name].test();
./node_modules/jsonld/tests/webidl/idlharness.js:440 =>                 this.members[name].test_object(str);
./node_modules/jsonld/tests/webidl/idlharness.js:451 =>      * Helper function that tests that value is an instance of type according
./node_modules/jsonld/tests/webidl/idlharness.js:567 =>         // IdlInterface.prototype.test_instance_of, because that could result
./node_modules/jsonld/tests/webidl/idlharness.js:568 =>         // in an infinite loop.  TODO: This means we don't have tests for
./node_modules/jsonld/tests/webidl/idlharness.js:569 =>         // NoInterfaceObject interfaces, and we also can't test objects that
./node_modules/jsonld/tests/webidl/idlharness.js:585 =>         // TODO: Test when we actually have something to test this on
./node_modules/jsonld/tests/webidl/idlharness.js:596 => IdlObject.prototype.test = function()
./node_modules/jsonld/tests/webidl/idlharness.js:600 =>      * By default, this does nothing, so no actual tests are run for IdlObjects
./node_modules/jsonld/tests/webidl/idlharness.js:664 =>      * An indicator of whether we should run tests on the (exception) interface
./node_modules/jsonld/tests/webidl/idlharness.js:666 =>      * controlled by .untested on each member, not this.
./node_modules/jsonld/tests/webidl/idlharness.js:668 =>     this.untested = obj.untested;
./node_modules/jsonld/tests/webidl/idlharness.js:685 => IdlExceptionOrInterface.prototype.test = function()
./node_modules/jsonld/tests/webidl/idlharness.js:690 =>         // No tests to do without an instance.  TODO: We should still be able
./node_modules/jsonld/tests/webidl/idlharness.js:691 =>         // to run tests on the prototype object, if we obtain one through some
./node_modules/jsonld/tests/webidl/idlharness.js:696 =>     if (!this.untested)
./node_modules/jsonld/tests/webidl/idlharness.js:698 =>         // First test things to do with the exception/interface object and
./node_modules/jsonld/tests/webidl/idlharness.js:700 =>         this.test_self();
./node_modules/jsonld/tests/webidl/idlharness.js:702 =>     // Then test things to do with its members (constants, fields, attributes,
./node_modules/lodash/lodash.min.js:105 => !t&&Bn.test(n))?zr($(n),0,r):n.split(t,r):[]},On.spread=function(n,t){if(typeof n!="function")throw new ei("Expected a function");return t=null==t?0:Di(Ou(t),0),lr(function(e){var u=e[t];return e=zr(e,0,t),u&&s(e,u),r(n,this,e)})},On.tail=function(n){var t=null==n?0:n.length;return t?vr(n,1,t):[]},On.take=function(n,t,r){return n&&n.length?(t=r||t===F?1:Ou(t),vr(n,0,0>t?0:t)):[]},On.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===F?1:Ou(t),t=e-t,vr(n,0>t?0:t,e)):[]},On.takeRightWhile=function(n,t){
./node_modules/minifyify/node_modules/mkdirp/test/clobber.js:4 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/clobber.js:20 => test('clobber-pre', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/clobber.js:31 => test('clobber', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/opts_fs_sync.js:3 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/opts_fs_sync.js:8 => test('opts.fs sync', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/chmod.js:4 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/chmod.js:18 => test('chmod-pre', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/chmod.js:31 => test('chmod', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/mkdirp.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/mkdirp.js:9 => test('woo', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/opts_fs.js:3 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/opts_fs.js:8 => test('opts.fs', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/perm.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/perm.js:9 => test('async perm', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/perm.js:26 => test('async root perm', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/return.js:4 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/return.js:6 => test('return value', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/return.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/minifyify/node_modules/mkdirp/test/root.js:4 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/root.js:7 => test('root', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/perm_sync.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/perm_sync.js:9 => test('sync perm', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/perm_sync.js:24 => test('sync root perm', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/rel.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/rel.js:9 => test('rel', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/race.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/race.js:9 => test('race', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/umask.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/umask.js:9 => test('implicit mode from umask', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/umask_sync.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/umask_sync.js:9 => test('umask sync modes', function (t) {
./node_modules/jsonld/tests/webidl/testharness.js:416 =>         var test_obj = new Test(test_name, properties);
./node_modules/jsonld/tests/webidl/testharness.js:417 =>         test_obj.step(func);
./node_modules/jsonld/tests/webidl/testharness.js:418 =>         if (test_obj.status === test_obj.NOTRUN) {
./node_modules/jsonld/tests/webidl/testharness.js:419 =>             test_obj.done();
./node_modules/jsonld/tests/webidl/testharness.js:423 =>     function async_test(func, name, properties)
./node_modules/jsonld/tests/webidl/testharness.js:430 =>         var test_name = name ? name : next_default_name();
./node_modules/jsonld/tests/webidl/testharness.js:432 =>         var test_obj = new Test(test_name, properties);
./node_modules/jsonld/tests/webidl/testharness.js:434 =>             test_obj.step(func, test_obj, test_obj);
./node_modules/jsonld/tests/webidl/testharness.js:436 =>         return test_obj;
./node_modules/jsonld/tests/webidl/testharness.js:451 =>         tests.setup(func, properties);
./node_modules/jsonld/tests/webidl/testharness.js:456 =>         tests.end_wait();
./node_modules/jsonld/tests/webidl/testharness.js:459 =>     function generate_tests(func, args, properties) {
./node_modules/jsonld/tests/webidl/testharness.js:463 =>                     test(function()
./node_modules/jsonld/tests/webidl/testharness.js:477 =>     expose(test, 'test');
./node_modules/jsonld/tests/webidl/testharness.js:478 =>     expose(async_test, 'async_test');
./node_modules/jsonld/tests/webidl/testharness.js:479 =>     expose(generate_tests, 'generate_tests');
./node_modules/jsonld/tests/webidl/testharness.js:578 =>             // Special-case Node objects, since those come up a lot in my tests.  I
./node_modules/minifyify/node_modules/mkdirp/test/sync.js:5 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/sync.js:9 => test('sync', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/return_sync.js:4 => var test = require('tap').test;
./node_modules/minifyify/node_modules/mkdirp/test/return_sync.js:6 => test('return value', function (t) {
./node_modules/minifyify/node_modules/mkdirp/test/return_sync.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/minifyify/node_modules/mkdirp/test/return_sync.js:17 =>     // Note that this will throw on failure, which will fail the test.
./node_modules/minifyify/test/fixtures/libraries/Backbone.js:186 =>     if (eventSplitter.test(name)) {
./node_modules/minifyify/test/fixtures/libraries/HandlebarsRuntime.js:1 => var Handlebars={};module.exports=Handlebars,function(e,r){e.VERSION="1.0.0",e.COMPILER_REVISION=4,e.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:">= 1.0.0"},e.helpers={},e.partials={};var t=Object.prototype.toString,n="[object Function]",i="[object Object]";e.registerHelper=function(r,n,o){if(t.call(r)===i){if(o||n)throw new e.Exception("Arg not supported with multiple helpers");e.Utils.extend(this.helpers,r)}else o&&(n.not=o),this.helpers[r]=n},e.registerPartial=function(r,n){t.call(r)===i?e.Utils.extend(this.partials,r):this.partials[r]=n},e.registerHelper("helperMissing",function(e){if(2===arguments.length)return r;throw new Error("Missing helper: '"+e+"'")}),e.registerHelper("blockHelperMissing",function(r,i){var o=i.inverse||function(){},a=i.fn,l=t.call(r);return l===n&&(r=r.call(this)),r===!0?a(this):r===!1||null==r?o(this):"[object Array]"===l?r.length>0?e.helpers.each(r,i):o(this):a(r)}),e.K=function(){},e.createFrame=Object.create||function(r){e.K.prototype=r;var t=new e.K;return e.K.prototype=null,t},e.logger={DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,methodMap:{0:"debug",1:"info",2:"warn",3:"error"},log:function(r,t){if(e.logger.level<=r){var n=e.logger.methodMap[r];"undefined"!=typeof console&&console[n]&&console[n].call(console,t)}}},e.log=function(r,t){e.logger.log(r,t)},e.registerHelper("each",function(r,i){var o,a=i.fn,l=i.inverse,s=0,p="",c=t.call(r);if(c===n&&(r=r.call(this)),i.data&&(o=e.createFrame(i.data)),r&&"object"==typeof r)if(r instanceof Array)for(var u=r.length;u>s;s++)o&&(o.index=s),p+=a(r[s],{data:o});else for(var f in r)r.hasOwnProperty(f)&&(o&&(o.key=f),p+=a(r[f],{data:o}),s++);return 0===s&&(p=l(this)),p}),e.registerHelper("if",function(r,i){var o=t.call(r);return o===n&&(r=r.call(this)),!r||e.Utils.isEmpty(r)?i.inverse(this):i.fn(this)}),e.registerHelper("unless",function(r,t){return e.helpers["if"].call(this,r,{fn:t.inverse,inverse:t.fn})}),e.registerHelper("with",function(r,i){var o=t.call(r);return o===n&&(r=r.call(this)),e.Utils.isEmpty(r)?void 0:i.fn(r)}),e.registerHelper("log",function(r,t){var n=t.data&&null!=t.data.level?parseInt(t.data.level,10):1;e.log(n,r)});var o=["description","fileName","lineNumber","message","name","number","stack"];e.Exception=function(){for(var e=Error.prototype.constructor.apply(this,arguments),r=0;r<o.length;r++)this[o[r]]=e[o[r]]},e.Exception.prototype=new Error,e.SafeString=function(e){this.string=e},e.SafeString.prototype.toString=function(){return this.string.toString()};var a={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},l=/[&<>"'`]/g,s=/[&<>"'`]/,p=function(e){return a[e]||"&amp;"};e.Utils={extend:function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])},escapeExpression:function(r){return r instanceof e.SafeString?r.toString():null==r||r===!1?"":(r=r.toString(),s.test(r)?r.replace(l,p):r)},isEmpty:function(e){return e||0===e?"[object Array]"===t.call(e)&&0===e.length?!0:!1:!0}},e.VM={template:function(r){var t={escapeExpression:e.Utils.escapeExpression,invokePartial:e.VM.invokePartial,programs:[],program:function(r,t,n){var i=this.programs[r];return n?i=e.VM.program(r,t,n):i||(i=this.programs[r]=e.VM.program(r,t)),i},merge:function(r,t){var n=r||t;return r&&t&&(n={},e.Utils.extend(n,t),e.Utils.extend(n,r)),n},programWithDepth:e.VM.programWithDepth,noop:e.VM.noop,compilerInfo:null};return function(n,i){i=i||{};var o=r.call(t,e,n,i.helpers,i.partials,i.data),a=t.compilerInfo||[],l=a[0]||1,s=e.COMPILER_REVISION;if(l!==s){if(s>l){var p=e.REVISION_CHANGES[s],c=e.REVISION_CHANGES[l];throw"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+p+") or downgrade your runtime to an older version ("+c+")."}throw"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+a[1]+")."}return o}},programWithDepth:function(e,r,t){var n=Array.prototype.slice.call(arguments,3),i=function(e,i){return i=i||{},r.apply(this,[e,i.data||t].concat(n))};return i.program=e,i.depth=n.length,i},program:function(e,r,t){var n=function(e,n){return n=n||{},r(e,n.data||t)};return n.program=e,n.depth=0,n},noop:function(){return""},invokePartial:function(t,n,i,o,a,l){var s={helpers:o,partials:a,data:l};if(t===r)throw new e.Exception("The partial "+n+" could not be found");if(t instanceof Function)return t(i,s);if(e.compile)return a[n]=e.compile(t,{data:l!==r}),a[n](i,s);throw new e.Exception("The partial "+n+" could not be compiled when running in runtime-only mode")}},e.template=e.VM.template}(Handlebars);
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:46 =>   var reThis = (reThis = /\bthis\b/) && reThis.test(runInContext) && reThis;
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:48 =>   /** Used to detect and test whitespace */
./node_modules/minifyify/test/fixtures/libraries/Underscore.js:155 =>   // Return the first value which passes a truth test. Aliased as `detect`.
./node_modules/minifyify/test/fixtures/libraries/Underscore.js:167 =>   // Return all the elements that pass a truth test.
./node_modules/minifyify/test/fixtures/libraries/Underscore.js:180 =>   // Return all the elements for which a truth test fails.
./node_modules/minifyify/test/fixtures/libraries/Underscore.js:187 =>   // Determine whether all of the elements match a truth test.
./node_modules/minifyify/test/fixtures/libraries/Underscore.js:201 =>   // Determine if at least one element in the object matches a truth test.
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:164 => 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
./node_modules/mocha/CHANGELOG.md:1169 =>   * Fixed #158: removes jquery include from browser tests
./node_modules/mocha/CHANGELOG.md:1172 =>   * Removed test/browser/style.css. Closes #385
./node_modules/mocha/CHANGELOG.md:1185 =>   * Added: initial run of tests with `--watch`. Closes #345
./node_modules/mocha/CHANGELOG.md:1213 =>   * Added preliminary test coverage support. Closes #5
./node_modules/mocha/CHANGELOG.md:1225 =>   * Added a `Context` object used for hook and test-case this. Closes #253
./node_modules/mocha/CHANGELOG.md:1260 =>   * Fixed `self.test` reference in runner. Closes #189
./node_modules/mocha/CHANGELOG.md:1266 =>   * Added test-case context support. Closes #113
./node_modules/mocha/CHANGELOG.md:1317 =>   * Fixed: recover from uncaught exceptions for tests. Closes #94
./node_modules/mocha/CHANGELOG.md:1318 =>   * Fixed: only emit "test end" for uncaught within test, not hook
./node_modules/mocha/CHANGELOG.md:1323 =>   * Added support for test-specific timeouts via `this.timeout(0)`. Closes #134
./node_modules/mocha/CHANGELOG.md:1326 =>   * Fixed slow browser tests. Closes #135
./node_modules/mocha/node_modules/glob/glob.js:686 =>     var trail = /[\/\\]$/.test(prefix)
./node_modules/mocha/node_modules/mkdirp/test/chmod.js:4 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/chmod.js:18 => test('chmod-pre', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/chmod.js:31 => test('chmod', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/clobber.js:4 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/clobber.js:20 => test('clobber-pre', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/clobber.js:31 => test('clobber', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/opts_fs.js:3 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/opts_fs.js:8 => test('opts.fs', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/mkdirp.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/mkdirp.js:9 => test('woo', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/perm.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/perm.js:9 => test('async perm', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/perm.js:26 => test('async root perm', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/opts_fs_sync.js:3 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/opts_fs_sync.js:8 => test('opts.fs sync', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/perm_sync.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/perm_sync.js:9 => test('sync perm', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/perm_sync.js:24 => test('sync root perm', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/race.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/race.js:9 => test('race', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/return.js:4 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/return.js:6 => test('return value', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/return.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/mocha/node_modules/mkdirp/test/rel.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/rel.js:9 => test('rel', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/root.js:4 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/root.js:7 => test('root', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/sync.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/sync.js:9 => test('sync', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/umask.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/umask.js:9 => test('implicit mode from umask', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/umask_sync.js:5 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/umask_sync.js:9 => test('umask sync modes', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/return_sync.js:4 => var test = require('tap').test;
./node_modules/mocha/node_modules/mkdirp/test/return_sync.js:6 => test('return value', function (t) {
./node_modules/mocha/node_modules/mkdirp/test/return_sync.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/mocha/node_modules/mkdirp/test/return_sync.js:17 =>     // Note that this will throw on failure, which will fail the test.
./node_modules/minifyify/test/fixtures/simple file/entry.js:11 => msg.innerHTML = 'Do you see this? Great! Too bad this isn\'t actually the test.<br /><br />Open your dev tools and see if an "entry.js" file is there. If so, the actual test suceeded.<br /><br /><em>Remember to turn on source maps in your options!</em>';
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:292 => - [ed5f6d3](https://github.com/bcoe/yargs/commit/ed5f6d33f57ad1086b11c91b51100f7c6c7fa8ee) Finished porting unit tests to Mocha. (@chevex)
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:50 =>     if (/-/.test(key) && !opts.alias[key]) {
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:120 =>         } else if (/^(true|false)$/.test(next)) {
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:178 =>         if (/[A-Za-z]/.test(letters[j]) &&
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:179 =>           /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:204 =>           if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) &&
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:209 =>           } else if (args[i + 1] && /true|false/.test(args[i + 1])) {
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:261 =>       if (/^-/.test(args[ii])) break
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:277 =>     if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {
./node_modules/mocha/mocha.js:2482 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:2483 =>     console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));
./node_modules/mocha/mocha.js:2484 =>     var code = utils.escape(utils.clean(test.body));
./node_modules/mocha/mocha.js:2488 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/mocha.js:2489 =>     console.log('%s  <dt class="error">%s</dt>', indent(), utils.escape(test.title));
./node_modules/mocha/mocha.js:2490 =>     var code = utils.escape(utils.clean(test.body));
./node_modules/mocha/mocha.js:2515 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/mocha/mocha.js:2538 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:2542 =>     if (test.speed === 'slow') {
./node_modules/mocha/mocha.js:2545 =>       process.stdout.write(color(test.speed, Base.symbols.dot));
./node_modules/output-file-sync/node_modules/mkdirp/test/chmod.js:4 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/chmod.js:18 => test('chmod-pre', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/chmod.js:31 => test('chmod', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/clobber.js:4 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/clobber.js:20 => test('clobber-pre', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/clobber.js:31 => test('clobber', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/opts_fs.js:3 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/opts_fs.js:8 => test('opts.fs', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/perm.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/perm.js:9 => test('async perm', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/perm.js:26 => test('async root perm', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/opts_fs_sync.js:3 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/opts_fs_sync.js:8 => test('opts.fs sync', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/perm_sync.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/perm_sync.js:9 => test('sync perm', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/perm_sync.js:24 => test('sync root perm', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/rel.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/rel.js:9 => test('rel', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/return.js:4 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/return.js:6 => test('return value', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/return.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/output-file-sync/node_modules/mkdirp/test/race.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/race.js:9 => test('race', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/return_sync.js:4 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/return_sync.js:6 => test('return value', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/return_sync.js:16 =>     // already exist, since every other test makes things in there.
./node_modules/output-file-sync/node_modules/mkdirp/test/return_sync.js:17 =>     // Note that this will throw on failure, which will fail the test.
./node_modules/output-file-sync/node_modules/mkdirp/test/root.js:4 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/root.js:7 => test('root', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/umask.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/umask.js:9 => test('implicit mode from umask', function (t) {
./node_modules/output-file-sync/node_modules/mkdirp/test/sync.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/sync.js:9 => test('sync', function (t) {
./node_modules/node-mkdirp/node_modules/yargs/README.md:738 =>   .describe('batman', "world's greatest detective")
./node_modules/node-mkdirp/node_modules/yargs/README.md:744 =>       --batman  world's greatest detective
./node_modules/node-mkdirp/node_modules/yargs/README.md:812 => ./test.js - follow ye instructions true
./node_modules/node-mkdirp/node_modules/yargs/README.md:822 =>   test.js run foo  shiver me timbers, here's an example for ye
./node_modules/node-mkdirp/node_modules/yargs/README.md:864 => `{ _: [], token: '-my-token', '$0': 'node test' }`
./node_modules/output-file-sync/node_modules/mkdirp/test/mkdirp.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/mkdirp.js:9 => test('woo', function (t) {
./node_modules/regenerator-transform/lib/emit.js:967 =>         var test = self.explodeExpression(path.get("test"));
./node_modules/regenerator-transform/lib/emit.js:969 =>         self.jumpIfNot(test, elseLoc);
./node_modules/request/CHANGELOG.md:541 => - [#521](https://github.com/request/request/pull/521) Improving test-localAddress.js (@noway421)
./node_modules/request/CHANGELOG.md:544 => - [#520](https://github.com/request/request/pull/520) Fixing test-tunnel.js (@noway421)
./node_modules/request/CHANGELOG.md:572 => - [#398](https://github.com/request/request/pull/398) Add more reporting to tests (@mmalecki)
./node_modules/request/CHANGELOG.md:582 => - [#363](https://github.com/request/request/pull/363) rfc3986 on base_uri, now passes tests (@jeffmarshall)
./node_modules/request/CHANGELOG.md:590 => - [#322](https://github.com/request/request/pull/322) Fix + test for piped into request bumped into redirect. #321 (@alexindigo)
./node_modules/request/CHANGELOG.md:595 => - [#290](https://github.com/request/request/pull/290) A test for #289 (@isaacs)
./node_modules/regjsparser/node_modules/jsesc/man/jsesc.1:29 => escapes strings for use in JavaScript string literals while generating the shortest possible valid ASCII-only output.
./node_modules/output-file-sync/node_modules/mkdirp/test/umask_sync.js:5 => var test = require('tap').test;
./node_modules/output-file-sync/node_modules/mkdirp/test/umask_sync.js:9 => test('umask sync modes', function (t) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:17 => 		if (/^(?:-h|--help|undefined)$/.test(option)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:45 => 		if (/^(?:-v|--version)$/.test(option)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:52 => 			if (/^(?:-s|--single-quotes)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:56 => 			if (/^(?:-d|--double-quotes)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:60 => 			if (/^(?:-w|--wrap)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:64 => 			if (/^(?:-6|--es6)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:68 => 			if (/^(?:-e|--escape-everything)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:72 => 			if (/^(?:-j|--json)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:76 => 			if (/^(?:-o|--object)$/.test(string)) {
./node_modules/regjsparser/node_modules/jsesc/bin/jsesc:80 => 			if (/^(?:-p|--pretty)$/.test(string)) {
./node_modules/source-map/dist/source-map.debug.js:1135 => 	 * member is O(1), testing for membership is O(1), and finding the index of an
./node_modules/source-map-support/browser-source-map-support.js:108 => /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/)[ \t]*$)/mg,h;f=c.exec(b);)h=f;b=h?h[1]:null}if(!b)return null;H.test(b)?(h=b.slice(b.indexOf(",")+1),h=(new e(h,"base64")).toString(),b=a):(b=d(a,b),h=q(b));return h?{url:b,map:h}:null});l.wrapCallSite=b;l.getErrorSource=v;l.mapSourcePosition=a;l.retrieveSourceMap=D;l.install=function(a){a=a||{};if(a.environment&&(K=a.environment,-1===["node","browser","auto"].indexOf(K)))throw Error("environment "+
./node_modules/source-map/dist/source-map.js:1135 => 	 * member is O(1), testing for membership is O(1), and finding the index of an
./node_modules/subarg/node_modules/minimist/test/all_bool.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/all_bool.js:4 => test('flag boolean true (default all --args to boolean)', function (t) {
./node_modules/subarg/node_modules/minimist/test/all_bool.js:18 => test('flag boolean true only affects double hyphen arguments without equals signs', function (t) {
./node_modules/subarg/node_modules/minimist/test/dash.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/dash.js:4 => test('-', function (t) {
./node_modules/subarg/node_modules/minimist/test/dash.js:19 => test('-a -- b', function (t) {
./node_modules/subarg/node_modules/minimist/test/dash.js:26 => test('move arguments after the -- into their own `--` array', function(t) {
./node_modules/subarg/node_modules/minimist/test/default_bool.js:1 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/default_bool.js:4 => test('boolean default true', function (t) {
./node_modules/subarg/node_modules/minimist/test/default_bool.js:13 => test('boolean default false', function (t) {
./node_modules/subarg/node_modules/minimist/test/default_bool.js:22 => test('boolean default to null', function (t) {
./node_modules/subarg/node_modules/minimist/test/kv_short.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/kv_short.js:4 => test('short -k=v' , function (t) {
./node_modules/subarg/node_modules/minimist/test/kv_short.js:11 => test('multi short -k=v' , function (t) {
./node_modules/subarg/node_modules/minimist/test/long.js:1 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/long.js:4 => test('long opts', function (t) {
./node_modules/subarg/node_modules/minimist/test/dotted.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/dotted.js:4 => test('dotted alias', function (t) {
./node_modules/subarg/node_modules/minimist/test/dotted.js:11 => test('dotted default', function (t) {
./node_modules/subarg/node_modules/minimist/test/dotted.js:18 => test('dotted default with no alias', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/bool.js:4 => test('flag boolean default false', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:22 => test('boolean groups', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:39 => test('boolean and alias with chainable api', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:64 => test('boolean and alias with options hash', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:83 => test('boolean and alias array with options hash', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:106 => test('boolean and alias using explicit true', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:127 => test('boolean and --x=true', function(t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:144 => test('boolean --boool=true', function (t) {
./node_modules/subarg/node_modules/minimist/test/bool.js:156 => test('boolean --boool=false', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse_modified.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/parse_modified.js:4 => test('parse with modifier functions' , function (t) {
./node_modules/subarg/node_modules/minimist/test/num.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/num.js:4 => test('nums', function (t) {
./node_modules/subarg/node_modules/minimist/test/num.js:30 => test('already a number', function (t) {
./node_modules/subarg/node_modules/minimist/test/short.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/short.js:4 => test('numeric short args', function (t) {
./node_modules/subarg/node_modules/minimist/test/short.js:13 => test('short', function (t) {
./node_modules/subarg/node_modules/minimist/test/short.js:47 => test('mixed short bool and capture', function (t) {
./node_modules/subarg/node_modules/minimist/test/short.js:58 => test('short and long', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/parse.js:4 => test('parse args', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:18 => test('comprehensive', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:45 => test('flag boolean', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:52 => test('flag boolean value', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:69 => test('newlines in params' , function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:82 => test('strings' , function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:93 => test('stringArgs', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:103 => test('empty strings', function(t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:124 => test('string and alias', function(t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:147 => test('slashBreak', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:159 => test('alias', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:169 => test('multiAlias', function (t) {
./node_modules/subarg/node_modules/minimist/test/parse.js:180 => test('nested dotted objects', function (t) {
./node_modules/subarg/node_modules/minimist/test/stop_early.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/stop_early.js:4 => test('stops parsing on the first non-option when stopEarly is set', function (t) {
./node_modules/subarg/node_modules/minimist/test/whitespace.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/whitespace.js:4 => test('whitespace should be whitespace' , function (t) {
./node_modules/subarg/node_modules/minimist/test/unknown.js:2 => var test = require('tape');
./node_modules/subarg/node_modules/minimist/test/unknown.js:4 => test('boolean and alias is not unknown', function (t) {
./node_modules/subarg/node_modules/minimist/test/unknown.js:24 => test('flag boolean true any double hyphen argument is not unknown', function (t) {
./node_modules/subarg/node_modules/minimist/test/unknown.js:42 => test('string and alias is not unknown', function (t) {
./node_modules/subarg/node_modules/minimist/test/unknown.js:62 => test('default and alias is not unknown', function (t) {
./node_modules/subarg/node_modules/minimist/test/unknown.js:83 => test('value following -- is not unknown', function (t) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:72 => function makeTest(test) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:73 =>   if (typeof test == "string") return function (type) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:74 =>     return type == test;
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:75 =>   };else if (!test) return function () {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:77 =>   };else return test;
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:91 => function findNodeAt(node, start, end, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:92 =>   test = makeTest(test);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:98 =>       if ((start == null || node.start == start) && (end == null || node.end == end) && test(type, node)) throw new Found(node, st);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:109 => function findNodeAround(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:110 =>   test = makeTest(test);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:117 =>       if (test(type, node)) throw new Found(node, st);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:127 => function findNodeAfter(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:128 =>   test = makeTest(test);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:134 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:145 => function findNodeBefore(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:146 =>   test = makeTest(test);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:151 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node)) max = new Found(node, st);
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:189 =>   c(node.test, st, "Expression");
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:205 =>     if (cs.test) c(cs.test, st, "Expression");
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:226 =>   c(node.test, st, "Expression");
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:137 =>     node.test = expr;
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:73 =>     node.test = expr;
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:103 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression");
./node_modules/syntax-error/node_modules/acorn/src/parseutil.js:17 => // Predicate that tests whether the next token is of the given
./node_modules/syntax-error/node_modules/acorn/src/parseutil.js:52 =>     lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/syntax-error/node_modules/acorn/src/lval.js:175 =>     if (this.strict && this.reservedWordsStrictBind.test(expr.name))
./node_modules/syntax-error/node_modules/acorn/src/tokencontext.js:41 =>     return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/syntax-error/node_modules/acorn/src/expression.js:129 =>     node.test = expr
./node_modules/syntax-error/node_modules/acorn/src/state.js:84 =>   isKeyword(word) { return this.keywords.test(word) }
./node_modules/syntax-error/node_modules/acorn/src/state.js:85 =>   isReservedWord(word) { return this.reservedWords.test(word) }
./node_modules/uglify-js/lib/output.js:1109 =>             if (!/[xa-f.)]/i.test(output.last())) {
./node_modules/uglify-js/lib/output.js:1127 =>         if (/^[a-z]/i.test(op)
./node_modules/uglify-js/lib/output.js:1128 =>             || (/[+-]$/.test(op)
./node_modules/uglify-js/lib/output.js:1130 =>                 && /^[+-]/.test(self.expression.operator))) {
./node_modules/uglify-js/lib/parse.js:1011 =>         var test = is("punc", ";") ? null : expression(true);
./node_modules/uglify-js/lib/parse.js:1017 =>             condition : test,
./node_modules/uglify-js/node_modules/async/README.md:511 => * iterator(item, callback) - A truth test to apply to each item in the array.
./node_modules/uglify-js/node_modules/async/README.md:516 =>   either true or false depending on the values of the async tests.
./node_modules/uglify-js/node_modules/async/README.md:533 => Returns true if every element in the array satisfies an async test.
./node_modules/uglify-js/node_modules/async/README.md:536 => way node libraries work with truth tests like fs.exists.
./node_modules/uglify-js/node_modules/async/README.md:541 => * iterator(item, callback) - A truth test to apply to each item in the array.
./node_modules/uglify-js/node_modules/async/README.md:546 =>   the values of the async tests.
./node_modules/uglify-js/node_modules/async/README.md:745 => ### whilst(test, fn, callback)
./node_modules/uglify-js/node_modules/async/README.md:747 => Repeatedly call fn, while test returns true. Calls the callback when stopped,
./node_modules/uglify-js/node_modules/async/README.md:752 => * test() - synchronous truth test to perform before each execution of fn.
./node_modules/uglify-js/node_modules/async/README.md:753 => * fn(callback) - A function to call each time the test passes. The function is
./node_modules/uglify-js/node_modules/async/README.md:756 => * callback(err) - A callback which is called after the test fails and repeated
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:952 =>          :purpose """Test the behavior of triple generation in a corner case where the inner @rel is neither a CURIE or a LinkType. This test effectively causes a rel="" to be inserted between the outer div subject and the inner @href, which halts chaining.""";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:959 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0106.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:960 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0106.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:969 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0107.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:970 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0107.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:978 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0108.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:979 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0108.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:987 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0109.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:988 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0109.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:989 =>          :purpose "Tests to make sure that @xml:base is ignored in XHTML+RDFa 1.0. The input test document is invalid XHTML.";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:996 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0110.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:997 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0110.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1005 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0111.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1006 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0111.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1014 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0112.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1015 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0112.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1023 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0113.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1024 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0113.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1032 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0114.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1033 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0114.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1042 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0115.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1043 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0115.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1052 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0116.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1053 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0116.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1054 =>          :purpose "Checks to make sure that reserved words that are used in @property do not generate triples. This is a NEGATIVE test case.";
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1061 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0117.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1062 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0117.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1070 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0118.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1071 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0118.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1074 => 		generating triples. This test sets the subject in a chain using @href
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:792 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0079">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:795 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0079.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:796 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0079.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:798 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:802 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0080">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:805 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0080.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:806 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0080.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:808 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:812 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0081">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:815 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0081.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:816 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0081.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:818 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:822 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0082">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:825 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0082.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:826 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0082.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:828 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:832 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0083">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:835 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0083.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:836 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0083.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:838 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:842 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0084">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:845 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0084.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:846 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0084.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:848 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:852 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0085">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:855 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0085.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:856 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0085.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:858 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:862 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0086">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:865 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0086.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:866 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0086.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:868 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:873 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0087">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:876 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0087.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:877 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0087.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:879 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:883 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0088">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:886 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0088.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:887 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0088.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:889 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:893 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0089">
./test/tc0007/manifest.ttl:1083 =>    test:purpose "Checks to ensure that the RDFa processor correctly processes single character prefixes when processing CURIEs.";
./test/tc0007/manifest.ttl:1084 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1085 => <test-cases/0175> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1087 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1088 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1089 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1091 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1092 =>    test:informationResourceInput <test-cases/0175.html>;
./test/tc0007/manifest.ttl:1093 =>    test:informationResourceResults <test-cases/0175.sparql>;
./test/tc0007/manifest.ttl:1094 =>    test:purpose "Checks to make sure that a URI may be used as a @property value";
./test/tc0007/manifest.ttl:1095 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1096 => <test-cases/0176> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1098 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1099 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1100 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1102 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1103 =>    test:informationResourceInput <test-cases/0176.html>;
./test/tc0007/manifest.ttl:1104 =>    test:informationResourceResults <test-cases/0176.sparql>;
./test/tc0007/manifest.ttl:1105 =>    test:purpose "Checks to make sure that a URI may be used as @rel and @rev values";
./test/tc0007/manifest.ttl:1106 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1107 => <test-cases/0177> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1109 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1110 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1111 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1113 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1114 =>    test:informationResourceInput <test-cases/0177.html>;
./test/tc0007/manifest.ttl:1115 =>    test:informationResourceResults <test-cases/0177.sparql>;
./test/tc0007/manifest.ttl:1116 =>    test:purpose "Checks to make sure @prefix with a single entry creates a URI mapping";
./test/tc0007/manifest.ttl:1117 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1118 => <test-cases/0178> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1120 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1121 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1122 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1124 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1125 =>    test:informationResourceInput <test-cases/0178.html>;
./test/tc0007/manifest.ttl:1126 =>    test:informationResourceResults <test-cases/0178.sparql>;
./test/tc0007/manifest.ttl:1127 =>    test:purpose "Checks to make sure @prefix with multiple entires creates multiple URI mappings";
./test/tc0007/manifest.ttl:1128 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1129 => <test-cases/0179> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1131 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1132 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1133 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1135 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1136 =>    test:informationResourceInput <test-cases/0179.html>;
./test/tc0007/manifest.ttl:1137 =>    test:informationResourceResults <test-cases/0179.sparql>;
./test/tc0007/manifest.ttl:1138 =>    test:purpose "Checks to make sure @prefix has a higher priority than @xmlns";
./test/tc0007/manifest.ttl:1139 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1140 => <test-cases/0180> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1142 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1143 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1144 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1146 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1147 =>    test:informationResourceInput <test-cases/0180.html>;
./test/tc0007/manifest.ttl:1148 =>    test:informationResourceResults <test-cases/0180.sparql>;
./test/tc0007/manifest.ttl:1149 =>    test:purpose "Checks to make sure @prefix with empty prefix does not create a mapping.";
./test/tc0007/manifest.ttl:1150 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1151 => <test-cases/0181> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1153 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1154 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1155 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1157 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1158 =>    test:informationResourceInput <test-cases/0181.html>;
./test/tc0007/manifest.ttl:1159 =>    test:informationResourceResults <test-cases/0181.sparql>;
./test/tc0007/manifest.ttl:1160 =>    test:purpose "Checks Tests a CURIE with default namespace uses XHTML Vocabulary namespace.";
./test/tc0007/manifest.ttl:1161 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1162 => <test-cases/0182> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1164 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1165 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1166 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1168 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1169 =>    test:informationResourceInput <test-cases/0182.html>;
./test/tc0007/manifest.ttl:1170 =>    test:informationResourceResults <test-cases/0182.sparql>;
./test/tc0007/manifest.ttl:1171 =>    test:purpose "Checks to be sure that prefixes are defined within the element hierarchy.";
./test/tc0007/manifest.ttl:1172 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1173 => <test-cases/0183> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1175 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1176 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1177 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1179 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1180 =>    test:informationResourceInput <test-cases/0183.html>;
./test/tc0007/manifest.ttl:1181 =>    test:informationResourceResults <test-cases/0183.sparql>;
./test/tc0007/manifest.ttl:1182 =>    test:purpose "A new @xmlns definition should override a previous @prefix definition at this element.";
./test/tc0007/manifest.ttl:1183 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1184 => <test-cases/0184> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1186 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1187 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1188 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1190 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1191 =>    test:informationResourceInput <test-cases/0184.html>;
./test/tc0007/manifest.ttl:1192 =>    test:informationResourceResults <test-cases/0184.sparql>;
./test/tc0007/manifest.ttl:1193 =>    test:purpose "Check that @profile imports terms";
./test/tc0007/manifest.ttl:1194 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1195 => <test-cases/0185> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1197 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1198 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1199 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1201 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1202 =>    test:informationResourceInput <test-cases/0185.html>;
./test/tc0007/manifest.ttl:1203 =>    test:informationResourceResults <test-cases/0185.sparql>;
./test/tc0007/manifest.ttl:1204 =>    test:purpose "Check that @profile imports prefixes";
./test/tc0007/manifest.ttl:1205 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1206 => <test-cases/0186> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1208 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1209 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1210 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1212 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1213 =>    test:informationResourceInput <test-cases/0186.html>;
./test/tc0007/manifest.ttl:1214 =>    test:informationResourceResults <test-cases/0186.sparql>;
./test/tc0007/manifest.ttl:1215 =>    test:purpose "Check that @vocab defines a new default mapping";
./test/tc0007/manifest.ttl:1216 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1217 => <test-cases/0187> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1219 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1220 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1221 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1223 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1224 =>    test:informationResourceInput <test-cases/0187.html>;
./test/tc0007/manifest.ttl:1225 =>    test:informationResourceResults <test-cases/0187.sparql>;
./test/tc0007/manifest.ttl:1226 =>    test:purpose "Check that @vocab redefines a previous @vocab definition";
./test/tc0007/manifest.ttl:1227 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1228 => <test-cases/0188> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1230 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1231 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1232 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1234 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1235 =>    test:informationResourceInput <test-cases/0188.html>;
./test/tc0007/manifest.ttl:1236 =>    test:informationResourceResults <test-cases/0188.sparql>;
./test/tc0007/manifest.ttl:1237 =>    test:purpose "Check that @vocab defines a new default mapping";
./test/tc0007/manifest.ttl:1238 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1239 => <test-cases/0189> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1241 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1242 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1243 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1245 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1246 =>    test:informationResourceInput <test-cases/0189.html>;
./test/tc0007/manifest.ttl:1247 =>    test:informationResourceResults <test-cases/0189.sparql>;
./test/tc0007/manifest.ttl:1248 =>    test:purpose "Check that @vocab does not change a default term from XHV";
./test/tc0007/manifest.ttl:1249 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1250 => <test-cases/0190> dc:contributor "Ivan Herman";
./test/tc0004/rdfcore/Manifest.rdf:929 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:930 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:932 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:935 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test007">
./test/tc0004/rdfcore/Manifest.rdf:937 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:938 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:939 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:940 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:941 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:943 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:945 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:946 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:947 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:949 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:950 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test007.nt" />
./test/tc0004/rdfcore/Manifest.rdf:951 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:953 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:956 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/Manifest.rdf#test008">
./test/tc0004/rdfcore/Manifest.rdf:958 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-containers-syntax-vs-schema" />
./test/tc0004/rdfcore/Manifest.rdf:959 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:960 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jul/0000.html" />
./test/tc0004/rdfcore/Manifest.rdf:961 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:962 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:964 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:966 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:967 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:968 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:970 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:971 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-containers-syntax-vs-schema/test008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:972 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:974 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:978 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-element-not-mandatory/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:980 =>    <!-- <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-charmod-literals" /> -->
./test/tc0004/rdfcore/Manifest.rdf:982 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:983 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Oct/0071.html" />
./test/tc0004/rdfcore/Manifest.rdf:985 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:987 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:989 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:990 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-element-not-mandatory/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:991 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:993 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:994 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-element-not-mandatory/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:995 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:997 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:999 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0001">
./test/tc0004/rdfcore/Manifest.rdf:1001 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1002 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1003 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1004 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1005 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1007 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1009 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1010 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1011 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1013 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1016 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0002">
./test/tc0004/rdfcore/Manifest.rdf:1018 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1019 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1020 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1021 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1022 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1024 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1026 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1027 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1028 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1030 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1033 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0003">
./test/tc0004/rdfcore/Manifest.rdf:1035 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1036 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1037 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1038 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1039 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1041 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1043 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1044 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1045 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1047 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1050 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0004">
./test/tc0004/rdfcore/Manifest.rdf:1052 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1053 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1054 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1055 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1056 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1058 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1060 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1061 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1062 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1064 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1067 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0005">
./test/tc0004/rdfcore/Manifest.rdf:1069 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1070 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1071 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1072 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1073 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1075 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1077 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1078 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1079 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1081 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1084 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0006">
./test/tc0004/rdfcore/Manifest.rdf:1086 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1087 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1088 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1089 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1090 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1092 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1094 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1095 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1096 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1098 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1101 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0007">
./test/tc0004/rdfcore/Manifest.rdf:1103 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1104 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1105 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1106 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1107 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1109 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1111 =>    <test:inputDocument>
./node_modules/acorn/dist/acorn_loose.js:1258 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1261 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/acorn/dist/acorn_loose.js:1279 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) || /[enwfd]/.test(ch) && /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos));
./node_modules/asn1.js/lib/asn1/base/node.js:405 =>   else if (/str$/.test(tag))
./node_modules/asn1.js/lib/asn1/base/node.js:608 =>   if (/str$/.test(tag))
./node_modules/babylon/lib/index.js:1161 =>       if (lineBreak.test(ch)) {
./node_modules/babylon/lib/index.js:1185 =>       if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
./node_modules/babylon/lib/index.js:1261 =>     } else if (/[89]/.test(str) || this.state.strict) {
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:261 =>     var tester = require(dir + '/main.js');
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:263 =>     tester(t, function (err, res, pkg){
./node_modules/browser-resolve/node_modules/resolve/test/resolver.js:272 => test('#25: node modules with the same name as node stdlib modules', function (t) {
./node_modules/buffer/test/node/test-buffer-alloc.js:760 =>   // test an invalid slice end.
./node_modules/buffer/test/node/test-buffer-alloc.js:947 =>   // test offset returns are correct
./node_modules/buffer/test/node/test-buffer-alloc.js:957 =>   // test unmatched surrogates not producing invalid utf8 output
./node_modules/buffer/test/node/test-buffer-alloc.js:971 =>   // test for buffer overrun
./node_modules/buffer/test/node/test-buffer-alloc.js:1001 =>   // Regression test, guard against buffer overrun in the base64 decoder.
./node_modules/buffer/test/node/test-buffer-alloc.js:1043 =>   var buffer = Buffer.from('test');
./node_modules/chai/lib/chai/core/assertions.js:435 =>    *     function test () {
./node_modules/chai/chai.js:2175 =>    * Write your own test expressions.
./node_modules/chai/chai.js:2180 =>    * @param {Mixed} expression to test for truthiness
./node_modules/chai/chai.js:2188 =>     var test = new Assertion(null, null, chai.assert);
./node_modules/chai/chai.js:2189 =>     test.assert(
./node_modules/chai/chai.js:2229 =>    * @param {Mixed} object to test
./node_modules/chai/chai.js:2249 =>    * @param {Mixed} object to test
./node_modules/chai/chai.js:2275 =>     var test = new Assertion(act, msg, assert.equal);
./node_modules/chai/chai.js:2277 =>     test.assert(
./node_modules/chai/chai.js:2278 =>         exp == flag(test, 'object')
./node_modules/chai/chai.js:2302 =>     var test = new Assertion(act, msg, assert.notEqual);
./node_modules/chai/chai.js:2304 =>     test.assert(
./node_modules/chai/chai.js:2305 =>         exp != flag(test, 'object')
./node_modules/buffer/test/node/test-buffer.js:766 =>   // test an invalid slice end.
./node_modules/buffer/test/node/test-buffer.js:970 =>   // test offset returns are correct
./node_modules/buffer/test/node/test-buffer.js:980 =>   // test unmatched surrogates not producing invalid utf8 output
./node_modules/buffer/test/node/test-buffer.js:994 =>   // test for buffer overrun
./node_modules/buffer/test/node/test-buffer.js:1025 =>   // Regression test, guard against buffer overrun in the base64 decoder.
./node_modules/core-js/client/core.js:1511 => 	    function(test, buggy, set){
./node_modules/core-js/client/core.js:1514 => 	        set(test, []);
./node_modules/core-js/client/core.js:1515 => 	        buggy = !(test instanceof Array);
./node_modules/core-js/client/core.js:1534 => 	  , test    = {};
./node_modules/core-js/client/core.js:1535 => 	test[__webpack_require__(23)('toStringTag')] = 'z';
./node_modules/core-js/client/core.js:1536 => 	if(test + '' != '[object z]'){
./node_modules/core-js/client/library.js:1486 => 	    function(test, buggy, set){
./node_modules/core-js/client/library.js:1489 => 	        set(test, []);
./node_modules/core-js/client/library.js:1490 => 	        buggy = !(test instanceof Array);
./node_modules/core-js/client/shim.js:1497 => 	    function(test, buggy, set){
./node_modules/core-js/client/shim.js:1500 => 	        set(test, []);
./node_modules/core-js/client/shim.js:1501 => 	        buggy = !(test instanceof Array);
./node_modules/core-js/client/shim.js:1520 => 	  , test    = {};
./node_modules/core-js/client/shim.js:1521 => 	test[__webpack_require__(23)('toStringTag')] = 'z';
./node_modules/core-js/client/shim.js:1522 => 	if(test + '' != '[object z]'){
./node_modules/syntax-error/node_modules/acorn/src/statement.js:128 =>   node.test = this.parseParenExpression()
./node_modules/syntax-error/node_modules/acorn/src/statement.js:179 =>   node.test = this.parseParenExpression()
./node_modules/syntax-error/node_modules/acorn/src/statement.js:218 =>         cur.test = this.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:65 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:79 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/dist/acorn.js:71 =>     if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/dist/acorn.js:85 =>     if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:240 =>         } else if (/unexpected character/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:243 =>         } else if (/regular expression/i.test(msg)) {
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:267 =>     this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) ||
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:268 =>       /[enwfd]/.test(ch) &&
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:269 =>       /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:337 =>       node.test = this.eat(acorn.tokTypes._while) ? this.parseParenExpression() : this.dummyIdent()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:365 =>       node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:392 =>           if (isCase) cur.test = this$1.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:393 =>           else cur.test = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:399 =>             cur.test = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:438 =>       node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:263 =>     /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:331 =>     node.test = this.eat(tokTypes._while) ? this.parseParenExpression() : this.dummyIdent()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:359 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:386 =>         if (isCase) cur.test = this$1.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:387 =>         else cur.test = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:393 =>           cur.test = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:432 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:493 =>   node.test = node.update = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:494 =>   if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.semi) node.test = this.parseExpression()
./node_modules/detective/node_modules/acorn/dist/walk.es.js:298 =>   c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/dist/walk.js:304 =>     c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/identifier.js:65 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/src/identifier.js:79 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
./node_modules/detective/node_modules/acorn/src/statement.js:242 =>         cur.test = this.parseExpression()
./node_modules/detective/node_modules/acorn/src/statement.js:246 =>         cur.test = null
./node_modules/detective/node_modules/acorn/src/statement.js:262 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
./node_modules/detective/node_modules/acorn/src/statement.js:302 =>   node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/src/statement.js:374 =>   node.test = this.type === tt.semi ? null : this.parseExpression()
./node_modules/detective/node_modules/acorn/src/tokenize.js:406 =>     if (lineBreak.test(ch)) this.raise(start, "Unterminated regular expression")
./node_modules/detective/node_modules/acorn/src/tokenize.js:424 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
./node_modules/es6-promise/dist/test/browserify.js:1080 => require("./tests/2.1.2");
./node_modules/es6-promise/dist/test/browserify.js:1081 => require("./tests/2.1.3");
./node_modules/es6-promise/dist/test/browserify.js:1082 => require("./tests/2.2.1");
./node_modules/es6-promise/dist/test/browserify.js:1083 => require("./tests/2.2.2");
./node_modules/es6-promise/dist/test/browserify.js:1084 => require("./tests/2.2.3");
./node_modules/es6-promise/dist/test/browserify.js:1085 => require("./tests/2.2.4");
./node_modules/es6-promise/dist/test/browserify.js:1086 => require("./tests/2.2.5");
./node_modules/es6-promise/dist/test/browserify.js:1087 => require("./tests/2.2.6");
./node_modules/es6-promise/dist/test/browserify.js:1088 => require("./tests/2.2.7");
./node_modules/es6-promise/dist/test/browserify.js:1089 => require("./tests/2.3.1");
./node_modules/es6-promise/dist/test/browserify.js:1090 => require("./tests/2.3.2");
./node_modules/es6-promise/dist/test/browserify.js:1091 => require("./tests/2.3.3");
./node_modules/es6-promise/dist/test/browserify.js:1092 => require("./tests/2.3.4");
./node_modules/es6-promise/dist/test/browserify.js:1094 => },{"./tests/2.1.2":8,"./tests/2.1.3":9,"./tests/2.2.1":10,"./tests/2.2.2":11,"./tests/2.2.3":12,"./tests/2.2.4":13,"./tests/2.2.5":14,"./tests/2.2.6":15,"./tests/2.2.7":16,"./tests/2.3.1":17,"./tests/2.3.2":18,"./tests/2.3.3":19,"./tests/2.3.4":20}],8:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1099 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:1104 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1107 =>     testFulfilled(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:1036 =>      * Describe a specification or test-case
./node_modules/es6-promise/dist/test/mocha.js:1044 =>       var test = new Test(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1045 =>       test.file = file;
./node_modules/es6-promise/dist/test/mocha.js:1046 =>       suite.addTest(test);
./node_modules/es6-promise/dist/test/mocha.js:1047 =>       return test;
./node_modules/es6-promise/dist/test/mocha.js:1051 =>      * Exclusive test-case.
./node_modules/es6-promise/dist/test/mocha.js:1055 =>       var test = context.it(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1056 =>       var reString = '^' + escapeRe(test.fullTitle()) + '$';
./node_modules/es6-promise/dist/test/mocha.js:1058 =>       return test;
./node_modules/es6-promise/dist/test/mocha.js:1062 =>      * Pending test case.
./node_modules/es6-promise/dist/test/mocha.js:1082 =>   , Test = require('../test');
./node_modules/es6-promise/dist/test/mocha.js:1125 =>             var test = new Test(key, fn);
./node_modules/es6-promise/dist/test/mocha.js:1126 =>             test.file = file;
./node_modules/es6-promise/dist/test/mocha.js:1127 =>             suites[0].addTest(test);
./node_modules/es6-promise/dist/test/mocha.js:1157 =>   , Test = require('../test')
./node_modules/es6-promise/dist/test/mocha.js:1166 =>  *     test('#length', function(){
./node_modules/es6-promise/dist/test/mocha.js:1171 =>  *     test('#indexOf()', function(){
./node_modules/es6-promise/dist/test/mocha.js:1180 =>  *     test('#length', function(){
./node_modules/es6-promise/dist/test/mocha.js:1192 =>      * Execute before running tests.
./node_modules/es6-promise/dist/test/mocha.js:1200 =>      * Execute after running tests.
./node_modules/es6-promise/dist/test/mocha.js:1208 =>      * Execute before each test case.
./node_modules/es6-promise/dist/test/mocha.js:1216 =>      * Execute after each test case.
./node_modules/es6-promise/dist/test/mocha.js:1236 =>      * Exclusive test-case.
./node_modules/es6-promise/dist/test/mocha.js:1245 =>      * Describe a specification or test-case
./node_modules/es6-promise/dist/test/mocha.js:1250 =>     context.test = function(title, fn){
./node_modules/es6-promise/dist/test/mocha.js:1251 =>       var test = new Test(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1252 =>       test.file = file;
./node_modules/es6-promise/dist/test/mocha.js:1253 =>       suites[0].addTest(test);
./node_modules/es6-promise/dist/test/mocha.js:1254 =>       return test;
./node_modules/es6-promise/dist/test/mocha.js:1258 =>      * Exclusive test-case.
./node_modules/es6-promise/dist/test/mocha.js:1261 =>     context.test.only = function(title, fn){
./node_modules/es6-promise/dist/test/mocha.js:1262 =>       var test = context.test(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1263 =>       var reString = '^' + escapeRe(test.fullTitle()) + '$';
./node_modules/es6-promise/dist/test/mocha.js:1268 =>      * Pending test case.
./node_modules/es6-promise/dist/test/mocha.js:1271 =>     context.test.skip = function(title){
./node_modules/es6-promise/dist/test/mocha.js:1272 =>       context.test(title);
./node_modules/es6-promise/dist/test/mocha.js:1286 =>   , Test = require('../test')
./node_modules/es6-promise/dist/test/mocha.js:1299 =>  *          test('should return -1 when not present', function(){
./node_modules/es6-promise/dist/test/mocha.js:1303 =>  *          test('should return the index when present', function(){
./node_modules/es6-promise/dist/test/mocha.js:1321 =>      * Execute before each test case.
./node_modules/es6-promise/dist/test/mocha.js:1329 =>      * Execute after each test case.
./node_modules/es6-promise/dist/test/mocha.js:1355 =>      * and/or tests.
./node_modules/es6-promise/dist/test/mocha.js:1379 =>      * Exclusive test-case.
./node_modules/es6-promise/dist/test/mocha.js:1388 =>      * Describe a specification or test-case
./node_modules/es6-promise/dist/test/mocha.js:1393 =>     context.test = function(title, fn){
./node_modules/es6-promise/dist/test/mocha.js:1396 =>       var test = new Test(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1397 =>       test.file = file;
./node_modules/es6-promise/dist/test/mocha.js:1398 =>       suite.addTest(test);
./node_modules/es6-promise/dist/test/mocha.js:1399 =>       return test;
./node_modules/es6-promise/dist/test/mocha.js:1403 =>      * Exclusive test-case.
./node_modules/es6-promise/dist/test/mocha.js:1406 =>     context.test.only = function(title, fn){
./node_modules/es6-promise/dist/test/mocha.js:1407 =>       var test = context.test(title, fn);
./node_modules/es6-promise/dist/test/mocha.js:1408 =>       var reString = '^' + escapeRe(test.fullTitle()) + '$';
./node_modules/es6-promise/dist/test/mocha.js:1413 =>      * Pending test case.
./node_modules/es6-promise/dist/test/mocha.js:1416 =>     context.test.skip = function(title){
./node_modules/es6-promise/dist/test/mocha.js:1417 =>       context.test(title);
./node_modules/fs-readline/test/fixtures/afile.txt:323 => "Hotel Cosmopolitan Jewel Robbery. John Horner, 26, plumber, was brought up upon the charge of having upon the 22nd inst., abstracted from the jewel-case of the Countess of Morcar the valuable gem known as the blue carbuncle. James Ryder, upper-attendant at the hotel, gave his evidence to the effect that he had shown Horner up to the dressing-room of the Countess of Morcar upon the day of the robbery in order that he might solder the second bar of the grate, which was loose. He had remained with Horner some little time, but had finally been called away. On returning, he found that Horner had disappeared, that the bureau had been forced open, and that the small morocco casket in which, as it afterwards transpired, the Countess was accustomed to keep her jewel, was lying empty upon the dressing-table. Ryder instantly gave the alarm, and Horner was arrested the same evening; but the stone could not be found either upon his person or in his rooms. Catherine Cusack, maid to the Countess, deposed to having heard Ryder's cry of dismay on discovering the robbery, and to having rushed into the room, where she found matters as described by the last witness. Inspector Bradstreet, B division, gave evidence as to the arrest of Horner, who struggled frantically, and protested his innocence in the strongest terms. Evidence of a previous conviction for robbery having been given against the prisoner, the magistrate refused to deal summarily with the offence, but referred it to the Assizes. Horner, who had shown signs of intense emotion during the proceedings, fainted away at the conclusion and was carried out of court."
./node_modules/fs-readline/test/fixtures/afile.txt:351 => "It is, I think, much more likely that Henry Baker is an absolutely innocent man, who had no idea that the bird which he was carrying was of considerably more value than if it were made of solid gold. That, however, I shall determine by a very simple test if we have an answer to our advertisement."
./node_modules/hoek/test/index.js:1644 =>         expect(stack[0]).to.contain(Path.normalize('/test/index.js') + ':');
./node_modules/hoek/test/index.js:1666 =>     it('exits process when not in test mode', function (done) {
./node_modules/hoek/test/index.js:1672 =>         process.env.NODE_ENV = 'nottatest';
./node_modules/hoek/test/index.js:1687 =>     it('throws when not in test mode and abortThrow is true', function (done) {
./node_modules/hoek/test/index.js:1690 =>         process.env.NODE_ENV = 'nottatest';
./node_modules/hoek/test/index.js:1730 =>     it('throws in test mode', function (done) {
./node_modules/hoek/test/index.js:1733 =>         process.env.NODE_ENV = 'test';
./node_modules/hoek/test/index.js:1744 =>     it('throws in test mode with default message', function (done) {
./node_modules/hoek/test/index.js:1747 =>         process.env.NODE_ENV = 'test';
./node_modules/hoek/test/index.js:1786 =>     it('throws an Error when using assert in a test', function (done) {
./node_modules/hoek/test/index.js:1797 =>     it('throws an Error when using assert in a test with no message', function (done) {
./node_modules/hoek/test/index.js:1808 =>     it('throws an Error when using assert in a test with multipart message', function (done) {
./node_modules/hoek/test/index.js:1819 =>     it('throws an Error when using assert in a test with multipart message (empty)', function (done) {
./node_modules/hoek/test/index.js:1830 =>     it('throws an Error when using assert in a test with object message', function (done) {
./node_modules/hoek/test/index.js:1841 =>     it('throws an Error when using assert in a test with multipart string and error messages', function (done) {
./node_modules/hoek/test/index.js:1852 =>     it('throws an Error when using assert in a test with error object message', function (done) {
./node_modules/JSONStream/test/fixtures/all_npm.json:286 => {"id":"banzai-statestore-couchdb","key":"banzai-statestore-couchdb","value":{"rev":"5-c965442821741ce6f20e266fe43aea4a"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:287 => {"id":"banzai-statestore-mem","key":"banzai-statestore-mem","value":{"rev":"3-a0891a1a2344922d91781c332ed26528"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:315 => {"id":"beantest","key":"beantest","value":{"rev":"7-52d8160a0c0420c7d659b2ee10f26644"}},
./node_modules/jsonld/node_modules/xmldom/dom.js:925 => 		if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
./node_modules/jsonld/node_modules/xmldom/dom.js:928 => 			if(isHTML && /^script$/i.test(nodeName)){
./node_modules/jsonld/tests/webidl/idlharness.js:703 =>     // operations, . . .).  These are run even if .untested is true, because
./node_modules/jsonld/tests/webidl/idlharness.js:704 =>     // members might themselves be marked as .untested.  This might happen to
./node_modules/jsonld/tests/webidl/idlharness.js:705 =>     // interfaces if the interface itself is untested but a partial interface
./node_modules/jsonld/tests/webidl/idlharness.js:706 =>     // that extends it is tested -- then the interface itself and its initial
./node_modules/jsonld/tests/webidl/idlharness.js:707 =>     // members will be marked as untested, but the members added by the partial
./node_modules/jsonld/tests/webidl/idlharness.js:708 =>     // interface are still tested.
./node_modules/jsonld/tests/webidl/idlharness.js:709 =>     this.test_members();
./node_modules/jsonld/tests/webidl/idlharness.js:717 => IdlException.prototype.test_self = function()
./node_modules/jsonld/tests/webidl/idlharness.js:720 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:751 =>         // Not much to test for this.
./node_modules/jsonld/tests/webidl/idlharness.js:769 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:818 =>     test(function()
./node_modules/lodash/lodash.min.js:110 => On.conformsTo=function(n,t){return null==t||bt(n,t,Lu(t))},On.deburr=Tu,On.defaultTo=function(n,t){return null==n||n!==n?t:n},On.divide=rc,On.endsWith=function(n,t,r){n=zu(n),t=jr(t);var e=n.length,e=r=r===F?e:gt(Ou(r),0,e);return r-=t.length,0<=r&&n.slice(r,e)==t},On.eq=hu,On.escape=function(n){return(n=zu(n))&&Y.test(n)?n.replace(H,et):n},On.escapeRegExp=function(n){return(n=zu(n))&&fn.test(n)?n.replace(on,"\\$&"):n},On.every=function(n,t,r){var e=af(n)?o:wt;return r&&ze(n,t,r)&&(t=F),e(n,je(t,3));
./node_modules/jsonld/tests/webidl/testharness.js:846 =>         assert(expected.test(actual),
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:457 =>         getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:466 =>     var nativeBind = reNative.test(nativeBind = toString.bind) && nativeBind,
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:467 =>         nativeCreate = reNative.test(nativeCreate =  Object.create) && nativeCreate,
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:468 =>         nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:471 =>         nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:479 =>     var isIeOpera = reNative.test(context.attachEvent),
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:480 =>         isV8 = nativeBind && !/\n|true/.test(nativeBind + isIeOpera);
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:436 => 	// See test/unit/core.js for details concerning isFunction.
./node_modules/mocha/CHANGELOG.md:1438 =>   * Fixed pending test support for HTML reporter. Closes #66
./node_modules/mocha/CHANGELOG.md:1444 =>   * Fixed "test end" event for uncaughtExceptions. Closes #61
./node_modules/mocha/CHANGELOG.md:1456 =>   * Fixed errors thrown in sync test-cases due to nextTick
./node_modules/mocha/CHANGELOG.md:1474 =>   * Added `-s, --slow <ms>` to specify "slow" test threshold
./node_modules/mocha/CHANGELOG.md:1477 =>   * Added: default [files] to _test/*.js_
./node_modules/mocha/CHANGELOG.md:1479 =>   * Changed: bright yellow for slow Dot reporter tests
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:355 => - [647d37f](https://github.com/bcoe/yargs/commit/647d37f164c20f4bafbf67dd9db6cd6e2cd3b49f) Merge branch 'rewrite-duplicate-test' of github.com:isbadawi/node-optimist (@chevex)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:370 => - [d37bfe0](https://github.com/bcoe/yargs/commit/d37bfe05ae6d295a0ab481efe4881222412791f4) all tests passing using minimist (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:371 => - [76f1352](https://github.com/bcoe/yargs/commit/76f135270399d01f2bbc621e524a5966e5c422fd) all parse tests now passing (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:372 => - [a7b6754](https://github.com/bcoe/yargs/commit/a7b6754276c38d1565479a5685c3781aeb947816) using minimist, some tests passing (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:378 => - [5a3dd1a](https://github.com/bcoe/yargs/commit/5a3dd1a4e0211a38613c6e02f61328e1031953fa) failing test for whitespace arg (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:382 => - [b13bd4c](https://github.com/bcoe/yargs/commit/b13bd4cac856a9821d42fa173bdb58f089365a7d) failing test for parse() with modifiers (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:388 => - [dafe3e1](https://github.com/bcoe/yargs/commit/dafe3e18d7c6e7c2d68e06559df0e5cbea3adb14) failing short test (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:399 => - [5045122](https://github.com/bcoe/yargs/commit/5045122664c3f5b4805addf1be2148d5856f7ce8) set $0 properly in the tests (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:403 => - [8f44aeb](https://github.com/bcoe/yargs/commit/8f44aeb74121ddd689580e2bf74ef86a605e9bf2) Fix failing test for aliased booleans. (@coderarity)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:404 => - [b9f7b61](https://github.com/bcoe/yargs/commit/b9f7b613b1e68e11e6c23fbda9e555a517dcc976) Add failing test for short aliased booleans. (@coderarity)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:413 => - [88e5d32](https://github.com/bcoe/yargs/commit/88e5d32295be6e544c8d355ff84e355af38a1c74) test/usage.js no longer hangs (@jfhbrook)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:414 => - [e1e740c](https://github.com/bcoe/yargs/commit/e1e740c27082f3ce84deca2093d9db2ef735d0e5) two tests for combined boolean/alias opts parsing (@jfhbrook)
./node_modules/mocha/mocha.js:2657 =>     var name = (/pass/).test(report.className) ? '' : ' pass';
./node_modules/mocha/mocha.js:2660 =>       hideSuitesWithout('test pass');
./node_modules/mocha/mocha.js:2668 =>     var name = (/fail/).test(report.className) ? '' : ' fail';
./node_modules/mocha/mocha.js:2671 =>       hideSuitesWithout('test fail');
./node_modules/mocha/mocha.js:2705 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:2706 =>     var url = self.testURL(test);
./node_modules/mocha/mocha.js:2707 =>     var markup = '<li class="test pass %e"><h2>%e<span class="duration">%ems</span> ' +
./node_modules/mocha/mocha.js:2709 =>     var el = fragment(markup, test.speed, test.title, test.duration, url);
./node_modules/mocha/mocha.js:2710 =>     self.addCodeToggle(el, test.body);
./node_modules/mocha/mocha.js:2715 =>   runner.on('fail', function (test) {
./node_modules/mocha/mocha.js:2716 =>     var el = fragment('<li class="test fail"><h2>%e <a href="%e" class="replay">‣</a></h2></li>',
./node_modules/mocha/mocha.js:2717 =>       test.title, self.testURL(test));
./node_modules/mocha/mocha.js:2719 =>     var message = test.err.toString();
./node_modules/mocha/mocha.js:2724 =>       message = test.err.message;
./node_modules/mocha/mocha.js:2727 =>     if (test.err.stack) {
./node_modules/mocha/mocha.js:2728 =>       var indexOfMessage = test.err.stack.indexOf(test.err.message);
./node_modules/mocha/mocha.js:2730 =>         stackString = test.err.stack;
./node_modules/mocha/mocha.js:2732 =>         stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);
./node_modules/mocha/mocha.js:2734 =>     } else if (test.err.sourceURL && test.err.line !== undefined) {
./node_modules/mocha/mocha.js:2736 =>       stackString = '\n(' + test.err.sourceURL + ':' + test.err.line + ')';
./node_modules/mocha/mocha.js:2741 =>     if (test.err.htmlMessage && stackString) {
./node_modules/mocha/mocha.js:2743 =>         test.err.htmlMessage, stackString));
./node_modules/mocha/mocha.js:2744 =>     } else if (test.err.htmlMessage) {
./node_modules/mocha/mocha.js:2745 =>       el.appendChild(fragment('<div class="html-error">%s</div>', test.err.htmlMessage));
./node_modules/mocha/mocha.js:2750 =>     self.addCodeToggle(el, test.body);
./node_modules/mocha/mocha.js:2755 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:2756 =>     var el = fragment('<li class="test pass pending"><h2>%e</h2></li>', test.title);
./node_modules/mocha/mocha.js:2770 =>     var percent = stats.tests / runner.total * 100 | 0;
./node_modules/mocha/mocha.js:2810 =>  * Provide test URL.
./node_modules/mocha/mocha.js:2812 =>  * @param {Object} [test]
./node_modules/mocha/mocha.js:2814 => HTML.prototype.testURL = function (test) {
./node_modules/mocha/mocha.js:2815 =>   return makeUrl(test.fullTitle());
./node_modules/mocha/mocha.js:2819 =>  * Adds code toggle functionality for the provided test's list element.
./node_modules/node-mkdirp/node_modules/yargs/README.md:1222 => To run the tests with npm, just do:
./node_modules/node-mkdirp/node_modules/yargs/README.md:1224 =>     npm test
./node_modules/request/CHANGELOG.md:603 => - [#279](https://github.com/request/request/pull/279) fix tests with boundary by injecting boundry from header (@benatkin)
./node_modules/request/CHANGELOG.md:608 => - [#262](https://github.com/request/request/pull/262) JSON test should check for equality (@timshadel)
./node_modules/request/CHANGELOG.md:647 => - [#105](https://github.com/request/request/pull/105) added test for proxy option. (@dominictarr)
./node_modules/request/CHANGELOG.md:654 => - [#70](https://github.com/request/request/pull/70) add test script to package.json (@isaacs, @aheckmann)
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:448 =>         if (/-/.test(x)) {
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:510 =>     if (/^0x[0-9a-f]+$/i.test(x)) return true
./node_modules/node-mkdirp/node_modules/yargs/lib/parser.js:511 =>     return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x)
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:231 =>   if (node.test) c(node.test, st, "Expression");
./node_modules/syntax-error/node_modules/acorn/dist/walk.js:324 =>   c(node.test, st, "Expression");
./node_modules/syntax-error/node_modules/acorn/src/identifier.js:73 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))
./node_modules/syntax-error/node_modules/acorn/src/identifier.js:87 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))
./node_modules/uglify-js/lib/output.js:1314 =>         if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self)
./node_modules/uglify-js/node_modules/async/README.md:779 => ### doWhilst(fn, test, callback)
./node_modules/uglify-js/node_modules/async/README.md:781 => The post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.
./node_modules/uglify-js/node_modules/async/README.md:786 => ### until(test, fn, callback)
./node_modules/uglify-js/node_modules/async/README.md:788 => Repeatedly call fn, until test returns true. Calls the callback when stopped,
./node_modules/uglify-js/node_modules/async/README.md:796 => ### doUntil(fn, test, callback)
./node_modules/uglify-js/node_modules/async/README.md:798 => Like doWhilst except the test is inverted. Note the argument ordering differs from `until`.
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1084 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0119.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1085 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0119.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1095 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0120.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1096 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0120.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1106 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0121.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1107 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0121.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1117 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0122.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1118 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0122.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1127 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0123.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1128 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0123.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1136 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0124.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1137 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0124.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1146 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0125.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1147 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0125.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1155 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0126.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1156 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0126.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1164 =>          :informationResourceInput <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/1001.xhtml>;
./test/tc0007/rdfa-xhtml1-test-manifest.ttl:1165 =>          :informationResourceResults <http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/1001.sparql>;
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:896 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0089.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:897 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0089.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:899 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:903 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0090">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:906 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0090.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:907 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0090.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:909 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:913 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0091">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:916 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0091.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:917 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0091.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:919 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:923 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0092">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:926 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0092.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:927 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0092.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:929 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:933 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0093">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:936 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0093.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:937 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0093.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:939 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:943 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0094">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:946 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0094.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:947 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0094.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:949 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:953 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0095">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:956 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0095.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:957 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0095.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:959 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:964 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0096">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:967 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0096.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:968 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0096.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:970 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:975 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0097">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:978 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0097.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:979 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0097.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:981 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:986 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0098">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:989 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0098.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:990 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0098.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:992 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#rejected"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:996 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0099">
./test/tc0007/manifest.ttl:1252 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1253 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1254 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1256 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1257 =>    test:informationResourceInput <test-cases/0190.html>;
./test/tc0007/manifest.ttl:1258 =>    test:informationResourceResults <test-cases/0190.sparql>;
./test/tc0007/manifest.ttl:1259 =>    test:purpose "Check to ensure a mixed case term matches a case insensitive definition";
./test/tc0007/manifest.ttl:1260 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1261 => <test-cases/0193> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1263 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1264 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1265 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1267 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1268 =>    test:informationResourceInput <test-cases/0193.html>;
./test/tc0007/manifest.ttl:1269 =>    test:informationResourceResults <test-cases/0193.sparql>;
./test/tc0007/manifest.ttl:1270 =>    test:purpose "Check that @profile imports prefixes";
./test/tc0007/manifest.ttl:1271 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1272 => <test-cases/0195> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1274 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1275 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1276 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1278 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1279 =>    test:informationResourceInput <test-cases/0195.html>;
./test/tc0007/manifest.ttl:1280 =>    test:informationResourceResults <test-cases/0195.sparql>;
./test/tc0007/manifest.ttl:1281 =>    test:purpose "If any referenced RDFa Profile is not available, then the current element and its children must not place any triples in the default graph";
./test/tc0007/manifest.ttl:1282 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1283 => <test-cases/0196> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1285 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1286 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1287 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1289 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1290 =>    test:informationResourceInput <test-cases/0196.html>;
./test/tc0007/manifest.ttl:1291 =>    test:informationResourceResults <test-cases/0196.sparql>;
./test/tc0007/manifest.ttl:1292 =>    test:purpose "XMLLiteral must be explicitly specified, otherwise a normal untyped literal is created";
./test/tc0007/manifest.ttl:1293 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1294 => <test-cases/0197> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1296 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1297 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1298 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1300 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1301 =>    test:informationResourceInput <test-cases/0197.html>;
./test/tc0007/manifest.ttl:1302 =>    test:informationResourceResults <test-cases/0197.sparql>;
./test/tc0007/manifest.ttl:1303 =>    test:purpose "TERMorCURIEorAbsURI requires an absolute URI";
./test/tc0007/manifest.ttl:1304 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1305 => <test-cases/0198> dc:contributor "Shane P. McCarron";
./test/tc0007/manifest.ttl:1307 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1308 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1309 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1311 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1312 =>    test:informationResourceInput <test-cases/0198.html>;
./test/tc0007/manifest.ttl:1313 =>    test:informationResourceResults <test-cases/0198.sparql>;
./test/tc0007/manifest.ttl:1314 =>    test:purpose "Checks to ensure that when datatype is the default the parser generates triples for embedded content.";
./test/tc0007/manifest.ttl:1315 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1316 => <test-cases/0200> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1318 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1319 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1320 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1322 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1323 =>    test:informationResourceInput <test-cases/0200.html>;
./test/tc0007/manifest.ttl:1324 =>    test:informationResourceResults <test-cases/0200.sparql>;
./test/tc0007/manifest.ttl:1325 =>    test:purpose "Check to ensure that terms that differ only in case match to distinct URIs";
./test/tc0007/manifest.ttl:1326 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1327 => <test-cases/0201> dc:contributor "Manu Sporny";
./test/tc0007/manifest.ttl:1329 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1330 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1331 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1332 =>    rdfatest:hostLanguage "svgtiny1.2", "svg";
./test/tc0007/manifest.ttl:1333 =>    test:informationResourceInput <test-cases/0201.html>;
./test/tc0007/manifest.ttl:1334 =>    test:informationResourceResults <test-cases/0201.sparql>;
./test/tc0007/manifest.ttl:1335 =>    test:purpose "Tests @property to establish the predicate; literal object is in the content of the element.";
./test/tc0007/manifest.ttl:1336 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1337 => <test-cases/0202> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1339 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1340 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1341 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1342 =>    rdfatest:hostLanguage "svgtiny1.2", "svg";
./test/tc0007/manifest.ttl:1343 =>    test:informationResourceInput <test-cases/0202.html>;
./test/tc0007/manifest.ttl:1344 =>    test:informationResourceResults <test-cases/0202.sparql>;
./test/tc0007/manifest.ttl:1345 =>    test:purpose "Tests to make sure that @xml:base is used in SVG+RDFa.";
./test/tc0007/manifest.ttl:1346 =>    test:specificationReference "http://www.w3.org/QA/2008/12/rdfa_and_svg_tiny_and_the_rdfa.html" .
./test/tc0007/manifest.ttl:1347 => <test-cases/0203> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1349 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1350 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1351 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1352 =>    rdfatest:hostLanguage "svgtiny1.2", "svg";
./test/tc0007/manifest.ttl:1353 =>    test:informationResourceInput <test-cases/0203.html>;
./test/tc0007/manifest.ttl:1354 =>    test:informationResourceResults <test-cases/0203.sparql>;
./test/tc0007/manifest.ttl:1355 =>    test:purpose "Tests to make sure that @xml:base is used in non-root elements in SVG+RDFa.";
./test/tc0007/manifest.ttl:1356 =>    test:specificationReference "http://www.w3.org/QA/2008/12/rdfa_and_svg_tiny_and_the_rdfa.html" .
./test/tc0007/manifest.ttl:1357 => <test-cases/0204> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1359 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1360 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1361 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1363 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1364 =>    test:informationResourceInput <test-cases/0204.html>;
./test/tc0007/manifest.ttl:1365 =>    test:informationResourceResults <test-cases/0204.sparql>;
./test/tc0007/manifest.ttl:1366 =>    test:purpose "Check that profiles are processed in document order, so that terms defined in later profiles take precedence over those processed earlier";
./test/tc0007/manifest.ttl:1367 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1368 => <test-cases/0205> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1370 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1371 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1372 =>    test:classification test:deprecated;
./test/tc0007/manifest.ttl:1374 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1375 =>    test:informationResourceInput <test-cases/0205.html>;
./test/tc0007/manifest.ttl:1376 =>    test:informationResourceResults <test-cases/0205.sparql>;
./test/tc0007/manifest.ttl:1377 =>    test:purpose """
./test/tc0007/manifest.ttl:1381 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1382 => <test-cases/0206> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1384 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1385 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1386 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1387 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1388 =>    test:informationResourceInput <test-cases/0206.html>;
./test/tc0007/manifest.ttl:1389 =>    test:informationResourceResults <test-cases/0206.sparql>;
./test/tc0007/manifest.ttl:1390 =>    test:purpose "Tests whether the default RDFa 1.1 profile (which contains prefix definitions, among others, to the Semantic Web Standard vocabularies) is properly handled.";
./test/tc0007/manifest.ttl:1391 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1392 => <test-cases/0207> dc:contributor "Fabien Gandon";
./test/tc0007/manifest.ttl:1394 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1395 =>    rdfatest:rdfaVersion "rdfa1.0", "rdfa1.1";
./test/tc0007/manifest.ttl:1396 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1397 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1398 =>    test:informationResourceInput <test-cases/0207.html>;
./test/tc0007/manifest.ttl:1399 =>    test:informationResourceResults <test-cases/0207.sparql>;
./test/tc0007/manifest.ttl:1400 =>    test:purpose "Tests Vevent using @typeof (inlc. dtstart, dtend, etc.)";
./test/tc0007/manifest.ttl:1401 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1402 => <test-cases/0208> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1404 =>    a test:TestCase;
./test/tc0004/rdfcore/Manifest.rdf:1112 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1113 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1115 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1118 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0008">
./test/tc0004/rdfcore/Manifest.rdf:1120 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1121 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1122 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1123 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1124 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1126 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1128 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1129 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1130 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1132 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1135 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#error0009">
./test/tc0004/rdfcore/Manifest.rdf:1137 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1138 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1139 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1140 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1141 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1143 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1145 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1146 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/error0009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1147 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1149 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1152 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0001">
./test/tc0004/rdfcore/Manifest.rdf:1154 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1155 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1156 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1157 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1158 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1160 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1162 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1163 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1164 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1166 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1167 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1168 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1170 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1173 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0002">
./test/tc0004/rdfcore/Manifest.rdf:1175 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1176 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1177 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1178 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1179 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1181 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1183 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1184 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1185 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1187 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1188 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1189 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1191 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1194 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0003">
./test/tc0004/rdfcore/Manifest.rdf:1196 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1197 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1198 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1199 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1200 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1202 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1204 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1205 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1206 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1208 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1209 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1210 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1212 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1215 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0004">
./test/tc0004/rdfcore/Manifest.rdf:1217 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1218 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1219 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1220 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1221 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1223 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1225 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1226 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1227 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1229 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1230 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1231 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1233 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1236 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0005">
./test/tc0004/rdfcore/Manifest.rdf:1238 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1239 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1240 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1241 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1242 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1244 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1246 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1247 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1248 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1250 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1251 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1252 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1254 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1257 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0006">
./test/tc0004/rdfcore/Manifest.rdf:1259 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1260 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1261 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1262 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1263 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1265 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1267 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1268 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1269 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1271 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1272 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1273 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1275 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1278 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0007">
./test/tc0004/rdfcore/Manifest.rdf:1280 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1281 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1282 =>    <!-- <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1283 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1284 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1286 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1288 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1289 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1290 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1292 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1293 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0007.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1294 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1296 => </test:PositiveParserTest>
./node_modules/asn1.js/lib/asn1/base/node.js:629 =>   return /^[0-9 ]*$/.test(str);
./node_modules/asn1.js/lib/asn1/base/node.js:633 =>   return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
./node_modules/babel-polyfill/dist/polyfill.js:1522 =>   return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/babel-polyfill/dist/polyfill.js:1623 =>     function(test, buggy, set){
./node_modules/babel-polyfill/dist/polyfill.js:1626 =>         set(test, []);
./node_modules/babel-polyfill/dist/polyfill.js:1627 =>         buggy = !(test instanceof Array);
./node_modules/bn.js/lib/bn.js:2081 =>   BN.prototype.testn = function testn (bit) {
./node_modules/babylon/lib/index.js:1482 =>       return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:63 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:178 =>         if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:254 =>         lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/buffer/test/node/test-buffer-alloc.js:1057 =>   var buf = Buffer.from('test');
./node_modules/buffer/test/node/test-buffer-alloc.js:1168 => // test for common read(U)IntLE/BE
./node_modules/buffer/test/node/test-buffer-alloc.js:1190 => // test for common write(U)IntLE/BE
./node_modules/buffer/test/node/test-buffer-alloc.js:1283 => // test Buffer slice
./node_modules/chai/lib/chai/core/assertions.js:923 =>    *     expect('test').to.have.ownProperty('length');
./node_modules/buffer/test/node/test-buffer.js:1059 =>   var buffer = new Buffer('test');
./node_modules/buffer/test/node/test-buffer.js:1073 =>   var buf = new Buffer('test');
./node_modules/buffer/test/node/test-buffer.js:1194 => // test for common read(U)IntLE/BE
./node_modules/buffer/test/node/test-buffer.js:1216 => // test for common write(U)IntLE/BE
./node_modules/buffer/test/node/test-buffer.js:1309 => // test Buffer slice
./node_modules/core-js/client/library.js:1920 => 	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/concat-stream/node_modules/readable-stream/lib/_stream_readable.js:795 => // exposed for testing purposes only.
./node_modules/syntax-error/node_modules/acorn/src/statement.js:222 =>         cur.test = null
./node_modules/syntax-error/node_modules/acorn/src/statement.js:238 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
./node_modules/syntax-error/node_modules/acorn/src/statement.js:278 =>   node.test = this.parseParenExpression()
./node_modules/syntax-error/node_modules/acorn/src/statement.js:350 =>   node.test = this.type === tt.semi ? null : this.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:499 =>     node.test = node.update = null
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:500 =>     if (this.eat(acorn.tokTypes.semi) && this.tok.type !== acorn.tokTypes.semi) node.test = this.parseExpression()
./node_modules/detective/node_modules/acorn/src/expression.js:520 =>     if (this.keywords.test(prop.key.name) ||
./node_modules/detective/node_modules/acorn/src/expression.js:521 =>         (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||
./node_modules/detective/node_modules/acorn/src/expression.js:672 =>     if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&
./node_modules/detective/node_modules/acorn/src/walk/index.js:56 => function makeTest(test) {
./node_modules/detective/node_modules/acorn/src/walk/index.js:57 =>   if (typeof test == "string")
./node_modules/detective/node_modules/acorn/src/walk/index.js:58 =>     return type => type == test
./node_modules/detective/node_modules/acorn/src/walk/index.js:59 =>   else if (!test)
./node_modules/detective/node_modules/acorn/src/walk/index.js:62 =>     return test
./node_modules/detective/node_modules/acorn/src/walk/index.js:72 => export function findNodeAt(node, start, end, test, base, state) {
./node_modules/detective/node_modules/acorn/src/walk/index.js:73 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/src/walk/index.js:83 =>           test(type, node))
./node_modules/detective/node_modules/acorn/src/walk/index.js:94 => export function findNodeAround(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/src/walk/index.js:95 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/src/walk/index.js:102 =>       if (test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/src/walk/index.js:111 => export function findNodeAfter(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/src/walk/index.js:112 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/src/walk/index.js:118 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st)
./node_modules/detective/node_modules/acorn/src/walk/index.js:128 => export function findNodeBefore(node, pos, test, base, state) {
./node_modules/detective/node_modules/acorn/src/walk/index.js:129 =>   test = makeTest(test)
./node_modules/detective/node_modules/acorn/src/walk/index.js:135 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
./node_modules/detective/node_modules/acorn/src/walk/index.js:174 =>   c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/walk/index.js:188 =>     if (cs.test) c(cs.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/walk/index.js:208 =>   c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/walk/index.js:213 =>   if (node.test) c(node.test, st, "Expression")
./node_modules/detective/node_modules/acorn/src/loose/state.js:95 =>       lineBreak.test(this.input.slice(this.last.end, this.tok.start))
./node_modules/detective/node_modules/acorn/src/statement.js:560 =>         if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {
./node_modules/detective/node_modules/acorn/src/statement.js:648 =>       if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, "The keyword '" + node.local.name + "' is reserved")
./node_modules/detective/node_modules/acorn/src/tokenize.js:512 =>   else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
./node_modules/detective/node_modules/acorn/src/tokenize.js:693 =>   if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))
./node_modules/es6-promise/dist/test/browserify.js:1174 => },{"./helpers/testThreeCases":22,"assert":2}],9:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1179 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:1184 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1187 =>     testRejected(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1254 => },{"./helpers/testThreeCases":22,"assert":2}],10:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1262 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1267 =>             function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:1275 =>             testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:1276 =>             testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:1277 =>             testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:1278 =>             testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:1279 =>             testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:1283 =>             function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:1291 =>             testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:1292 =>             testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:1293 =>             testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:1294 =>             testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:1295 =>             testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:1301 =>             function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:1309 =>             testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:1310 =>             testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:1311 =>             testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:1312 =>             testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:1313 =>             testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:1317 =>             function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:1325 =>             testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:1326 =>             testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:1327 =>             testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:1328 =>             testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:1329 =>             testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:1340 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:1346 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1347 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/mocha.js:1467 => exports.Test = require('./test');
./node_modules/es6-promise/dist/test/mocha.js:1490 =>  *   - `bail` bail on the first test failure
./node_modules/es6-promise/dist/test/mocha.js:1491 =>  *   - `slow` milliseconds to wait before considering a test slow
./node_modules/es6-promise/dist/test/mocha.js:1493 =>  *   - `grep` string or regexp to filter tests with
./node_modules/es6-promise/dist/test/mocha.js:1519 =>     exports.it = context.it || context.test;
./node_modules/es6-promise/dist/test/mocha.js:1525 =>     exports.test = context.test || context.it;
./node_modules/es6-promise/dist/test/mocha.js:1543 =>  * Add test `file`.
./node_modules/es6-promise/dist/test/mocha.js:1580 =>  * Set test UI `name`, defaults to "bdd".
./node_modules/es6-promise/dist/test/mocha.js:1626 =>       var msg = stats.failures + ' of ' + runner.total + ' tests failed';
./node_modules/es6-promise/dist/test/mocha.js:1629 =>       notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {
./node_modules/es6-promise/dist/test/mocha.js:1787 =>  * Makes all tests async (accepting a callback)
./node_modules/fs-grep/node_modules/colors/lib/system/supports-colors.js:56 =>   if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
./node_modules/hawk/test/browser.js:1324 =>                 storage.setItem('b', 'test');
./node_modules/hawk/test/browser.js:1329 =>                 expect(storage.getItem('b')).to.equal('test');
./node_modules/hawk/test/browser.js:1333 =>                 expect(storage.getItem('b')).to.equal('test');
./node_modules/hawk/test/browser.js:1352 =>                 Browser.utils.storage.setItem('test', '1');
./node_modules/hawk/test/browser.js:1354 =>                 expect(Browser.utils.storage.getItem('test')).to.not.exist();
./node_modules/hawk/test/browser.js:1355 =>                 Browser.utils.storage.setItem('test', '2');
./node_modules/hawk/test/browser.js:1356 =>                 expect(Browser.utils.storage.getItem('test')).to.equal('2');
./node_modules/hoek/test/index.js:2017 =>             Hoek.escapeHeaderAttribute('this is a test' + String.fromCharCode(500) + String.fromCharCode(300));
./node_modules/hoek/test/index.js:2028 =>             Hoek.escapeHeaderAttribute('this is a test\r\n');
./node_modules/jsonld/tests/webidl/idlharness.js:840 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:867 => IdlException.prototype.test_members = function()
./node_modules/jsonld/tests/webidl/idlharness.js:873 =>         if (member.untested)
./node_modules/jsonld/tests/webidl/idlharness.js:879 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:905 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:925 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:953 =>                 // This test is before the TypeError tests so that it's easiest
./node_modules/jsonld/tests/webidl/idlharness.js:954 =>                 // to see that Firefox 11a1 only fails one assert in this test.
./node_modules/lodash/lodash.min.js:125 => },On.trimEnd=function(n,t,r){return(n=zu(n))&&(r||t===F)?n.replace(ln,""):n&&(t=jr(t))?(n=$(n),t=W(n,$(t))+1,zr(n,0,t).join("")):n},On.trimStart=function(n,t,r){return(n=zu(n))&&(r||t===F)?n.replace(an,""):n&&(t=jr(t))?(n=$(n),t=z(n,$(t)),zr(n,t).join("")):n},On.truncate=function(n,t){var r=30,e="...";if(bu(t))var u="separator"in t?t.separator:u,r="length"in t?Ou(t.length):r,e="omission"in t?jr(t.omission):e;n=zu(n);var i=n.length;if(Bn.test(n))var o=$(n),i=o.length;if(r>=i)return n;if(i=r-T(e),1>i)return e;
./node_modules/lodash/lodash.min.js:126 => if(r=o?zr(o,0,i).join(""):n.slice(0,i),u===F)return r+e;if(o&&(i+=r.length-i),_f(u)){if(n.slice(i).search(u)){var f=r;for(u.global||(u=ti(u.source,zu(dn.exec(u))+"g")),u.lastIndex=0;o=u.exec(f);)var c=o.index;r=r.slice(0,c===F?i:c)}}else n.indexOf(jr(u),i)!=i&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},On.unescape=function(n){return(n=zu(n))&&J.test(n)?n.replace(G,ut):n},On.uniqueId=function(n){var t=++ai;return zu(n)+t},On.upperCase=Ff,On.upperFirst=Nf,On.each=ru,On.eachRight=eu,On.first=Ke,
./node_modules/lodash/lodash.min.js:130 => t!==F&&(t=Ou(t),r=0>t?r.dropRight(-t):r.take(t-n)),r)},Mn.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Mn.prototype.toArray=function(){return this.take(4294967295)},Et(Mn.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=On[e?"take"+("last"==t?"Right":""):t],i=e||/^find/.test(t);u&&(On.prototype[t]=function(){function t(n){return n=u.apply(On,s([n],f)),e&&h?n[0]:n}var o=this.__wrapped__,f=e?[1]:arguments,c=o instanceof Mn,a=f[0],l=c||af(o);
./node_modules/lodash/lodash.min.js:131 => l&&r&&typeof a=="function"&&1!=a.length&&(c=l=false);var h=this.__chain__,p=!!this.__actions__.length,a=i&&!h,c=c&&!p;return!i&&l?(o=c?o:new Mn(this),o=n.apply(o,f),o.__actions__.push({func:nu,args:[t],thisArg:F}),new zn(o,h)):a&&c?n.apply(this,f):(o=this.thru(t),a?e?o.value()[0]:o.value():o)})}),u("pop push shift sort splice unshift".split(" "),function(n){var t=ui[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:pop|shift)$/.test(n);On.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:42 =>       if (/unterminated/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:44 =>         if (/string/.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:46 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:50 =>         } else if (/template/.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:57 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:59 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:64 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:67 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:89 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) ||
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:90 =>     /[enwfd]/.test(ch) &&
./node_modules/detective/node_modules/acorn/src/loose/tokenize.js:91 =>     /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))
./node_modules/detective/node_modules/acorn/src/loose/expression.js:76 =>     node.test = expr
./node_modules/detective/node_modules/acorn/src/loose/expression.js:105 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression")
./node_modules/detective/node_modules/acorn/src/loose/statement.js:46 =>     node.test = this.eat(tt._while) ? this.parseParenExpression() : this.dummyIdent()
./node_modules/detective/node_modules/acorn/src/loose/statement.js:74 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/src/loose/statement.js:101 =>         if (isCase) cur.test = this.parseExpression()
./node_modules/detective/node_modules/acorn/src/loose/statement.js:102 =>         else cur.test = null
./node_modules/detective/node_modules/acorn/src/loose/statement.js:108 =>           cur.test = null
./node_modules/detective/node_modules/acorn/src/loose/statement.js:147 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/src/loose/statement.js:206 =>   node.test = node.update = null
./node_modules/detective/node_modules/acorn/src/loose/statement.js:207 =>   if (this.eat(tt.semi) && this.tok.type !== tt.semi) node.test = this.parseExpression()
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:150 =>     } else if (name && eventSplitter.test(name)) {
./node_modules/minifyify/test/build/apps/simple file/entry.js:11 => msg.innerHTML = 'Do you see this? Great! Too bad this isn\'t actually the test.<br /><br />Open your dev tools and see if an "entry.js" file is there. If so, the actual test suceeded.<br /><br /><em>Remember to turn on source maps in your options!</em>';
./node_modules/jsonld/tests/webidl/testharness.js:1018 =>                 // New style exception: also test the name property.
./node_modules/jsonld/tests/webidl/testharness.js:1022 =>             //We'd like to test that e instanceof the appropriate interface,
./node_modules/minifyify/test/build/apps/simple file/bundle.min.js:2 => var myString=["Open","Your","Dev","Tools!"],anotherString,header=document.createElement("h1"),msg=document.createElement("p");anotherString=myString.join(" "),header.innerHTML=anotherString,document.body.appendChild(header),msg.innerHTML='Do you see this? Great! Too bad this isn\'t actually the test.<br /><br />Open your dev tools and see if an "entry.js" file is there. If so, the actual test suceeded.<br /><br /><em>Remember to turn on source maps in your options!</em>',document.body.appendChild(msg);
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:137 => // 4. Pure assertion tests whether a value is truthy, as determined
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:141 => // message_opt);. To test strictly for the value true, use
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:149 => // 5. The equality assertion tests shallow, coercive equality with
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:157 => // 6. The non-equality assertion tests for whether two objects are not equal
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:166 => // 7. The equivalence assertion tests a deep equality relation.
./node_modules/minifyify/test/fixtures/libraries/Backbone.min.js:1 => (function(){var t=this;var e=t.Backbone;var i=[];var r=i.push;var s=i.slice;var n=i.splice;var a;if(typeof exports!=="undefined"){a=exports}else{a=t.Backbone={}}a.VERSION="1.0.0";var h=t._;if(!h&&typeof require!=="undefined")h=require("underscore");a.$=t.jQuery||t.Zepto||t.ender||t.$;a.noConflict=function(){t.Backbone=e;return this};a.emulateHTTP=false;a.emulateJSON=false;var o=a.Events={on:function(t,e,i){if(!l(this,"on",t,[e,i])||!e)return this;this._events||(this._events={});var r=this._events[t]||(this._events[t]=[]);r.push({callback:e,context:i,ctx:i||this});return this},once:function(t,e,i){if(!l(this,"once",t,[e,i])||!e)return this;var r=this;var s=h.once(function(){r.off(t,s);e.apply(this,arguments)});s._callback=e;return this.on(t,s,i)},off:function(t,e,i){var r,s,n,a,o,u,c,f;if(!this._events||!l(this,"off",t,[e,i]))return this;if(!t&&!e&&!i){this._events={};return this}a=t?[t]:h.keys(this._events);for(o=0,u=a.length;o<u;o++){t=a[o];if(n=this._events[t]){this._events[t]=r=[];if(e||i){for(c=0,f=n.length;c<f;c++){s=n[c];if(e&&e!==s.callback&&e!==s.callback._callback||i&&i!==s.context){r.push(s)}}}if(!r.length)delete this._events[t]}}return this},trigger:function(t){if(!this._events)return this;var e=s.call(arguments,1);if(!l(this,"trigger",t,e))return this;var i=this._events[t];var r=this._events.all;if(i)c(i,e);if(r)c(r,arguments);return this},stopListening:function(t,e,i){var r=this._listeners;if(!r)return this;var s=!e&&!i;if(typeof e==="object")i=this;if(t)(r={})[t._listenerId]=t;for(var n in r){r[n].off(e,i,this);if(s)delete this._listeners[n]}return this}};var u=/\s+/;var l=function(t,e,i,r){if(!i)return true;if(typeof i==="object"){for(var s in i){t[e].apply(t,[s,i[s]].concat(r))}return false}if(u.test(i)){var n=i.split(u);for(var a=0,h=n.length;a<h;a++){t[e].apply(t,[n[a]].concat(r))}return false}return true};var c=function(t,e){var i,r=-1,s=t.length,n=e[0],a=e[1],h=e[2];switch(e.length){case 0:while(++r<s)(i=t[r]).callback.call(i.ctx);return;case 1:while(++r<s)(i=t[r]).callback.call(i.ctx,n);return;case 2:while(++r<s)(i=t[r]).callback.call(i.ctx,n,a);return;case 3:while(++r<s)(i=t[r]).callback.call(i.ctx,n,a,h);return;default:while(++r<s)(i=t[r]).callback.apply(i.ctx,e)}};var f={listenTo:"on",listenToOnce:"once"};h.each(f,function(t,e){o[e]=function(e,i,r){var s=this._listeners||(this._listeners={});var n=e._listenerId||(e._listenerId=h.uniqueId("l"));s[n]=e;if(typeof i==="object")r=this;e[t](i,r,this);return this}});o.bind=o.on;o.unbind=o.off;h.extend(a,o);var d=a.Model=function(t,e){var i;var r=t||{};e||(e={});this.cid=h.uniqueId("c");this.attributes={};h.extend(this,h.pick(e,p));if(e.parse)r=this.parse(r,e)||{};if(i=h.result(this,"defaults")){r=h.defaults({},r,i)}this.set(r,e);this.changed={};this.initialize.apply(this,arguments)};var p=["url","urlRoot","collection"];h.extend(d.prototype,o,{changed:null,validationError:null,idAttribute:"id",initialize:function(){},toJSON:function(t){return h.clone(this.attributes)},sync:function(){return a.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return h.escape(this.get(t))},has:function(t){return this.get(t)!=null},set:function(t,e,i){var r,s,n,a,o,u,l,c;if(t==null)return this;if(typeof t==="object"){s=t;i=e}else{(s={})[t]=e}i||(i={});if(!this._validate(s,i))return false;n=i.unset;o=i.silent;a=[];u=this._changing;this._changing=true;if(!u){this._previousAttributes=h.clone(this.attributes);this.changed={}}c=this.attributes,l=this._previousAttributes;if(this.idAttribute in s)this.id=s[this.idAttribute];for(r in s){e=s[r];if(!h.isEqual(c[r],e))a.push(r);if(!h.isEqual(l[r],e)){this.changed[r]=e}else{delete this.changed[r]}n?delete c[r]:c[r]=e}if(!o){if(a.length)this._pending=true;for(var f=0,d=a.length;f<d;f++){this.trigger("change:"+a[f],this,c[a[f]],i)}}if(u)return this;if(!o){while(this._pending){this._pending=false;this.trigger("change",this,i)}}this._pending=false;this._changing=false;return this},unset:function(t,e){return this.set(t,void 0,h.extend({},e,{unset:true}))},clear:function(t){var e={};for(var i in this.attributes)e[i]=void 0;return this.set(e,h.extend({},t,{unset:true}))},hasChanged:function(t){if(t==null)return!h.isEmpty(this.changed);return h.has(this.changed,t)},changedAttributes:function(t){if(!t)return this.hasChanged()?h.clone(this.changed):false;var e,i=false;var r=this._changing?this._previousAttributes:this.attributes;for(var s in t){if(h.isEqual(r[s],e=t[s]))continue;(i||(i={}))[s]=e}return i},previous:function(t){if(t==null||!this._previousAttributes)return null;return this._previousAttributes[t]},previousAttributes:function(){return h.clone(this._previousAttributes)},fetch:function(t){t=t?h.clone(t):{};if(t.parse===void 0)t.parse=true;var e=this;var i=t.success;t.success=function(r){if(!e.set(e.parse(r,t),t))return false;if(i)i(e,r,t);e.trigger("sync",e,r,t)};R(this,t);return this.sync("read",this,t)},save:function(t,e,i){var r,s,n,a=this.attributes;if(t==null||typeof t==="object"){r=t;i=e}else{(r={})[t]=e}if(r&&(!i||!i.wait)&&!this.set(r,i))return false;i=h.extend({validate:true},i);if(!this._validate(r,i))return false;if(r&&i.wait){this.attributes=h.extend({},a,r)}if(i.parse===void 0)i.parse=true;var o=this;var u=i.success;i.success=function(t){o.attributes=a;var e=o.parse(t,i);if(i.wait)e=h.extend(r||{},e);if(h.isObject(e)&&!o.set(e,i)){return false}if(u)u(o,t,i);o.trigger("sync",o,t,i)};R(this,i);s=this.isNew()?"create":i.patch?"patch":"update";if(s==="patch")i.attrs=r;n=this.sync(s,this,i);if(r&&i.wait)this.attributes=a;return n},destroy:function(t){t=t?h.clone(t):{};var e=this;var i=t.success;var r=function(){e.trigger("destroy",e,e.collection,t)};t.success=function(s){if(t.wait||e.isNew())r();if(i)i(e,s,t);if(!e.isNew())e.trigger("sync",e,s,t)};if(this.isNew()){t.success();return false}R(this,t);var s=this.sync("delete",this,t);if(!t.wait)r();return s},url:function(){var t=h.result(this,"urlRoot")||h.result(this.collection,"url")||U();if(this.isNew())return t;return t+(t.charAt(t.length-1)==="/"?"":"/")+encodeURIComponent(this.id)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return this.id==null},isValid:function(t){return this._validate({},h.extend(t||{},{validate:true}))},_validate:function(t,e){if(!e.validate||!this.validate)return true;t=h.extend({},this.attributes,t);var i=this.validationError=this.validate(t,e)||null;if(!i)return true;this.trigger("invalid",this,i,h.extend(e||{},{validationError:i}));return false}});var v=["keys","values","pairs","invert","pick","omit"];h.each(v,function(t){d.prototype[t]=function(){var e=s.call(arguments);e.unshift(this.attributes);return h[t].apply(h,e)}});var g=a.Collection=function(t,e){e||(e={});if(e.url)this.url=e.url;if(e.model)this.model=e.model;if(e.comparator!==void 0)this.comparator=e.comparator;this._reset();this.initialize.apply(this,arguments);if(t)this.reset(t,h.extend({silent:true},e))};var m={add:true,remove:true,merge:true};var y={add:true,merge:false,remove:false};h.extend(g.prototype,o,{model:d,initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return a.sync.apply(this,arguments)},add:function(t,e){return this.set(t,h.defaults(e||{},y))},remove:function(t,e){t=h.isArray(t)?t.slice():[t];e||(e={});var i,r,s,n;for(i=0,r=t.length;i<r;i++){n=this.get(t[i]);if(!n)continue;delete this._byId[n.id];delete this._byId[n.cid];s=this.indexOf(n);this.models.splice(s,1);this.length--;if(!e.silent){e.index=s;n.trigger("remove",n,this,e)}this._removeReference(n)}return this},set:function(t,e){e=h.defaults(e||{},m);if(e.parse)t=this.parse(t,e);if(!h.isArray(t))t=t?[t]:[];var i,s,a,o,u,l;var c=e.at;var f=this.comparator&&c==null&&e.sort!==false;var d=h.isString(this.comparator)?this.comparator:null;var p=[],v=[],g={};for(i=0,s=t.length;i<s;i++){if(!(a=this._prepareModel(t[i],e)))continue;if(u=this.get(a)){if(e.remove)g[u.cid]=true;if(e.merge){u.set(a.attributes,e);if(f&&!l&&u.hasChanged(d))l=true}}else if(e.add){p.push(a);a.on("all",this._onModelEvent,this);this._byId[a.cid]=a;if(a.id!=null)this._byId[a.id]=a}}if(e.remove){for(i=0,s=this.l
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:428 => - [b01bda8](https://github.com/bcoe/yargs/commit/b01bda8d86e455bbf74ce497864cb8ab5b9fb847) [fix test] Update to ensure optimist is aware of default booleans. Associated tests included (@indexzero)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:429 => - [aa753e7](https://github.com/bcoe/yargs/commit/aa753e7c54fb3a12f513769a0ff6d54aa0f63943) [dist test] Update devDependencies in package.json. Update test pathing to be more npm and require.paths future-proof (@indexzero)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:438 => - [691eda3](https://github.com/bcoe/yargs/commit/691eda354df97b5a86168317abcbcaabdc08a0fb) failing test for multi-aliasing (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:441 => - [75aecce](https://github.com/bcoe/yargs/commit/75aeccea74329094072f95800e02c275e7d999aa) options works again, too lazy to write a proper test right now (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:454 => - [89f0d04](https://github.com/bcoe/yargs/commit/89f0d043cbccd302f10ab30c2069e05d2bf817c9) defaults work again, all tests pass (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:455 => - [dd87333](https://github.com/bcoe/yargs/commit/dd8733365423006a6e4156372ebb55f98323af58) update test error messages, down to 2 failing tests (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:456 => - [53f7bc6](https://github.com/bcoe/yargs/commit/53f7bc626b9875f2abdfc5dd7a80bde7f14143a3) fix for bools doubling up, passes the parse test again, others fail (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:457 => - [2213e2d](https://github.com/bcoe/yargs/commit/2213e2ddc7263226fba717fb041dc3fde9bc2ee4) refactored for an argv getter, failing several tests (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:458 => - [d1e7379](https://github.com/bcoe/yargs/commit/d1e737970f15c6c006bebdd8917706827ff2f0f2) just rescan for now, alias test passes (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:459 => - [b2f8c99](https://github.com/bcoe/yargs/commit/b2f8c99cc477a8eb0fdf4cf178e1785b63185cfd) failing alias test (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:466 => - [bcfe973](https://github.com/bcoe/yargs/commit/bcfe9731d7f90d4632281b8a52e8d76eb0195ae6) .string() but failing test (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:467 => - [1987aca](https://github.com/bcoe/yargs/commit/1987aca28c7ba4e8796c07bbc547cb984804c826) test hex strings (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:472 => - [0e380b9](https://github.com/bcoe/yargs/commit/0e380b92c4ef4e3c8dac1da18b5c31d85b1d02c9) boolean() with passing test (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:475 => - [343b8af](https://github.com/bcoe/yargs/commit/343b8afefd98af274ebe21b5a16b3a949ec5429f) whichNodeArgs test fails too (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:476 => - [63df2f3](https://github.com/bcoe/yargs/commit/63df2f371f31e63d7f1dec2cbf0022a5f08da9d2) replicated mnot's bug in whichNodeEmpty test (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:477 => - [35473a4](https://github.com/bcoe/yargs/commit/35473a4d93a45e5e7e512af8bb54ebb532997ae1) test for ./bin usage (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:482 => - [bcec56b](https://github.com/bcoe/yargs/commit/bcec56b3d031e018064cbb691539ccc4f28c14ad) failing test for not-implemented auto numification (@substack)
./node_modules/mocha/mocha.js:2957 =>  * Initialize a new `List` test reporter.
./node_modules/mocha/mocha.js:2972 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:2973 =>     console.log(JSON.stringify(['pass', clean(test)]));
./node_modules/mocha/mocha.js:2976 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/mocha.js:2977 =>     test = clean(test);
./node_modules/mocha/mocha.js:2978 =>     test.err = err.message;
./node_modules/mocha/mocha.js:2979 =>     test.stack = err.stack || null;
./node_modules/mocha/mocha.js:2980 =>     console.log(JSON.stringify(['fail', test]));
./node_modules/mocha/mocha.js:2989 =>  * Return a plain-object representation of `test`
./node_modules/mocha/mocha.js:2993 =>  * @param {Object} test
./node_modules/mocha/mocha.js:2996 => function clean (test) {
./node_modules/mocha/mocha.js:2998 =>     title: test.title,
./node_modules/mocha/mocha.js:2999 =>     fullTitle: test.fullTitle(),
./node_modules/mocha/mocha.js:3000 =>     duration: test.duration,
./node_modules/mocha/mocha.js:3001 =>     currentRetry: test.currentRetry()
./node_modules/mocha/mocha.js:3032 =>   var tests = [];
./node_modules/mocha/mocha.js:3037 =>   runner.on('test end', function (test) {
./node_modules/mocha/mocha.js:3038 =>     tests.push(test);
./node_modules/mocha/mocha.js:3041 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3042 =>     passes.push(test);
./node_modules/mocha/mocha.js:3045 =>   runner.on('fail', function (test) {
./node_modules/mocha/mocha.js:3046 =>     failures.push(test);
./node_modules/mocha/mocha.js:3049 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:3050 =>     pending.push(test);
./node_modules/mocha/mocha.js:3056 =>       tests: tests.map(clean),
./node_modules/mocha/mocha.js:3062 =>     runner.testResults = obj;
./node_modules/mocha/mocha.js:3069 =>  * Return a plain-object representation of `test`
./node_modules/mocha/mocha.js:3073 =>  * @param {Object} test
./node_modules/mocha/mocha.js:3076 => function clean (test) {
./node_modules/mocha/mocha.js:3078 =>     title: test.title,
./node_modules/mocha/mocha.js:3079 =>     fullTitle: test.fullTitle(),
./node_modules/mocha/mocha.js:3080 =>     duration: test.duration,
./node_modules/mocha/mocha.js:3081 =>     currentRetry: test.currentRetry(),
./node_modules/mocha/mocha.js:3082 =>     err: errorJSON(test.err || {})
./node_modules/mocha/mocha.js:3166 =>   runner.on('test end', function (test) {
./node_modules/mocha/mocha.js:3171 =>     if (test.state === 'failed') {
./node_modules/mocha/mocha.js:3220 =>  * Initialize a new `List` test reporter.
./node_modules/mocha/mocha.js:3235 =>   runner.on('test', function (test) {
./node_modules/mocha/mocha.js:3236 =>     process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));
./node_modules/mocha/mocha.js:3239 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:3242 =>     console.log(fmt, test.fullTitle());
./node_modules/mocha/mocha.js:3245 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3248 =>       color(test.speed, '%dms');
./node_modules/mocha/mocha.js:3250 =>     console.log(fmt, test.fullTitle(), test.duration);
./node_modules/mocha/mocha.js:3253 =>   runner.on('fail', function (test) {
./node_modules/mocha/mocha.js:3255 =>     console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());
./node_modules/pako/lib/zlib/trees.js:1105 =>     /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:531 =>       if (this.keywords.test(prop.key.name) || (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name)) this.raise(prop.key.start, "Binding " + prop.key.name);
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:695 =>     return this.tok.type === _.tokTypes.eof || this.tok.type === _.tokTypes.braceR || _.lineBreak.test(this.input.slice(this.last.end, this.tok.start));
./node_modules/syntax-error/node_modules/acorn/src/expression.js:518 =>         if (this.keywords.test(prop.key.name) ||
./node_modules/syntax-error/node_modules/acorn/src/expression.js:519 =>             (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name))
./node_modules/syntax-error/node_modules/acorn/src/expression.js:658 =>     if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:42 =>       if (/unterminated/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:44 =>         if (/string/.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:46 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:50 =>         } else if (/template/.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:57 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:59 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:64 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:67 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:89 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) ||
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:90 =>     /[enwfd]/.test(ch) &&
./node_modules/syntax-error/node_modules/acorn/src/loose/tokenize.js:91 =>     /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos))
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:56 => function makeTest(test) {
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:57 =>   if (typeof test == "string")
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:58 =>     return type => type == test
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:59 =>   else if (!test)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:62 =>     return test
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:72 => export function findNodeAt(node, start, end, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:73 =>   test = makeTest(test)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:83 =>           test(type, node))
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:94 => export function findNodeAround(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:95 =>   test = makeTest(test)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:102 =>       if (test(type, node)) throw new Found(node, st)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:111 => export function findNodeAfter(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:112 =>   test = makeTest(test)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:118 =>       if (node.start >= pos && test(type, node)) throw new Found(node, st)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:128 => export function findNodeBefore(node, pos, test, base, state) {
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:129 =>   test = makeTest(test)
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:135 =>     if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:168 =>   c(node.test, st, "Expression")
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:182 =>     if (cs.test) c(cs.test, st, "Expression")
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:201 =>   c(node.test, st, "Expression")
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:206 =>   if (node.test) c(node.test, st, "Expression")
./node_modules/uglify-js/node_modules/async/README.md:1225 =>     async.apply(fs.writeFile, 'testfile1', 'test1'),
./node_modules/uglify-js/node_modules/async/README.md:1226 =>     async.apply(fs.writeFile, 'testfile2', 'test2'),
./node_modules/uglify-js/node_modules/async/README.md:1234 =>         fs.writeFile('testfile1', 'test1', callback);
./node_modules/uglify-js/node_modules/async/README.md:1237 =>         fs.writeFile('testfile2', 'test2', callback);
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:999 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0099.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1000 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0099.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1002 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1006 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0100">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1009 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0100.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1010 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0100.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1012 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1016 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0101">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1019 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0101.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1020 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0101.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1022 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1026 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0102">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1029 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0102.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1030 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0102.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1033 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1037 =>     <TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0103">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1040 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0103.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1041 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0103.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1043 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1047 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0104">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1050 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0104.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1051 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0104.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1053 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1057 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0105">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1060 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0105.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1061 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0105.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1062 =>         <purpose>Test the behavior of triple generation in a corner case where the inner @rel is neither a CURIE or a LinkType. This test effectively causes a rel="" to be inserted between the outer div subject and the inner @href, which halts chaining.</purpose>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1063 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1067 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0106">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1070 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0106.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1071 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0106.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1073 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1077 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0107">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1080 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0107.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1081 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0107.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1083 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1088 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0108">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1091 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0108.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1092 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0108.sparql"/>
./test/tc0007/manifest.ttl:1405 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1406 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1408 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1409 =>    test:informationResourceInput <test-cases/0208.html>;
./test/tc0007/manifest.ttl:1410 =>    test:informationResourceResults <test-cases/0208.sparql>;
./test/tc0007/manifest.ttl:1411 =>    test:purpose "Tests whether the default RDFa 1.1 profile is ignored if version is explicitly set to 1.0";
./test/tc0007/manifest.ttl:1412 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1413 => <test-cases/0209> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1415 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1416 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1417 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1419 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1420 =>    test:informationResourceInput <test-cases/0209.html>;
./test/tc0007/manifest.ttl:1421 =>    test:informationResourceResults <test-cases/0209.sparql>;
./test/tc0007/manifest.ttl:1422 =>    test:purpose "Tests whether the @prefix attribute is ignored if version is explicitly set to 1.0";
./test/tc0007/manifest.ttl:1423 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1424 => <test-cases/0210> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1426 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1427 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1428 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1430 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1431 =>    test:informationResourceInput <test-cases/0210.html>;
./test/tc0007/manifest.ttl:1432 =>    test:informationResourceResults <test-cases/0210.sparql>;
./test/tc0007/manifest.ttl:1433 =>    test:purpose "Tests whether the @prefix attribute is ignored and @xmlns is used instead if version is explicitly set to 1.0";
./test/tc0007/manifest.ttl:1434 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1435 => <test-cases/0211> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1437 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1438 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1439 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1441 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1442 =>    test:informationResourceInput <test-cases/0211.html>;
./test/tc0007/manifest.ttl:1443 =>    test:informationResourceResults <test-cases/0211.sparql>;
./test/tc0007/manifest.ttl:1444 =>    test:purpose "Tests whether the @vocab attribute is ignored if version is explicitly set to 1.0";
./test/tc0007/manifest.ttl:1445 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1446 => <test-cases/0212> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1448 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1449 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1450 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1452 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1453 =>    test:informationResourceInput <test-cases/0212.html>;
./test/tc0007/manifest.ttl:1454 =>    test:informationResourceResults <test-cases/0212.sparql>;
./test/tc0007/manifest.ttl:1455 =>    test:purpose "In RDFa 1.0, if a literal contains XML elements, and no explicit datatype is set, the result is XMLLiteral";
./test/tc0007/manifest.ttl:1456 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1457 => <test-cases/0213> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1459 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1460 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1461 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1463 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1464 =>    test:informationResourceInput <test-cases/0213.html>;
./test/tc0007/manifest.ttl:1465 =>    test:informationResourceResults <test-cases/0213.sparql>;
./test/tc0007/manifest.ttl:1466 =>    test:purpose "In RDFa 1.1, even if a literal contains XML elements, and no explicit datatype is set, the result is plain literal";
./test/tc0007/manifest.ttl:1467 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1468 => <test-cases/0214> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1470 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1471 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1472 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1474 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1475 =>    test:informationResourceInput <test-cases/0214.html>;
./test/tc0007/manifest.ttl:1476 =>    test:informationResourceResults <test-cases/0214.sparql>;
./test/tc0007/manifest.ttl:1477 =>    test:purpose "All documents have an implicit @about=\"\"";
./test/tc0007/manifest.ttl:1478 =>    test:specificationReference "N.A." .
./test/tc0007/manifest.ttl:1479 => <test-cases/0215> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1481 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1482 =>    rdfatest:rdfaVersion "rdfa1.0";
./test/tc0007/manifest.ttl:1483 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1485 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1486 =>    test:informationResourceInput <test-cases/0215.html>;
./test/tc0007/manifest.ttl:1487 =>    test:informationResourceResults <test-cases/0215.sparql>;
./test/tc0007/manifest.ttl:1488 =>    test:purpose "Character encoding should work even in view of a large set of characters as attributes in the header, ie, when content sniffing may not work to establish encoding.";
./test/tc0007/manifest.ttl:1489 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1490 => <test-cases/0216> dc:contributor "Ivan Herman";
./test/tc0007/manifest.ttl:1492 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1493 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1494 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1496 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1497 =>    test:informationResourceInput <test-cases/0216.html>;
./test/tc0007/manifest.ttl:1498 =>    test:informationResourceResults <test-cases/0216.sparql>;
./test/tc0007/manifest.ttl:1499 =>    test:purpose "Character encoding should work even in view of a large set of characters as attributes in the header, ie, when content sniffing may not work to establish encoding.";
./test/tc0007/manifest.ttl:1500 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1501 => <test-cases/0217> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1503 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1504 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1505 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1507 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1508 =>    test:informationResourceInput <test-cases/0217.html>;
./test/tc0007/manifest.ttl:1509 =>    test:informationResourceResults <test-cases/0217.sparql>;
./test/tc0007/manifest.ttl:1510 =>    test:purpose "When encountering @vocab, a processor generates a triple with the base URI, rdfa:hasVocabulary and the IRI of the added vocabulary.";
./test/tc0007/manifest.ttl:1511 =>    test:specificationReference "7.5 step 2" .
./test/tc0007/manifest.ttl:1512 => <test-cases/0218> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1514 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1515 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1516 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1518 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1519 =>    test:informationResourceInput <test-cases/0218.html>;
./test/tc0007/manifest.ttl:1520 =>    test:informationResourceResults <test-cases/0218.sparql>;
./test/tc0007/manifest.ttl:1521 =>    test:purpose "@inlist on @rel with no incomplete triples creates an empty list.";
./test/tc0007/manifest.ttl:1522 =>    test:specificationReference "7.5 step 14" .
./test/tc0007/manifest.ttl:1523 => <test-cases/0219> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1525 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1526 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1527 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1529 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1530 =>    test:informationResourceInput <test-cases/0219.html>;
./test/tc0007/manifest.ttl:1531 =>    test:informationResourceResults <test-cases/0219.sparql>;
./test/tc0007/manifest.ttl:1532 =>    test:purpose "@inlist with @property creates a list having a literal as a single element.";
./test/tc0007/manifest.ttl:1533 =>    test:specificationReference "7.5 step 11" .
./test/tc0007/manifest.ttl:1534 => <test-cases/0220> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1536 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1537 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1538 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1540 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1541 =>    test:informationResourceInput <test-cases/0220.html>;
./test/tc0007/manifest.ttl:1542 =>    test:informationResourceResults <test-cases/0220.sparql>;
./test/tc0007/manifest.ttl:1543 =>    test:purpose "@inlist with @rel and @href creates a list having an IRI as a single element.";
./test/tc0007/manifest.ttl:1544 =>    test:specificationReference "7.5 step 9" .
./test/tc0007/manifest.ttl:1545 => <test-cases/0221> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1547 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1548 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1549 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1551 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1552 =>    test:informationResourceInput <test-cases/0221.html>;
./test/tc0004/rdfcore/Manifest.rdf:1299 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0008">
./test/tc0004/rdfcore/Manifest.rdf:1301 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1302 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1303 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Jun/0008.html" />
./test/tc0004/rdfcore/Manifest.rdf:1304 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1305 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1307 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1309 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1310 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1311 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1313 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1314 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1315 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1317 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1320 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0009">
./test/tc0004/rdfcore/Manifest.rdf:1322 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1323 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1324 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1325 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1326 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1328 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1330 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1331 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1332 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1334 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1335 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0009.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1336 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1338 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1341 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0010">
./test/tc0004/rdfcore/Manifest.rdf:1343 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1344 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1345 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1346 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1347 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1349 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1351 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1352 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1353 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1355 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1356 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0010.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1357 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1359 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1362 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0011">
./test/tc0004/rdfcore/Manifest.rdf:1364 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1365 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1366 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1367 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1368 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1370 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1372 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1373 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1374 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1376 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1377 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0011.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1378 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1380 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1383 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0012">
./test/tc0004/rdfcore/Manifest.rdf:1385 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1386 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1387 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1388 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1389 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1391 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1393 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1394 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1395 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1397 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1398 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0012.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1399 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1401 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1404 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0013">
./test/tc0004/rdfcore/Manifest.rdf:1406 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1407 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1408 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1409 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1410 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1412 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1414 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1415 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0013.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1416 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1418 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1419 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0013.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1420 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1422 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1425 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/Manifest.rdf#test0014">
./test/tc0004/rdfcore/Manifest.rdf:1427 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdf-ns-prefix-confusion" />
./test/tc0004/rdfcore/Manifest.rdf:1428 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1429 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1430 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1431 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1433 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1435 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1436 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0014.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1437 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1439 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1440 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdf-ns-prefix-confusion/test0014.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1441 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1443 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1447 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-abouteach/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:1449 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1450 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1451 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1452 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1454 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1456 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1457 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-abouteach/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1458 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1460 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1463 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-abouteach/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:1465 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1466 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1467 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1468 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1470 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1472 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1473 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-abouteach/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1474 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1476 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1480 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/Manifest.rdf#error1">
./node_modules/acorn/dist/acorn.js:1649 =>     return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
./node_modules/acorn/dist/acorn.js:1669 =>     return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
./node_modules/acorn/dist/acorn_csp.js:1620 =>     return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
./node_modules/acorn/dist/acorn_csp.js:1640 =>     return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
./node_modules/babel-polyfill/dist/polyfill.js:1733 =>     var test = ''[NAME]('"');
./node_modules/babel-polyfill/dist/polyfill.js:1734 =>     return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/babylon/lib/index.js:1684 =>   return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:397 =>     if (lineBreak.test(ch)) this.raise(start, "Unterminated regular expression")
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:415 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
./node_modules/uglify-js/node_modules/async/lib/async.js:617 =>     async.whilst = function (test, iterator, callback) {
./node_modules/uglify-js/node_modules/async/lib/async.js:618 =>         if (test()) {
./node_modules/uglify-js/node_modules/async/lib/async.js:623 =>                 async.whilst(test, iterator, callback);
./node_modules/uglify-js/node_modules/async/lib/async.js:631 =>     async.doWhilst = function (iterator, test, callback) {
./node_modules/uglify-js/node_modules/async/lib/async.js:636 =>             if (test()) {
./node_modules/uglify-js/node_modules/async/lib/async.js:637 =>                 async.doWhilst(iterator, test, callback);
./node_modules/uglify-js/node_modules/async/lib/async.js:645 =>     async.until = function (test, iterator, callback) {
./node_modules/uglify-js/node_modules/async/lib/async.js:646 =>         if (!test()) {
./node_modules/uglify-js/node_modules/async/lib/async.js:651 =>                 async.until(test, iterator, callback);
./node_modules/uglify-js/node_modules/async/lib/async.js:659 =>     async.doUntil = function (iterator, test, callback) {
./node_modules/uglify-js/node_modules/async/lib/async.js:664 =>             if (!test()) {
./node_modules/uglify-js/node_modules/async/lib/async.js:665 =>                 async.doUntil(iterator, test, callback);
./node_modules/buffer/test/node/test-buffer-alloc.js:1334 => // Regression test for #5482: should throw but not assert in C++ land.
./node_modules/buffer/test/node/test-buffer-alloc.js:1339 => // Regression test for #6111. Constructing a buffer from another buffer
./node_modules/buffer/test/node/test-buffer-alloc.js:1436 => // Regression test for https://github.com/nodejs/node/issues/649.
./node_modules/buffer/test/node/test-buffer-alloc.js:1479 => // Regression test
./node_modules/chai/lib/chai/interface/assert.js:1199 =>     var test = new Assertion(ok, msg);
./node_modules/chai/lib/chai/interface/assert.js:1200 =>     test.assert(
./node_modules/chai/lib/chai/interface/assert.js:1201 =>         true === flag(test, 'object')
./node_modules/chai/lib/chai/core/assertions.js:951 =>    *     expect('test').to.have.ownPropertyDescriptor('length');
./node_modules/chai/lib/chai/core/assertions.js:952 =>    *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });
./node_modules/chai/lib/chai/core/assertions.js:953 =>    *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });
./node_modules/chai/lib/chai/core/assertions.js:954 =>    *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);
./node_modules/chai/lib/chai/core/assertions.js:955 =>    *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');
./node_modules/buffer/test/node/test-buffer.js:1360 => // Regression test for #5482: should throw but not assert in C++ land.
./node_modules/buffer/test/node/test-buffer.js:1365 => // Regression test for #6111. Constructing a buffer from another buffer
./node_modules/buffer/test/node/test-buffer.js:1462 => // Regression test for https://github.com/nodejs/node/issues/649.
./node_modules/core-js/client/core.js:2105 => 	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/core-js/client/core.min.js:8 => if(a!=c)return a[f]||a["@@iterator"]||g[e(a)]}},function(a,b,c){var d=c(23)("iterator"),e=!1;try{var f=[7][d]();f["return"]=function(){e=!0},Array.from(f,function(){throw 2})}catch(g){}a.exports=function(a,b){if(!b&&!e)return!1;var c=!1;try{var f=[7],g=f[d]();g.next=function(){return{done:c=!0}},f[d]=function(){return g},a(f)}catch(h){}return c}},function(a,b,c){var d=c(6),e=c(155);d(d.S+d.F*c(5)(function(){function F(){}return!(Array.of.call(F)instanceof F)}),"Array",{of:function of(){for(var a=0,b=arguments.length,c=new("function"==typeof this?this:Array)(b);b>a;)e(c,a,arguments[a++]);return c.length=b,c}})},function(a,b,d){var e=d(6),f=d(30),g=[].join;e(e.P+e.F*(d(31)!=Object||!d(160)(g)),"Array",{join:function join(a){return g.call(f(this),a===c?",":a)}})},function(a,b,c){var d=c(5);a.exports=function(a,b){return!!a&&d(function(){b?a.call(null,function(){},1):a.call(null)})}},function(a,b,d){var e=d(6),f=d(46),g=d(32),h=d(37),i=d(35),j=[].slice;e(e.P+e.F*d(5)(function(){f&&j.call(f)}),"Array",{slice:function slice(a,b){var d=i(this.length),e=g(this);if(b=b===c?d:b,"Array"==e)return j.call(this,a,b);for(var f=h(a,d),k=h(b,d),l=i(k-f),m=Array(l),n=0;n<l;n++)m[n]="String"==e?this.charAt(f+n):this[f+n];return m}})},function(a,b,d){var e=d(6),f=d(19),g=d(56),h=d(5),i=[].sort,j=[1,2,3];e(e.P+e.F*(h(function(){j.sort(c)})||!h(function(){j.sort(null)})||!d(160)(i)),"Array",{sort:function sort(a){return a===c?i.call(g(this)):i.call(g(this),f(a))}})},function(a,b,c){var d=c(6),e=c(164)(0),f=c(160)([].forEach,!0);d(d.P+d.F*!f,"Array",{forEach:function forEach(a){return e(this,a,arguments[1])}})},function(a,b,d){var e=d(18),f=d(31),g=d(56),h=d(35),i=d(165);a.exports=function(a,b){var d=1==a,j=2==a,k=3==a,l=4==a,m=6==a,n=5==a||m,o=b||i;return function(b,i,p){for(var q,r,s=g(b),t=f(s),u=e(i,p,3),v=h(t.length),w=0,x=d?o(b,v):j?o(b,0):c;v>w;w++)if((n||w in t)&&(q=t[w],r=u(q,w,s),a))if(d)x[w]=r;else if(r)switch(a){case 3:return!0;case 5:return q;case 6:return w;case 2:x.push(q)}else if(l)return!1;return m?-1:k||l?l:x}}},function(a,b,c){var d=c(166);a.exports=function(a,b){return new(d(a))(b)}},function(a,b,d){var e=d(11),f=d(43),g=d(23)("species");a.exports=function(a){var b;return f(a)&&(b=a.constructor,"function"!=typeof b||b!==Array&&!f(b.prototype)||(b=c),e(b)&&(b=b[g],null===b&&(b=c))),b===c?Array:b}},function(a,b,c){var d=c(6),e=c(164)(1);d(d.P+d.F*!c(160)([].map,!0),"Array",{map:function map(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(2);d(d.P+d.F*!c(160)([].filter,!0),"Array",{filter:function filter(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(3);d(d.P+d.F*!c(160)([].some,!0),"Array",{some:function some(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(4);d(d.P+d.F*!c(160)([].every,!0),"Array",{every:function every(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduce,!0),"Array",{reduce:function reduce(a){return e(this,a,arguments.length,arguments[1],!1)}})},function(a,b,c){var d=c(19),e=c(56),f=c(31),g=c(35);a.exports=function(a,b,c,h,i){d(b);var j=e(a),k=f(j),l=g(j.length),m=i?l-1:0,n=i?-1:1;if(c<2)for(;;){if(m in k){h=k[m],m+=n;break}if(m+=n,i?m<0:l<=m)throw TypeError("Reduce of empty array with no initial value")}for(;i?m>=0:l>m;m+=n)m in k&&(h=b(h,k[m],m,j));return h}},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduceRight,!0),"Array",{reduceRight:function reduceRight(a){return e(this,a,arguments.length,arguments[1],!0)}})},function(a,b,c){var d=c(6),e=c(34)(!1),f=[].indexOf,g=!!f&&1/[1].indexOf(1,-0)<0;d(d.P+d.F*(g||!c(160)(f)),"Array",{indexOf:function indexOf(a){return g?f.apply(this,arguments)||0:e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(30),f=c(36),g=c(35),h=[].lastIndexOf,i=!!h&&1/[1].lastIndexOf(1,-0)<0;d(d.P+d.F*(i||!c(160)(h)),"Array",{lastIndexOf:function lastIndexOf(a){if(i)return h.apply(this,arguments)||0;var b=e(this),c=g(b.length),d=c-1;for(arguments.length>1&&(d=Math.min(d,f(arguments[1]))),d<0&&(d=c+d);d>=0;d--)if(d in b&&b[d]===a)return d||0;return-1}})},function(a,b,c){var d=c(6);d(d.P,"Array",{copyWithin:c(177)}),c(178)("copyWithin")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=[].copyWithin||function copyWithin(a,b){var d=e(this),h=g(d.length),i=f(a,h),j=f(b,h),k=arguments.length>2?arguments[2]:c,l=Math.min((k===c?h:f(k,h))-j,h-i),m=1;for(j<i&&i<j+l&&(m=-1,j+=l-1,i+=l-1);l-- >0;)j in d?d[i]=d[j]:delete d[i],i+=m,j+=m;return d}},function(a,b,d){var e=d(23)("unscopables"),f=Array.prototype;f[e]==c&&d(8)(f,e,{}),a.exports=function(a){f[e][a]=!0}},function(a,b,c){var d=c(6);d(d.P,"Array",{fill:c(180)}),c(178)("fill")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=function fill(a){for(var b=e(this),d=g(b.length),h=arguments.length,i=f(h>1?arguments[1]:c,d),j=h>2?arguments[2]:c,k=j===c?d:f(j,d);k>i;)b[i++]=a;return b}},function(a,b,d){var e=d(6),f=d(164)(5),g="find",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{find:function find(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(6),f=d(164)(6),g="findIndex",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{findIndex:function findIndex(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(178),f=d(184),g=d(135),h=d(30);a.exports=d(134)(Array,"Array",function(a,b){this._t=h(a),this._i=0,this._k=b},function(){var a=this._t,b=this._k,d=this._i++;return!a||d>=a.length?(this._t=c,f(1)):"keys"==b?f(0,d):"values"==b?f(0,a[d]):f(0,[d,a[d]])},"values"),g.Arguments=g.Array,e("keys"),e("values"),e("entries")},function(a,b){a.exports=function(a,b){return{value:b,done:!!a}}},function(a,b,c){c(186)("Array")},function(a,b,c){var d=c(2),e=c(9),f=c(4),g=c(23)("species");a.exports=function(a){var b=d[a];f&&b&&!b[g]&&e.f(b,g,{configurable:!0,get:function(){return this}})}},function(a,b,d){var e=d(2),f=d(80),g=d(9).f,h=d(48).f,i=d(128),j=d(188),k=e.RegExp,l=k,m=k.prototype,n=/a/g,o=/a/g,p=new k(n)!==n;if(d(4)&&(!p||d(5)(function(){return o[d(23)("match")]=!1,k(n)!=n||k(o)==o||"/a/i"!=k(n,"i")}))){k=function RegExp(a,b){var d=this instanceof k,e=i(a),g=b===c;return!d&&e&&a.constructor===k&&g?a:f(p?new l(e&&!g?a.source:a,b):l((e=a instanceof k)?a.source:a,e&&g?j.call(a):b),d?this:m,k)};for(var q=(function(a){a in k||g(k,a,{configurable:!0,get:function(){return l[a]},set:function(b){l[a]=b}})}),r=h(l),s=0;r.length>s;)q(r[s++]);m.constructor=k,k.prototype=m,d(16)(e,"RegExp",k)}d(186)("RegExp")},function(a,b,c){var d=c(10);a.exports=function(){var a=d(this),b="";return a.global&&(b+="g"),a.ignoreCase&&(b+="i"),a.multiline&&(b+="m"),a.unicode&&(b+="u"),a.sticky&&(b+="y"),b}},function(a,b,d){d(190);var e=d(10),f=d(188),g=d(4),h="toString",i=/./[h],j=function(a){d(16)(RegExp.prototype,h,a,!0)};d(5)(function(){return"/a/b"!=i.call({source:"a",flags:"b"})})?j(function toString(){var a=e(this);return"/".concat(a.source,"/","flags"in a?a.flags:!g&&a instanceof RegExp?f.call(a):c)}):i.name!=h&&j(function toString(){return i.call(this)})},function(a,b,c){c(4)&&"g"!=/./g.flags&&c(9).f(RegExp.prototype,"flags",{configurable:!0,get:c(188)})},function(a,b,d){d(192)("match",1,function(a,b,d){return[function match(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,c){var d=c(8),e=c(16),f=c(5),g=c(33),h=c(23);a.exports=function(a,b,c){var i=h(a),j=c(g,i,""[a]),k=j[0],l=j[1];f(function(){var b={};return b[i]=function(){return 7},7!=""[a](b)})&&(e(String.prototype,a,k),d(RegExp.prototype,i,2==b?function(a,b){return l.call(a,this,b)}:function(a){return l.call(a,this)}))}},function(a,b,d){d(192)("replace",2,function(a,b,d){return[function replace(e,f){var g=a(this),h=e==c?c:e[b];return h!==c?h.call(e,g,f):d.call(String(g),e,f)},d]})},function(a,b,d){d(192)("search",1,function(a,b,d){return[function search(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,d){d(192)("split",2,function(a,b,e){var f=d(128),g=e,h=[].push,i="split",j="length",k="lastIndex";if("c"=="abbc"[i](/(b)*/)[1]||4!="test"[i](/(?:)/,-1)[j]||2!="ab"[i](/(?:ab)*/)[
./node_modules/core-js/client/shim.js:2091 => 	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
./node_modules/core-js/client/shim.min.js:8 => try{var f=[7][d]();f["return"]=function(){e=!0},Array.from(f,function(){throw 2})}catch(g){}a.exports=function(a,b){if(!b&&!e)return!1;var c=!1;try{var f=[7],g=f[d]();g.next=function(){return{done:c=!0}},f[d]=function(){return g},a(f)}catch(h){}return c}},function(a,b,c){var d=c(6),e=c(155);d(d.S+d.F*c(5)(function(){function F(){}return!(Array.of.call(F)instanceof F)}),"Array",{of:function of(){for(var a=0,b=arguments.length,c=new("function"==typeof this?this:Array)(b);b>a;)e(c,a,arguments[a++]);return c.length=b,c}})},function(a,b,d){var e=d(6),f=d(30),g=[].join;e(e.P+e.F*(d(31)!=Object||!d(160)(g)),"Array",{join:function join(a){return g.call(f(this),a===c?",":a)}})},function(a,b,c){var d=c(5);a.exports=function(a,b){return!!a&&d(function(){b?a.call(null,function(){},1):a.call(null)})}},function(a,b,d){var e=d(6),f=d(46),g=d(32),h=d(37),i=d(35),j=[].slice;e(e.P+e.F*d(5)(function(){f&&j.call(f)}),"Array",{slice:function slice(a,b){var d=i(this.length),e=g(this);if(b=b===c?d:b,"Array"==e)return j.call(this,a,b);for(var f=h(a,d),k=h(b,d),l=i(k-f),m=Array(l),n=0;n<l;n++)m[n]="String"==e?this.charAt(f+n):this[f+n];return m}})},function(a,b,d){var e=d(6),f=d(19),g=d(56),h=d(5),i=[].sort,j=[1,2,3];e(e.P+e.F*(h(function(){j.sort(c)})||!h(function(){j.sort(null)})||!d(160)(i)),"Array",{sort:function sort(a){return a===c?i.call(g(this)):i.call(g(this),f(a))}})},function(a,b,c){var d=c(6),e=c(164)(0),f=c(160)([].forEach,!0);d(d.P+d.F*!f,"Array",{forEach:function forEach(a){return e(this,a,arguments[1])}})},function(a,b,d){var e=d(18),f=d(31),g=d(56),h=d(35),i=d(165);a.exports=function(a,b){var d=1==a,j=2==a,k=3==a,l=4==a,m=6==a,n=5==a||m,o=b||i;return function(b,i,p){for(var q,r,s=g(b),t=f(s),u=e(i,p,3),v=h(t.length),w=0,x=d?o(b,v):j?o(b,0):c;v>w;w++)if((n||w in t)&&(q=t[w],r=u(q,w,s),a))if(d)x[w]=r;else if(r)switch(a){case 3:return!0;case 5:return q;case 6:return w;case 2:x.push(q)}else if(l)return!1;return m?-1:k||l?l:x}}},function(a,b,c){var d=c(166);a.exports=function(a,b){return new(d(a))(b)}},function(a,b,d){var e=d(11),f=d(43),g=d(23)("species");a.exports=function(a){var b;return f(a)&&(b=a.constructor,"function"!=typeof b||b!==Array&&!f(b.prototype)||(b=c),e(b)&&(b=b[g],null===b&&(b=c))),b===c?Array:b}},function(a,b,c){var d=c(6),e=c(164)(1);d(d.P+d.F*!c(160)([].map,!0),"Array",{map:function map(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(2);d(d.P+d.F*!c(160)([].filter,!0),"Array",{filter:function filter(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(3);d(d.P+d.F*!c(160)([].some,!0),"Array",{some:function some(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(164)(4);d(d.P+d.F*!c(160)([].every,!0),"Array",{every:function every(a){return e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduce,!0),"Array",{reduce:function reduce(a){return e(this,a,arguments.length,arguments[1],!1)}})},function(a,b,c){var d=c(19),e=c(56),f=c(31),g=c(35);a.exports=function(a,b,c,h,i){d(b);var j=e(a),k=f(j),l=g(j.length),m=i?l-1:0,n=i?-1:1;if(c<2)for(;;){if(m in k){h=k[m],m+=n;break}if(m+=n,i?m<0:l<=m)throw TypeError("Reduce of empty array with no initial value")}for(;i?m>=0:l>m;m+=n)m in k&&(h=b(h,k[m],m,j));return h}},function(a,b,c){var d=c(6),e=c(172);d(d.P+d.F*!c(160)([].reduceRight,!0),"Array",{reduceRight:function reduceRight(a){return e(this,a,arguments.length,arguments[1],!0)}})},function(a,b,c){var d=c(6),e=c(34)(!1),f=[].indexOf,g=!!f&&1/[1].indexOf(1,-0)<0;d(d.P+d.F*(g||!c(160)(f)),"Array",{indexOf:function indexOf(a){return g?f.apply(this,arguments)||0:e(this,a,arguments[1])}})},function(a,b,c){var d=c(6),e=c(30),f=c(36),g=c(35),h=[].lastIndexOf,i=!!h&&1/[1].lastIndexOf(1,-0)<0;d(d.P+d.F*(i||!c(160)(h)),"Array",{lastIndexOf:function lastIndexOf(a){if(i)return h.apply(this,arguments)||0;var b=e(this),c=g(b.length),d=c-1;for(arguments.length>1&&(d=Math.min(d,f(arguments[1]))),d<0&&(d=c+d);d>=0;d--)if(d in b&&b[d]===a)return d||0;return-1}})},function(a,b,c){var d=c(6);d(d.P,"Array",{copyWithin:c(177)}),c(178)("copyWithin")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=[].copyWithin||function copyWithin(a,b){var d=e(this),h=g(d.length),i=f(a,h),j=f(b,h),k=arguments.length>2?arguments[2]:c,l=Math.min((k===c?h:f(k,h))-j,h-i),m=1;for(j<i&&i<j+l&&(m=-1,j+=l-1,i+=l-1);l-- >0;)j in d?d[i]=d[j]:delete d[i],i+=m,j+=m;return d}},function(a,b,d){var e=d(23)("unscopables"),f=Array.prototype;f[e]==c&&d(8)(f,e,{}),a.exports=function(a){f[e][a]=!0}},function(a,b,c){var d=c(6);d(d.P,"Array",{fill:c(180)}),c(178)("fill")},function(a,b,d){var e=d(56),f=d(37),g=d(35);a.exports=function fill(a){for(var b=e(this),d=g(b.length),h=arguments.length,i=f(h>1?arguments[1]:c,d),j=h>2?arguments[2]:c,k=j===c?d:f(j,d);k>i;)b[i++]=a;return b}},function(a,b,d){var e=d(6),f=d(164)(5),g="find",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{find:function find(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(6),f=d(164)(6),g="findIndex",h=!0;g in[]&&Array(1)[g](function(){h=!1}),e(e.P+e.F*h,"Array",{findIndex:function findIndex(a){return f(this,a,arguments.length>1?arguments[1]:c)}}),d(178)(g)},function(a,b,d){var e=d(178),f=d(184),g=d(135),h=d(30);a.exports=d(134)(Array,"Array",function(a,b){this._t=h(a),this._i=0,this._k=b},function(){var a=this._t,b=this._k,d=this._i++;return!a||d>=a.length?(this._t=c,f(1)):"keys"==b?f(0,d):"values"==b?f(0,a[d]):f(0,[d,a[d]])},"values"),g.Arguments=g.Array,e("keys"),e("values"),e("entries")},function(a,b){a.exports=function(a,b){return{value:b,done:!!a}}},function(a,b,c){c(186)("Array")},function(a,b,c){var d=c(2),e=c(9),f=c(4),g=c(23)("species");a.exports=function(a){var b=d[a];f&&b&&!b[g]&&e.f(b,g,{configurable:!0,get:function(){return this}})}},function(a,b,d){var e=d(2),f=d(80),g=d(9).f,h=d(48).f,i=d(128),j=d(188),k=e.RegExp,l=k,m=k.prototype,n=/a/g,o=/a/g,p=new k(n)!==n;if(d(4)&&(!p||d(5)(function(){return o[d(23)("match")]=!1,k(n)!=n||k(o)==o||"/a/i"!=k(n,"i")}))){k=function RegExp(a,b){var d=this instanceof k,e=i(a),g=b===c;return!d&&e&&a.constructor===k&&g?a:f(p?new l(e&&!g?a.source:a,b):l((e=a instanceof k)?a.source:a,e&&g?j.call(a):b),d?this:m,k)};for(var q=(function(a){a in k||g(k,a,{configurable:!0,get:function(){return l[a]},set:function(b){l[a]=b}})}),r=h(l),s=0;r.length>s;)q(r[s++]);m.constructor=k,k.prototype=m,d(16)(e,"RegExp",k)}d(186)("RegExp")},function(a,b,c){var d=c(10);a.exports=function(){var a=d(this),b="";return a.global&&(b+="g"),a.ignoreCase&&(b+="i"),a.multiline&&(b+="m"),a.unicode&&(b+="u"),a.sticky&&(b+="y"),b}},function(a,b,d){d(190);var e=d(10),f=d(188),g=d(4),h="toString",i=/./[h],j=function(a){d(16)(RegExp.prototype,h,a,!0)};d(5)(function(){return"/a/b"!=i.call({source:"a",flags:"b"})})?j(function toString(){var a=e(this);return"/".concat(a.source,"/","flags"in a?a.flags:!g&&a instanceof RegExp?f.call(a):c)}):i.name!=h&&j(function toString(){return i.call(this)})},function(a,b,c){c(4)&&"g"!=/./g.flags&&c(9).f(RegExp.prototype,"flags",{configurable:!0,get:c(188)})},function(a,b,d){d(192)("match",1,function(a,b,d){return[function match(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,c){var d=c(8),e=c(16),f=c(5),g=c(33),h=c(23);a.exports=function(a,b,c){var i=h(a),j=c(g,i,""[a]),k=j[0],l=j[1];f(function(){var b={};return b[i]=function(){return 7},7!=""[a](b)})&&(e(String.prototype,a,k),d(RegExp.prototype,i,2==b?function(a,b){return l.call(a,this,b)}:function(a){return l.call(a,this)}))}},function(a,b,d){d(192)("replace",2,function(a,b,d){return[function replace(e,f){var g=a(this),h=e==c?c:e[b];return h!==c?h.call(e,g,f):d.call(String(g),e,f)},d]})},function(a,b,d){d(192)("search",1,function(a,b,d){return[function search(d){var e=a(this),f=d==c?c:d[b];return f!==c?f.call(d,e):new RegExp(d)[b](String(e))},d]})},function(a,b,d){d(192)("split",2,function(a,b,e){var f=d(128),g=e,h=[].push,i="split",j="length",k="lastIndex";if("c"=="abbc"[i](/(b)*/)[1]||4!="test"[i](/(?:)/,-1)[j]||2!="ab"[i](/(?:ab)*/)[j]||4!="."[i](/(.?)(.?)/)[j]||"."[i](/()()/)[j]>1||""[i](/.?/)[j]){var l=/()??/.exec("")[1]==
./node_modules/syntax-error/node_modules/acorn/src/statement.js:532 =>         if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {
./node_modules/syntax-error/node_modules/acorn/src/statement.js:620 =>       if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, "The keyword '" + node.local.name + "' is reserved")
./node_modules/concat-stream/node_modules/readable-stream/doc/stream.markdown:845 => for examples and testing, but there are occasionally use cases where
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:490 => Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:491 => Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:525 => // Predicate that tests whether the next token is of the given
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:560 =>     lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/dist/acorn.js:496 =>   Parser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };
./node_modules/detective/node_modules/acorn/dist/acorn.js:497 =>   Parser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };
./node_modules/detective/node_modules/acorn/dist/acorn.js:531 =>   // Predicate that tests whether the next token is of the given
./node_modules/detective/node_modules/acorn/dist/acorn.js:566 =>       lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:801 =>       node.test = expr
./node_modules/detective/node_modules/acorn/dist/acorn_loose.js:830 =>         this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression")
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:795 =>     node.test = expr
./node_modules/detective/node_modules/acorn/dist/acorn_loose.es.js:824 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression")
./node_modules/detective/node_modules/acorn/src/walk/index.js:300 =>   c(node.test, st, "Expression")
./node_modules/es6-promise/dist/test/browserify.js:1352 =>         testFulfilled(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1490 => },{"./helpers/testThreeCases":22,"assert":2}],12:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1495 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:1501 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1502 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/browserify.js:1507 =>         testRejected(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:1809 =>  * Run tests and invoke `fn()` when complete.
./node_modules/es6-promise/dist/test/mocha.js:2107 =>   failures.forEach(function(test, i){
./node_modules/es6-promise/dist/test/mocha.js:2114 =>     var err = test.err
./node_modules/es6-promise/dist/test/mocha.js:2152 =>     console.error(fmt, (i + 1), test.fullTitle(), msg, stack);
./node_modules/es6-promise/dist/test/mocha.js:2161 =>  * stats such as test duration, number
./node_modules/es6-promise/dist/test/mocha.js:2162 =>  * of tests passed / failed etc.
./node_modules/es6-promise/dist/test/mocha.js:2170 =>     , stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }
./node_modules/es6-promise/dist/test/mocha.js:2187 =>   runner.on('test end', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2188 =>     stats.tests = stats.tests || 0;
./node_modules/es6-promise/dist/test/mocha.js:2189 =>     stats.tests++;
./node_modules/fs-readline/test/fixtures/afile.txt:557 => "Yes, and a most remarkable bird it proved. I don't wonder that you should take an interest in it. It laid an egg after it was dead--the bonniest, brightest little blue egg that ever was seen. I have it here in my museum."
./node_modules/hawk/test/browser.js:1419 =>                 expect(Browser.utils.parseAuthorizationHeader('Hawk test="\t"', ['test'])).to.equal(null);
./node_modules/hawk/test/browser.js:1425 =>                 expect(Browser.utils.parseAuthorizationHeader('Hawk test="a", test="b"', ['test'])).to.equal(null);
./node_modules/hoek/test/index.js:2430 =>         var result = Hoek.uniqueFilename('./test/modules');
./node_modules/hoek/test/index.js:2434 =>         expect(result).to.contain('test/modules');
./node_modules/jsonld/js/jsonld.js:1936 =>       // handle Link Header (avoid unsafe header warning by existence testing)
./node_modules/jsonld/js/jsonld.js:1939 =>       if(rlink.test(req.getAllResponseHeaders())) {
./node_modules/JSONStream/test/fixtures/all_npm.json:453 => {"id":"buster-test","key":"buster-test","value":{"rev":"5-f7ee9c9f3b379e0ad5aa03d07581ad6f"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:454 => {"id":"buster-test-cli","key":"buster-test-cli","value":{"rev":"9-c207974d20e95029cad5fa4c9435d152"}},
./node_modules/lexical-scope/bench/jquery.js:3 => f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=[],j,k,l,m,n,o,p,q,r,s,t;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!=="click")){m=f(this),m.context=this.ownerDocument||this;for(l=c.target;l!=this;l=l.parentNode||this){o={},q=[],m[0]=l;for(j=0;j<e;j++)r=d[j],s=r.selector,o[s]===b&&(o[s]=r.quick?H(l,r.quick):m.is(s)),o[s]&&q.push(r);q.length&&i.push({elem:l,matches:q})}}d.length>e&&i.push({elem:this,matches:d.slice(e)});for(j=0;j<i.length&&!c.isPropagationStopped();j++){p=i[j],c.currentTarget=p.elem;for(k=0;k<p.matches.length&&!c.isImmediatePropagationStopped();k++){r=p.matches[k];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleObj=r,n=((f.event.special[r.origType]||{}).handle||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventDefault(),c.stopPropagation()))}}return c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0)}),d._submit_attached=!0)})},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.origina
./node_modules/jsonld/tests/webidl/idlharness.js:975 => IdlException.prototype.test_object = function(desc)
./node_modules/jsonld/tests/webidl/idlharness.js:988 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:993 =>         // We can't easily test that its prototype is correct if there's no
./node_modules/jsonld/tests/webidl/idlharness.js:995 =>         // environment (not instanceof Object).  TODO: test in this case that
./node_modules/jsonld/tests/webidl/idlharness.js:996 =>         // its prototype at least looks correct, even if we can't test that
./node_modules/jsonld/tests/webidl/idlharness.js:1025 =>         test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1062 => IdlInterface.prototype.test_self = function()
./node_modules/jsonld/tests/webidl/idlharness.js:1065 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1067 =>         // This function tests WebIDL as of 2012-11-28.
./node_modules/jsonld/tests/webidl/idlharness.js:1082 =>         // TODO: Should we test here that the property is actually writable
./node_modules/jsonld/tests/webidl/idlharness.js:1114 =>         // Not much to test for this.
./node_modules/jsonld/tests/webidl/idlharness.js:1118 =>         // Tested below if no constructor is defined.  TODO: test constructors
./node_modules/jsonld/tests/webidl/idlharness.js:1147 =>         test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1157 =>             // "Return the length of the shortest argument list of the entries
./node_modules/minifyify/test/build/apps/simple file/bundle.map.json:1 => {"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","entry.js"],"names":["myString","anotherString","header","document","createElement","msg","join","innerHTML","body","appendChild"],"mappings":"AAAA;ACAA,GAAIA,WAAY,OAAO,OAAO,MAAM,UAChCC,cACAC,OAASC,SAASC,cAAc,MAChCC,IAAMF,SAASC,cAAc,IAEjCH,eAAgBD,SAASM,KAAK,KAE9BJ,OAAOK,UAAYN,cACnBE,SAASK,KAAKC,YAAYP,QAE1BG,IAAIE,UAAY,8OAChBJ,SAASK,KAAKC,YAAYJ","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var myString = ['Open','Your','Dev','Tools!']\n  , anotherString\n  , header = document.createElement('h1')\n  , msg = document.createElement('p');\n\nanotherString = myString.join(' ');\n\nheader.innerHTML = anotherString;\ndocument.body.appendChild(header);\n\nmsg.innerHTML = 'Do you see this? Great! Too bad this isn\\'t actually the test.<br /><br />Open your dev tools and see if an \"entry.js\" file is there. If so, the actual test suceeded.<br /><br /><em>Remember to turn on source maps in your options!</em>';\ndocument.body.appendChild(msg);\n"]}
./node_modules/jsonld/tests/webidl/testharness.js:1078 =>         this.timeout_length = properties.timeout ? properties.timeout : settings.test_timeout;
./node_modules/jsonld/tests/webidl/testharness.js:1085 =>         tests.push(this);
./node_modules/jsonld/tests/webidl/testharness.js:1114 =>         //In case the test has already failed
./node_modules/jsonld/tests/webidl/testharness.js:1120 =>         tests.started = true;
./node_modules/jsonld/tests/webidl/testharness.js:1163 =>         var test_this = this;
./node_modules/jsonld/tests/webidl/testharness.js:1167 =>             this_obj = test_this;
./node_modules/jsonld/tests/webidl/testharness.js:1172 =>             test_this.step.apply(test_this, [func, this_obj].concat(
./node_modules/jsonld/tests/webidl/testharness.js:1179 =>         var test_this = this;
./node_modules/jsonld/tests/webidl/testharness.js:1183 =>             this_obj = test_this;
./node_modules/jsonld/tests/webidl/testharness.js:1188 =>             test_this.step.apply(test_this, [func, this_obj].concat(
./node_modules/jsonld/tests/webidl/testharness.js:1190 =>             test_this.done();
./node_modules/jsonld/tests/webidl/testharness.js:1222 =>         tests.result(this);
./node_modules/jsonld/tests/webidl/testharness.js:1260 =>         this.tests = [];
./node_modules/jsonld/tests/webidl/testharness.js:1274 =>         //All tests can't be done until the load event fires
./node_modules/jsonld/tests/webidl/testharness.js:1285 =>         this.test_done_callbacks = [];
./node_modules/jsonld/tests/webidl/testharness.js:1379 =>     Tests.prototype.push = function(test)
./node_modules/jsonld/tests/webidl/testharness.js:1385 =>         this.tests.push(test);
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:252 =>   //~~~cheap key test
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:258 =>   //~~~possibly expensive deep test
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:266 => // 8. The non-equivalence assertion tests for any deep inequality.
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:275 => // 9. The strict equality assertion tests strict equality, as determined by ===.
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:284 => // 10. The strict non-equality assertion tests for strict inequality, as
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:299 =>     return expected.test(actual);
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1071 =>  * @param {Function} fn The function to test for native support
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1074 => 	return rnative.test( fn + "" );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1107 =>  * Support testing using an element
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1188 => 		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1211 => 				newContext = rsibling.test( selector ) && context.parentNode || context;
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:486 => - [cd7f8c5](https://github.com/bcoe/yargs/commit/cd7f8c55f0b82b79b690d14c5f806851236998a1) passing tests for new .default() behavior (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:488 => - [4e6c7ab](https://github.com/bcoe/yargs/commit/4e6c7aba6374ac9ebc6259ecf91f13af7bce40e3) test for coffee usage (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:489 => - [d54ffcc](https://github.com/bcoe/yargs/commit/d54ffccf2a5a905f51ed5108f7c647f35d64ae23) new --key value style with passing tests. NOTE: changes existing behavior (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:492 => - [56b2b1d](https://github.com/bcoe/yargs/commit/56b2b1de8d11f8a2b91979d8ae2d6db02d8fe64d) test coverage for the falsy check() usage (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:494 => - [857bd2d](https://github.com/bcoe/yargs/commit/857bd2db933a5aaa9cfecba0ced2dc9b415f8111) tests for demandCount, back up to 100% coverage (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:499 => - [2e5e196](https://github.com/bcoe/yargs/commit/2e5e1960fc19afb21fb3293752316eaa8bcd3609) usage test hacking around process and console (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:504 => - [da74dea](https://github.com/bcoe/yargs/commit/da74dea799a9b59dbf022cbb8001bfdb0d52eec9) more tests for long and short captures (@substack)
./node_modules/node-mkdirp/node_modules/yargs/CHANGELOG.md:505 => - [ab6387e](https://github.com/bcoe/yargs/commit/ab6387e6769ca4af82ca94c4c67c7319f0d9fcfa) silly bug in the tests with s/not/no/, all tests pass now (@substack)
./node_modules/mocha/mocha.js:3354 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3355 =>     var code = utils.clean(test.body);
./node_modules/mocha/mocha.js:3356 =>     buf += test.title + '.\n';
./node_modules/mocha/mocha.js:3388 =>  * Initialize a new `Min` minimal test reporter (best used with --watch).
./node_modules/mocha/mocha.js:3430 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/mocha/mocha.js:3498 =>  * of passes, failures and pending tests.
./node_modules/mocha/mocha.js:3705 =>  * Initialize a new `Progress` bar test reporter.
./node_modules/mocha/mocha.js:3728 =>   // tests started
./node_modules/mocha/mocha.js:3734 =>   // tests complete
./node_modules/mocha/mocha.js:3735 =>   runner.on('test end', function () {
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:665 =>     if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) && (this.options.ecmaVersion >= 6 || this.input.slice(this.start, this.end).indexOf("\\") == -1)) this.raise(this.start, "The keyword '" + this.value + "' is reserved");
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:809 =>       node.test = this.eat(_.tokTypes._while) ? this.parseParenExpression() : this.dummyIdent();
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:835 =>       node.test = this.parseParenExpression();
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:864 =>           if (isCase) cur.test = this.parseExpression();else cur.test = null;
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:870 =>             cur.test = null;
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:910 =>       node.test = this.parseParenExpression();
./node_modules/syntax-error/node_modules/acorn/src/walk/index.js:293 =>   c(node.test, st, "Expression")
./node_modules/uglify-js/node_modules/async/README.md:1356 => form. Comes handy in tests.
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1094 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1098 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0109">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1101 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0109.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1102 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0109.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1103 =>         <purpose>Tests to make sure that @xml:base is ignored in XHTML+RDFa 1.0. The input test document is invalid XHTML.</purpose>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1104 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1108 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0110">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1111 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0110.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1112 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0110.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1114 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1118 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0111">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1121 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0111.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1122 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0111.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1124 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1128 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0112">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1131 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0112.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1132 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0112.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1134 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1138 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0113">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1141 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0113.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1142 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0113.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1144 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1148 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0114">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1151 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0114.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1152 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0114.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1154 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1158 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0115">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1162 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0115.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1163 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0115.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1165 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1169 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0116">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1172 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0116.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1173 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0116.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1174 =>         <purpose>Checks to make sure that reserved words that are used in @property do not generate triples. This is a NEGATIVE test case.</purpose>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1175 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1180 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0117">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1183 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0117.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1184 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0117.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1186 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1190 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0118">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1193 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0118.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1194 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0118.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1197 => 		generating triples. This test sets the subject in a chain using @href
./test/tc0007/manifest.ttl:1553 =>    test:informationResourceResults <test-cases/0221.sparql>;
./test/tc0007/manifest.ttl:1554 =>    test:purpose "@inlist with @rel and @property creates a list with both IRI and Literal elements.";
./test/tc0007/manifest.ttl:1555 =>    test:specificationReference "7.5 Step 11" .
./test/tc0007/manifest.ttl:1556 => <test-cases/0222> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1558 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1559 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1560 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1562 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1563 =>    test:informationResourceInput <test-cases/0222.html>;
./test/tc0007/manifest.ttl:1564 =>    test:informationResourceResults <test-cases/0222.sparql>;
./test/tc0007/manifest.ttl:1565 =>    test:purpose "@inlist with @property at different levels of descendence creates single list.";
./test/tc0007/manifest.ttl:1566 =>    test:specificationReference "7.5 Step 11" .
./test/tc0007/manifest.ttl:1567 => <test-cases/0223> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1569 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1570 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1571 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1573 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1574 =>    test:informationResourceInput <test-cases/0223.html>;
./test/tc0007/manifest.ttl:1575 =>    test:informationResourceResults <test-cases/0223.sparql>;
./test/tc0007/manifest.ttl:1576 =>    test:purpose "Use of predicate with @inlist and without @inlist creates both list and non-list triples.";
./test/tc0007/manifest.ttl:1577 =>    test:specificationReference "7.5 Step 9" .
./test/tc0007/manifest.ttl:1578 => <test-cases/0224> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1580 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1581 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1582 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1584 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1585 =>    test:informationResourceInput <test-cases/0224.html>;
./test/tc0007/manifest.ttl:1586 =>    test:informationResourceResults <test-cases/0224.sparql>;
./test/tc0007/manifest.ttl:1587 =>    test:purpose "Use of @rel and @inlist with decendent IRI elements creates list";
./test/tc0007/manifest.ttl:1588 =>    test:specificationReference "7.5 Step 11" .
./test/tc0007/manifest.ttl:1589 => <test-cases/0225> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1591 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1592 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1593 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1595 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1596 =>    test:informationResourceInput <test-cases/0225.html>;
./test/tc0007/manifest.ttl:1597 =>    test:informationResourceResults <test-cases/0225.sparql>;
./test/tc0007/manifest.ttl:1598 =>    test:purpose "@inlist with same property and subject on different elements creates multiple lists";
./test/tc0007/manifest.ttl:1599 =>    test:specificationReference "7.5 Step 11" .
./test/tc0007/manifest.ttl:1600 => <test-cases/0226> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1602 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1603 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1604 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1606 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1607 =>    test:informationResourceInput <test-cases/0226.html>;
./test/tc0007/manifest.ttl:1608 =>    test:informationResourceResults <test-cases/0226.sparql>;
./test/tc0007/manifest.ttl:1609 =>    test:purpose "Use of @inlist with implicit subject uses different list";
./test/tc0007/manifest.ttl:1610 =>    test:specificationReference "7.5 Step 8" .
./test/tc0007/manifest.ttl:1611 => <test-cases/0227> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1613 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1614 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1615 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1617 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1618 =>    test:informationResourceInput <test-cases/0227.html>;
./test/tc0007/manifest.ttl:1619 =>    test:informationResourceResults <test-cases/0227.sparql>;
./test/tc0007/manifest.ttl:1620 =>    test:purpose "Use of @inlist with implicit subject uses different list";
./test/tc0007/manifest.ttl:1621 =>    test:specificationReference "7.5 Step 9" .
./test/tc0007/manifest.ttl:1622 => <test-cases/0228> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1623 =>    dc:title "1.1 alternate for test 0040: @rev - @src/@resource test";
./test/tc0007/manifest.ttl:1624 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1625 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1626 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1627 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1628 =>    test:informationResourceInput <test-cases/0228.html>;
./test/tc0007/manifest.ttl:1629 =>    test:informationResourceResults <test-cases/0228.sparql>;
./test/tc0007/manifest.ttl:1630 =>    test:purpose "@src is a lower priority than @resource";
./test/tc0007/manifest.ttl:1631 =>    test:specificationReference "7.5 Step 6" .
./test/tc0007/manifest.ttl:1632 => <test-cases/0229> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1633 =>    dc:title "img[@src] test with omitted @about";
./test/tc0007/manifest.ttl:1634 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1635 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1636 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1638 =>    rdfatest:hostLanguage "xml1", "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1639 =>    test:informationResourceInput <test-cases/0229.html>;
./test/tc0007/manifest.ttl:1640 =>    test:informationResourceResults <test-cases/0229.sparql>;
./test/tc0007/manifest.ttl:1641 =>    test:purpose "Tests if a @src (in img element) does not set the URIref object (with omitted @about) -- from 0042";
./test/tc0007/manifest.ttl:1642 =>    test:specificationReference "7.5 Step 6" .
./test/tc0007/manifest.ttl:1643 => <test-cases/0230> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1645 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1646 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1647 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1648 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1649 =>    test:informationResourceInput <test-cases/0230.html>;
./test/tc0007/manifest.ttl:1650 =>    test:informationResourceResults <test-cases/0230.sparql>;
./test/tc0007/manifest.ttl:1651 =>    test:purpose "Tests to ensure that @src does not set a new subject (oposite of 0090 for 1.0).";
./test/tc0007/manifest.ttl:1652 =>    test:specificationReference "7.5 Step 6" .
./test/tc0007/manifest.ttl:1653 => <test-cases/0231> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1655 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1656 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1657 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1658 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1659 =>    test:informationResourceInput <test-cases/0231.html>;
./test/tc0007/manifest.ttl:1660 =>    test:informationResourceResults <test-cases/0231.sparql>;
./test/tc0007/manifest.ttl:1661 =>    test:purpose "Tests new behavior of @src in 1.1";
./test/tc0007/manifest.ttl:1662 =>    test:specificationReference "7.5 Step 6" .
./test/tc0007/manifest.ttl:1663 => <test-cases/0232> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1665 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1666 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1667 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1668 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1669 =>    test:informationResourceInput <test-cases/0232.html>;
./test/tc0007/manifest.ttl:1670 =>    test:informationResourceResults <test-cases/0232.sparql>;
./test/tc0007/manifest.ttl:1671 =>    test:purpose "Tests @typeof with @rel present, no @href, @resource, or @about creates a BNode object";
./test/tc0007/manifest.ttl:1672 =>    test:specificationReference "7.5 Step 6" .
./test/tc0007/manifest.ttl:1673 => <test-cases/0233> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1675 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1676 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1677 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1678 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5";
./test/tc0007/manifest.ttl:1679 =>    test:informationResourceInput <test-cases/0233.html>;
./test/tc0007/manifest.ttl:1680 =>    test:informationResourceResults <test-cases/0233.sparql>;
./test/tc0007/manifest.ttl:1681 =>    test:purpose "Tests @typeof with @rel and @resource present, no @about adds type to object";
./test/tc0007/manifest.ttl:1682 =>    test:specificationReference "" .
./test/tc0007/manifest.ttl:1683 => <test-cases/0234> dc:contributor "Gregg Kellogg";
./test/tc0007/manifest.ttl:1685 =>    a test:TestCase;
./test/tc0007/manifest.ttl:1686 =>    rdfatest:rdfaVersion "rdfa1.1";
./test/tc0007/manifest.ttl:1687 =>    test:classification test:required;
./test/tc0007/manifest.ttl:1688 =>    rdfatest:hostLanguage "xhtml1", "html4", "html5", "xhtml5", "svg";
./test/tc0007/manifest.ttl:1689 =>    test:informationResourceInput <test-cases/0234.html>;
./test/tc0007/manifest.ttl:1690 =>    test:informationResourceResults <test-cases/0234.sparql>;
./test/tc0007/manifest.ttl:1691 =>    test:purpose "Tests to ensure that all defined linked relations expand";
./test/tc0007/manifest.ttl:1692 =>    test:specificationReference "" .
./test/tc0004/rdfcore/Manifest.rdf:1482 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-difference-between-ID-and-about" />
./test/tc0004/rdfcore/Manifest.rdf:1483 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1484 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Dec/0108.html" />
./test/tc0004/rdfcore/Manifest.rdf:1485 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1486 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1488 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1490 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1491 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/error1.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1492 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1494 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1497 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/Manifest.rdf#test1">
./test/tc0004/rdfcore/Manifest.rdf:1499 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-difference-between-ID-and-about" />
./test/tc0004/rdfcore/Manifest.rdf:1500 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1501 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Dec/0108.html" />
./test/tc0004/rdfcore/Manifest.rdf:1502 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1503 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1505 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1507 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1508 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test1.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1509 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1511 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1512 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test1.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1513 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1515 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1518 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/Manifest.rdf#test2">
./test/tc0004/rdfcore/Manifest.rdf:1520 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1521 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1523 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-difference-between-ID-and-about" />
./test/tc0004/rdfcore/Manifest.rdf:1525 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1526 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1527 => 	This test shows the treatment of non-ASCII characters
./test/tc0004/rdfcore/Manifest.rdf:1529 =>    </test:description> 
./test/tc0004/rdfcore/Manifest.rdf:1531 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1532 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test2.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1533 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1535 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1536 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test2.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1537 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1539 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1542 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/Manifest.rdf#test3">
./test/tc0004/rdfcore/Manifest.rdf:1544 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1545 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1546 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-difference-between-ID-and-about" />
./test/tc0004/rdfcore/Manifest.rdf:1548 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1550 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1551 => 	This test shows the treatment of non-ASCII characters
./test/tc0004/rdfcore/Manifest.rdf:1553 =>    </test:description> 
./test/tc0004/rdfcore/Manifest.rdf:1555 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1556 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test3.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1557 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1559 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1560 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-difference-between-ID-and-about/test3.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1561 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1563 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1566 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-duplicate-member-props/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:1568 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-duplicate-member-props" />
./test/tc0004/rdfcore/Manifest.rdf:1569 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1570 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002May/0028.html" />
./test/tc0004/rdfcore/Manifest.rdf:1571 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1576 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:1578 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1579 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-duplicate-member-props/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1580 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1582 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1583 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-duplicate-member-props/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1584 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1586 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1590 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:1592 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1593 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1594 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1595 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1596 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1598 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1600 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1601 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1602 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1604 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1607 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:1609 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1610 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1611 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1612 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1613 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1615 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1617 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1618 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1619 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1621 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1624 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#error003">
./test/tc0004/rdfcore/Manifest.rdf:1626 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1627 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1628 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1629 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1630 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1632 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1634 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1635 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/error003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1636 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1638 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1641 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:1643 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1644 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1645 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1646 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1647 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1649 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1651 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1652 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1653 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1655 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1656 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1657 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1659 => </test:PositiveParserTest>
./node_modules/babylon/lib/index.js:1941 =>   node.test = this.parseParenExpression();
./node_modules/babylon/lib/index.js:2013 =>   node.test = this.parseParenExpression();
./node_modules/babylon/lib/index.js:2060 =>         cur.test = this.parseExpression();
./node_modules/babylon/lib/index.js:2064 =>         cur.test = null;
./node_modules/babylon/lib/index.js:2083 =>   if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, "Illegal newline after throw");
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:498 =>   else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
./node_modules/syntax-error/node_modules/acorn/src/tokenize.js:679 =>   if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))
./node_modules/syntax-error/node_modules/acorn/src/loose/state.js:95 =>       lineBreak.test(this.input.slice(this.last.end, this.tok.start))
./node_modules/syntax-error/node_modules/acorn/src/loose/expression.js:63 =>     node.test = expr
./node_modules/syntax-error/node_modules/acorn/src/loose/expression.js:92 =>       this.finishNode(node, /&&|\|\|/.test(node.operator) ? "LogicalExpression" : "BinaryExpression")
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:41 =>     node.test = this.eat(tt._while) ? this.parseParenExpression() : this.dummyIdent()
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:68 =>     node.test = this.parseParenExpression()
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:95 =>         if (isCase) cur.test = this.parseExpression()
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:96 =>         else cur.test = null
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:102 =>           cur.test = null
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:142 =>     node.test = this.parseParenExpression()
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:201 =>   node.test = node.update = null
./node_modules/syntax-error/node_modules/acorn/src/loose/statement.js:202 =>   if (this.eat(tt.semi) && this.tok.type !== tt.semi) node.test = this.parseExpression()
./node_modules/chai/lib/chai/core/assertions.js:1238 =>    * (as determined using `instanceof`), optionally with a RegExp or string inclusion test
./node_modules/chai/lib/chai/core/assertions.js:1456 =>    * Asserts that the target passes a given truth test.
./node_modules/chai/chai.js:3350 =>     var test = new Assertion(ok, msg);
./node_modules/chai/chai.js:3351 =>     test.assert(
./node_modules/chai/chai.js:3352 =>         true === flag(test, 'object')
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:765 =>   node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:817 =>   node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:858 =>         cur.test = this$1.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:862 =>         cur.test = null
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:878 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:918 =>   node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:771 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:823 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:864 =>           cur.test = this$1.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:868 =>           cur.test = null
./node_modules/es6-promise/dist/test/browserify.js:1645 => },{"./helpers/testThreeCases":22,"assert":2}],13:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1650 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:1651 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:1658 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1663 =>         testFulfilled(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1673 =>         testRejected(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1685 =>     describe("Clean-stack execution ordering tests (fulfillment case)", function () {
./node_modules/es6-promise/dist/test/browserify.js:1757 =>     describe("Clean-stack execution ordering tests (rejection case)", function () {
./node_modules/es6-promise/dist/test/browserify.js:1831 => },{"./helpers/testThreeCases":22,"assert":2}],14:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:1841 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1844 =>     function test() {
./node_modules/es6-promise/dist/test/browserify.js:1848 =>     return test();
./node_modules/es6-promise/dist/test/mocha.js:2192 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2195 =>     var medium = test.slow() / 2;
./node_modules/es6-promise/dist/test/mocha.js:2196 =>     test.speed = test.duration > test.slow()
./node_modules/es6-promise/dist/test/mocha.js:2198 =>       : test.duration > medium
./node_modules/es6-promise/dist/test/mocha.js:2205 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:2208 =>     test.err = err;
./node_modules/es6-promise/dist/test/mocha.js:2209 =>     failures.push(test);
./node_modules/es6-promise/dist/test/mocha.js:2231 =>   var tests;
./node_modules/es6-promise/dist/test/mocha.js:2462 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2463 =>     console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));
./node_modules/es6-promise/dist/test/mocha.js:2464 =>     var code = utils.escape(utils.clean(test.fn.toString()));
./node_modules/es6-promise/dist/test/mocha.js:2468 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:2469 =>     console.log('%s  <dt class="error">%s</dt>', indent(), utils.escape(test.title));
./node_modules/es6-promise/dist/test/mocha.js:2470 =>     var code = utils.escape(utils.clean(test.fn.toString()));
./node_modules/es6-promise/dist/test/mocha.js:2494 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/es6-promise/dist/test/mocha.js:2512 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2517 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2519 =>     if ('slow' == test.speed) {
./node_modules/es6-promise/dist/test/mocha.js:2522 =>       process.stdout.write(color(test.speed, Base.symbols.dot));
./node_modules/es6-promise/dist/test/mocha.js:2526 =>   runner.on('fail', function(test, err){
./node_modules/fs-readline/test/fixtures/afile.txt:587 => " 'Well,' said I, 'you said you'd give me one for Christmas, and I was feeling which was the fattest.'
./node_modules/hoek/test/index.js:2443 =>             results[i] = Hoek.uniqueFilename('./test/modules');
./node_modules/hoek/test/index.js:2459 =>         var result = Hoek.uniqueFilename('./test', 'txt');
./node_modules/hoek/test/index.js:2461 =>         expect(result).to.contain('test/');
./node_modules/hoek/test/index.js:2469 =>         var result = Hoek.uniqueFilename('./test', '.mp3');
./node_modules/hoek/test/index.js:2471 =>         expect(result).to.contain('test/');
./node_modules/jsonld/tests/webidl/idlharness.js:1160 =>             // works for testing operation length too (currently we just don't
./node_modules/jsonld/tests/webidl/idlharness.js:1184 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1210 =>         // Next, test that the [[Prototype]] of the interface prototype object
./node_modules/jsonld/tests/webidl/idlharness.js:1250 =>             // We can't test that we get the correct object, because this is the
./node_modules/jsonld/tests/webidl/idlharness.js:1251 =>             // only way to get our hands on it. We only test that its class
./node_modules/jsonld/tests/webidl/idlharness.js:1272 =>     test(function()
./node_modules/jsonld/tests/webidl/testharness.js:1432 =>     Tests.prototype.result = function(test)
./node_modules/jsonld/tests/webidl/testharness.js:1440 =>         this.notify_result(test);
./node_modules/jsonld/tests/webidl/testharness.js:1443 =>     Tests.prototype.notify_result = function(test) {
./node_modules/jsonld/tests/webidl/testharness.js:1446 =>         forEach(this.test_done_callbacks,
./node_modules/jsonld/tests/webidl/testharness.js:1449 =>                     callback(test, this_obj);
./node_modules/jsonld/tests/webidl/testharness.js:1459 =>                             w.result_callback(test);
./node_modules/jsonld/tests/webidl/testharness.js:1472 =>                             test: test.structured_clone()
./node_modules/jsonld/tests/webidl/testharness.js:1489 =>         this.tests.forEach(
./node_modules/jsonld/tests/webidl/testharness.js:1505 =>         var tests = map(this_obj.tests,
./node_modules/jsonld/tests/webidl/testharness.js:1506 =>                         function(test)
./node_modules/jsonld/tests/webidl/testharness.js:1508 =>                             return test.structured_clone();
./node_modules/jsonld/tests/webidl/testharness.js:1518 =>                      callback(this_obj.tests, this_obj.status);
./node_modules/jsonld/tests/webidl/testharness.js:1528 =>                             w.completion_callback(this_obj.tests, this_obj.status);
./node_modules/jsonld/tests/webidl/testharness.js:1542 =>                             tests: tests,
./node_modules/jsonld/tests/webidl/testharness.js:1549 =>     var tests = new Tests();
./node_modules/jsonld/tests/webidl/testharness.js:1552 =>         if (!tests.allow_uncaught_exception)
./node_modules/jsonld/tests/webidl/testharness.js:1554 =>             tests.status.status = tests.status.ERROR;
./node_modules/jsonld/tests/webidl/testharness.js:1555 =>             tests.status.message = msg;
./node_modules/jsonld/tests/webidl/testharness.js:1556 =>             tests.complete();
./node_modules/jsonld/tests/webidl/testharness.js:1561 =>         if (tests.timeout_length === null)
./node_modules/jsonld/tests/webidl/testharness.js:1563 =>             tests.timeout();
./node_modules/jsonld/tests/webidl/testharness.js:1569 =>         tests.start_callbacks.push(callback);
./node_modules/jsonld/tests/webidl/testharness.js:1574 =>         tests.test_done_callbacks.push(callback);
./node_modules/jsonld/tests/webidl/testharness.js:1579 =>        tests.all_done_callbacks.push(callback);
./node_modules/jsonld/tests/webidl/testharness.js:1608 =>         //If output is disabled in testharnessreport.js the test shouldn't be
./node_modules/jsonld/tests/webidl/testharness.js:1649 =>     Output.prototype.show_status = function(test)
./node_modules/jsonld/tests/webidl/testharness.js:1672 =>                     + tests.num_pending + " remain";
./node_modules/jsonld/tests/webidl/testharness.js:1677 =>     Output.prototype.show_results = function (tests, harness_status)
./node_modules/minifyify/test/fixtures/libraries/Backbone.min.map:1 => {"version":3,"file":"backbone-min.js","sources":["backbone.js"],"names":["root","this","previousBackbone","Backbone","array","push","slice","splice","exports","VERSION","_","require","$","jQuery","Zepto","ender","noConflict","emulateHTTP","emulateJSON","Events","on","name","callback","context","eventsApi","_events","events","ctx","once","self","off","apply","arguments","_callback","retain","ev","names","i","l","j","k","keys","length","trigger","args","call","allEvents","all","triggerEvents","stopListening","obj","listeners","_listeners","deleteListener","_listenerId","id","eventSplitter","action","rest","key","concat","test","split","a1","a2","a3","listenMethods","listenTo","listenToOnce","each","implementation","method","uniqueId","bind","unbind","extend","Model","attributes","options","defaults","attrs","cid","pick","modelOptions","parse","result","set","changed","initialize","prototype","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","val","unset","changes","silent","changing","prev","current","_validate","_changing","_previousAttributes","isEqual","_pending","clear","hasChanged","isEmpty","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","wrapError","save","xhr","wait","validate","serverAttrs","isObject","isNew","patch","destroy","collection","url","base","urlError","charAt","encodeURIComponent","constructor","isValid","error","modelMethods","unshift","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","map","isArray","index","_byId","indexOf","_removeReference","existing","sort","at","sortable","sortAttr","isString","toAdd","toRemove","modelMap","_prepareModel","_onModelEvent","previousModels","pop","shift","begin","end","where","first","findWhere","Error","sortBy","sortedIndex","value","iterator","isFunction","pluck","invoke","create","event","methods","attributeMethods","View","_configure","_ensureElement","delegateEvents","delegateEventSplitter","viewOptions","tagName","selector","$el","find","render","setElement","element","delegate","undelegateEvents","el","match","eventName","className","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","window","ActiveXObject","external","msActiveXFilteringEnabled","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","navigate","replace","optional","RegExp","exec","param","decodeURIComponent","History","handlers","bindAll","location","routeStripper","rootStripper","isExplorer","trailingSlash","started","interval","getHash","href","getFragment","forcePushState","_hasPushState","_wantsHashChange","pathname","substr","start","hashChange","_wantsPushState","pushState","docMode","document","documentMode","oldIE","navigator","userAgent","toLowerCase","iframe","hide","appendTo","contentWindow","checkUrl","_checkUrlInterval","setInterval","loc","atRoot","search","hash","replaceState","title","loadUrl","stop","clearInterval","e","fragmentOverride","matched","any","handler","_updateHash","open","close","assign","protoProps","staticProps","parent","child","Surrogate","__super__"],"mappings":"CAOA,WAOE,GAAIA,GAAOC,IAIX,IAAIC,GAAmBF,EAAKG,QAG5B,IAAIC,KACJ,IAAIC,GAAOD,EAAMC,IACjB,IAAIC,GAAQF,EAAME,KAClB,IAAIC,GAASH,EAAMG,MAInB,IAAIJ,EACJ,UAAWK,WAAY,YAAa,CAClCL,EAAWK,YACN,CACLL,EAAWH,EAAKG,YAIlBA,EAASM,QAAU,OAGnB,IAAIC,GAAIV,EAAKU,CACb,KAAKA,SAAaC,WAAY,YAAcD,EAAIC,QAAQ,aAIxDR,GAASS,EAAIZ,EAAKa,QAAUb,EAAKc,OAASd,EAAKe,OAASf,EAAKY,CAI7DT,GAASa,WAAa,WACpBhB,EAAKG,SAAWD,CAChB,OAAOD,MAMTE,GAASc,YAAc,KAMvBd,GAASe,YAAc,KAevB,IAAIC,GAAShB,EAASgB,QAIpBC,GAAI,SAASC,EAAMC,EAAUC,GAC3B,IAAKC,EAAUvB,KAAM,KAAMoB,GAAOC,EAAUC,MAAcD,EAAU,MAAOrB,KAC3EA,MAAKwB,UAAYxB,KAAKwB,WACtB,IAAIC,GAASzB,KAAKwB,QAAQJ,KAAUpB,KAAKwB,QAAQJ,MACjDK,GAAOrB,MAAMiB,SAAUA,EAAUC,QAASA,EAASI,IAAKJ,GAAWtB,MACnE,OAAOA,OAKT2B,KAAM,SAASP,EAAMC,EAAUC,GAC7B,IAAKC,EAAUvB,KAAM,OAAQoB,GAAOC,EAAUC,MAAcD,EAAU,MAAOrB,KAC7E,IAAI4B,GAAO5B,IACX,IAAI2B,GAAOlB,EAAEkB,KAAK,WAChBC,EAAKC,IAAIT,EAAMO,EACfN,GAASS,MAAM9B,KAAM+B,YAEvBJ,GAAKK,UAAYX,CACjB,OAAOrB,MAAKmB,GAAGC,EAAMO,EAAML,IAO7BO,IAAK,SAAST,EAAMC,EAAUC,GAC5B,GAAIW,GAAQC,EAAIT,EAAQU,EAAOC,EAAGC,EAAGC,EAAGC,CACxC,KAAKvC,KAAKwB,UAAYD,EAAUvB,KAAM,MAAOoB,GAAOC,EAAUC,IAAW,MAAOtB,KAChF,KAAKoB,IAASC,IAAaC,EAAS,CAClCtB,KAAKwB,UACL,OAAOxB,MAGTmC,EAAQf,GAAQA,GAAQX,EAAE+B,KAAKxC,KAAKwB,QACpC,KAAKY,EAAI,EAAGC,EAAIF,EAAMM,OAAQL,EAAIC,EAAGD,IAAK,CACxChB,EAAOe,EAAMC,EACb,IAAIX,EAASzB,KAAKwB,QAAQJ,GAAO,CAC/BpB,KAAKwB,QAAQJ,GAAQa,IACrB,IAAIZ,GAAYC,EAAS,CACvB,IAAKgB,EAAI,EAAGC,EAAId,EAAOgB,OAAQH,EAAIC,EAAGD,IAAK,CACzCJ,EAAKT,EAAOa,EACZ,IAAKjB,GAAYA,IAAaa,EAAGb,UAAYA,IAAaa,EAAGb,SAASW,WACjEV,GAAWA,IAAYY,EAAGZ,QAAU,CACvCW,EAAO7B,KAAK8B,KAIlB,IAAKD,EAAOQ,aAAezC,MAAKwB,QAAQJ,IAI5C,MAAOpB,OAOT0C,QAAS,SAAStB,GAChB,IAAKpB,KAAKwB,QAAS,MAAOxB,KAC1B,IAAI2C,GAAOtC,EAAMuC,KAAKb,UAAW,EACjC,KAAKR,EAAUvB,KAAM,UAAWoB,EAAMuB,GAAO,MAAO3C,KACpD,IAAIyB,GAASzB,KAAKwB,QAAQJ,EAC1B,IAAIyB,GAAY7C,KAAKwB,QAAQsB,GAC7B,IAAIrB,EAAQsB,EAActB,EAAQkB,EAClC,IAAIE,EAAWE,EAAcF,EAAWd,UACxC,OAAO/B,OAKTgD,cAAe,SAASC,EAAK7B,EAAMC,GACjC,GAAI6B,GAAYlD,KAAKmD,UACrB,KAAKD,EAAW,MAAOlD,KACvB,IAAIoD,IAAkBhC,IAASC,CAC/B,UAAWD,KAAS,SAAUC,EAAWrB,IACzC,IAAIiD,GAAMC,MAAgBD,EAAII,aAAeJ,CAC7C,KAAK,GAAIK,KAAMJ,GAAW,CACxBA,EAAUI,GAAIzB,IAAIT,EAAMC,EAAUrB,KAClC,IAAIoD,QAAuBpD,MAAKmD,WAAWG,GAE7C,MAAOtD,OAMX,IAAIuD,GAAgB,KAKpB,IAAIhC,GAAY,SAAS0B,EAAKO,EAAQpC,EAAMqC,GAC1C,IAAKrC,EAAM,MAAO,KAGlB,UAAWA,KAAS,SAAU,CAC5B,IAAK,GAAIsC,KAAOtC,GAAM,CACpB6B,EAAIO,GAAQ1B,MAAMmB,GAAMS,EAAKtC,EAAKsC,IAAMC,OAAOF,IAEjD,MAAO,OAIT,GAAIF,EAAcK,KAAKxC,GAAO,CAC5B,GAAIe,GAAQf,EAAKyC,MAAMN,EACvB,KAAK,GAAInB,GAAI,EAAGC,EAAIF,EAAMM,OAAQL,EAAIC,EAAGD,IAAK,CAC5Ca,EAAIO,GAAQ1B,MAAMmB,GAAMd,EAAMC,IAAIuB,OAAOF,IAE3C,MAAO,OAGT,MAAO,MAMT,IAAIV,GAAgB,SAAStB,EAAQkB,GACnC,GAAIT,GAAIE,GAAK,EAAGC,EAAIZ,EAAOgB,OAAQqB,EAAKnB,EAAK,GAAIoB,EAAKpB,EAAK,GAAIqB,EAAKrB,EAAK,EACzE,QAAQA,EAAKF,QACX,IAAK,GAAG,QAASL,EAAIC,GAAIH,EAAKT,EAAOW,IAAIf,SAASuB,KAAKV,EAAGR,IAAM,OAChE,KAAK,GAAG,QAASU,EAAIC,GAAIH,EAAKT,EAAOW,IAAIf,SAASuB,KAAKV,EAAGR,IAAKoC,EAAK,OACpE,KAAK,GAAG,QAAS1B,EAAIC,GAAIH,EAAKT,EAAOW,IAAIf,SAASuB,KAAKV,EAAGR,IAAKoC,EAAIC,EAAK,OACxE,KAAK,GAAG,QAAS3B,EAAIC,GAAIH,EAAKT,EAAOW,IAAIf,SAASuB,KAAKV,EAAGR,IAAKoC,EAAIC,EAAIC,EAAK,OAC5E,SAAS,QAAS5B,EAAIC,GAAIH,EAAKT,EAAOW,IAAIf,SAASS,MAAMI,EAAGR,IAAKiB,IAIrE,IAAIsB,IAAiBC,SAAU,KAAMC,aAAc,OAKnD1D,GAAE2D,KAAKH,EAAe,SAASI,EAAgBC,GAC7CpD,EAAOoD,GAAU,SAASrB,EAAK7B,EAAMC,GACnC,GAAI6B,GAAYlD,KAAKmD,aAAenD,KAAKmD,cACzC,IAAIG,GAAKL,EAAII,cAAgBJ,EAAII,YAAc5C,EAAE8D,SAAS,KAC1DrB,GAAUI,GAAML,CAChB,UAAW7B,KAAS,SAAUC,EAAWrB,IACzCiD,GAAIoB,GAAgBjD,EAAMC,EAAUrB,KACpC,OAAOA,QAKXkB,GAAOsD,KAAStD,EAAOC,EACvBD,GAAOuD,OAASvD,EAAOW,GAIvBpB,GAAEiE,OAAOxE,EAAUgB,EAYnB,IAAIyD,GAAQzE,EAASyE,MAAQ,SAASC,EAAYC,GAChD,GAAIC,EACJ,IAAIC,GAAQH,KACZC,KAAYA,KACZ7E,MAAKgF,IAAMvE,EAAE8D,SAAS,IACtBvE,MAAK4E,aACLnE,GAAEiE,OAAO1E,KAAMS,EAAEwE,KAAKJ,EAASK,GAC/B,IAAIL,EAAQM,MAAOJ,EAAQ/E,KAAKmF,MAAMJ,EAAOF,MAC7C,IAAIC,EAAWrE,EAAE2E,OAAOpF,KAAM,YAAa,CACzC+E,EAAQtE,EAAEqE,YAAaC,EAAOD,GAEhC9E,KAAKqF,IAAIN,EAAOF,EAChB7E,MAAKsF,UACLtF,MAAKuF,WAAWzD,MAAM9B,KAAM+B,WAI9B,IAAImD,IAAgB,MAAO,UAAW,aAGtCzE,GAAEiE,OAAOC,EAAMa,UAAWtE,GAGxBoE,QAAS,KAGTG,gBAAiB,KAIjBC,YAAa,KAIbH,WAAY,aAGZI,OAAQ,SAASd,GACf,MAAOpE,GAAEmF,MAAM5F,KAAK4E,aAKtBiB,KAAM,WACJ,MAAO3F,GAAS2F,KAAK/D,MAAM9B,KAAM+B,YAInC+D,IAAK,SAASC,GACZ,MAAO/F,MAAK4E,WAAWmB,IAIzBC,OAAQ,SAASD,GACf,MAAOtF,GAAEuF,OAAOhG,KAAK8F,IAAIC,KAK3BE,IAAK,SAASF,GACZ,MAAO/F,MAAK8F,IAAIC,IAAS,MAM3BV,IAAK,SAAS3B,EAAKwC,EAAKrB,GACtB,GAAIkB,GAAMhB,EAAOoB,EAAOC,EAASC,EAAQC,EAAUC,EAAMC,CACzD,IAAI9C,GAAO,KAAM,MAAO1D,KAGxB,UAAW0D,KAAQ,SAAU,CAC3BqB,EAAQrB,CACRmB,GAAUqB,MACL,EACJnB,MAAYrB,GAAOwC,EAGtBrB,IAAYA,KAGZ,KAAK7E,KAAKyG,UAAU1B,EAAOF,GAAU,MAAO,MAG5CsB,GAAkBtB,EAAQsB,KAC1BE,GAAkBxB,EAAQwB,MAC1BD,KACAE,GAAkBtG,KAAK0G,SACvB1G,MAAK0G,UAAa,IAElB,KAAKJ,EAAU,CACbtG,KAAK2G,oBAAsBlG,EAAEmF,MAAM5F,KAAK4E,WACxC5E,MAAKsF,WAEPkB,EAAUxG,KAAK4E,WAAY2B,EAAOvG,KAAK2G,mBAGvC,IAAI3G,KAAK0F,cAAeX,GAAO/E,KAAKsD,GAAKyB,EAAM/E,KAAK0F,YAGpD,KAAKK,IAAQhB,GAAO,CAClB
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1263 => 	// Support tests
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1304 => 	// so use a roundabout getElementsByName test
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1397 => 			// This is to test IE's treatment of not explicitly
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1411 => 			// IE8 throws error here and will not see later tests
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1433 => 			// IE8 throws error here and will not see later tests
./node_modules/mocha/mocha.js:3759 =>   // tests are complete, output some stats
./node_modules/mocha/mocha.js:3792 =>  * Initialize a new `Spec` test reporter.
./node_modules/mocha/mocha.js:3824 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:3826 =>     console.log(fmt, test.title);
./node_modules/mocha/mocha.js:3829 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3831 =>     if (test.speed === 'fast') {
./node_modules/mocha/mocha.js:3835 =>       console.log(fmt, test.title);
./node_modules/mocha/mocha.js:3840 =>         color(test.speed, ' (%dms)');
./node_modules/mocha/mocha.js:3841 =>       console.log(fmt, test.title, test.duration);
./node_modules/mocha/mocha.js:3845 =>   runner.on('fail', function (test) {
./node_modules/mocha/mocha.js:3846 =>     console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);
./node_modules/mocha/mocha.js:3890 =>   runner.on('test end', function () {
./node_modules/mocha/mocha.js:3894 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:3895 =>     console.log('ok %d %s # SKIP -', n, title(test));
./node_modules/mocha/mocha.js:3898 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3900 =>     console.log('ok %d %s', n, title(test));
./node_modules/mocha/mocha.js:3903 =>   runner.on('fail', function (test, err) {
./node_modules/mocha/mocha.js:3905 =>     console.log('not ok %d %s', n, title(test));
./node_modules/mocha/mocha.js:3912 =>     console.log('# tests ' + (passes + failures));
./node_modules/mocha/mocha.js:3919 =>  * Return a TAP-safe title of `test`
./node_modules/mocha/mocha.js:3922 =>  * @param {Object} test
./node_modules/mocha/mocha.js:3925 => function title (test) {
./node_modules/mocha/mocha.js:3926 =>   return test.fullTitle().replace(/#/g, '');
./node_modules/mocha/mocha.js:3973 =>   var tests = [];
./node_modules/mocha/mocha.js:3984 =>   runner.on('pending', function (test) {
./node_modules/mocha/mocha.js:3985 =>     tests.push(test);
./node_modules/mocha/mocha.js:3988 =>   runner.on('pass', function (test) {
./node_modules/mocha/mocha.js:3989 =>     tests.push(test);
./node_modules/mocha/mocha.js:3992 =>   runner.on('fail', function (test) {
./node_modules/mocha/mocha.js:3993 =>     tests.push(test);
./node_modules/mocha/mocha.js:3997 =>     self.write(tag('testsuite', {
./node_modules/mocha/mocha.js:3999 =>       tests: stats.tests,
./node_modules/mocha/mocha.js:4002 =>       skipped: stats.tests - stats.failures - stats.passes,
./node_modules/mocha/mocha.js:4007 =>     tests.forEach(function (t) {
./node_modules/mocha/mocha.js:4008 =>       self.test(t);
./node_modules/mocha/mocha.js:4011 =>     self.write('</testsuite>');
./node_modules/mocha/mocha.js:4052 =>  * Output tag for the given `test.`
./node_modules/mocha/mocha.js:4054 =>  * @param {Test} test
./node_modules/mocha/mocha.js:4056 => XUnit.prototype.test = function (test) {
./node_modules/mocha/mocha.js:4058 =>     classname: test.parent.fullTitle(),
./node_modules/mocha/mocha.js:4059 =>     name: test.title,
./node_modules/mocha/mocha.js:4060 =>     time: (test.duration / 1000) || 0
./node_modules/mocha/mocha.js:4063 =>   if (test.state === 'failed') {
./node_modules/mocha/mocha.js:4064 =>     var err = test.err;
./node_modules/mocha/mocha.js:4065 =>     this.write(tag('testcase', attrs, false, tag('failure', {}, false, escape(err.message) + '\n' + escape(err.stack))));
./node_modules/mocha/mocha.js:4066 =>   } else if (test.isPending()) {
./node_modules/mocha/mocha.js:4067 =>     this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));
./node_modules/mocha/mocha.js:4069 =>     this.write(tag('testcase', attrs, true));
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:793 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:807 =>   if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:969 =>   node.test = node.update = null;
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:970 =>   if (this.eat(_.tokTypes.semi) && this.tok.type !== _.tokTypes.semi) node.test = this.parseExpression();
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1201 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1205 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0119">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1208 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0119.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1209 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0119.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1213 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1217 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0120">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1220 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0120.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1221 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0120.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1225 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1229 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0121">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1232 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0121.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1233 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0121.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1236 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1240 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0122">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1243 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0122.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1244 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0122.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1247 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#unreviewed"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1252 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0123">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1255 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0123.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1256 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0123.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1258 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#unreviewed"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1262 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0124">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1265 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0124.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1266 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0124.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1268 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#unreviewed"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1272 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0125">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1275 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0125.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1276 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0125.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1278 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#unreviewed"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1283 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test0126">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1286 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0126.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1287 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/0126.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1289 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#unreviewed"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1293 => 	<TestCase rdf:about="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/Test1001">
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1296 =>         <informationResourceInput rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/1001.xhtml"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1297 =>         <informationResourceResults rdf:resource="http://www.w3.org/2006/07/SWD/RDFa/testsuite/xhtml1-testcases/1001.sparql"/>
./test/tc0007/rdfa-xhtml1-test-manifest.rdf:1299 =>         <reviewStatus rdf:resource="http://www.w3.org/2006/03/test-description#approved"/>
./test/tc0004/rdfcore/Manifest.rdf:1662 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:1664 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1665 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1666 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1667 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1668 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1670 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1672 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1673 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1674 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1676 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1677 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1678 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1680 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1683 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:1685 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1686 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1687 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1688 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1689 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1691 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1693 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1694 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1695 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1697 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1698 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1699 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1701 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1704 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:1706 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1707 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1708 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1709 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1710 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1712 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1714 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1715 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1716 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1718 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1719 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1720 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1722 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1725 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:1727 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1728 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1729 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1730 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1731 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1733 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1735 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1736 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1737 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1739 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1740 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1741 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1743 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1746 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test006">
./test/tc0004/rdfcore/Manifest.rdf:1748 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1749 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1750 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1751 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1752 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1754 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1756 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1757 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1758 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1760 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1761 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1762 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1764 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1767 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test007">
./test/tc0004/rdfcore/Manifest.rdf:1769 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1770 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1771 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1772 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1773 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1775 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1777 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1778 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1779 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1781 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1782 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test007.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1783 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1785 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1788 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test008">
./test/tc0004/rdfcore/Manifest.rdf:1790 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1791 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1792 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1793 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1794 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1796 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1798 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1799 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1800 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1802 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1803 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1804 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1806 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1809 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test009">
./test/tc0004/rdfcore/Manifest.rdf:1811 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1812 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1813 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1814 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1815 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1817 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1819 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1820 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1821 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1823 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1824 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test009.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1825 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1827 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1830 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test010">
./test/tc0004/rdfcore/Manifest.rdf:1832 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1833 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1834 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1835 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1836 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1838 =>    </test:description> -->
./node_modules/acorn/dist/acorn.js:2196 => // Predicate that tests whether the next token is of the given
./node_modules/acorn/dist/acorn.js:2229 =>   return this.type === tt.eof || this.type === tt.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/acorn/dist/acorn_csp.js:2167 => // Predicate that tests whether the next token is of the given
./node_modules/acorn/dist/acorn_csp.js:2200 =>   return this.type === tt.eof || this.type === tt.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/babel-polyfill/browser.js:3 => }})},{32:32}],208:[function(t,n,r){var e=t(32),i=t(7),o=Object.isExtensible;e(e.S,"Reflect",{isExtensible:function isExtensible(t){return i(t),!o||o(t)}})},{32:32,7:7}],209:[function(t,n,r){var e=t(32);e(e.S,"Reflect",{ownKeys:t(80)})},{32:32,80:80}],210:[function(t,n,r){var e=t(32),i=t(7),o=Object.preventExtensions;e(e.S,"Reflect",{preventExtensions:function preventExtensions(t){i(t);try{return o&&o(t),!0}catch(t){return!1}}})},{32:32,7:7}],211:[function(t,n,r){var e=t(32),i=t(90);i&&e(e.S,"Reflect",{setPrototypeOf:function setPrototypeOf(t,n){i.check(t,n);try{return i.set(t,n),!0}catch(t){return!1}}})},{32:32,90:90}],212:[function(t,n,r){function set(t,n,r){var c,l,h=arguments.length<4?t:arguments[3],v=i.f(a(t),n);if(!v){if(s(l=o(t)))return set(l,n,r,h);v=f(0)}return u(v,"value")?!(v.writable===!1||!s(h))&&(c=i.f(h,n)||f(0),c.value=r,e.f(h,n,c),!0):void 0!==v.set&&(v.set.call(h,r),!0)}var e=t(67),i=t(70),o=t(74),u=t(39),c=t(32),f=t(85),a=t(7),s=t(49);c(c.S,"Reflect",{set:set})},{32:32,39:39,49:49,67:67,7:7,70:70,74:74,85:85}],213:[function(t,n,r){var e=t(38),i=t(43),o=t(67).f,u=t(72).f,c=t(50),f=t(36),a=e.RegExp,s=a,l=a.prototype,h=/a/g,v=/a/g,p=new a(h)!==h;if(t(28)&&(!p||t(34)(function(){return v[t(117)("match")]=!1,a(h)!=h||a(v)==v||"/a/i"!=a(h,"i")}))){a=function RegExp(t,n){var r=this instanceof a,e=c(t),o=void 0===n;return!r&&e&&t.constructor===a&&o?t:i(p?new s(e&&!o?t.source:t,n):s((e=t instanceof a)?t.source:t,e&&o?f.call(t):n),r?this:l,a)};for(var d=(function(t){t in a||o(a,t,{configurable:!0,get:function(){return s[t]},set:function(n){s[t]=n}})}),y=u(s),g=0;y.length>g;)d(y[g++]);l.constructor=a,a.prototype=l,t(87)(e,"RegExp",a)}t(91)("RegExp")},{117:117,28:28,34:34,36:36,38:38,43:43,50:50,67:67,72:72,87:87,91:91}],214:[function(t,n,r){t(28)&&"g"!=/./g.flags&&t(67).f(RegExp.prototype,"flags",{configurable:!0,get:t(36)})},{28:28,36:36,67:67}],215:[function(t,n,r){t(35)("match",1,function(t,n,r){return[function match(r){"use strict";var e=t(this),i=void 0==r?void 0:r[n];return void 0!==i?i.call(r,e):new RegExp(r)[n](String(e))},r]})},{35:35}],216:[function(t,n,r){t(35)("replace",2,function(t,n,r){return[function replace(e,i){"use strict";var o=t(this),u=void 0==e?void 0:e[n];return void 0!==u?u.call(e,o,i):r.call(String(o),e,i)},r]})},{35:35}],217:[function(t,n,r){t(35)("search",1,function(t,n,r){return[function search(r){"use strict";var e=t(this),i=void 0==r?void 0:r[n];return void 0!==i?i.call(r,e):new RegExp(r)[n](String(e))},r]})},{35:35}],218:[function(t,n,r){t(35)("split",2,function(n,r,e){"use strict";var i=t(50),o=e,u=[].push,c="split",f="length",a="lastIndex";if("c"=="abbc"[c](/(b)*/)[1]||4!="test"[c](/(?:)/,-1)[f]||2!="ab"[c](/(?:ab)*/)[f]||4!="."[c](/(.?)(.?)/)[f]||"."[c](/()()/)[f]>1||""[c](/.?/)[f]){var s=void 0===/()??/.exec("")[1];e=function(t,n){var r=String(this);if(void 0===t&&0===n)return[];if(!i(t))return o.call(r,t,n);var e,c,l,h,v,p=[],d=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),y=0,g=void 0===n?4294967295:n>>>0,b=new RegExp(t.source,d+"g");for(s||(e=new RegExp("^"+b.source+"$(?!\\s)",d));(c=b.exec(r))&&(l=c.index+c[0][f],!(l>y&&(p.push(r.slice(y,c.index)),!s&&c[f]>1&&c[0].replace(e,function(){for(v=1;v<arguments[f]-2;v++)void 0===arguments[v]&&(c[v]=void 0)}),c[f]>1&&c.index<r[f]&&u.apply(p,c.slice(1)),h=c[0][f],y=l,p[f]>=g)));)b[a]===c.index&&b[a]++;return y===r[f]?!h&&b.test("")||p.push(""):p.push(r.slice(y)),p[f]>g?p.slice(0,g):p}}else"0"[c](void 0,0)[f]&&(e=function(t,n){return void 0===t&&0===n?[]:o.call(this,t,n)});return[function split(t,i){var o=n(this),u=void 0==t?void 0:t[r];return void 0!==u?u.call(t,o,i):e.call(String(o),t,i)},e]})},{35:35,50:50}],219:[function(t,n,r){"use strict";t(214);var e=t(7),i=t(36),o=t(28),u="toString",c=/./[u],f=function(n){t(87)(RegExp.prototype,u,n,!0)};t(34)(function(){return"/a/b"!=c.call({source:"a",flags:"b"})})?f(function toString(){var t=e(this);return"/".concat(t.source,"/","flags"in t?t.flags:!o&&t instanceof RegExp?i.call(t):void 0)}):c.name!=u&&f(function toString(){return c.call(this)})},{214:214,28:28,34:34,36:36,7:7,87:87}],220:[function(t,n,r){"use strict";var e=t(19);n.exports=t(22)("Set",function(t){return function Set(){return t(this,arguments.length>0?arguments[0]:void 0)}},{add:function add(t){return e.def(this,t=0===t?0:t,t)}},e)},{19:19,22:22}],221:[function(t,n,r){"use strict";t(99)("anchor",function(t){return function anchor(n){return t(this,"a","name",n)}})},{99:99}],222:[function(t,n,r){"use strict";t(99)("big",function(t){return function big(){return t(this,"big","","")}})},{99:99}],223:[function(t,n,r){"use strict";t(99)("blink",function(t){return function blink(){return t(this,"blink","","")}})},{99:99}],224:[function(t,n,r){"use strict";t(99)("bold",function(t){return function bold(){return t(this,"b","","")}})},{99:99}],225:[function(t,n,r){"use strict";var e=t(32),i=t(97)(!1);e(e.P,"String",{codePointAt:function codePointAt(t){return i(this,t)}})},{32:32,97:97}],226:[function(t,n,r){"use strict";var e=t(32),i=t(108),o=t(98),u="endsWith",c=""[u];e(e.P+e.F*t(33)(u),"String",{endsWith:function endsWith(t){var n=o(this,t,u),r=arguments.length>1?arguments[1]:void 0,e=i(n.length),f=void 0===r?e:Math.min(i(r),e),a=String(t);return c?c.call(n,a,f):n.slice(f-a.length,f)===a}})},{108:108,32:32,33:33,98:98}],227:[function(t,n,r){"use strict";t(99)("fixed",function(t){return function fixed(){return t(this,"tt","","")}})},{99:99}],228:[function(t,n,r){"use strict";t(99)("fontcolor",function(t){return function fontcolor(n){return t(this,"font","color",n)}})},{99:99}],229:[function(t,n,r){"use strict";t(99)("fontsize",function(t){return function fontsize(n){return t(this,"font","size",n)}})},{99:99}],230:[function(t,n,r){var e=t(32),i=t(105),o=String.fromCharCode,u=String.fromCodePoint;e(e.S+e.F*(!!u&&1!=u.length),"String",{fromCodePoint:function fromCodePoint(t){for(var n,r=[],e=arguments.length,u=0;e>u;){if(n=+arguments[u++],i(n,1114111)!==n)throw RangeError(n+" is not a valid code point");r.push(n<65536?o(n):o(((n-=65536)>>10)+55296,n%1024+56320))}return r.join("")}})},{105:105,32:32}],231:[function(t,n,r){"use strict";var e=t(32),i=t(98),o="includes";e(e.P+e.F*t(33)(o),"String",{includes:function includes(t){return!!~i(this,t,o).indexOf(t,arguments.length>1?arguments[1]:void 0)}})},{32:32,33:33,98:98}],232:[function(t,n,r){"use strict";t(99)("italics",function(t){return function italics(){return t(this,"i","","")}})},{99:99}],233:[function(t,n,r){"use strict";var e=t(97)(!0);t(53)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,n=this._t,r=this._i;return r>=n.length?{value:void 0,done:!0}:(t=e(n,r),this._i+=t.length,{value:t,done:!1})})},{53:53,97:97}],234:[function(t,n,r){"use strict";t(99)("link",function(t){return function link(n){return t(this,"a","href",n)}})},{99:99}],235:[function(t,n,r){var e=t(32),i=t(107),o=t(108);e(e.S,"String",{raw:function raw(t){for(var n=i(t.raw),r=o(n.length),e=arguments.length,u=[],c=0;r>c;)u.push(String(n[c++])),c<e&&u.push(String(arguments[c]));return u.join("")}})},{107:107,108:108,32:32}],236:[function(t,n,r){var e=t(32);e(e.P,"String",{repeat:t(101)})},{101:101,32:32}],237:[function(t,n,r){"use strict";t(99)("small",function(t){return function small(){return t(this,"small","","")}})},{99:99}],238:[function(t,n,r){"use strict";var e=t(32),i=t(108),o=t(98),u="startsWith",c=""[u];e(e.P+e.F*t(33)(u),"String",{startsWith:function startsWith(t){var n=o(this,t,u),r=i(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),e=String(t);return c?c.call(n,e,r):n.slice(r,r+e.length)===e}})},{108:108,32:32,33:33,98:98}],239:[function(t,n,r){"use strict";t(99)("strike",function(t){return function strike(){return t(this,"strike","","")}})},{99:99}],240:[function(t,n,r){"use strict";t(99)("sub",function(t){return function sub(){return t(this,"sub","","")}})},{99:99}],241:[function(t,n,r){"use strict";t(99)("sup",function(t){return function sup(){return t(this,"sup","","")}})},{99:99}],242:[function(t,n,r){"use strict";t(102)("trim",function(t){return function trim(){return t(this,3)}})},{102:102}],243:[function(t,n,r){"use strict";var e=t(38),i=t(39),o=t(28
./node_modules/bn.js/lib/bn.js:3098 =>   // Exported mostly for testing purposes, use plain name instead
./node_modules/babylon/lib/index.js:2131 =>   node.test = this.parseParenExpression();
./node_modules/babylon/lib/index.js:2257 =>   node.test = this.match(types.semi) ? null : this.parseExpression();
./node_modules/color-convert/color-convert-0.2.0.js:2591 =>         var colorConvert=function(){var require=function(a,b){var c=require.resolve(a,b||""),d=require.modules[c],e=d._cached?d._cached:d();return e},__require=require;require.paths=[],require.modules={},require.resolve=function(a,b){var c=require.modules.path(),d=function(a){if(a==="."||a==="./")return".";var d=c.resolve(b,a);a.match(/^\.\.?\//)&&(b===""||b.match(/^\./))&&(d="./"+d);return d},e=[];!a.match(/\/|\./)&&require.modules[a]&&require.modules[a].builtin&&e.push(a);if(a.match(/^\.\.?\//))e.push(d(a));else{var f=b.split("/");for(var g=f.length;g>0;g--){var h=f.slice(0,g).join("/");h.length&&e.push(h+"/node_modules/"+a)}e.push("./node_modules/"+a),e.push(a)}for(var g=0;g<e.length;g++){var i=e[g],j=[[i+"/package.json",function(a){var b=require.modules[a]();if(b.main){var d=c.resolve(i,b.main);i.match(/^\./)&&(d="./"+d);return d}}],i,i+".js",i+".coffee",i+"/index.js",i+"/index.coffee"];for(var k=0;k<j.length;k++){var l=String,h=j[k];Array.isArray(h)&&(l=h[1],h=h[0]);if(require.modules[h]){var m=l(h);if(m){var n=["",".js",".coffee","/index.js","/index.coffee"].filter(function(a){return require.modules[m+a]})[0];if(n!==undefined)return m+n}}}}throw new Error("Cannot find module "+JSON.stringify(a))},typeof process=="undefined"&&(process={}),process.nextTick||(process.nextTick=function(a){setTimeout(a,0)}),process.title||(process.title="browser"),process.binding||(process.binding=function(a){if(a==="evals")return require("vm");throw new Error("No such module")}),process.cwd||(process.cwd=function(){return"."}),require.modules.events=function(){var a={exports:{}},b=a.exports,c=".",d="events",e=function(a){return __require(a,".")};e.resolve=function(a){return __require.resolve(name,".")},e.modules=__require.modules,__require.modules.events._cached=a.exports,function(){process.EventEmitter||(process.EventEmitter=function(){});var a=b.EventEmitter=process.EventEmitter,c=Array.isArray,d=10;a.prototype.setMaxListeners=function(a){this._events||(this._events={}),this._events.maxListeners=a},a.prototype.emit=function(a){if(a==="error")if(!this._events||!this._events.error||c(this._events.error)&&!this._events.error.length)throw arguments[1]instanceof Error?arguments[1]:new Error("Uncaught, unspecified 'error' event.");if(!this._events)return!1;var b=this._events[a];if(!b)return!1;if(typeof b=="function"){switch(arguments.length){case 1:b.call(this);break;case 2:b.call(this,arguments[1]);break;case 3:b.call(this,arguments[1],arguments[2]);break;default:var d=Array.prototype.slice.call(arguments,1);b.apply(this,d)}return!0}if(c(b)){var d=Array.prototype.slice.call(arguments,1),e=b.slice();for(var f=0,g=e.length;f<g;f++)e[f].apply(this,d);return!0}return!1},a.prototype.addListener=function(a,b){if("function"!=typeof b)throw new Error("addListener only takes instances of Function");this._events||(this._events={}),this.emit("newListener",a,b);if(!this._events[a])this._events[a]=b;else if(c(this._events[a])){if(!this._events[a].warned){var e;this._events.maxListeners!==undefined?e=this._events.maxListeners:e=d,e&&e>0&&this._events[a].length>e&&(this._events[a].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[a].length),console.trace())}this._events[a].push(b)}else this._events[a]=[this._events[a],b];return this},a.prototype.on=a.prototype.addListener,a.prototype.once=function(a,b){var c=this;c.on(a,function d(){c.removeListener(a,d),b.apply(this,arguments)});return this},a.prototype.removeListener=function(a,b){if("function"!=typeof b)throw new Error("removeListener only takes instances of Function");if(!this._events||!this._events[a])return this;var d=this._events[a];if(c(d)){var e=d.indexOf(b);if(e<0)return this;d.splice(e,1),d.length==0&&delete this._events[a]}else this._events[a]===b&&delete this._events[a];return this},a.prototype.removeAllListeners=function(a){a&&this._events&&this._events[a]&&(this._events[a]=null);return this},a.prototype.listeners=function(a){this._events||(this._events={}),this._events[a]||(this._events[a]=[]),c(this._events[a])||(this._events[a]=[this._events[a]]);return this._events[a]},e.modules.events.builtin=!0}.call(a.exports),__require.modules.events._cached=a.exports;return a.exports},require.modules.fs=function(){var a={exports:{}},b=a.exports,c=".",d="fs",e=function(a){return __require(a,".")};e.resolve=function(a){return __require.resolve(name,".")},e.modules=__require.modules,__require.modules.fs._cached=a.exports,function(){e.modules.fs.builtin=!0}.call(a.exports),__require.modules.fs._cached=a.exports;return a.exports},require.modules.json_shim=function(){var module={exports:{}},exports=module.exports,__dirname=".",__filename="json_shim",require=function(a){return __require(a,".")};require.resolve=function(a){return __require.resolve(name,".")},require.modules=__require.modules,__require.modules.json_shim._cached=module.exports,function(){typeof JSON=="undefined"&&(JSON={}),function(){function str(a,b){var c,d,e,f,g=gap,h,i=b[a];i&&typeof i=="object"&&typeof i.toJSON=="function"&&(i=i.toJSON(a)),typeof rep=="function"&&(i=rep.call(b,a,i));switch(typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";gap+=indent,h=[];if(Object.prototype.toString.apply(i)==="[object Array]"){f=i.length;for(c=0;c<f;c+=1)h[c]=str(c,i)||"null";e=h.length===0?"[]":gap?"[\n"+gap+h.join(",\n"+gap)+"\n"+g+"]":"["+h.join(",")+"]",gap=g;return e}if(rep&&typeof rep=="object"){f=rep.length;for(c=0;c<f;c+=1)typeof rep[c]=="string"&&(d=rep[c],e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e))}else for(d in i)Object.prototype.hasOwnProperty.call(i,d)&&(e=str(d,i),e&&h.push(quote(d)+(gap?": ":":")+e));e=h.length===0?"{}":gap?"{\n"+gap+h.join(",\n"+gap)+"\n"+g+"}":"{"+h.join(",")+"}",gap=g;return e}}function quote(a){escapable.lastIndex=0;return escapable.test(a)?'"'+a.replace(escapable,function(a){var b=meta[a];return typeof b=="string"?b:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+a+'"'}function f(a){return a<10?"0"+a:a}"use strict",typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(a){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(a){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(a,b,c){var d;gap="",indent="";if(typeof c=="number")for(d=0;d<c;d+=1)indent+=" ";else typeof c=="string"&&(indent=c);rep=b;if(b&&typeof b!="function"&&(typeof b!="object"||typeof b.length!="number"))throw new Error("JSON.stringify");return str("",{"":a})}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(a,b){var c,d,e=a[b];if(e&&typeof e=="object")for(c in e)Object.prototype.hasOwnProperty.call(e,c)&&(d=walk(e,c),d!==undefined?e[c]=d:delete e[c]);return reviver.call(a,b,e)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver=="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")})}(),require.modules.json_shim.builtin=!0}.call(module.exports),__require.modules.json_shim._cached=module.exports;return module.exports},require.modules.path=function(){var a={exports:{}},b=a.exports,c=".",d="path",e=function(a){return __require(a,
./node_modules/core-js/client/library.js:2625 => 	    var test = ''[NAME]('"');
./node_modules/core-js/client/library.js:2626 => 	    return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:994 =>   node.test = this.type === tt.semi ? null : this.parseExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:884 =>     if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
./node_modules/detective/node_modules/acorn/dist/acorn.js:924 =>     node.test = this.parseParenExpression()
./node_modules/detective/node_modules/acorn/dist/acorn.js:1000 =>     node.test = this.type === tt.semi ? null : this.parseExpression()
./node_modules/es6-promise/dist/test/browserify.js:1895 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:1896 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:1898 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:1900 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/browserify.js:1917 =>             testFulfilled(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1941 =>             testFulfilled(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1965 =>             testFulfilled(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:1992 =>             testFulfilled(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2008 =>                 testFulfilled(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2034 =>             testRejected(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:2684 =>     var name = /pass/.test(report.className) ? '' : ' pass';
./node_modules/es6-promise/dist/test/mocha.js:2686 =>     if (report.className.trim()) hideSuitesWithout('test pass');
./node_modules/es6-promise/dist/test/mocha.js:2692 =>     var name = /fail/.test(report.className) ? '' : ' fail';
./node_modules/es6-promise/dist/test/mocha.js:2694 =>     if (report.className.trim()) hideSuitesWithout('test fail');
./node_modules/es6-promise/dist/test/mocha.js:2720 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:2721 =>     if ('hook' == test.type) runner.emit('test end', test);
./node_modules/es6-promise/dist/test/mocha.js:2724 =>   runner.on('test end', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2726 =>     var percent = stats.tests / this.total * 100 | 0;
./node_modules/es6-promise/dist/test/mocha.js:2735 =>     // test
./node_modules/es6-promise/dist/test/mocha.js:2736 =>     if ('passed' == test.state) {
./node_modules/es6-promise/dist/test/mocha.js:2737 =>       var url = self.testURL(test);
./node_modules/es6-promise/dist/test/mocha.js:2738 =>       var el = fragment('<li class="test pass %e"><h2>%e<span class="duration">%ems</span> <a href="%s" class="replay">‣</a></h2></li>', test.speed, test.title, test.duration, url);
./node_modules/es6-promise/dist/test/mocha.js:2739 =>     } else if (test.pending) {
./node_modules/es6-promise/dist/test/mocha.js:2740 =>       var el = fragment('<li class="test pass pending"><h2>%e</h2></li>', test.title);
./node_modules/es6-promise/dist/test/mocha.js:2742 =>       var el = fragment('<li class="test fail"><h2>%e <a href="?grep=%e" class="replay">‣</a></h2></li>', test.title, encodeURIComponent(test.fullTitle()));
./node_modules/es6-promise/dist/test/mocha.js:2743 =>       var str = test.err.stack || test.err.toString();
./node_modules/es6-promise/dist/test/mocha.js:2746 =>       if (!~str.indexOf(test.err.message)) {
./node_modules/es6-promise/dist/test/mocha.js:2747 =>         str = test.err.message + '\n' + str;
./node_modules/es6-promise/dist/test/mocha.js:2752 =>       if ('[object Error]' == str) str = test.err.message;
./node_modules/es6-promise/dist/test/mocha.js:2755 =>       if (!test.err.stack && test.err.sourceURL && test.err.line !== undefined) {
./node_modules/es6-promise/dist/test/mocha.js:2756 =>         str += "\n(" + test.err.sourceURL + ":" + test.err.line + ")";
./node_modules/es6-promise/dist/test/mocha.js:2764 =>     if (!test.pending) {
./node_modules/es6-promise/dist/test/mocha.js:2773 =>       var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.fn.toString()));
./node_modules/es6-promise/dist/test/mocha.js:2794 =>  * Provide test URL
./node_modules/es6-promise/dist/test/mocha.js:2796 =>  * @param {Object} [test]
./node_modules/es6-promise/dist/test/mocha.js:2799 => HTML.prototype.testURL = function(test){
./node_modules/es6-promise/dist/test/mocha.js:2800 =>   return '?grep=' + encodeURIComponent(test.fullTitle());
./node_modules/jsonld/tests/webidl/idlharness.js:1305 => IdlInterface.prototype.test_members = function()
./node_modules/jsonld/tests/webidl/idlharness.js:1311 =>         if (member.untested)
./node_modules/jsonld/tests/webidl/idlharness.js:1317 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1342 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1371 =>                 // We do the checks in test_interface_of instead
./node_modules/jsonld/tests/webidl/idlharness.js:1374 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1384 =>                 // TODO: Needs to test for LenientThis.
./node_modules/jsonld/tests/webidl/idlharness.js:1401 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1442 =>                 // "Return the length of the shortest argument list of the
./node_modules/jsonld/tests/webidl/testharness.js:1706 =>             stylesheet.setAttribute("href", script_prefix + "testharness.css");
./node_modules/jsonld/tests/webidl/testharness.js:1725 =>         forEach(tests, function(test) {
./node_modules/jsonld/tests/webidl/testharness.js:1726 =>                     var status = status_text[test.status];
./node_modules/jsonld/tests/webidl/testharness.js:1770 =>                                 ["p", {}, "Found ${num_tests} tests"],
./node_modules/jsonld/tests/webidl/testharness.js:1787 =>         log.appendChild(render(summary_template, {num_tests:tests.length}, output_document));
./node_modules/jsonld/tests/webidl/testharness.js:1817 =>         // large test suites (tens of thousands of tests).
./node_modules/jsonld/tests/webidl/testharness.js:1828 =>             for (var i = 0; i < tests.length; i++) {
./node_modules/jsonld/tests/webidl/testharness.js:1829 =>                 if (tests[i].properties.hasOwnProperty("assert")) {
./node_modules/jsonld/tests/webidl/testharness.js:1836 =>         function get_assertion(test)
./node_modules/jsonld/tests/webidl/testharness.js:1838 =>             if (test.properties.hasOwnProperty("assert")) {
./node_modules/jsonld/tests/webidl/testharness.js:1839 =>                 if (Array.isArray(test.properties.assert)) {
./node_modules/jsonld/tests/webidl/testharness.js:1840 =>                     return test.properties.assert.join(' ');
./node_modules/jsonld/tests/webidl/testharness.js:1842 =>                 return test.properties.assert;
./node_modules/jsonld/tests/webidl/testharness.js:1854 =>         for (var i = 0; i < tests.length; i++) {
./node_modules/jsonld/tests/webidl/testharness.js:1856 =>                 + escape_html(status_class(status_text[tests[i].status]))
./node_modules/jsonld/tests/webidl/testharness.js:1858 =>                 + escape_html(status_text[tests[i].status])
./node_modules/jsonld/tests/webidl/testharness.js:1860 =>                 + escape_html(tests[i].name)
./node_modules/jsonld/tests/webidl/testharness.js:1862 =>                 + (assertions ? escape_html(get_assertion(tests[i])) + "</td><td>" : "")
./node_modules/minifyify/test/build/apps/native libs/bundle.min.js:820 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:1490 =>      *       aGreet = _.isString(a) && reGreet.test(a),
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:1491 =>      *       bGreet = _.isString(b) && reGreet.test(b);
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1596 => 		(!rbuggyMatches || !rbuggyMatches.test(expr)) &&
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1597 => 		(!rbuggyQSA     || !rbuggyQSA.test(expr)) ) {
./node_modules/mocha/mocha.js:4335 =>       'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.'));
./node_modules/mocha/mocha.js:4341 =>  * Whitelist a list of globals for this test run.
./node_modules/mocha/mocha.js:4354 =>  * Run the test and invoke `fn(err)`.
./node_modules/mocha/mocha.js:4395 =>       'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.');
./node_modules/pako/dist/pako_inflate.js:2404 =>    for the first code of the shortest length, and the codes are integer
./node_modules/minifyify/test/build/apps/transformed app/bundle.min.js:1060 =>     // the regex test will do this transparently behind the scenes, causing issues if
./node_modules/minifyify/test/build/apps/transformed app/bundle.min.js:1065 =>   if (!possible.test(string)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1190 =>       if (this.strict && this.reservedWordsStrictBind.test(expr.name)) this.raise(expr.start, (isBinding ? "Binding " : "Assigning to ") + expr.name + " in strict mode");
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1236 =>       if (/unterminated/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1238 =>         if (/string/.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1240 =>         } else if (/regular expr/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1246 =>         } else if (/template/.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1253 =>       } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1255 =>       } else if (/character escape|expected hexadecimal/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1260 =>       } else if (/unexpected character/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1263 =>       } else if (/regular expression/i.test(msg)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn_loose.js:1281 =>   this.toks.exprAllowed = !ch || /[\[\{\(,;:?\/*=+\-~!|&%^<>]/.test(ch) || /[enwfd]/.test(ch) && /\b(keywords|case|else|return|throw|new|in|(instance|type)of|delete|void)$/.test(this.input.slice(pos - 10, pos));
./test/tc0004/rdfcore/Manifest.rdf:1840 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1841 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1842 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1844 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1845 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test010.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1846 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1848 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1851 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test011">
./test/tc0004/rdfcore/Manifest.rdf:1853 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1854 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1855 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1856 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1857 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1859 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1861 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1862 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1863 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1865 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1866 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test011.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1867 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1869 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1872 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test012">
./test/tc0004/rdfcore/Manifest.rdf:1874 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1875 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1876 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1877 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1878 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1880 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1882 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1883 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1884 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1886 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1887 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test012.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1888 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1890 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1893 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test013">
./test/tc0004/rdfcore/Manifest.rdf:1895 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1896 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1897 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1898 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1899 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1901 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1903 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1904 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test013.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1905 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1907 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1908 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test013.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1909 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1911 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1914 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test014">
./test/tc0004/rdfcore/Manifest.rdf:1916 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1917 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1918 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1919 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1920 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1922 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1924 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1925 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test014.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1926 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1928 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1929 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test014.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1930 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1932 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1935 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test015">
./test/tc0004/rdfcore/Manifest.rdf:1937 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1938 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1939 =>    <test:approval rdf:resource="http://www.w3.org/2000/11/mr76/rdfc25May.html" />
./test/tc0004/rdfcore/Manifest.rdf:1940 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:1941 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1943 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:1945 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1946 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test015.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1947 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1949 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1950 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test015.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1951 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1953 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1955 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test016">
./test/tc0004/rdfcore/Manifest.rdf:1957 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1958 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1959 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1962 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1963 => Like rdfms-empty-property-elements/test001.rdf but with a processing instruction 
./test/tc0004/rdfcore/Manifest.rdf:1965 =>    </test:description> 
./test/tc0004/rdfcore/Manifest.rdf:1967 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1968 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test016.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1969 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1971 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1972 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test016.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1973 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1975 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:1977 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/Manifest.rdf#test017">
./test/tc0004/rdfcore/Manifest.rdf:1979 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-empty-property-elements" />
./test/tc0004/rdfcore/Manifest.rdf:1980 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:1981 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:1984 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:1985 => Like rdfms-empty-property-elements/test001.rdf but with a comment
./test/tc0004/rdfcore/Manifest.rdf:1987 =>    </test:description> 
./test/tc0004/rdfcore/Manifest.rdf:1989 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1990 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test017.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:1991 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1993 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1994 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-empty-property-elements/test017.nt" />
./test/tc0004/rdfcore/Manifest.rdf:1995 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:1997 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2003 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:2005 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources" />
./test/tc0004/rdfcore/Manifest.rdf:2006 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2007 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:2008 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2009 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2011 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2013 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2014 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2015 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2017 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2018 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2019 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2021 => </test:PositiveParserTest>
./node_modules/acorn/dist/acorn.js:2499 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn.js:2545 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn.js:2584 =>         cur.test = this.parseExpression();
./node_modules/acorn/dist/acorn.js:2588 =>         cur.test = null;
./node_modules/acorn/dist/acorn.js:2604 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, "Illegal newline after throw");
./node_modules/acorn/dist/acorn.js:2644 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_csp.js:2470 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_csp.js:2516 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_csp.js:2555 =>         cur.test = this.parseExpression();
./node_modules/acorn/dist/acorn_csp.js:2559 =>         cur.test = null;
./node_modules/acorn/dist/acorn_csp.js:2575 =>   if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, "Illegal newline after throw");
./node_modules/core-js/client/core.js:2810 => 	    var test = ''[NAME]('"');
./node_modules/core-js/client/core.js:2811 => 	    return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/core-js/client/library.js:3032 => 	  , test      = [1, 2, 3];
./node_modules/core-js/client/library.js:3036 => 	  test.sort(undefined);
./node_modules/core-js/client/library.js:3039 => 	  test.sort(null);
./node_modules/core-js/client/shim.js:2796 => 	    var test = ''[NAME]('"');
./node_modules/core-js/client/shim.js:2797 => 	    return test !== test.toLowerCase() || test.split('"').length > 3;
./node_modules/concat-stream/node_modules/readable-stream/doc/stream.markdown:1739 => [fs write streams]: https://nodejs.org/docs/v5.8.0/api/fs.html#fs_class_fs_writestream
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:1186 =>         if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:1278 =>       if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raise(node$2.local.start, "The keyword '" + node$2.local.name + "' is reserved")
./node_modules/detective/node_modules/acorn/dist/acorn.js:1192 =>           if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {
./node_modules/detective/node_modules/acorn/dist/acorn.js:1284 =>         if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raise(node$2.local.start, "The keyword '" + node$2.local.name + "' is reserved")
./node_modules/es6-promise/dist/test/browserify.js:2058 =>             testRejected(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2082 =>             testRejected(sentinel, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2109 =>             testRejected(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2125 =>                 testRejected(dummy, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2149 => },{"./helpers/testThreeCases":22,"assert":2,"sinon":24}],16:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:2154 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:2155 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:2161 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:2162 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/browserify.js:2177 =>         specify("see separate 3.3 tests", function () { });
./node_modules/es6-promise/dist/test/browserify.js:2182 =>         function testReason(expectedReason, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:2184 =>                 testFulfilled(dummy, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:2194 =>                 testRejected(dummy, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:2208 =>             testReason(reasons[stringRepresentation], stringRepresentation);
./node_modules/es6-promise/dist/test/browserify.js:2215 =>         function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:2217 =>                 testFulfilled(sentinel, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:2228 =>         testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:2229 =>         testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:2230 =>         testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:2231 =>         testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:2232 =>         testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:2233 =>         testNonFunction([function () { return other; }], "an array containing a function");
./node_modules/es6-promise/dist/test/browserify.js:2239 =>         function testNonFunction(nonFunction, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:2241 =>                 testRejected(sentinel, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:2252 =>         testNonFunction(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:2253 =>         testNonFunction(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:2254 =>         testNonFunction(false, "`false`");
./node_modules/es6-promise/dist/test/mocha.js:2930 =>   var tests = []
./node_modules/es6-promise/dist/test/mocha.js:2934 =>   runner.on('test end', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2935 =>     tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:2938 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2939 =>     passes.push(test);
./node_modules/es6-promise/dist/test/mocha.js:2942 =>   runner.on('fail', function(test){
./node_modules/es6-promise/dist/test/mocha.js:2943 =>     failures.push(test);
./node_modules/es6-promise/dist/test/mocha.js:2950 =>     result.tests = tests.map(clean);
./node_modules/es6-promise/dist/test/mocha.js:3041 =>  * Return a plain-object representation of `test`
./node_modules/es6-promise/dist/test/mocha.js:3044 =>  * @param {Object} test
./node_modules/es6-promise/dist/test/mocha.js:3049 => function clean(test) {
./node_modules/es6-promise/dist/test/mocha.js:3051 =>       title: test.title
./node_modules/es6-promise/dist/test/mocha.js:3052 =>     , fullTitle: test.fullTitle()
./node_modules/es6-promise/dist/test/mocha.js:3053 =>     , duration: test.duration
./node_modules/es6-promise/dist/test/mocha.js:3075 =>  * Initialize a new `List` test reporter.
./node_modules/es6-promise/dist/test/mocha.js:3092 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3093 =>     console.log(JSON.stringify(['pass', clean(test)]));
./node_modules/es6-promise/dist/test/mocha.js:3096 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:3097 =>     console.log(JSON.stringify(['fail', clean(test)]));
./node_modules/es6-promise/dist/test/mocha.js:3106 =>  * Return a plain-object representation of `test`
./node_modules/es6-promise/dist/test/mocha.js:3109 =>  * @param {Object} test
./node_modules/es6-promise/dist/test/mocha.js:3114 => function clean(test) {
./node_modules/es6-promise/dist/test/mocha.js:3116 =>       title: test.title
./node_modules/es6-promise/dist/test/mocha.js:3117 =>     , fullTitle: test.fullTitle()
./node_modules/es6-promise/dist/test/mocha.js:3118 =>     , duration: test.duration
./node_modules/es6-promise/dist/test/mocha.js:3150 =>   var tests = []
./node_modules/es6-promise/dist/test/mocha.js:3155 =>   runner.on('test end', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3156 =>     tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:3159 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3160 =>     passes.push(test);
./node_modules/es6-promise/dist/test/mocha.js:3163 =>   runner.on('fail', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3164 =>     failures.push(test);
./node_modules/es6-promise/dist/test/mocha.js:3167 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3168 =>     pending.push(test);
./node_modules/es6-promise/dist/test/mocha.js:3174 =>       tests: tests.map(clean),
./node_modules/es6-promise/dist/test/mocha.js:3180 =>     runner.testResults = obj;
./node_modules/es6-promise/dist/test/mocha.js:3187 =>  * Return a plain-object representation of `test`
./node_modules/es6-promise/dist/test/mocha.js:3190 =>  * @param {Object} test
./node_modules/es6-promise/dist/test/mocha.js:3195 => function clean(test) {
./node_modules/es6-promise/dist/test/mocha.js:3197 =>     title: test.title,
./node_modules/es6-promise/dist/test/mocha.js:3198 =>     fullTitle: test.fullTitle(),
./node_modules/es6-promise/dist/test/mocha.js:3199 =>     duration: test.duration,
./node_modules/es6-promise/dist/test/mocha.js:3200 =>     err: errorJSON(test.err || {})
./node_modules/es6-promise/dist/test/mocha.js:3283 =>   runner.on('test end', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3290 =>     if ('failed' == test.state) {
./node_modules/es6-promise/dist/test/mocha.js:3341 =>  * Initialize a new `List` test reporter.
./node_modules/fs-readline/test/fixtures/afile.txt:716 => " 'The family of Lord Robert St. Simon has been thrown into the greatest consternation by the strange and painful episodes which have taken place in connection with his wedding. The ceremony, as shortly announced in the papers of yesterday, occurred on the previous morning; but it is only now that it has been possible to confirm the strange rumours which have been so persistently floating about. In spite of the attempts of the friends to hush the matter up, so much public attention has now been drawn to it that no good purpose can be served by affecting to disregard what is a common subject for conversation.
./node_modules/JSONStream/test/fixtures/all_npm.json:782 => {"id":"coverage_testing","key":"coverage_testing","value":{"rev":"3-62834678206fae7911401aa86ec1a85e"}},
./node_modules/jsonld/tests/webidl/idlharness.js:1486 => IdlInterface.prototype.test_object = function(desc)
./node_modules/jsonld/tests/webidl/idlharness.js:1509 =>     this.test_primary_interface_of(desc, obj, exception, expected_typeof);
./node_modules/jsonld/tests/webidl/idlharness.js:1517 =>         if (current_interface.prevent_multiple_testing && current_interface.already_tested)
./node_modules/jsonld/tests/webidl/idlharness.js:1521 =>         current_interface.test_interface_of(desc, obj, exception, expected_typeof);
./node_modules/jsonld/tests/webidl/idlharness.js:1527 => IdlInterface.prototype.test_primary_interface_of = function(desc, obj, exception, expected_typeof)
./node_modules/jsonld/tests/webidl/idlharness.js:1530 =>     // We can't easily test that its prototype is correct if there's no
./node_modules/jsonld/tests/webidl/idlharness.js:1532 =>     // (not instanceof Object).  TODO: test in this case that its prototype at
./node_modules/jsonld/tests/webidl/idlharness.js:1533 =>     // least looks correct, even if we can't test that it's actually correct.
./node_modules/jsonld/tests/webidl/idlharness.js:1537 =>         test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1559 =>     test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1572 => IdlInterface.prototype.test_interface_of = function(desc, obj, exception, expected_typeof)
./node_modules/jsonld/tests/webidl/idlharness.js:1576 =>     this.already_tested = true;
./node_modules/jsonld/tests/webidl/idlharness.js:1583 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1595 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1634 =>             test(function()
./node_modules/lodash/core.js:3405 =>     return (string && reHasUnescapedHtml.test(string))
./node_modules/lodash/core.js:3467 =>    *     return func.test(string);
./node_modules/jsonld/tests/webidl/testharness.js:1863 =>                 + escape_html(tests[i].message ? tests[i].message : " ")
./node_modules/jsonld/tests/webidl/testharness.js:1879 =>     add_result_callback(function (test) {output.show_status(tests);});
./node_modules/jsonld/tests/webidl/testharness.js:1880 =>     add_completion_callback(function (tests, harness_status) {output.show_results(tests, harness_status);});
./node_modules/minifyify/test/fixtures/libraries/Backbone.js:1420 =>     // but possibly useful for unit testing Routers.
./node_modules/minifyify/test/fixtures/libraries/Backbone.js:1427 =>     // Add a route to be tested when the fragment changes. Routes added later
./node_modules/minifyify/test/fixtures/libraries/Backbone.js:1451 =>         if (handler.route.test(fragment)) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1857 => 			if ( matchExpr["CHILD"].test( match[0] ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1866 => 			} else if ( unquoted && rpseudo.test( unquoted ) &&
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:1899 => 					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
./node_modules/mocha/mocha.js:4543 =>  *   - `suite`  (suite) test suite execution started
./node_modules/mocha/mocha.js:4544 =>  *   - `suite end`  (suite) all tests (and sub-suites) have finished
./node_modules/mocha/mocha.js:4545 =>  *   - `test`  (test) test execution started
./node_modules/mocha/mocha.js:4546 =>  *   - `test end`  (test) test completed
./node_modules/mocha/mocha.js:4549 =>  *   - `pass`  (test) test passed
./node_modules/mocha/mocha.js:4550 =>  *   - `fail`  (test, err) test failed
./node_modules/mocha/mocha.js:4551 =>  *   - `pending`  (test) test pending
./node_modules/mocha/mocha.js:4567 =>   this.on('test end', function (test) {
./node_modules/mocha/mocha.js:4568 =>     self.checkGlobals(test);
./node_modules/mocha/mocha.js:4592 =>  * Run tests with full titles matching `re`. Updates runner.total
./node_modules/mocha/mocha.js:4593 =>  * with number of tests matched.
./node_modules/mocha/mocha.js:4612 =>  * Returns the number of tests matching the grep search for the
./node_modules/mocha/mocha.js:4625 =>   suite.eachTest(function (test) {
./node_modules/mocha/mocha.js:4626 =>     var match = self._grep.test(test.fullTitle());
./node_modules/mocha/mocha.js:4681 => Runner.prototype.checkGlobals = function (test) {
./node_modules/mocha/mocha.js:4690 =>   if (test) {
./node_modules/mocha/mocha.js:4691 =>     ok = ok.concat(test._allowedGlobals || []);
./node_modules/mocha/mocha.js:4703 =>     this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));
./node_modules/mocha/mocha.js:4705 =>     this.fail(test, new Error('global leak detected: ' + leaks[0]));
./node_modules/mocha/mocha.js:4710 =>  * Fail the given `test`.
./node_modules/mocha/mocha.js:4713 =>  * @param {Test} test
./node_modules/mocha/mocha.js:4716 => Runner.prototype.fail = function (test, err) {
./node_modules/mocha/mocha.js:4717 =>   if (test.isPending()) {
./node_modules/mocha/mocha.js:4722 =>   test.state = 'failed';
./node_modules/mocha/mocha.js:4736 =>   this.emit('fail', test, err);
./node_modules/mocha/mocha.js:4744 =>  * - Failed `before` hook skips all tests in a suite and subsuites,
./node_modules/mocha/mocha.js:4746 =>  * - Failed `before each` hook skips remaining tests in a
./node_modules/mocha/mocha.js:4751 =>  * - Failed `after each` hook skips remaining tests in a
./node_modules/mocha/mocha.js:4791 =>     hook.ctx.currentTest = self.test;
./node_modules/mocha/mocha.js:4802 =>       var testError = hook.error();
./node_modules/mocha/mocha.js:4803 =>       if (testError) {
./node_modules/mocha/mocha.js:4804 =>         self.fail(self.test, testError);
./node_modules/mocha/mocha.js:4809 =>             self.test.pending = true;
./node_modules/mocha/mocha.js:4811 =>             utils.forEach(suite.tests, function (test) {
./node_modules/mocha/mocha.js:4812 =>               test.pending = true;
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1435 => // Predicate that tests whether the next token is of the given
./test/tc0004/rdfcore/Manifest.rdf:2024 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:2026 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources" />
./test/tc0004/rdfcore/Manifest.rdf:2027 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2028 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:2029 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2030 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2032 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2034 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2035 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2036 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2038 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2039 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2040 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2042 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2045 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:2047 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources" />
./test/tc0004/rdfcore/Manifest.rdf:2048 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2049 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:2050 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2051 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2053 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2055 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2056 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2057 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2059 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2060 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2061 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2063 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2066 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:2068 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources" />
./test/tc0004/rdfcore/Manifest.rdf:2069 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2070 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:2071 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2072 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2074 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2076 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2077 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2078 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2080 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2081 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2082 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2084 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2087 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:2089 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-identity-anon-resources" />
./test/tc0004/rdfcore/Manifest.rdf:2090 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2091 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:2092 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2093 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2095 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2097 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2098 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2099 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2101 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2102 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-identity-anon-resources/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2103 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2105 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2109 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:2111 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure" />
./test/tc0004/rdfcore/Manifest.rdf:2112 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2113 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2114 =>    <!-- <test:description> </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2116 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2117 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2118 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2120 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2121 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2122 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2124 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2127 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:2129 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure" />
./test/tc0004/rdfcore/Manifest.rdf:2130 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2132 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2133 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2134 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2136 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2137 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2138 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2140 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2143 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:2145 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure" />
./test/tc0004/rdfcore/Manifest.rdf:2146 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2148 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2149 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2150 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2152 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2153 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2154 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2156 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2159 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:2161 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure" />
./test/tc0004/rdfcore/Manifest.rdf:2162 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2164 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2165 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2166 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2168 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2169 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2170 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2172 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2175 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:2177 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-literal-is-xml-structure" />
./test/tc0004/rdfcore/Manifest.rdf:2178 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2180 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2181 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2182 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2184 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2185 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-literal-is-xml-structure/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2186 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2188 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2192 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:2194 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2195 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2196 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2197 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2198 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2200 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2202 =>    <test:inputDocument>
./node_modules/acorn/dist/acorn.js:2711 =>   node.test = this.type === tt.semi ? null : this.parseExpression();
./node_modules/acorn/dist/acorn_csp.js:2615 =>   node.test = this.parseParenExpression();
./node_modules/acorn/dist/acorn_csp.js:2682 =>   node.test = this.type === tt.semi ? null : this.parseExpression();
./dist/rdflib.js:4391 => // exposed for testing purposes only.
./node_modules/babel-polyfill/dist/polyfill.min.js:3 => }})},{32:32}],208:[function(t,n,r){var e=t(32),i=t(7),o=Object.isExtensible;e(e.S,"Reflect",{isExtensible:function isExtensible(t){return i(t),!o||o(t)}})},{32:32,7:7}],209:[function(t,n,r){var e=t(32);e(e.S,"Reflect",{ownKeys:t(80)})},{32:32,80:80}],210:[function(t,n,r){var e=t(32),i=t(7),o=Object.preventExtensions;e(e.S,"Reflect",{preventExtensions:function preventExtensions(t){i(t);try{return o&&o(t),!0}catch(t){return!1}}})},{32:32,7:7}],211:[function(t,n,r){var e=t(32),i=t(90);i&&e(e.S,"Reflect",{setPrototypeOf:function setPrototypeOf(t,n){i.check(t,n);try{return i.set(t,n),!0}catch(t){return!1}}})},{32:32,90:90}],212:[function(t,n,r){function set(t,n,r){var c,l,h=arguments.length<4?t:arguments[3],v=i.f(a(t),n);if(!v){if(s(l=o(t)))return set(l,n,r,h);v=f(0)}return u(v,"value")?!(v.writable===!1||!s(h))&&(c=i.f(h,n)||f(0),c.value=r,e.f(h,n,c),!0):void 0!==v.set&&(v.set.call(h,r),!0)}var e=t(67),i=t(70),o=t(74),u=t(39),c=t(32),f=t(85),a=t(7),s=t(49);c(c.S,"Reflect",{set:set})},{32:32,39:39,49:49,67:67,7:7,70:70,74:74,85:85}],213:[function(t,n,r){var e=t(38),i=t(43),o=t(67).f,u=t(72).f,c=t(50),f=t(36),a=e.RegExp,s=a,l=a.prototype,h=/a/g,v=/a/g,p=new a(h)!==h;if(t(28)&&(!p||t(34)(function(){return v[t(117)("match")]=!1,a(h)!=h||a(v)==v||"/a/i"!=a(h,"i")}))){a=function RegExp(t,n){var r=this instanceof a,e=c(t),o=void 0===n;return!r&&e&&t.constructor===a&&o?t:i(p?new s(e&&!o?t.source:t,n):s((e=t instanceof a)?t.source:t,e&&o?f.call(t):n),r?this:l,a)};for(var d=(function(t){t in a||o(a,t,{configurable:!0,get:function(){return s[t]},set:function(n){s[t]=n}})}),y=u(s),g=0;y.length>g;)d(y[g++]);l.constructor=a,a.prototype=l,t(87)(e,"RegExp",a)}t(91)("RegExp")},{117:117,28:28,34:34,36:36,38:38,43:43,50:50,67:67,72:72,87:87,91:91}],214:[function(t,n,r){t(28)&&"g"!=/./g.flags&&t(67).f(RegExp.prototype,"flags",{configurable:!0,get:t(36)})},{28:28,36:36,67:67}],215:[function(t,n,r){t(35)("match",1,function(t,n,r){return[function match(r){"use strict";var e=t(this),i=void 0==r?void 0:r[n];return void 0!==i?i.call(r,e):new RegExp(r)[n](String(e))},r]})},{35:35}],216:[function(t,n,r){t(35)("replace",2,function(t,n,r){return[function replace(e,i){"use strict";var o=t(this),u=void 0==e?void 0:e[n];return void 0!==u?u.call(e,o,i):r.call(String(o),e,i)},r]})},{35:35}],217:[function(t,n,r){t(35)("search",1,function(t,n,r){return[function search(r){"use strict";var e=t(this),i=void 0==r?void 0:r[n];return void 0!==i?i.call(r,e):new RegExp(r)[n](String(e))},r]})},{35:35}],218:[function(t,n,r){t(35)("split",2,function(n,r,e){"use strict";var i=t(50),o=e,u=[].push,c="split",f="length",a="lastIndex";if("c"=="abbc"[c](/(b)*/)[1]||4!="test"[c](/(?:)/,-1)[f]||2!="ab"[c](/(?:ab)*/)[f]||4!="."[c](/(.?)(.?)/)[f]||"."[c](/()()/)[f]>1||""[c](/.?/)[f]){var s=void 0===/()??/.exec("")[1];e=function(t,n){var r=String(this);if(void 0===t&&0===n)return[];if(!i(t))return o.call(r,t,n);var e,c,l,h,v,p=[],d=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),y=0,g=void 0===n?4294967295:n>>>0,b=new RegExp(t.source,d+"g");for(s||(e=new RegExp("^"+b.source+"$(?!\\s)",d));(c=b.exec(r))&&(l=c.index+c[0][f],!(l>y&&(p.push(r.slice(y,c.index)),!s&&c[f]>1&&c[0].replace(e,function(){for(v=1;v<arguments[f]-2;v++)void 0===arguments[v]&&(c[v]=void 0)}),c[f]>1&&c.index<r[f]&&u.apply(p,c.slice(1)),h=c[0][f],y=l,p[f]>=g)));)b[a]===c.index&&b[a]++;return y===r[f]?!h&&b.test("")||p.push(""):p.push(r.slice(y)),p[f]>g?p.slice(0,g):p}}else"0"[c](void 0,0)[f]&&(e=function(t,n){return void 0===t&&0===n?[]:o.call(this,t,n)});return[function split(t,i){var o=n(this),u=void 0==t?void 0:t[r];return void 0!==u?u.call(t,o,i):e.call(String(o),t,i)},e]})},{35:35,50:50}],219:[function(t,n,r){"use strict";t(214);var e=t(7),i=t(36),o=t(28),u="toString",c=/./[u],f=function(n){t(87)(RegExp.prototype,u,n,!0)};t(34)(function(){return"/a/b"!=c.call({source:"a",flags:"b"})})?f(function toString(){var t=e(this);return"/".concat(t.source,"/","flags"in t?t.flags:!o&&t instanceof RegExp?i.call(t):void 0)}):c.name!=u&&f(function toString(){return c.call(this)})},{214:214,28:28,34:34,36:36,7:7,87:87}],220:[function(t,n,r){"use strict";var e=t(19);n.exports=t(22)("Set",function(t){return function Set(){return t(this,arguments.length>0?arguments[0]:void 0)}},{add:function add(t){return e.def(this,t=0===t?0:t,t)}},e)},{19:19,22:22}],221:[function(t,n,r){"use strict";t(99)("anchor",function(t){return function anchor(n){return t(this,"a","name",n)}})},{99:99}],222:[function(t,n,r){"use strict";t(99)("big",function(t){return function big(){return t(this,"big","","")}})},{99:99}],223:[function(t,n,r){"use strict";t(99)("blink",function(t){return function blink(){return t(this,"blink","","")}})},{99:99}],224:[function(t,n,r){"use strict";t(99)("bold",function(t){return function bold(){return t(this,"b","","")}})},{99:99}],225:[function(t,n,r){"use strict";var e=t(32),i=t(97)(!1);e(e.P,"String",{codePointAt:function codePointAt(t){return i(this,t)}})},{32:32,97:97}],226:[function(t,n,r){"use strict";var e=t(32),i=t(108),o=t(98),u="endsWith",c=""[u];e(e.P+e.F*t(33)(u),"String",{endsWith:function endsWith(t){var n=o(this,t,u),r=arguments.length>1?arguments[1]:void 0,e=i(n.length),f=void 0===r?e:Math.min(i(r),e),a=String(t);return c?c.call(n,a,f):n.slice(f-a.length,f)===a}})},{108:108,32:32,33:33,98:98}],227:[function(t,n,r){"use strict";t(99)("fixed",function(t){return function fixed(){return t(this,"tt","","")}})},{99:99}],228:[function(t,n,r){"use strict";t(99)("fontcolor",function(t){return function fontcolor(n){return t(this,"font","color",n)}})},{99:99}],229:[function(t,n,r){"use strict";t(99)("fontsize",function(t){return function fontsize(n){return t(this,"font","size",n)}})},{99:99}],230:[function(t,n,r){var e=t(32),i=t(105),o=String.fromCharCode,u=String.fromCodePoint;e(e.S+e.F*(!!u&&1!=u.length),"String",{fromCodePoint:function fromCodePoint(t){for(var n,r=[],e=arguments.length,u=0;e>u;){if(n=+arguments[u++],i(n,1114111)!==n)throw RangeError(n+" is not a valid code point");r.push(n<65536?o(n):o(((n-=65536)>>10)+55296,n%1024+56320))}return r.join("")}})},{105:105,32:32}],231:[function(t,n,r){"use strict";var e=t(32),i=t(98),o="includes";e(e.P+e.F*t(33)(o),"String",{includes:function includes(t){return!!~i(this,t,o).indexOf(t,arguments.length>1?arguments[1]:void 0)}})},{32:32,33:33,98:98}],232:[function(t,n,r){"use strict";t(99)("italics",function(t){return function italics(){return t(this,"i","","")}})},{99:99}],233:[function(t,n,r){"use strict";var e=t(97)(!0);t(53)(String,"String",function(t){this._t=String(t),this._i=0},function(){var t,n=this._t,r=this._i;return r>=n.length?{value:void 0,done:!0}:(t=e(n,r),this._i+=t.length,{value:t,done:!1})})},{53:53,97:97}],234:[function(t,n,r){"use strict";t(99)("link",function(t){return function link(n){return t(this,"a","href",n)}})},{99:99}],235:[function(t,n,r){var e=t(32),i=t(107),o=t(108);e(e.S,"String",{raw:function raw(t){for(var n=i(t.raw),r=o(n.length),e=arguments.length,u=[],c=0;r>c;)u.push(String(n[c++])),c<e&&u.push(String(arguments[c]));return u.join("")}})},{107:107,108:108,32:32}],236:[function(t,n,r){var e=t(32);e(e.P,"String",{repeat:t(101)})},{101:101,32:32}],237:[function(t,n,r){"use strict";t(99)("small",function(t){return function small(){return t(this,"small","","")}})},{99:99}],238:[function(t,n,r){"use strict";var e=t(32),i=t(108),o=t(98),u="startsWith",c=""[u];e(e.P+e.F*t(33)(u),"String",{startsWith:function startsWith(t){var n=o(this,t,u),r=i(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),e=String(t);return c?c.call(n,e,r):n.slice(r,r+e.length)===e}})},{108:108,32:32,33:33,98:98}],239:[function(t,n,r){"use strict";t(99)("strike",function(t){return function strike(){return t(this,"strike","","")}})},{99:99}],240:[function(t,n,r){"use strict";t(99)("sub",function(t){return function sub(){return t(this,"sub","","")}})},{99:99}],241:[function(t,n,r){"use strict";t(99)("sup",function(t){return function sup(){return t(this,"sup","","")}})},{99:99}],242:[function(t,n,r){"use strict";t(102)("trim",function(t){return function trim(){return t(this,3)}})},{102:102}],243:[function(t,n,r){"use strict";var e=t(38),i=t(39),o=t(28
./node_modules/chai/chai.js:4137 =>             if (!excludeNames.test(asserterName)) {
./node_modules/chai/chai.js:4257 =>  * Ensures that the object being tested against is of a valid type.
./node_modules/chai/chai.js:4286 =>       'object tested must be ' + str + ', but ' + type(obj) + ' given'
./node_modules/core-js/client/core.js:3189 => 	  , test      = [1, 2, 3];
./node_modules/core-js/client/core.js:3193 => 	  test.sort(undefined);
./node_modules/core-js/client/core.js:3196 => 	  test.sort(null);
./node_modules/core-js/client/shim.js:3175 => 	  , test      = [1, 2, 3];
./node_modules/core-js/client/shim.js:3179 => 	  test.sort(undefined);
./node_modules/core-js/client/shim.js:3182 => 	  test.sort(null);
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:1465 =>     if (this.strict && this.reservedWordsStrictBind.test(expr.name))
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:1618 =>     node.test = expr
./node_modules/detective/node_modules/acorn/dist/acorn.js:1471 =>       if (this.strict && this.reservedWordsStrictBind.test(expr.name))
./node_modules/es6-promise/dist/test/browserify.js:2255 =>         testNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:2256 =>         testNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:2257 =>         testNonFunction([function () { return other; }], "an array containing a function");
./node_modules/es6-promise/dist/test/browserify.js:2262 => },{"./helpers/reasons":21,"./helpers/testThreeCases":22,"assert":2}],17:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:2272 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:2311 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:2312 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/browserify.js:2314 => function testPromiseResolution(xFactory, test) {
./node_modules/es6-promise/dist/test/browserify.js:2320 =>         test(promise, done);
./node_modules/es6-promise/dist/test/browserify.js:2328 =>         test(promise, done);
./node_modules/es6-promise/dist/test/browserify.js:2339 =>         testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2366 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2385 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2400 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2419 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2443 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:2444 => var sentinel = { sentinel: "sentinel" }; // a sentinel fulfillment value to test for with strict equality
./node_modules/es6-promise/dist/test/browserify.js:2446 => var sentinelArray = [sentinel]; // a sentinel fulfillment value to test when we need an array
./node_modules/es6-promise/dist/test/browserify.js:2448 => function testPromiseResolution(xFactory, test) {
./node_modules/es6-promise/dist/test/browserify.js:2454 =>         test(promise, done);
./node_modules/es6-promise/dist/test/browserify.js:2462 =>         test(promise, done);
./node_modules/es6-promise/dist/test/browserify.js:2466 => function testCallingResolvePromise(yFactory, stringRepresentation, test) {
./node_modules/es6-promise/dist/test/browserify.js:2477 =>             testPromiseResolution(xFactory, test);
./node_modules/es6-promise/dist/test/browserify.js:2491 =>             testPromiseResolution(xFactory, test);
./node_modules/es6-promise/dist/test/browserify.js:2496 => function testCallingRejectPromise(r, stringRepresentation, test) {
./node_modules/es6-promise/dist/test/mocha.js:3358 =>   runner.on('test', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3359 =>     process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));
./node_modules/es6-promise/dist/test/mocha.js:3362 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3365 =>     console.log(fmt, test.fullTitle());
./node_modules/es6-promise/dist/test/mocha.js:3368 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3371 =>       + color(test.speed, '%dms');
./node_modules/es6-promise/dist/test/mocha.js:3373 =>     console.log(fmt, test.fullTitle(), test.duration);
./node_modules/es6-promise/dist/test/mocha.js:3376 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:3378 =>     console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());
./node_modules/es6-promise/dist/test/mocha.js:3474 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3475 =>     var code = utils.clean(test.fn.toString());
./node_modules/es6-promise/dist/test/mocha.js:3476 =>     buf += test.title + '.\n';
./node_modules/es6-promise/dist/test/mocha.js:3505 =>  * Initialize a new `Min` minimal test reporter (best used with --watch).
./node_modules/es6-promise/dist/test/mocha.js:3551 =>  * Initialize a new `Dot` matrix test reporter.
./node_modules/es6-promise/dist/test/mocha.js:3577 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3581 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3585 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:3612 =>  * of passes, failures and pending tests.
./node_modules/JSONStream/test/fixtures/all_npm.json:822 => {"id":"ctrlflow_tests","key":"ctrlflow_tests","value":{"rev":"3-d9ed35503d27b0736c59669eecb4c4fe"}},
./node_modules/jsonld/tests/webidl/idlharness.js:1684 =>     // This is called by test_self() with the prototype as obj, and by
./node_modules/jsonld/tests/webidl/idlharness.js:1685 =>     // test_interface_of() with the object as obj.
./node_modules/jsonld/tests/webidl/idlharness.js:1826 => IdlEnum.prototype.test = function()
./node_modules/jsonld/tests/webidl/idlharness.js:1829 =>             test(function()
./node_modules/jsonld/tests/webidl/idlharness.js:1831 => 		// NOTHING to test
./node_modules/lodash/core.js:3529 =>    *     return /[aeiou]/i.test(v);
./node_modules/lodash/core.js:3790 =>     var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],
./node_modules/lodash/core.js:3791 =>         chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
./node_modules/lodash/core.js:3792 =>         retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);
./node_modules/lodash/lodash.js:3425 =>       return pattern.test(toSource(value));
./node_modules/jsonld/tests/webidl/testharness.js:2254 =>         // browser. So just doing an existence test here won't do, you also need
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2105 => 			if ( !ridentifier.test(lang || "") ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2185 => 			return rheader.test( elem.nodeName );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2189 => 			return rinputs.test( elem.nodeName );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2200 => 			// use getAttribute instead to test this case
./node_modules/mocha/mocha.js:4912 =>  * Run the current test and callback `fn(err)`.
./node_modules/mocha/mocha.js:4919 =>   var test = this.test;
./node_modules/mocha/mocha.js:4921 =>   if (!test) {
./node_modules/mocha/mocha.js:4925 =>     test.asyncOnly = true;
./node_modules/mocha/mocha.js:4929 =>     test.allowUncaught = true;
./node_modules/mocha/mocha.js:4930 =>     return test.run(fn);
./node_modules/mocha/mocha.js:4933 =>     test.on('error', function (err) {
./node_modules/mocha/mocha.js:4934 =>       self.fail(test, err);
./node_modules/mocha/mocha.js:4936 =>     test.run(fn);
./node_modules/mocha/mocha.js:4943 =>  * Run tests in the given `suite` and invoke the callback `fn()` when complete.
./node_modules/mocha/mocha.js:4951 =>   var tests = suite.tests.slice();
./node_modules/mocha/mocha.js:4952 =>   var test;
./node_modules/mocha/mocha.js:4994 =>     // next test
./node_modules/mocha/mocha.js:4995 =>     test = tests.shift();
./node_modules/mocha/mocha.js:4998 =>     if (!test) {
./node_modules/mocha/mocha.js:5003 =>     var match = self._grep.test(test.fullTitle());
./node_modules/mocha/mocha.js:5011 =>       // all tests. The run immediately function also comes with
./node_modules/mocha/mocha.js:5013 =>       // if we run the whole test suite, because running the whole
./node_modules/mocha/mocha.js:5014 =>       // test suite don't do any immediate recursive loops. Thus,
./node_modules/mocha/mocha.js:5024 =>     if (test.isPending()) {
./node_modules/mocha/mocha.js:5025 =>       self.emit('pending', test);
./node_modules/mocha/mocha.js:5026 =>       self.emit('test end', test);
./node_modules/mocha/mocha.js:5030 =>     // execute test and hook(s)
./node_modules/mocha/mocha.js:5031 =>     self.emit('test', self.test = test);
./node_modules/mocha/mocha.js:5033 =>       if (test.isPending()) {
./node_modules/mocha/mocha.js:5034 =>         self.emit('pending', test);
./node_modules/mocha/mocha.js:5035 =>         self.emit('test end', test);
./node_modules/mocha/mocha.js:5041 =>       self.currentRunnable = self.test;
./node_modules/mocha/mocha.js:5043 =>         test = self.test;
./node_modules/mocha/mocha.js:5045 =>           var retry = test.currentRetry();
./node_modules/mocha/mocha.js:5047 =>             test.pending = true;
./node_modules/mocha/mocha.js:5048 =>             self.emit('pending', test);
./node_modules/mocha/mocha.js:5049 =>           } else if (retry < test.retries()) {
./node_modules/mocha/mocha.js:5050 =>             var clonedTest = test.clone();
./node_modules/mocha/mocha.js:5052 =>             tests.unshift(clonedTest);
./node_modules/mocha/mocha.js:5058 =>             self.fail(test, err);
./node_modules/mocha/mocha.js:5060 =>           self.emit('test end', test);
./node_modules/mocha/mocha.js:5069 =>         test.state = 'passed';
./node_modules/mocha/mocha.js:5070 =>         self.emit('pass', test);
./node_modules/mocha/mocha.js:5071 =>         self.emit('test end', test);
./node_modules/mocha/mocha.js:5125 =>     // Avoid grep neglecting large number of tests causing a
./node_modules/mocha/mocha.js:5148 =>       // remove reference to test
./node_modules/mocha/mocha.js:5149 =>       delete self.test;
./node_modules/mocha/mocha.js:5188 =>     runnable = new Runnable('Uncaught error outside test suite');
./node_modules/mocha/mocha.js:5211 =>   // recover from test
./node_modules/mocha/mocha.js:5212 =>   if (runnable.type === 'test') {
./node_modules/pako/dist/pako_inflate.js:2891 =>   // Flag to properly process Z_BUF_ERROR on testing inflate call
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1468 =>   return this.type === _tokentype.types.eof || this.type === _tokentype.types.braceR || _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1614 =>     return this.keywords.test(word);
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1618 =>     return this.reservedWords.test(word);
./test/tc0004/rdfcore/Manifest.rdf:2203 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2204 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2206 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2207 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2208 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2210 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2213 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:2215 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2216 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2217 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2218 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2219 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2221 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2223 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2224 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2225 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2227 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2228 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2229 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2231 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2234 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:2236 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2237 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2238 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2239 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2240 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2242 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2244 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2245 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2246 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2248 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2249 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2250 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2252 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2255 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:2257 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2258 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2259 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2260 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2261 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2263 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2265 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2266 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2267 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2269 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2270 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2271 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2273 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2276 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:2278 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2279 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2280 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2281 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2282 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2284 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2286 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2287 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2288 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2290 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2291 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2292 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2294 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2297 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test006">
./test/tc0004/rdfcore/Manifest.rdf:2299 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2300 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2301 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2302 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2303 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2305 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2307 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2308 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2309 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2311 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2312 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2313 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2315 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2318 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test007">
./test/tc0004/rdfcore/Manifest.rdf:2320 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2321 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2322 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2324 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2325 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2326 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2329 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2331 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2332 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2333 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2335 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2338 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test008">
./test/tc0004/rdfcore/Manifest.rdf:2340 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2341 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2342 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2343 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2344 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2346 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2348 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2349 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2350 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2352 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2353 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2354 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2356 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2359 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test009">
./test/tc0004/rdfcore/Manifest.rdf:2361 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2362 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2363 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2364 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2365 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2367 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2369 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2370 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2371 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2373 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2374 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test009.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2375 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2377 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2380 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test010a">
./test/tc0004/rdfcore/Manifest.rdf:2382 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2383 =>    <test:status>OBSOLETE</test:status>
./node_modules/acorn/dist/acorn.js:3011 =>   if (prevType === tt._return) return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/acorn/dist/acorn.js:3151 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/acorn/dist/acorn_csp.js:2982 =>   if (prevType === tt._return) return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/core-js/client/library.js:3537 => 	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/detective/node_modules/acorn/dist/acorn.js:1624 =>       node.test = expr
./node_modules/es6-promise/dist/test/browserify.js:2507 =>             testPromiseResolution(xFactory, test);
./node_modules/es6-promise/dist/test/browserify.js:2521 =>             testPromiseResolution(xFactory, test);
./node_modules/es6-promise/dist/test/browserify.js:2526 => function testCallingResolvePromiseFulfillsWith(yFactory, stringRepresentation, fulfillmentValue) {
./node_modules/es6-promise/dist/test/browserify.js:2527 =>     testCallingResolvePromise(yFactory, stringRepresentation, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2535 => function testCallingResolvePromiseRejectsWith(yFactory, stringRepresentation, rejectionReason) {
./node_modules/es6-promise/dist/test/browserify.js:2536 =>     testCallingResolvePromise(yFactory, stringRepresentation, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2544 => function testCallingRejectPromiseRejectsWith(reason, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:2545 =>     testCallingRejectPromise(reason, stringRepresentation, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2575 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2603 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2633 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2644 =>         function testRejectionViaThrowingGetter(e, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:2656 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2666 =>             testRejectionViaThrowingGetter(reasons[stringRepresentation], stringRepresentation);
./node_modules/es6-promise/dist/test/browserify.js:2685 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2714 =>             testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2724 =>                 testCallingResolvePromiseFulfillsWith(function () { return undefined; }, "`undefined`", undefined);
./node_modules/es6-promise/dist/test/browserify.js:2725 =>                 testCallingResolvePromiseFulfillsWith(function () { return null; }, "`null`", null);
./node_modules/es6-promise/dist/test/mocha.js:3826 =>  * Initialize a new `Progress` bar test reporter.
./node_modules/es6-promise/dist/test/mocha.js:3852 =>   // tests started
./node_modules/es6-promise/dist/test/mocha.js:3858 =>   // tests complete
./node_modules/es6-promise/dist/test/mocha.js:3859 =>   runner.on('test end', function(){
./node_modules/es6-promise/dist/test/mocha.js:3883 =>   // tests are complete, output some stats
./node_modules/es6-promise/dist/test/mocha.js:3921 =>  * Initialize a new `Spec` test reporter.
./node_modules/es6-promise/dist/test/mocha.js:3953 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3955 =>     console.log(fmt, test.title);
./node_modules/es6-promise/dist/test/mocha.js:3958 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:3959 =>     if ('fast' == test.speed) {
./node_modules/es6-promise/dist/test/mocha.js:3964 =>       console.log(fmt, test.title);
./node_modules/es6-promise/dist/test/mocha.js:3969 =>         + color(test.speed, '(%dms)');
./node_modules/es6-promise/dist/test/mocha.js:3971 =>       console.log(fmt, test.title, test.duration);
./node_modules/es6-promise/dist/test/mocha.js:3975 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:3977 =>     console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);
./node_modules/es6-promise/dist/test/mocha.js:4032 =>   runner.on('test end', function(){
./node_modules/es6-promise/dist/test/mocha.js:4036 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:4037 =>     console.log('ok %d %s # SKIP -', n, title(test));
./node_modules/es6-promise/dist/test/mocha.js:4040 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:4042 =>     console.log('ok %d %s', n, title(test));
./node_modules/es6-promise/dist/test/mocha.js:4045 =>   runner.on('fail', function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:4047 =>     console.log('not ok %d %s', n, title(test));
./node_modules/es6-promise/dist/test/mocha.js:4052 =>     console.log('# tests ' + (passes + failures));
./node_modules/es6-promise/dist/test/mocha.js:4059 =>  * Return a TAP-safe title of `test`
./node_modules/es6-promise/dist/test/mocha.js:4061 =>  * @param {Object} test
./node_modules/es6-promise/dist/test/mocha.js:4066 => function title(test) {
./node_modules/es6-promise/dist/test/mocha.js:4067 =>   return test.fullTitle().replace(/#/g, '');
./node_modules/es6-promise/dist/test/mocha.js:4108 =>     , tests = []
./node_modules/es6-promise/dist/test/mocha.js:4111 =>   runner.on('pending', function(test){
./node_modules/es6-promise/dist/test/mocha.js:4112 =>     tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:4115 =>   runner.on('pass', function(test){
./node_modules/es6-promise/dist/test/mocha.js:4116 =>     tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:4119 =>   runner.on('fail', function(test){
./node_modules/es6-promise/dist/test/mocha.js:4120 =>     tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:4124 =>     console.log(tag('testsuite', {
./node_modules/es6-promise/dist/test/mocha.js:4126 =>       , tests: stats.tests
./node_modules/es6-promise/dist/test/mocha.js:4129 =>       , skipped: stats.tests - stats.failures - stats.passes
./node_modules/es6-promise/dist/test/mocha.js:4134 =>     tests.forEach(test);
./node_modules/es6-promise/dist/test/mocha.js:4135 =>     console.log('</testsuite>');
./node_modules/es6-promise/dist/test/mocha.js:4150 =>  * Output tag for the given `test.`
./node_modules/es6-promise/dist/test/mocha.js:4153 => function test(test) {
./node_modules/es6-promise/dist/test/mocha.js:4155 =>       classname: test.parent.fullTitle()
./node_modules/es6-promise/dist/test/mocha.js:4156 =>     , name: test.title
./node_modules/es6-promise/dist/test/mocha.js:4157 =>     , time: (test.duration / 1000) || 0
./node_modules/es6-promise/dist/test/mocha.js:4160 =>   if ('failed' == test.state) {
./node_modules/es6-promise/dist/test/mocha.js:4161 =>     var err = test.err;
./node_modules/es6-promise/dist/test/mocha.js:4162 =>     console.log(tag('testcase', attrs, false, tag('failure', {}, false, cdata(escape(err.message) + "\n" + err.stack))));
./node_modules/es6-promise/dist/test/mocha.js:4163 =>   } else if (test.pending) {
./node_modules/es6-promise/dist/test/mocha.js:4164 =>     console.log(tag('testcase', attrs, false, tag('skipped', {}, true)));
./node_modules/es6-promise/dist/test/mocha.js:4166 =>     console.log(tag('testcase', attrs, true) );
./node_modules/lexical-scope/bench/jquery.js:4 => {for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,bp)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||!bc.test("<"+a.nodeName)?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"<$1></$2>");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=bg[l]||bg._default,n=m[0],o=b.createElement("div");b===c?bh.appendChild(o):U(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&X.test(k)&&o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bn(k[i]);else bn(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||be.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bq=/alpha\([^)]*\)/i,br=/opacity=([^)]*)/,bs=/([A-Z]|^ms)/g,bt=/^-?\d+(?:px)?$/i,bu=/^-?\d/,bv=/^([\-+])=([\-+.\de]+)/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Left","Right"],by=["Top","Bottom"],bz,bA,bB;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bz(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bv.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bz)return bz(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bC(a,b,d);f.swap(a,bw,function(){e=bC(a,b,d)});return e}},set:function(a,b){if(!bt.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return br.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bq,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bq.test(g)?g.replace(bq,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bz(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bA=function(a,b){var c,d,e;b=b.replace(bs,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b)));return c}),c.documentElement.currentStyle&&(bB=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bt.test(f)&&bu.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f||0,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),bz=bA||bB,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))=
./node_modules/mocha/mocha.js:5213 =>     this.emit('test end', runnable);
./node_modules/mocha/mocha.js:5239 =>  * (before/after/beforeEach/afterEach) and tests of a Suite.
./node_modules/mocha/mocha.js:5270 =>   for (var i = 0; i < suite.tests.length; i++) {
./node_modules/mocha/mocha.js:5271 =>     delete suite.tests[i].fn;
./node_modules/mocha/mocha.js:5358 =>     // If the suite contains `only` tests, run those and ignore any nested suites.
./node_modules/mocha/mocha.js:5359 =>     suite.tests = suite._onlyTests;
./node_modules/mocha/mocha.js:5362 =>     // Otherwise, do not run any of the tests in this suite.
./node_modules/mocha/mocha.js:5363 =>     suite.tests = [];
./node_modules/mocha/mocha.js:5365 =>       // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.
./node_modules/mocha/mocha.js:5366 =>       // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.
./node_modules/mocha/mocha.js:5371 =>     // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.
./node_modules/mocha/mocha.js:5377 =>   return suite.tests.length || suite.suites.length;
./node_modules/mocha/mocha.js:5381 =>  * Determines whether a suite has an `only` test or suite as a descendant.
./node_modules/mocha/mocha.js:5402 =>     if (/^\d+/.test(key)) {
./node_modules/mocha/mocha.js:5409 =>     if (global.navigator && (/^getInterface/).test(key)) {
./node_modules/mocha/mocha.js:5415 =>     if (global.navigator && (/^\d+/).test(key)) {
./node_modules/mocha/mocha.js:5420 =>     if (/^mocha-/.test(key)) {
./node_modules/mocha/mocha.js:5481 =>  * nicer reporter and more flexible meta-testing.
./node_modules/mocha/mocha.js:5512 =>   this.tests = [];
./node_modules/pako/dist/pako_deflate.js:3346 =>     /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1788 =>   node.test = this.parseParenExpression();
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1835 =>   node.test = this.parseParenExpression();
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1874 =>         cur.test = this.parseExpression();
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1878 =>         cur.test = null;
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1894 =>   if (_whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) this.raise(this.lastTokEnd, "Illegal newline after throw");
./node_modules/uglify-js/lib/compress.js:2387 =>             if (/^[!=]==?$/.test(self.operator)) {
./node_modules/uglify-js/lib/compress.js:2391 =>                         if (/^==/.test(self.operator)) return self.right.condition;
./node_modules/uglify-js/lib/compress.js:2392 =>                         if (/^!=/.test(self.operator)) return self.right.condition.negate(compressor);
./node_modules/uglify-js/lib/compress.js:2396 =>                         if (/^==/.test(self.operator)) return self.right.condition.negate(compressor);
./node_modules/uglify-js/lib/compress.js:2397 =>                         if (/^!=/.test(self.operator)) return self.right.condition;
./node_modules/uglify-js/lib/compress.js:2403 =>                         if (/^==/.test(self.operator)) return self.left.condition;
./node_modules/uglify-js/lib/compress.js:2404 =>                         if (/^!=/.test(self.operator)) return self.left.condition.negate(compressor);
./dist/rdflib.min.js:58 => function N3Lexer(e){if(!(this instanceof N3Lexer))return new N3Lexer(e);if(e&&e.lineMode){this._tripleQuotedString=this._number=this._boolean=/$0^/;var f=this;this._tokenize=this.tokenize,this.tokenize=function(e,u){this._tokenize(e,function(e,t){!e&&/^(?:IRI|prefixed|literal|langcode|type|\.|eof)$/.test(t.type)?u&&u(e,t):u&&u(e||f._syntaxError(t.type,u=null))})}}}var fromCharCode=String.fromCharCode,immediately="function"==typeof setImmediate?setImmediate:function(e){setTimeout(e,0)},escapeSequence=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\[uU]|\\(.)/g,escapeReplacements={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},illegalIriChars=/[\x00-\x20<>\\"\{\}\|\^\`]/;N3Lexer.prototype={_iri:/^<((?:[^>\\]|\\[uU])+)>/,_unescapedIri:/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>/,_unescapedString:/^"[^"\\]+"(?=[^"\\])/,_singleQuotedString:/^"[^"\\]*(?:\\.[^"\\]*)*"(?=[^"\\])|^'[^'\\]*(?:\\.[^'\\]*)*'(?=[^'\\])/,_tripleQuotedString:/^""("[^"\\]*(?:(?:\\.|"(?!""))[^"\\]*)*")""|^''('[^'\\]*(?:(?:\\.|'(?!''))[^'\\]*)*')''/,_langcode:/^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\-])/i,_prefix:/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:(?=[#\s<])/,_prefixed:/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:((?:(?:[0-:A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])(?:(?:[\.\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])*(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~]))?)?)(?=\.?[,;\s#()\[\]\{\}"'<])/,_blank:/^_:((?:[0-9A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?=\.?[,;:\s#()\[\]\{\}"'<])/,_number:/^[\-+]?(?:\d+\.?\d*([eE](?:[\-\+])?\d+)|\d*\.?\d+)(?=[.,;:\s#()\[\]\{\}"'<])/,_boolean:/^(?:true|false)(?=[.,;:\s#()\[\]\{\}"'<])/,_keyword:/^@[a-z]+(?=[\s#<:])/,_sparqlKeyword:/^(?:PREFIX|BASE|GRAPH)(?=[\s#<:])/i,_shortPredicates:/^a(?=\s+|<)/,_newline:/^[ \t]*(?:#[^\n\r]*)?(?:\r\n|\n|\r)[ \t]*/,_whitespace:/^[ \t]+/,_endOfFile:/^(?:#[^\n\r]*)?$/,_tokenizeToEnd:function(e,f){function u(f){e(f._syntaxError(/^\S*/.exec(t)[0]))}for(var t=this._input;;){for(var i;i=this._newline.exec(t);)t=t.substr(i[0].length,t.length),this._line++;if((i=this._whitespace.exec(t))&&(t=t.substr(i[0].length,t.length)),this._endOfFile.test(t))return f&&e(t=null,{line:this._line,type:"eof",value:"",prefix:""}),this._input=t;var n,r=this._line,d="",s="",a="",c=t[0],o=null,l=0,x=!1;switch(c){case"^":if(1===t.length)break;if("^"!==t[1])return u(this);if(this._prevTokenType="^",t=t.substr(2),"<"!==t[0]){x=!0;break}case"<":if(o=this._unescapedIri.exec(t))d="IRI",s=o[1];else if(o=this._iri.exec(t)){if(n=this._unescape(o[1]),null===n||illegalIriChars.test(n))return u(this);d="IRI",s=n}break;case"_":((o=this._blank.exec(t))||f&&(o=this._blank.exec(t+" ")))&&(d="prefixed",a="_",s=o[1]);break;case'"':case"'":if(o=this._unescapedString.exec(t))d="literal",s=o[0];else if(o=this._singleQuotedString.exec(t)){if(n=this._unescape(o[0]),null===n)return u(this);d="literal",s=n.replace(/^'|'$/g,'"')}else if(o=this._tripleQuotedString.exec(t)){if(n=o[1]||o[2],this._line+=n.split(/\r\n|\r|\n/).length-1,n=this._unescape(n),null===n)return u(this);d="literal",s=n.replace(/^'|'$/g,'"')}break;case"@":"literal"===this._prevTokenType&&(o=this._langcode.exec(t))?(d="langcode",s=o[1]):(o=this._keyword.exec(t))&&(d=o[0]);break;case".":if(1===t.length?f:t[1]<"0"||t[1]>"9"){d=".",l=1;break}case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"+":case"-":(o=this._number.exec(t))&&(d="literal",s='"'+o[0]+'"^^http://www.w3.org/2001/XMLSchema#'+(o[1]?"double":/^[+\-]?\d+$/.test(o[0])?"integer":"decimal"));break;case"B":case"b":case"p":case"P":case"G":case"g":(o=this._sparqlKeyword.exec(t))?d=o[0].toUpperCase():x=!0;break;case"f":case"t":(o=this._boolean.exec(t))?(d="literal",s='"'+o[0]+'"^^http://www.w3.org/2001/XMLSchema#boolean'):x=!0;break;case"a":(o=this._shortPredicates.exec(t))?(d="abbreviation",s="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"):x=!0;break;case",":case";":case"[":case"]":case"(":case")":case"{":case"}":l=1,d=c;break;default:x=!0}if(x&&("@prefix"!==this._prevTokenType&&"PREFIX"!==this._prevTokenType||!(o=this._prefix.exec(t))?((o=this._prefixed.exec(t))||f&&(o=this._prefixed.exec(t+" ")))&&(d="prefixed",a=o[1]||"",s=this._unescape(o[2])):(d="prefix",s=o[1]||"")),"^"===this._prevTokenType&&(d="IRI"===d||"prefixed"===d?"type":""),!d)return f||!/^'''|^"""/.test(t)&&/\n|\r/.test(t)?u(this):this._input=t;e(null,{line:r,type:d,value:s,prefix:a}),this._prevTokenType=d,t=t.substr(l||o[0].length,t.length)}},_unescape:function(e){try{return e.replace(escapeSequence,function(e,f,u,t){var i;if(f){if(i=parseInt(f,16),isNaN(i))throw new Error;return fromCharCode(i)}if(u){if(i=parseInt(u,16),isNaN(i))throw new Error;return i<=65535?fromCharCode(i):fromCharCode(55296+(i-=65536)/1024,56320+(1023&i))}var n=escapeReplacements[t];if(!n)throw new Error;return n})}catch(e){return null}},_syntaxError:function(e){return this._input=null,new Error('Syntax error: unexpected "'+e+'" on line '+this._line+".")},tokenize:function(e,f){function u(e){null!==i._input&&(i._input+=e,i._tokenizeToEnd(f,!1))}function t(){null!==i._input&&i._tokenizeToEnd(f,!0)}var i=this;this._line=1,"string"==typeof e?(this._input=e,immediately(function(){i._tokenizeToEnd(f,!0)})):(this._input="",e&&"function"!=typeof e?("function"==typeof e.setEncoding&&e.setEncoding("utf8"),e.on("data",u),e.on("end",t)):(this.addChunk=u,this.end=t,f||(f=e)))}},module.exports=N3Lexer;
./test/tc0004/rdfcore/Manifest.rdf:2384 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2385 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2386 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2391 => 		One of test010a and test010b SHOULD pass, at least.
./test/tc0004/rdfcore/Manifest.rdf:2392 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2394 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2395 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2396 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2398 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2399 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test010a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2400 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2402 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2405 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test010b">
./test/tc0004/rdfcore/Manifest.rdf:2407 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2408 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2409 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2410 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2411 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2416 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2418 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2419 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2420 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2422 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2423 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test010b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2424 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2426 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2429 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test011a">
./test/tc0004/rdfcore/Manifest.rdf:2431 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2432 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2433 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2434 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2435 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2440 => 		One of test011a and test011b SHOULD pass, at least.
./test/tc0004/rdfcore/Manifest.rdf:2441 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2443 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2444 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2445 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2447 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2448 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test011a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2449 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2451 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2454 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test011b">
./test/tc0004/rdfcore/Manifest.rdf:2456 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2457 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2458 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2459 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2460 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2465 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2467 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2468 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2469 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2471 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2472 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test011b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2473 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2475 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2478 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test012a">
./test/tc0004/rdfcore/Manifest.rdf:2480 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2481 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2482 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2483 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2484 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2489 => 		One of test012a and test012b SHOULD pass, at least.
./test/tc0004/rdfcore/Manifest.rdf:2490 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2492 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2493 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2494 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2496 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2497 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test012a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2498 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2500 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2503 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/Manifest.rdf#test012b">
./test/tc0004/rdfcore/Manifest.rdf:2505 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-nested-bagIDs" />
./test/tc0004/rdfcore/Manifest.rdf:2506 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2507 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2508 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2509 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2514 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2516 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2517 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2518 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2520 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2521 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-nested-bagIDs/test012b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2522 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2524 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2530 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:2532 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-not-id-and-resource-attr" />
./test/tc0004/rdfcore/Manifest.rdf:2533 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2534 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2535 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2536 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2538 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2540 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2541 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2542 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2544 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2545 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2546 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2548 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2551 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:2553 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-not-id-and-resource-attr" />
./test/tc0004/rdfcore/Manifest.rdf:2554 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2555 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./node_modules/acorn/dist/acorn.js:3267 =>     } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/acorn/dist/acorn.js:3349 =>     if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/acorn/dist/acorn_csp.js:3122 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/acorn/dist/acorn_csp.js:3238 =>     } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/acorn/dist/acorn_csp.js:3320 =>     if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/babel-polyfill/dist/polyfill.js:3062 =>   , test      = [1, 2, 3];
./node_modules/babel-polyfill/dist/polyfill.js:3066 =>   test.sort(undefined);
./node_modules/babel-polyfill/dist/polyfill.js:3069 =>   test.sort(null);
./node_modules/babylon/lib/index.js:3323 =>     node.test = expr;
./node_modules/chai/chai.js:4729 =>  * test utility
./node_modules/chai/chai.js:4732 => exports.test = require('./test');
./node_modules/chai/chai.js:4847 => },{"./addChainableMethod":9,"./addMethod":10,"./addProperty":11,"./expectTypes":12,"./flag":13,"./getActual":14,"./getMessage":16,"./getName":17,"./getPathInfo":18,"./getPathValue":19,"./hasProperty":21,"./inspect":23,"./objDisplay":24,"./overwriteChainableMethod":25,"./overwriteMethod":26,"./overwriteProperty":27,"./test":28,"./transferFlags":29,"deep-eql":31,"type-detect":35}],23:[function(require,module,exports){
./node_modules/core-js/client/shim.js:3855 => 	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2017 =>     if (this.keywords.test(prop.key.name) ||
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2018 =>         (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||
./node_modules/detective/node_modules/acorn/dist/acorn.js:2023 =>       if (this.keywords.test(prop.key.name) ||
./node_modules/detective/node_modules/acorn/dist/acorn.js:2024 =>           (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||
./node_modules/es6-promise/dist/test/browserify.js:2726 =>                 testCallingResolvePromiseFulfillsWith(function () { return false; }, "`false`", false);
./node_modules/es6-promise/dist/test/browserify.js:2727 =>                 testCallingResolvePromiseFulfillsWith(function () { return 5; }, "`5`", 5);
./node_modules/es6-promise/dist/test/browserify.js:2728 =>                 testCallingResolvePromiseFulfillsWith(function () { return sentinel; }, "an object", sentinel);
./node_modules/es6-promise/dist/test/browserify.js:2729 =>                 testCallingResolvePromiseFulfillsWith(function () { return sentinelArray; }, "an array", sentinelArray);
./node_modules/es6-promise/dist/test/browserify.js:2738 =>                     testCallingResolvePromiseFulfillsWith(yFactory, stringRepresentation, sentinel);
./node_modules/es6-promise/dist/test/browserify.js:2746 =>                     testCallingResolvePromiseRejectsWith(yFactory, stringRepresentation, sentinel);
./node_modules/es6-promise/dist/test/browserify.js:2763 =>                         testCallingResolvePromiseFulfillsWith(yFactory, stringRepresentation, sentinel);
./node_modules/es6-promise/dist/test/browserify.js:2775 =>                         testCallingResolvePromiseRejectsWith(yFactory, stringRepresentation, sentinel);
./node_modules/es6-promise/dist/test/browserify.js:2784 =>                 testCallingRejectPromiseRejectsWith(reasons[stringRepresentation], stringRepresentation);
./node_modules/es6-promise/dist/test/browserify.js:2801 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2822 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2845 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2869 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2893 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2911 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:4366 =>  * Whitelist these globals for this test run
./node_modules/es6-promise/dist/test/mocha.js:4376 =>  * Run the test and invoke `fn(err)`.
./node_modules/es6-promise/dist/test/mocha.js:4477 =>   , Test = require('./test')
./node_modules/es6-promise/dist/test/mocha.js:4508 =>  *   - `suite`  (suite) test suite execution started
./node_modules/es6-promise/dist/test/mocha.js:4509 =>  *   - `suite end`  (suite) all tests (and sub-suites) have finished
./node_modules/es6-promise/dist/test/mocha.js:4510 =>  *   - `test`  (test) test execution started
./node_modules/es6-promise/dist/test/mocha.js:4511 =>  *   - `test end`  (test) test completed
./node_modules/es6-promise/dist/test/mocha.js:4514 =>  *   - `pass`  (test) test passed
./node_modules/es6-promise/dist/test/mocha.js:4515 =>  *   - `fail`  (test, err) test failed
./node_modules/es6-promise/dist/test/mocha.js:4516 =>  *   - `pending`  (test) test pending
./node_modules/es6-promise/dist/test/mocha.js:4528 =>   this.on('test end', function(test){ self.checkGlobals(test); });
./node_modules/es6-promise/dist/test/mocha.js:4554 =>  * Run tests with full titles matching `re`. Updates runner.total
./node_modules/es6-promise/dist/test/mocha.js:4555 =>  * with number of tests matched.
./node_modules/fs-readline/test/fixtures/afile.txt:1063 => respiration, so that the patient not only has the greatest difficulty in
./node_modules/JSONStream/test/fixtures/all_npm.json:1038 => {"id":"ender-test","key":"ender-test","value":{"rev":"5-f8e90a951e5ad58199e53645067fad0c"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:1702 =>     // but possibly useful for unit testing Routers.
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2728 => 			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2740 => 						rsibling.test( tokens[0].type ) && context.parentNode || context
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2765 => 		rsibling.test( selector )
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:2852 =>  *					after the list has been fired right away with the latest "memorized"
./node_modules/mocha/mocha.js:5575 =>  * Set number of times to retry a failed test.
./node_modules/mocha/mocha.js:5651 =>  * Run `fn(test[, done])` before running tests.
./node_modules/mocha/mocha.js:5681 =>  * Run `fn(test[, done])` after running tests.
./node_modules/mocha/mocha.js:5711 =>  * Run `fn(test[, done])` before each test case.
./node_modules/mocha/mocha.js:5741 =>  * Run `fn(test[, done])` after each test case.
./node_modules/mocha/mocha.js:5771 =>  * Add a test `suite`.
./node_modules/mocha/mocha.js:5790 =>  * Add a `test` to this suite.
./node_modules/mocha/mocha.js:5793 =>  * @param {Test} test
./node_modules/mocha/mocha.js:5796 => Suite.prototype.addTest = function (test) {
./node_modules/mocha/mocha.js:5797 =>   test.parent = this;
./node_modules/mocha/mocha.js:5798 =>   test.timeout(this.timeout());
./node_modules/mocha/mocha.js:5799 =>   test.retries(this.retries());
./node_modules/mocha/mocha.js:5800 =>   test.enableTimeouts(this.enableTimeouts());
./node_modules/mocha/mocha.js:5801 =>   test.slow(this.slow());
./node_modules/mocha/mocha.js:5802 =>   test.ctx = this.ctx;
./node_modules/mocha/mocha.js:5803 =>   this.tests.push(test);
./node_modules/mocha/mocha.js:5804 =>   this.emit('test', test);
./node_modules/mocha/mocha.js:5826 =>  * Return the total number of tests.
./node_modules/mocha/mocha.js:5834 =>   }, 0) + this.tests.length;
./node_modules/mocha/mocha.js:5838 =>  * Iterates through each suite recursively to find all tests. Applies a
./node_modules/mocha/mocha.js:5839 =>  * function in the format `fn(test)`.
./node_modules/mocha/mocha.js:5846 =>   utils.forEach(this.tests, fn);
./node_modules/mocha/mocha.js:5892 =>   this.type = 'test';
./node_modules/mocha/mocha.js:5903 =>   var test = new Test(this.title, this.fn);
./node_modules/mocha/mocha.js:5904 =>   test.timeout(this.timeout());
./node_modules/mocha/mocha.js:5905 =>   test.slow(this.slow());
./node_modules/mocha/mocha.js:5906 =>   test.enableTimeouts(this.enableTimeouts());
./node_modules/mocha/mocha.js:5907 =>   test.retries(this.retries());
./node_modules/mocha/mocha.js:5908 =>   test.currentRetry(this.currentRetry());
./node_modules/mocha/mocha.js:5909 =>   test.globals(this.globals());
./node_modules/mocha/mocha.js:5910 =>   test.parent = this.parent;
./node_modules/mocha/mocha.js:5911 =>   test.file = this.file;
./node_modules/mocha/mocha.js:5912 =>   test.ctx = this.ctx;
./node_modules/mocha/mocha.js:5913 =>   return test;
./node_modules/source-map-support/webpack-test/compiled.js:3876 => 	 * member is O(1), testing for membership is O(1), and finding the index of an
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:1932 =>   node.test = this.parseParenExpression();
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2006 =>   node.test = this.type === _tokentype.types.semi ? null : this.parseExpression();
./node_modules/uglify-js/lib/compress.js:2408 =>                         if (/^==/.test(self.operator)) return self.left.condition.negate(compressor);
./node_modules/uglify-js/lib/compress.js:2409 =>                         if (/^!=/.test(self.operator)) return self.left.condition;
./dist/rdflib.min.js:60 => function N3Parser(e){if(!(this instanceof N3Parser))return new N3Parser(e);this._tripleStack=[],this._graph=null,e=e||{},this._setBase(e.documentIRI);var t="string"==typeof e.format&&e.format.match(/\w*$/)[0].toLowerCase(),r="turtle"===t,a="trig"===t,s=/triple/.test(t),i=/quad/.test(t),n=s||i;(this._supportsNamedGraphs=!r)||(this._readPredicateOrNamedGraph=this._readPredicate),this._supportsQuads=!(r||a||s),n&&(this._base="",this._resolveIRI=function(e){return this._error("Disallowed relative IRI",e),this._callback=noop,this._subject=null}),this._blankNodePrefix="string"!=typeof e.blankNodePrefix?"":"_:"+e.blankNodePrefix.replace(/^_:/,""),this._lexer=e.lexer||new N3Lexer({lineMode:n})}function noop(){}var N3Lexer=require("./N3Lexer"),RDF_PREFIX="http://www.w3.org/1999/02/22-rdf-syntax-ns#",RDF_NIL=RDF_PREFIX+"nil",RDF_FIRST=RDF_PREFIX+"first",RDF_REST=RDF_PREFIX+"rest",absoluteIRI=/^[a-z][a-z0-9+.-]*:/i,schemeAuthority=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,dotSegments=/(?:^|\/)\.\.?(?:$|[\/#?])/,blankNodePrefix=0,blankNodeCount=0;N3Parser._resetBlankNodeIds=function(){blankNodePrefix=blankNodeCount=0},N3Parser.prototype={_setBase:function(e){if(e){if(e.indexOf("#")>=0)throw new Error("Invalid base IRI "+e)}else e=null;(this._base=e)&&(this._basePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(schemeAuthority),this._baseRoot=e[0],this._baseScheme=e[1])},_readInTopContext:function(e){switch(e.type){case"eof":return null!==this._graph?this._error("Unclosed graph",e):(delete this._prefixes._,this._callback(null,null,this._prefixes));case"@prefix":return this._sparqlStyle=!1,this._readPrefix;case"PREFIX":return this._sparqlStyle=!0,this._readPrefix;case"@base":return this._sparqlStyle=!1,this._readBaseIRI;case"BASE":return this._sparqlStyle=!0,this._readBaseIRI;case"{":if(this._supportsNamedGraphs)return this._graph="",this._subject=null,this._readSubject;case"GRAPH":if(this._supportsNamedGraphs)return this._readNamedGraphLabel;default:return this._readSubject(e)}},_readSubject:function(e){switch(this._predicate=null,e.type){case"IRI":null===this._base||absoluteIRI.test(e.value)?this._subject=e.value:this._subject=this._resolveIRI(e);break;case"prefixed":var t=this._prefixes[e.prefix];if(void 0===t)return this._error('Undefined prefix "'+e.prefix+':"',e);this._subject=t+e.value;break;case"[":return this._subject="_:b"+blankNodeCount++,this._tripleStack.push({subject:this._subject,predicate:null,object:null,type:"blank"}),this._readBlankNodeHead;case"(":return this._tripleStack.push({subject:RDF_NIL,predicate:null,object:null,type:"list"}),this._subject=null,this._readListItem;case"}":return this._readPunctuation(e);default:return this._error("Expected subject but got "+e.type,e)}return this._readPredicateOrNamedGraph},_readPredicate:function(e){var t=e.type;switch(t){case"IRI":case"abbreviation":null===this._base||absoluteIRI.test(e.value)?this._predicate=e.value:this._predicate=this._resolveIRI(e);break;case"prefixed":if("_"===e.prefix)return this._error("Disallowed blank node as predicate",e);var r=this._prefixes[e.prefix];if(void 0===r)return this._error('Undefined prefix "'+e.prefix+':"',e);this._predicate=r+e.value;break;case".":case"]":case"}":return null===this._predicate?this._error("Unexpected "+t,e):(this._subject=null,"]"===t?this._readBlankNodeTail(e):this._readPunctuation(e));case";":return this._readPredicate;default:return this._error('Expected predicate to follow "'+this._subject+'"',e)}return this._readObject},_readObject:function(e){switch(e.type){case"IRI":null===this._base||absoluteIRI.test(e.value)?this._object=e.value:this._object=this._resolveIRI(e);break;case"prefixed":var t=this._prefixes[e.prefix];if(void 0===t)return this._error('Undefined prefix "'+e.prefix+':"',e);this._object=t+e.value;break;case"literal":return this._object=e.value,this._readDataTypeOrLang;case"[":var r="_:b"+blankNodeCount++;return this._tripleStack.push({subject:this._subject,predicate:this._predicate,object:r,type:"blank"}),this._subject=r,this._readBlankNodeHead;case"(":return this._tripleStack.push({subject:this._subject,predicate:this._predicate,object:RDF_NIL,type:"list"}),this._subject=null,this._readListItem;default:return this._error('Expected object to follow "'+this._predicate+'"',e)}return this._getTripleEndReader()},_readPredicateOrNamedGraph:function(e){return"{"===e.type?this._readGraph(e):this._readPredicate(e)},_readGraph:function(e){return"{"!==e.type?this._error("Expected graph but got "+e.type,e):(this._graph=this._subject,this._subject=null,this._readSubject)},_readBlankNodeHead:function(e){return"]"===e.type?(this._subject=null,this._readBlankNodeTail(e)):(this._predicate=null,this._readPredicate(e))},_readBlankNodeTail:function(e){if("]"!==e.type)return this._readBlankNodePunctuation(e);null!==this._subject&&this._callback(null,{subject:this._subject,predicate:this._predicate,object:this._object,graph:this._graph||""});var t=this._tripleStack.pop();return this._subject=t.subject,null!==t.object?(this._predicate=t.predicate,this._object=t.object,this._getTripleEndReader()):null!==this._predicate?this._readPredicate:this._readPredicateOrNamedGraph},_readDataTypeOrLang:function(e){switch(e.type){case"type":var t;if(""===e.prefix)t=null===this._base||absoluteIRI.test(e.value)?e.value:this._resolveIRI(e);else{var r=this._prefixes[e.prefix];if(void 0===r)return this._error('Undefined prefix "'+e.prefix+':"',e);t=r+e.value}return this._object+="^^"+t,this._getTripleEndReader();case"langcode":return this._object+="@"+e.value.toLowerCase(),this._getTripleEndReader();default:return this._getTripleEndReader().call(this,e)}},_readListItem:function(e){var t=null,r=null,a=this._subject,s=this._tripleStack,i=s[s.length-1],n=this._readListItem;switch(e.type){case"IRI":t=null===this._base||absoluteIRI.test(e.value)?e.value:this._resolveIRI(e);break;case"prefixed":var l=this._prefixes[e.prefix];if(void 0===l)return this._error('Undefined prefix "'+e.prefix+':"',e);t=l+e.value;break;case"literal":t=e.value,n=this._readDataTypeOrLang;break;case"[":r="_:b"+blankNodeCount++,t="_:b"+blankNodeCount++,s.push({subject:r,predicate:RDF_FIRST,object:t,type:"blank"}),this._subject=t,n=this._readBlankNodeHead;break;case"(":r="_:b"+blankNodeCount++,s.push({subject:r,predicate:RDF_FIRST,object:RDF_NIL,type:"list"}),this._subject=null,n=this._readListItem;break;case")":if(s.pop(),0!==s.length&&"list"===s[s.length-1].type&&this._callback(null,{subject:i.subject,predicate:i.predicate,object:i.object,graph:this._graph||""}),this._subject=i.subject,null===i.predicate){if(n=this._readPredicate,i.subject===RDF_NIL)return n}else if(this._predicate=i.predicate,this._object=i.object,n=this._getTripleEndReader(),i.object===RDF_NIL)return n;r=RDF_NIL;break;default:return this._error('Expected list item instead of "'+e.type+'"',e)}return null===r&&(this._subject=r="_:b"+blankNodeCount++),null===a?i.object===RDF_NIL?i.object=r:i.subject=r:this._callback(null,{subject:a,predicate:RDF_REST,object:r,graph:this._graph||""}),null!==t&&this._callback(null,{subject:r,predicate:RDF_FIRST,object:t,graph:this._graph||""}),n},_readPunctuation:function(e){var t,r=this._subject,a=this._graph;switch(e.type){case"}":if(null===this._graph)return this._error("Unexpected graph closing",e);this._graph=null;case".":this._subject=null,t=this._readInTopContext;break;case";":t=this._readPredicate;break;case",":t=this._readObject;break;case"IRI":if(this._supportsQuads&&null===this._graph){a=null===this._base||absoluteIRI.test(e.value)?e.value:this._resolveIRI(e),r=this._subject,t=this._readQuadPunctuation;break}case"prefixed":if(this._supportsQuads&&null===this._graph){var s=this._prefixes[e.prefix];if(void 0===s)return this._error('Undefined prefix "'+e.prefix+':"',e);a=s+e.value,t=this._readQuadPunctuation;break}default:return this._error('Expected punctuation to follow "'+this._object+'"',e)}return null!==r&&this._callback(null,{subject:r,predicate:this._predicate,object:this._object,graph:a||""}),t},_readBlankNodePunctuation:function(e){var t;switch(e.type){case";":t=this._readPredicate;break;case",":t=this._readObject;break;default:return this._error('Expected punctuation to fo
./test/tc0004/rdfcore/Manifest.rdf:2556 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2557 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2559 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2561 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2562 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2563 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2565 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2566 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2567 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2569 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2572 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:2574 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-not-id-and-resource-attr" />
./test/tc0004/rdfcore/Manifest.rdf:2575 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2576 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2577 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2578 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2580 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2582 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2583 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2584 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2586 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2587 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2588 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2590 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2593 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:2595 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-not-id-and-resource-attr" />
./test/tc0004/rdfcore/Manifest.rdf:2596 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2597 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2598 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2599 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2601 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2603 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2604 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2605 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2607 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2608 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2609 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2611 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2614 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:2616 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-not-id-and-resource-attr" />
./test/tc0004/rdfcore/Manifest.rdf:2617 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2618 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:2619 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2620 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2622 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2624 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2625 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2626 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2628 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2629 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-not-id-and-resource-attr/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2630 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2632 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2636 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-para196/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:2638 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-para196" />
./test/tc0004/rdfcore/Manifest.rdf:2639 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2640 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0095.html" />
./test/tc0004/rdfcore/Manifest.rdf:2641 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2642 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2644 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2646 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2647 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-para196/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2648 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2650 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2651 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-para196/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:2652 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2654 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2658 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:2660 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2661 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2662 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2664 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2666 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2667 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2668 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2670 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2673 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:2675 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2676 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2677 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2679 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2681 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2682 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2683 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2685 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2688 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/Manifest.rdf#error003">
./test/tc0004/rdfcore/Manifest.rdf:2690 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2691 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:2692 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2694 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:2696 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2697 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-parseType/error003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2698 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2700 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2704 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:2706 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2707 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2709 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2712 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2714 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2715 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2716 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2718 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2720 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:2722 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2723 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2725 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2728 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2730 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2731 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2732 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2734 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2736 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error003">
./test/tc0004/rdfcore/Manifest.rdf:2738 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2739 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2741 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2744 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2746 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2747 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2748 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2750 => </test:NegativeParserTest>
./node_modules/acorn/dist/acorn.js:3510 =>     if (lineBreak.test(ch)) this.raise(start, "Unterminated regular expression");
./node_modules/acorn/dist/acorn.js:3526 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
./node_modules/acorn/dist/acorn.js:3614 =>   if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number");else val = parseInt(str, 8);
./node_modules/acorn/dist/acorn_csp.js:3481 =>     if (lineBreak.test(ch)) this.raise(start, "Unterminated regular expression");
./node_modules/acorn/dist/acorn_csp.js:3497 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
./node_modules/acorn/dist/acorn_csp.js:3585 =>   if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number");else val = parseInt(str, 8);
./node_modules/core-js/client/core.js:3869 => 	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
./node_modules/core-js/client/core.js:3911 => 	        if(lastLength || !separatorCopy.test(''))output.push('');
./node_modules/core-js/client/core.js:3960 => 	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/core-js/client/shim.js:3897 => 	        if(lastLength || !separatorCopy.test(''))output.push('');
./node_modules/core-js/client/shim.js:3946 => 	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2173 =>     if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2304 =>     return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2429 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/detective/node_modules/acorn/dist/acorn.js:2179 =>       if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&
./node_modules/es6-promise/dist/test/browserify.js:2932 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2955 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2973 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:2994 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3017 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3041 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3065 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3083 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3104 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3127 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:4572 =>  * Returns the number of tests matching the grep search for the
./node_modules/es6-promise/dist/test/mocha.js:4584 =>   suite.eachTest(function(test){
./node_modules/es6-promise/dist/test/mocha.js:4585 =>     var match = self._grep.test(test.fullTitle());
./node_modules/es6-promise/dist/test/mocha.js:4633 => Runner.prototype.checkGlobals = function(test){
./node_modules/es6-promise/dist/test/mocha.js:4640 =>   if (test) {
./node_modules/es6-promise/dist/test/mocha.js:4641 =>     ok = ok.concat(test._allowedGlobals || []);
./node_modules/es6-promise/dist/test/mocha.js:4651 =>     this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));
./node_modules/es6-promise/dist/test/mocha.js:4653 =>     this.fail(test, new Error('global leak detected: ' + leaks[0]));
./node_modules/es6-promise/dist/test/mocha.js:4658 =>  * Fail the given `test`.
./node_modules/es6-promise/dist/test/mocha.js:4660 =>  * @param {Test} test
./node_modules/es6-promise/dist/test/mocha.js:4665 => Runner.prototype.fail = function(test, err){
./node_modules/es6-promise/dist/test/mocha.js:4667 =>   test.state = 'failed';
./node_modules/es6-promise/dist/test/mocha.js:4673 =>   this.emit('fail', test, err);
./node_modules/es6-promise/dist/test/mocha.js:4681 =>  * - Failed `before` hook skips all tests in a suite and subsuites,
./node_modules/es6-promise/dist/test/mocha.js:4683 =>  * - Failed `before each` hook skips remaining tests in a
./node_modules/es6-promise/dist/test/mocha.js:4688 =>  * - Failed `after each` hook skips remaining tests in a
./node_modules/es6-promise/dist/test/mocha.js:4724 =>     hook.ctx.currentTest = self.test;
./node_modules/es6-promise/dist/test/mocha.js:4734 =>       var testError = hook.error();
./node_modules/es6-promise/dist/test/mocha.js:4735 =>       if (testError) self.fail(self.test, testError);
./node_modules/es6-promise/dist/test/mocha.js:4831 =>  * Run the current test and callback `fn(err)`.
./node_modules/es6-promise/dist/test/mocha.js:4838 =>   var test = this.test
./node_modules/es6-promise/dist/test/mocha.js:4841 =>   if (this.asyncOnly) test.asyncOnly = true;
./node_modules/es6-promise/dist/test/mocha.js:4844 =>     test.on('error', function(err){
./node_modules/es6-promise/dist/test/mocha.js:4845 =>       self.fail(test, err);
./node_modules/es6-promise/dist/test/mocha.js:4847 =>     test.run(fn);
./node_modules/es6-promise/dist/test/mocha.js:4854 =>  * Run tests in the given `suite` and invoke
./node_modules/es6-promise/dist/test/mocha.js:4864 =>     , tests = suite.tests.slice()
./node_modules/es6-promise/dist/test/mocha.js:4865 =>     , test;
./node_modules/es6-promise/dist/test/mocha.js:4900 =>     // next test
./node_modules/es6-promise/dist/test/mocha.js:4901 =>     test = tests.shift();
./node_modules/es6-promise/dist/test/mocha.js:4904 =>     if (!test) return fn();
./node_modules/es6-promise/dist/test/mocha.js:4907 =>     var match = self._grep.test(test.fullTitle());
./node_modules/es6-promise/dist/test/mocha.js:4912 =>     if (test.pending) {
./node_modules/es6-promise/dist/test/mocha.js:4913 =>       self.emit('pending', test);
./node_modules/es6-promise/dist/test/mocha.js:4914 =>       self.emit('test end', test);
./node_modules/es6-promise/dist/test/mocha.js:4918 =>     // execute test and hook(s)
./node_modules/es6-promise/dist/test/mocha.js:4919 =>     self.emit('test', self.test = test);
./node_modules/es6-promise/dist/test/mocha.js:4924 =>       self.currentRunnable = self.test;
./node_modules/es6-promise/dist/test/mocha.js:4926 =>         test = self.test;
./node_modules/es6-promise/dist/test/mocha.js:4929 =>           self.fail(test, err);
./node_modules/es6-promise/dist/test/mocha.js:4930 =>           self.emit('test end', test);
./node_modules/es6-promise/dist/test/mocha.js:4934 =>         test.state = 'passed';
./node_modules/es6-promise/dist/test/mocha.js:4935 =>         self.emit('pass', test);
./node_modules/es6-promise/dist/test/mocha.js:4936 =>         self.emit('test end', test);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:1727 =>     // Add a route to be tested when the fragment changes. Routes added later
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:1757 =>         if (handler.route.test(fragment)) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:3226 => 	// Run tests that need a body at doc ready
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:3247 => 		// Workaround failing boxSizing test due to offsetWidth returning wrong value
./node_modules/pako/dist/pako.js:3638 =>   if (state.wrap) {       /* to support ill-conceived Java test suite */
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2181 =>         if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2271 =>       if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, "The keyword '" + node.local.name + "' is reserved");
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2330 =>   if (prevType === _tokentype.types._return) return _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.start));
./node_modules/uglify-js/lib/compress.js:2624 =>             // testing against !self.scope.uses_with first is an optimization
./dist/rdflib.min.js:68 => function addN3Util(t,e){for(var r in N3Util)e?t.prototype[r]=applyToThis(N3Util[r]):t[r]=N3Util[r];return t}function applyToThis(t){return function(e){return t(this,e)}}var Xsd="http://www.w3.org/2001/XMLSchema#",XsdString=Xsd+"string",XsdInteger=Xsd+"integer",XsdDecimal=Xsd+"decimal",XsdBoolean=Xsd+"boolean",RdfLangString="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",N3Util={isIRI:function(t){if(!t)return t;var e=t[0];return'"'!==e&&"_"!==e},isLiteral:function(t){return t&&'"'===t[0]},isBlank:function(t){return t&&"_:"===t.substr(0,2)},getLiteralValue:function(t){var e=/^"([^]*)"/.exec(t);if(!e)throw new Error(t+" is not a literal");return e[1]},getLiteralType:function(t){var e=/^"[^]*"(?:\^\^([^"]+)|(@)[^@"]+)?$/.exec(t);if(!e)throw new Error(t+" is not a literal");return e[1]||(e[2]?RdfLangString:XsdString)},getLiteralLanguage:function(t){var e=/^"[^]*"(?:@([^@"]+)|\^\^[^"]+)?$/.exec(t);if(!e)throw new Error(t+" is not a literal");return e[1]?e[1].toLowerCase():""},isPrefixedName:function(t){return t&&/^[^:\/"']*:[^:\/"']+$/.test(t)},expandPrefixedName:function(t,e){var r,n,i,a=/(?:^|"\^\^)([^:\/#"'\^_]*):[^\/]*$/.exec(t);return a&&(r=a[1],n=e[r],i=a.index),void 0===n?t:0===i?n+t.substr(r.length+1):t.substr(0,i+3)+n+t.substr(i+r.length+4)},createIRI:function(t){return t&&'"'===t[0]?N3Util.getLiteralValue(t):t},createLiteral:function(t,e){if(!e)switch(typeof t){case"boolean":e=XsdBoolean;break;case"number":if(isFinite(t)){e=t%1===0?XsdInteger:XsdDecimal;break}default:return'"'+t+'"'}return'"'+t+(/^[a-z]+(-[a-z0-9]+)*$/i.test(e)?'"@'+e.toLowerCase():'"^^'+e)}};module.exports=addN3Util(addN3Util);
./test/tc0004/rdfcore/Manifest.rdf:2752 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error004">
./test/tc0004/rdfcore/Manifest.rdf:2754 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2755 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2757 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2760 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2762 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2763 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2764 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2766 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2768 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error005">
./test/tc0004/rdfcore/Manifest.rdf:2770 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2771 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2773 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2776 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2778 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2779 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2780 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2782 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2784 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error006">
./test/tc0004/rdfcore/Manifest.rdf:2786 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2787 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2789 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2792 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2794 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2795 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2796 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2798 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2800 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/Manifest.rdf#error007">
./test/tc0004/rdfcore/Manifest.rdf:2802 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2803 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:2805 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:2808 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:2810 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2811 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-id/error007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2812 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2814 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2816 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-001">
./test/tc0004/rdfcore/Manifest.rdf:2818 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2819 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2820 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2822 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2823 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2824 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2826 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2829 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-002">
./test/tc0004/rdfcore/Manifest.rdf:2831 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2832 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2833 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2835 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2836 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2837 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2839 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2842 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-003">
./test/tc0004/rdfcore/Manifest.rdf:2844 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2845 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2846 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2848 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2849 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2850 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2852 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2855 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-004">
./test/tc0004/rdfcore/Manifest.rdf:2857 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2858 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2859 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2861 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2862 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2863 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2865 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2868 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-005">
./test/tc0004/rdfcore/Manifest.rdf:2870 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2871 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2872 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2874 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2875 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2876 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2878 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2881 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-006">
./test/tc0004/rdfcore/Manifest.rdf:2883 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2884 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2885 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2887 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2888 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2889 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2891 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2894 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-007">
./test/tc0004/rdfcore/Manifest.rdf:2896 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2897 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2898 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2900 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2901 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2902 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2904 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2907 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-008">
./test/tc0004/rdfcore/Manifest.rdf:2909 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2910 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2911 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2913 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2914 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2915 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2917 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2920 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-009">
./test/tc0004/rdfcore/Manifest.rdf:2922 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2923 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2924 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2926 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2927 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2928 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2930 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2933 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-010">
./test/tc0004/rdfcore/Manifest.rdf:2935 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2936 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2937 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2939 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2940 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2941 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2943 => </test:NegativeParserTest>
./node_modules/chai/chai.js:5405 =>  * Chai - test utility
./node_modules/chai/chai.js:5417 =>  * # test(object, expression)
./node_modules/chai/chai.js:5424 =>  * @name test
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2552 =>         if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2638 =>         lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/detective/node_modules/acorn/dist/acorn.js:2310 =>       return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
./node_modules/detective/node_modules/acorn/dist/acorn.js:2435 =>   // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/es6-promise/dist/test/browserify.js:3152 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3200 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3223 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3246 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3264 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3283 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3302 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3321 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/mocha.js:5029 =>   // recover from test
./node_modules/es6-promise/dist/test/mocha.js:5030 =>   if ('test' == runnable.type) {
./node_modules/es6-promise/dist/test/mocha.js:5031 =>     this.emit('test end', runnable);
./node_modules/es6-promise/dist/test/mocha.js:5102 =>     if (/^d+/.test(key)) return false;
./node_modules/es6-promise/dist/test/mocha.js:5107 =>     if (global.navigator && /^getInterface/.test(key)) return false;
./node_modules/es6-promise/dist/test/mocha.js:5111 =>     if (global.navigator && /^\d+/.test(key)) return false;
./node_modules/es6-promise/dist/test/mocha.js:5114 =>     if (/^mocha-/.test(key)) return false;
./node_modules/es6-promise/dist/test/mocha.js:5174 =>  * and more flexible meta-testing.
./node_modules/es6-promise/dist/test/mocha.js:5206 =>   this.tests = [];
./node_modules/es6-promise/dist/test/mocha.js:5311 =>  * Run `fn(test[, done])` before running tests.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:2061 => 					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
./node_modules/mocha/mocha.js:6351 =>  * @param {*} value The value to test.
./node_modules/mocha/mocha.js:6513 =>  * @param {*} value The value to test.
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2462 => // pedantic tests (`"use strict"; 010;` should fail).
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2575 =>         if (ch > 8 && ch < 14 || ch >= 5760 && _whitespace.nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/uglify-js/tools/domprops.json:5139 =>         "test",
./dist/rdflib.min.js:70 => function N3Writer(e,t){if(!(this instanceof N3Writer))return new N3Writer(e,t);if(e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{var r="";this._outputStream={write:function(e,t,i){r+=e,i&&i()},end:function(e){e&&e(null,r)}},this._endStream=!0}this._subject=null,/triple|quad/i.test(t.format)?this._writeTriple=this._writeTripleLine:(this._graph="",this._prefixIRIs=Object.create(null),t.prefixes&&this.addPrefixes(t.prefixes))}function characterReplacer(e){var t=escapeReplacements[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}var N3LiteralMatcher=/^"([^]*)"(?:\^\^(.+)|@([\-a-z]+))?$/i,RDF_PREFIX="http://www.w3.org/1999/02/22-rdf-syntax-ns#",RDF_TYPE=RDF_PREFIX+"type",escape=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,escapeAll=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,escapeReplacements={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};N3Writer.prototype={_write:function(e,t){this._outputStream.write(e,"utf8",t)},_writeTriple:function(e,t,r,i,n){try{this._graph!==i&&(this._write((null===this._subject?"":this._graph?"\n}\n":".\n")+(i?this._encodeIriOrBlankNode(i)+" {\n":"")),this._subject=null,this._graph="["!==i[0]?i:"]"),this._subject===e?this._predicate===t?this._write(", "+this._encodeObject(r),n):this._write(";\n    "+this._encodePredicate(this._predicate=t)+" "+this._encodeObject(r),n):this._write((null===this._subject?"":".\n")+this._encodeSubject(this._subject=e)+" "+this._encodePredicate(this._predicate=t)+" "+this._encodeObject(r),n)}catch(e){n&&n(e)}},_writeTripleLine:function(e,t,r,i,n){delete this._prefixMatch;try{this._write(this._encodeIriOrBlankNode(e)+" "+this._encodeIriOrBlankNode(t)+" "+this._encodeObject(r)+(i?" "+this._encodeIriOrBlankNode(i)+".\n":".\n"),n)}catch(e){n&&n(e)}},_encodeIriOrBlankNode:function(e){var t=e[0];if("["===t||"("===t||"_"===t&&":"===e[1])return e;escape.test(e)&&(e=e.replace(escapeAll,characterReplacer));var r=this._prefixRegex.exec(e);return r?r[1]?this._prefixIRIs[r[1]]+r[2]:e:"<"+e+">"},_encodeLiteral:function(e,t,r){return escape.test(e)&&(e=e.replace(escapeAll,characterReplacer)),r?'"'+e+'"@'+r:t?'"'+e+'"^^'+this._encodeIriOrBlankNode(t):'"'+e+'"'},_encodeSubject:function(e){if('"'===e[0])throw new Error("A literal as subject is not allowed: "+e);return"["===e[0]&&(this._subject="]"),this._encodeIriOrBlankNode(e)},_encodePredicate:function(e){if('"'===e[0])throw new Error("A literal as predicate is not allowed: "+e);return e===RDF_TYPE?"a":this._encodeIriOrBlankNode(e)},_encodeObject:function(e){if('"'!==e[0])return this._encodeIriOrBlankNode(e);var t=N3LiteralMatcher.exec(e);if(!t)throw new Error("Invalid literal: "+e);return this._encodeLiteral(t[1],t[2],t[3])},_blockedWrite:function(){throw new Error("Cannot write because the writer has been closed.")},addTriple:function(e,t,r,i,n){void 0===r?this._writeTriple(e.subject,e.predicate,e.object,e.graph||"",t):"string"!=typeof i?this._writeTriple(e,t,r,"",i):this._writeTriple(e,t,r,i,n)},addTriples:function(e){for(var t=0;t<e.length;t++)this.addTriple(e[t])},addPrefix:function(e,t,r){var i={};i[e]=t,this.addPrefixes(i,r)},addPrefixes:function(e,t){var r=this._prefixIRIs,i=!1;for(var n in e){var c=e[n];/[#\/]$/.test(c)&&r[c]!==(n+=":")&&(i=!0,r[c]=n,null!==this._subject&&(this._write(this._graph?"\n}\n":".\n"),this._subject=null,this._graph=""),this._write("@prefix "+n+" <"+c+">.\n"))}if(i){var s="",a="";for(var h in r)s+=s?"|"+h:h,a+=(a?"|":"")+r[h];s=s.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&"),this._prefixRegex=new RegExp("^(?:"+a+")[^/]*$|^("+s+")([a-zA-Z][\\-_a-zA-Z0-9]*)$")}this._write(i?"\n":"",t)},blank:function(e,t){var r,i,n=e;switch(void 0===e?n=[]:"string"==typeof e?n=[{predicate:e,object:t}]:"length"in e||(n=[e]),i=n.length){case 0:return"[]";case 1:if(r=n[0],"["!==r.object[0])return"[ "+this._encodePredicate(r.predicate)+" "+this._encodeObject(r.object)+" ]";default:for(var c="[",s=0;s<i;s++)r=n[s],r.predicate===e?c+=", "+this._encodeObject(r.object):(c+=(s?";\n  ":"\n  ")+this._encodePredicate(r.predicate)+" "+this._encodeObject(r.object),e=r.predicate);return c+"\n]"}},list:function(e){for(var t=e&&e.length||0,r=new Array(t),i=0;i<t;i++)r[i]=this._encodeObject(e[i]);return"("+r.join(" ")+")"},_prefixRegex:/$0^/,end:function(e){null!==this._subject&&(this._write(this._graph?"\n}\n":".\n"),this._subject=null),this._write=this._blockedWrite;var t=e&&function(r,i){t=null,e(r,i)};if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}},module.exports=N3Writer;
./test/tc0004/rdfcore/Manifest.rdf:2946 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-011">
./test/tc0004/rdfcore/Manifest.rdf:2948 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2949 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2950 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2952 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2953 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2954 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2956 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2959 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-012">
./test/tc0004/rdfcore/Manifest.rdf:2961 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2962 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2963 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2965 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2966 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2967 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2969 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2972 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-013">
./test/tc0004/rdfcore/Manifest.rdf:2974 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2975 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2976 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2978 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2979 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-013.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2980 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2982 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2985 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-014">
./test/tc0004/rdfcore/Manifest.rdf:2987 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:2988 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:2989 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:2991 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2992 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-014.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:2993 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:2995 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:2998 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-015">
./test/tc0004/rdfcore/Manifest.rdf:3000 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3001 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3002 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3004 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3005 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-015.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3006 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3008 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3011 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-016">
./test/tc0004/rdfcore/Manifest.rdf:3013 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3014 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3015 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3017 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3018 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-016.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3019 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3021 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3024 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-017">
./test/tc0004/rdfcore/Manifest.rdf:3026 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3027 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3028 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3030 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3031 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-017.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3032 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3034 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3037 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-018">
./test/tc0004/rdfcore/Manifest.rdf:3039 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3040 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3041 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3043 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3044 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-018.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3045 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3047 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3050 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-019">
./test/tc0004/rdfcore/Manifest.rdf:3052 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3053 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3054 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3056 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3057 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-019.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3058 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3060 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3063 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#error-020">
./test/tc0004/rdfcore/Manifest.rdf:3065 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3066 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3067 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3069 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3070 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/error-020.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3071 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3073 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3076 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-001">
./test/tc0004/rdfcore/Manifest.rdf:3078 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3079 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3080 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3082 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3083 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3084 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3086 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3087 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3088 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3090 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3093 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-002">
./test/tc0004/rdfcore/Manifest.rdf:3095 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3096 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3097 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3099 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3100 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3101 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3103 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3104 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3105 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3107 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3110 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-003">
./test/tc0004/rdfcore/Manifest.rdf:3112 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3113 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3114 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3116 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3117 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3118 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3120 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3121 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3122 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3124 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3127 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-004">
./dist/rdflib.js:5901 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/babel-polyfill/dist/polyfill.js:3807 =>   , test    = {};
./node_modules/babel-polyfill/dist/polyfill.js:3808 => test[_dereq_(117)('toStringTag')] = 'z';
./node_modules/babel-polyfill/dist/polyfill.js:3809 => if(test + '' != '[object z]'){
./node_modules/babel-polyfill/dist/polyfill.js:3852 =>     // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
./node_modules/chai/chai.js:5659 =>  * Strict (egal) equality test. Ensures that NaN always
./node_modules/chai/chai.js:5718 =>  * prior to test to ensure no bad behavior.
./node_modules/chai/chai.js:5888 =>  * the type of object being tested.
./node_modules/chai/chai.js:5919 =>   this.tests = {};
./node_modules/chai/chai.js:5933 =>  * @param {Mixed} object to test
./node_modules/chai/chai.js:5940 =>  * #### .define (type, test)
./node_modules/chai/chai.js:5942 =>  * Add a test to for the `.test()` assertion.
./node_modules/chai/chai.js:5962 =>  * @param {RegExp|Function} test
./node_modules/chai/chai.js:5966 => Library.prototype.define = function (type, test) {
./node_modules/chai/chai.js:5967 =>   if (arguments.length === 1) return this.tests[type];
./node_modules/chai/chai.js:5968 =>   this.tests[type] = test;
./node_modules/chai/chai.js:5973 =>  * #### .test (obj, test)
./node_modules/chai/chai.js:5977 =>  * use the user defined custom tests.
./node_modules/chai/chai.js:5980 =>  * assert(lib.test('1', 'int'));
./node_modules/chai/chai.js:5981 =>  * assert(lib.test('yes', 'bln'));
./node_modules/chai/chai.js:5990 => Library.prototype.test = function (obj, type) {
./node_modules/chai/chai.js:5992 =>   var test = this.tests[type];
./node_modules/chai/chai.js:5994 =>   if (test && 'regexp' === getType(test)) {
./node_modules/chai/chai.js:5995 =>     return test.test(obj);
./node_modules/chai/chai.js:5996 =>   } else if (test && 'function' === getType(test)) {
./node_modules/chai/chai.js:5997 =>     return test(obj);
./node_modules/chai/chai.js:5999 =>     throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2782 =>     if (lineBreak.test(ch)) this$1.raise(start, "Unterminated regular expression")
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2800 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:2890 =>   else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
./node_modules/detective/node_modules/acorn/dist/acorn.js:2558 =>           if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
./node_modules/detective/node_modules/acorn/dist/acorn.js:2644 =>           lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/detective/node_modules/acorn/dist/acorn.js:2788 =>       if (lineBreak.test(ch)) this$1.raise(start, "Unterminated regular expression")
./node_modules/es6-promise/dist/test/browserify.js:3341 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3361 =>                     testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3373 =>         function testFulfillViaNonFunction(then, stringRepresentation) {
./node_modules/es6-promise/dist/test/browserify.js:3385 =>                 testPromiseResolution(xFactory, function (promise, done) {
./node_modules/es6-promise/dist/test/browserify.js:3394 =>         testFulfillViaNonFunction(5, "`5`");
./node_modules/es6-promise/dist/test/browserify.js:3395 =>         testFulfillViaNonFunction({}, "an object");
./node_modules/es6-promise/dist/test/browserify.js:3396 =>         testFulfillViaNonFunction([function () { }], "an array containing a function");
./node_modules/es6-promise/dist/test/browserify.js:3397 =>         testFulfillViaNonFunction(/a-b/i, "a regular expression");
./node_modules/es6-promise/dist/test/browserify.js:3398 =>         testFulfillViaNonFunction(Object.create(Function.prototype), "an object inheriting from `Function.prototype`");
./node_modules/es6-promise/dist/test/browserify.js:3407 => var testFulfilled = require("./helpers/testThreeCases").testFulfilled;
./node_modules/es6-promise/dist/test/browserify.js:3408 => var testRejected = require("./helpers/testThreeCases").testRejected;
./node_modules/es6-promise/dist/test/browserify.js:3410 => var dummy = { dummy: "dummy" }; // we fulfill or reject with this when we don't intend to test against it
./node_modules/es6-promise/dist/test/browserify.js:3413 =>     function testValue(expectedValue, stringRepresentation, beforeEachHook, afterEachHook) {
./node_modules/es6-promise/dist/test/browserify.js:3422 =>             testFulfilled(dummy, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:3432 =>             testRejected(dummy, function (promise1, done) {
./node_modules/es6-promise/dist/test/browserify.js:3445 =>     testValue(undefined, "`undefined`");
./node_modules/es6-promise/dist/test/browserify.js:3446 =>     testValue(null, "`null`");
./node_modules/es6-promise/dist/test/browserify.js:3447 =>     testValue(false, "`false`");
./node_modules/es6-promise/dist/test/browserify.js:3448 =>     testValue(true, "`true`");
./node_modules/es6-promise/dist/test/browserify.js:3449 =>     testValue(0, "`0`");
./node_modules/es6-promise/dist/test/browserify.js:3451 =>     testValue(
./node_modules/es6-promise/dist/test/browserify.js:3462 =>     testValue(
./node_modules/es6-promise/dist/test/browserify.js:3474 => },{"./helpers/testThreeCases":22,"assert":2}],21:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:3543 => exports.testFulfilled = function (value, test) {
./node_modules/es6-promise/dist/test/browserify.js:3545 =>         test(resolved(value), done);
./node_modules/es6-promise/dist/test/browserify.js:3550 =>         test(d.promise, done);
./node_modules/es6-promise/dist/test/browserify.js:3556 =>         test(d.promise, done);
./node_modules/es6-promise/dist/test/browserify.js:3563 => exports.testRejected = function (reason, test) {
./node_modules/es6-promise/dist/test/browserify.js:3565 =>         test(rejected(reason), done);
./node_modules/es6-promise/dist/test/browserify.js:3570 =>         test(d.promise, done);
./node_modules/es6-promise/dist/test/browserify.js:3576 =>         test(d.promise, done);
./node_modules/es6-promise/dist/test/mocha.js:5338 =>  * Run `fn(test[, done])` after running tests.
./node_modules/es6-promise/dist/test/mocha.js:5365 =>  * Run `fn(test[, done])` before each test case.
./node_modules/es6-promise/dist/test/mocha.js:5392 =>  * Run `fn(test[, done])` after each test case.
./node_modules/es6-promise/dist/test/mocha.js:5419 =>  * Add a test `suite`.
./node_modules/es6-promise/dist/test/mocha.js:5438 =>  * Add a `test` to this suite.
./node_modules/es6-promise/dist/test/mocha.js:5440 =>  * @param {Test} test
./node_modules/es6-promise/dist/test/mocha.js:5445 => Suite.prototype.addTest = function(test){
./node_modules/es6-promise/dist/test/mocha.js:5446 =>   test.parent = this;
./node_modules/es6-promise/dist/test/mocha.js:5447 =>   test.timeout(this.timeout());
./node_modules/es6-promise/dist/test/mocha.js:5448 =>   test.enableTimeouts(this.enableTimeouts());
./node_modules/es6-promise/dist/test/mocha.js:5449 =>   test.slow(this.slow());
./node_modules/es6-promise/dist/test/mocha.js:5450 =>   test.ctx = this.ctx;
./node_modules/es6-promise/dist/test/mocha.js:5451 =>   this.tests.push(test);
./node_modules/es6-promise/dist/test/mocha.js:5452 =>   this.emit('test', test);
./node_modules/es6-promise/dist/test/mocha.js:5473 =>  * Return the total number of tests.
./node_modules/es6-promise/dist/test/mocha.js:5482 =>   }, 0) + this.tests.length;
./node_modules/es6-promise/dist/test/mocha.js:5487 =>  * all tests. Applies a function in the format
./node_modules/es6-promise/dist/test/mocha.js:5488 =>  * `fn(test)`.
./node_modules/es6-promise/dist/test/mocha.js:5496 =>   utils.forEach(this.tests, fn);
./node_modules/es6-promise/dist/test/mocha.js:5505 => require.register("test.js", function(module, exports, require){
./node_modules/es6-promise/dist/test/mocha.js:5530 =>   this.type = 'test';
./node_modules/es6-promise/dist/test/mocha.js:5543 => }); // module: test.js
./node_modules/fs-readline/test/fixtures/afile.txt:1557 => greatest efforts of us; and so, led astray by pride, losing sight of
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:2343 => 	// See test/unit/core.js for details concerning isFunction.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:2448 => 		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:2488 => 		if ( data && core_rnotwhite.test( data ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:3616 => 					rbrace.test( data ) ? JSON.parse( data ) :
./node_modules/mocha/mocha.js:6653 =>     if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {
./node_modules/mocha/mocha.js:6733 =>       if (/\(?.+:\d+:\d+\)?$/.test(line)) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2658 =>     if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 && _whitespace.lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2829 =>     if (_whitespace.lineBreak.test(ch)) this.raise(start, "Unterminated regular expression");
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2845 =>     if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
./dist/rdflib.min.js:80 => !function(e){function o(e){throw new RangeError(T[e])}function n(e,o){for(var n=e.length,r=[];n--;)r[n]=o(e[n]);return r}function r(e,o){var r=e.split("@"),t="";r.length>1&&(t=r[0]+"@",e=r[1]),e=e.replace(S,".");var u=e.split("."),i=n(u,o).join(".");return t+i}function t(e){for(var o,n,r=[],t=0,u=e.length;t<u;)o=e.charCodeAt(t++),o>=55296&&o<=56319&&t<u?(n=e.charCodeAt(t++),56320==(64512&n)?r.push(((1023&o)<<10)+(1023&n)+65536):(r.push(o),t--)):r.push(o);return r}function u(e){return n(e,function(e){var o="";return e>65535&&(e-=65536,o+=P(e>>>10&1023|55296),e=56320|1023&e),o+=P(e)}).join("")}function i(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:b}function f(e,o){return e+22+75*(e<26)-((0!=o)<<5)}function c(e,o,n){var r=0;for(e=n?M(e/j):e>>1,e+=M(e/o);e>L*C>>1;r+=b)e=M(e/L);return M(r+(L+1)*e/(e+m))}function l(e){var n,r,t,f,l,s,d,a,p,h,v=[],g=e.length,w=0,m=I,j=A;for(r=e.lastIndexOf(E),r<0&&(r=0),t=0;t<r;++t)e.charCodeAt(t)>=128&&o("not-basic"),v.push(e.charCodeAt(t));for(f=r>0?r+1:0;f<g;){for(l=w,s=1,d=b;f>=g&&o("invalid-input"),a=i(e.charCodeAt(f++)),(a>=b||a>M((x-w)/s))&&o("overflow"),w+=a*s,p=d<=j?y:d>=j+C?C:d-j,!(a<p);d+=b)h=b-p,s>M(x/h)&&o("overflow"),s*=h;n=v.length+1,j=c(w-l,n,0==l),M(w/n)>x-m&&o("overflow"),m+=M(w/n),w%=n,v.splice(w++,0,m)}return u(v)}function s(e){var n,r,u,i,l,s,d,a,p,h,v,g,w,m,j,F=[];for(e=t(e),g=e.length,n=I,r=0,l=A,s=0;s<g;++s)v=e[s],v<128&&F.push(P(v));for(u=i=F.length,i&&F.push(E);u<g;){for(d=x,s=0;s<g;++s)v=e[s],v>=n&&v<d&&(d=v);for(w=u+1,d-n>M((x-r)/w)&&o("overflow"),r+=(d-n)*w,n=d,s=0;s<g;++s)if(v=e[s],v<n&&++r>x&&o("overflow"),v==n){for(a=r,p=b;h=p<=l?y:p>=l+C?C:p-l,!(a<h);p+=b)j=a-h,m=b-h,F.push(P(f(h+j%m,0))),a=M(j/m);F.push(P(f(a,0))),l=c(r,w,u==i),r=0,++u}++r,++n}return F.join("")}function d(e){return r(e,function(e){return F.test(e)?l(e.slice(4).toLowerCase()):e})}function a(e){return r(e,function(e){return O.test(e)?"xn--"+s(e):e})}var p="object"==typeof exports&&exports&&!exports.nodeType&&exports,h="object"==typeof module&&module&&!module.nodeType&&module,v="object"==typeof global&&global;v.global!==v&&v.window!==v&&v.self!==v||(e=v);var g,w,x=2147483647,b=36,y=1,C=26,m=38,j=700,A=72,I=128,E="-",F=/^xn--/,O=/[^\x20-\x7E]/,S=/[\x2E\u3002\uFF0E\uFF61]/g,T={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},L=b-y,M=Math.floor,P=String.fromCharCode;if(g={version:"1.4.1",ucs2:{decode:t,encode:u},decode:l,encode:s,toASCII:a,toUnicode:d},"function"==typeof define&&"object"==typeof define.amd&&define.amd)define("punycode",function(){return g});else if(p&&h)if(module.exports==p)h.exports=g;else for(w in g)g.hasOwnProperty(w)&&(p[w]=g[w]);else e.punycode=g}(this);
./test/tc0004/rdfcore/Manifest.rdf:3129 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3130 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3131 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3133 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3134 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3135 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3137 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3138 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3139 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3141 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3144 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-005">
./test/tc0004/rdfcore/Manifest.rdf:3146 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3147 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3148 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3150 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3151 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3152 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3154 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3155 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3156 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3158 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3161 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-006">
./test/tc0004/rdfcore/Manifest.rdf:3163 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3164 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3165 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3167 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3168 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3169 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3171 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3172 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3173 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3175 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3178 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-007">
./test/tc0004/rdfcore/Manifest.rdf:3180 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3181 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3182 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3184 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3185 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3186 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3188 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3189 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-007.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3190 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3192 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3195 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-008">
./test/tc0004/rdfcore/Manifest.rdf:3197 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3198 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3199 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3201 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3202 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3203 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3205 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3206 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3207 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3209 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3212 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-009">
./test/tc0004/rdfcore/Manifest.rdf:3214 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3215 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3216 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3218 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3219 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3220 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3222 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3223 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-009.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3224 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3226 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3229 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-010">
./test/tc0004/rdfcore/Manifest.rdf:3231 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3232 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3233 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3235 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3236 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3237 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3239 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3240 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-010.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3241 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3243 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3246 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-011">
./test/tc0004/rdfcore/Manifest.rdf:3248 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3249 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3250 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3252 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3253 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3254 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3256 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3257 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-011.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3258 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3260 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3263 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-012">
./test/tc0004/rdfcore/Manifest.rdf:3265 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3266 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3267 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3269 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3270 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3271 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3273 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3274 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-012.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3275 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3277 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3280 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-013">
./test/tc0004/rdfcore/Manifest.rdf:3282 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3283 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3284 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3286 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3287 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-013.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3288 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3290 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3291 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-013.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3292 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3294 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3297 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-014">
./test/tc0004/rdfcore/Manifest.rdf:3299 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3300 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3301 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3303 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3304 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-014.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3305 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3307 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3308 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-014.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3309 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3311 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3314 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-015">
./node_modules/chai/chai.js:6022 =>  * the type of object being tested.
./node_modules/chai/chai.js:6057 =>   this.tests = {};
./node_modules/chai/chai.js:6071 =>  * @param {Mixed} object to test
./node_modules/chai/chai.js:6078 =>  * #### .define (type, test)
./node_modules/chai/chai.js:6080 =>  * Add a test to for the `.test()` assertion.
./node_modules/chai/chai.js:6100 =>  * @param {RegExp|Function} test
./node_modules/chai/chai.js:6104 => Library.prototype.define = function(type, test) {
./node_modules/chai/chai.js:6105 =>   if (arguments.length === 1) return this.tests[type];
./node_modules/chai/chai.js:6106 =>   this.tests[type] = test;
./node_modules/chai/chai.js:6111 =>  * #### .test (obj, test)
./node_modules/chai/chai.js:6115 =>  * use the user defined custom tests.
./node_modules/chai/chai.js:6118 =>  * assert(lib.test('1', 'int'));
./node_modules/chai/chai.js:6119 =>  * assert(lib.test('yes', 'bln'));
./node_modules/chai/chai.js:6128 => Library.prototype.test = function(obj, type) {
./node_modules/chai/chai.js:6130 =>   var test = this.tests[type];
./node_modules/chai/chai.js:6132 =>   if (test && 'regexp' === getType(test)) {
./node_modules/chai/chai.js:6133 =>     return test.test(obj);
./node_modules/chai/chai.js:6134 =>   } else if (test && 'function' === getType(test)) {
./node_modules/chai/chai.js:6135 =>     return test(obj);
./node_modules/chai/chai.js:6137 =>     throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
./node_modules/core-js/client/library.min.js.map:1 => {"version":3,"sources":["library.js"],"names":["__e","__g","undefined","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","keyOf","enumKeys","isArray","anObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","Object","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","this","value","a","it","key","D","protoDesc","wrap","tag","sym","_k","isSymbol","iterator","$defineProperty","defineProperty","enumerable","$defineProperties","defineProperties","P","keys","i","l","length","$create","create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","$getOwnPropertyNames","getOwnPropertyNames","names","result","push","$getOwnPropertySymbols","getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","configurable","set","toString","name","G","W","F","symbols","split","store","S","for","keyFor","useSetter","useSimple","replacer","$replacer","args","apply","valueOf","Math","window","self","Function","hasOwnProperty","exec","e","core","ctx","hide","type","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","expProto","target","C","b","virtual","R","U","version","aFunction","fn","that","object","IE8_DOM_DEFINE","O","Attributes","isObject","document","is","createElement","val","bitmap","writable","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","px","random","concat","SHARED","def","TAG","stat","prototype","USE_SYMBOL","$exports","LIBRARY","charAt","getKeys","el","index","enumBugKeys","arrayIndexOf","IE_PROTO","IObject","defined","cof","slice","toLength","toIndex","IS_INCLUDES","$this","fromIndex","toInteger","min","ceil","floor","isNaN","max","gOPS","pIE","getSymbols","Array","arg","dPs","Empty","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","open","write","close","Properties","documentElement","windowNames","getWindowNames","hiddenKeys","fails","exp","toObject","$getPrototypeOf","getPrototypeOf","constructor","$freeze","freeze","$seal","seal","$preventExtensions","$isFrozen","isFrozen","$isSealed","isSealed","$isExtensible","assign","$assign","A","K","forEach","k","join","T","aLen","j","x","y","setPrototypeOf","check","proto","test","buggy","__proto__","bind","invoke","arraySlice","factories","construct","len","n","partArgs","bound","un","HAS_INSTANCE","FunctionProto","aNumberValue","repeat","$toFixed","toFixed","data","ERROR","ZERO","multiply","c2","divide","numToString","s","t","String","pow","acc","log","x2","fractionDigits","z","RangeError","msg","count","str","res","Infinity","$toPrecision","toPrecision","precision","EPSILON","_isFinite","isFinite","isInteger","number","abs","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","$parseFloat","Number","parseFloat","$trim","trim","string","spaces","space","non","ltrim","RegExp","rtrim","exporter","ALIAS","FORCE","TYPE","replace","$parseInt","parseInt","ws","hex","radix","log1p","sqrt","$acosh","acosh","MAX_VALUE","NaN","LN2","asinh","$asinh","$atanh","atanh","sign","cbrt","clz32","LOG2E","cosh","$expm1","expm1","EPSILON32","MAX32","MIN32","roundTiesToEven","fround","$abs","$sign","hypot","value1","value2","div","sum","larg","$imul","imul","UINT16","xn","yn","xl","yl","log10","LN10","log2","sinh","tanh","trunc","fromCharCode","$fromCodePoint","fromCodePoint","code","raw","callSite","tpl","$at","codePointAt","pos","TO_STRING","charCodeAt","context","ENDS_WITH","$endsWith","endsWith","searchString","endPosition","end","search","isRegExp","NAME","MATCH","re","INCLUDES","includes","indexOf","STARTS_WITH","$startsWith","startsWith","iterated","_t","_i","point","done","Iterators","$iterCreate","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","values","entries","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","descriptor","createHTML","anchor","quot","attribute","p1","toLowerCase","big","blink","bold","fixed","fontcolor","color","fontsize","size","italics","link","url","small","strike","sub","sup","isArrayIter","createProperty","getIterFn","iter","from","arrayLike","step","mapfn","mapping","iterFn","ret","ArrayProto","classof","getIteratorMethod","ARG","tryGet","callee","SAFE_CLOSING","riter","skipClosing","safe","arr","of","arrayJoin","separator","method","html","begin","klass","start","upTo","cloned","$sort","sort","comparefn","$forEach","STRICT","callbackfn","asc","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","speciesConstructor","original","SPECIES","$map","map","$filter","filter","$some","some","$every","every","$reduce","reduce","memo","isRight","reduceRight","$indexOf","NEGATIVE_ZERO","searchElement","lastIndexOf","copyWithin","to","inc","fill","endPos","$find","forced","find","findIndex","addToUnscopables","Arguments","Internal","GenericPromiseCapability","Wrapper","anInstance","forOf","task","microtask","PROMISE","process","$Promise","isNode","empty","promise","resolve","FakePromise","PromiseRejectionEvent","then","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","notify","isReject","_n","chain","_c","_v","ok","_s","run","reaction","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","abrupt","console","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","Promise","executor","err","onFulfilled","onRejected","catch","r","capability","all","iterable","remaining","$index","alreadyCalled","race","forbiddenField","BREAK","RETURN","defer","channel","port","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","listener","event","nextTick","port2","port1","onmessage","postMessage","addEventListener","importScripts","removeChild","setTimeout","clear","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","toggle","node","createTextNode","observe","characterData","strong","Map","entry","getEntry","v","redefineAll","$iterDefine","setSpecies","SIZE","_f","getConstructor","ADDER","_l","delete","prev","setStrong","each","common","IS_WEAK","IS_ADDER","Set","add","InternalMap","weak","uncaughtFrozenStore","ufstore","tmp","WeakMap","$WeakMap","createArrayMethod","$has","arrayFind","arrayFindIndex","UncaughtFrozenStore","findUncaughtFrozen","splice","WeakSet","rApply","Reflect","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","instance","propertyKey","attributes","deleteProperty","desc","Enumerate","enumerate","receiver","getProto","ownKeys","V","existingDescriptor","ownDesc","setProto","now","Date","getTime","toJSON","toISOString","pv","lz","num","d","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","$typed","buffer","ArrayBuffer","$ArrayBuffer","$DataView","DataView","$isView","ABV","isView","$slice","VIEW","ARRAY_BUFFER","CONSTR","byteLength","first","final","viewS","viewT","setUint8","getUint8","Typed","TYPED","TypedArrayConstructors","arrayFill","DATA_VIEW","WRONG_LENGTH","WRONG_INDEX","BaseBuffer","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","addGetter","internal","view","isLittleEndian","numIndex","intIndex","_b","pack","reverse","conversion","validateArrayBufferArguments","numberLength","ArrayBufferProto","$setInt8","setInt8","getInt8","byteOffset","buff
./node_modules/core-js/client/shim.min.js.map:1 => {"version":3,"sources":["shim.js"],"names":["__e","__g","undefined","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","keyOf","enumKeys","isArray","anObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","Object","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","this","value","a","it","key","D","protoDesc","wrap","tag","sym","_k","isSymbol","iterator","$defineProperty","defineProperty","enumerable","$defineProperties","defineProperties","P","keys","i","l","length","$create","create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","$getOwnPropertyNames","getOwnPropertyNames","names","result","push","$getOwnPropertySymbols","getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","configurable","set","toString","name","G","W","F","symbols","split","store","S","for","keyFor","useSetter","useSimple","replacer","$replacer","args","apply","valueOf","Math","window","self","Function","hasOwnProperty","exec","e","core","hide","ctx","type","source","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","R","version","object","IE8_DOM_DEFINE","O","Attributes","isObject","document","is","createElement","fn","val","bitmap","writable","SRC","TO_STRING","$toString","TPL","inspectSource","safe","isFunction","join","String","prototype","px","random","concat","aFunction","that","b","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","SHARED","def","TAG","stat","USE_SYMBOL","$exports","LIBRARY","charAt","getKeys","el","index","enumBugKeys","arrayIndexOf","IE_PROTO","IObject","defined","cof","slice","toLength","toIndex","IS_INCLUDES","$this","fromIndex","toInteger","min","ceil","floor","isNaN","max","gOPS","pIE","getSymbols","Array","arg","dPs","Empty","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","open","write","close","Properties","documentElement","windowNames","getWindowNames","hiddenKeys","fails","toObject","$getPrototypeOf","getPrototypeOf","constructor","$freeze","freeze","$seal","seal","$preventExtensions","$isFrozen","isFrozen","$isSealed","isSealed","$isExtensible","assign","$assign","A","K","forEach","k","T","aLen","j","x","y","setPrototypeOf","check","proto","test","buggy","__proto__","classof","ARG","tryGet","callee","bind","invoke","arraySlice","factories","construct","len","n","partArgs","bound","un","FProto","nameRE","NAME","match","HAS_INSTANCE","FunctionProto","inheritIfRequired","$trim","trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","NaN","code","digits","parseInt","Number","C","spaces","space","non","ltrim","RegExp","rtrim","exporter","ALIAS","FORCE","string","TYPE","replace","aNumberValue","repeat","$toFixed","toFixed","data","ERROR","ZERO","multiply","c2","divide","numToString","s","t","pow","acc","log","x2","fractionDigits","z","RangeError","msg","count","str","res","Infinity","$toPrecision","toPrecision","precision","EPSILON","_isFinite","isFinite","isInteger","number","abs","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","$parseFloat","parseFloat","$parseInt","ws","hex","log1p","sqrt","$acosh","acosh","MAX_VALUE","LN2","asinh","$asinh","$atanh","atanh","sign","cbrt","clz32","LOG2E","cosh","$expm1","expm1","EPSILON32","MAX32","MIN32","roundTiesToEven","fround","$abs","$sign","hypot","value1","value2","div","sum","larg","$imul","imul","UINT16","xn","yn","xl","yl","log10","LN10","log2","sinh","tanh","trunc","fromCharCode","$fromCodePoint","fromCodePoint","raw","callSite","tpl","$at","codePointAt","pos","context","ENDS_WITH","$endsWith","endsWith","searchString","endPosition","end","search","isRegExp","MATCH","re","INCLUDES","includes","indexOf","STARTS_WITH","$startsWith","startsWith","iterated","_t","_i","point","done","Iterators","$iterCreate","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","values","entries","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","descriptor","createHTML","anchor","quot","attribute","p1","toLowerCase","big","blink","bold","fixed","fontcolor","color","fontsize","size","italics","link","url","small","strike","sub","sup","isArrayIter","createProperty","getIterFn","iter","from","arrayLike","step","mapfn","mapping","iterFn","ret","ArrayProto","getIteratorMethod","SAFE_CLOSING","riter","skipClosing","arr","of","arrayJoin","separator","method","html","begin","klass","start","upTo","cloned","$sort","sort","comparefn","$forEach","STRICT","callbackfn","asc","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","speciesConstructor","original","SPECIES","$map","map","$filter","filter","$some","some","$every","every","$reduce","reduce","memo","isRight","reduceRight","$indexOf","NEGATIVE_ZERO","searchElement","lastIndexOf","copyWithin","to","inc","UNSCOPABLES","fill","endPos","$find","forced","find","findIndex","addToUnscopables","Arguments","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","ignoreCase","multiline","unicode","sticky","define","flags","$match","regexp","SYMBOL","fns","strfn","rxfn","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","$SPLIT","LENGTH","LAST_INDEX","NPCG","limit","separator2","lastIndex","lastLength","output","lastLastIndex","splitLimit","separatorCopy","Internal","GenericPromiseCapability","Wrapper","anInstance","forOf","task","microtask","PROMISE","process","$Promise","isNode","empty","promise","resolve","FakePromise","PromiseRejectionEvent","then","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","notify","isReject","_n","chain","_c","_v","ok","_s","run","reaction","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","abrupt","console","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","Promise","executor","err","onFulfilled","onRejected","catch","r","capability","all","iterable","remaining","$index","alreadyCalled","race","forbiddenField","BREAK","RETURN","defer","channel","port","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","listener","event","nextTick","port2","port1","onmessage","postMessage","addEventListener","importScripts","removeChild","setTimeout","clear","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","toggle","node","createTextNode","observe","characterData","strong","Map","entry","getEntry","v","redefineAll","$iterDefine","setSpecies","SIZE","_f","getConstructor","ADDER","_l","delete","prev","setStrong","$iterDetect","common","IS_WEAK","fixMethod","add","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","Set","InternalMap","each","weak","uncaughtFrozenStore","ufstore","tmp","WeakMap","$WeakMap","createArrayMethod","$has","arrayFind","arrayFindIndex","UncaughtFrozenStore","findUncaughtFrozen","splice","WeakSet","rApply","Reflect","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","propertyKey","attributes","deleteProperty","desc","Enumerate","enumerate","receiver","getProto","ownKeys","V","existingDescriptor","ownDesc","setProto","now","Date","getTime","toJSON","toISOString","pv","lz","num","d","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","DateProto","INVALID_DATE","hint","$
./node_modules/detective/node_modules/acorn/dist/acorn.es.js:3077 =>   if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))
./node_modules/detective/node_modules/acorn/dist/acorn.js:2806 =>       if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag")
./node_modules/detective/node_modules/acorn/dist/acorn.js:2896 =>     else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number")
./node_modules/es6-promise/dist/test/browserify.js:3759 =>         require("./sinon/test");
./node_modules/es6-promise/dist/test/browserify.js:3760 =>         require("./sinon/test_case");
./node_modules/es6-promise/dist/test/browserify.js:3778 => },{"./sinon/assert":25,"./sinon/behavior":26,"./sinon/call":27,"./sinon/collection":28,"./sinon/extend":29,"./sinon/format":30,"./sinon/log_error":31,"./sinon/match":32,"./sinon/mock":33,"./sinon/sandbox":34,"./sinon/spy":35,"./sinon/stub":36,"./sinon/test":37,"./sinon/test_case":38,"./sinon/times_in_words":39,"./sinon/typeOf":40,"./sinon/util/core":41}],25:[function(require,module,exports){
./node_modules/es6-promise/dist/test/browserify.js:3787 =>  * Assertions matching the test spy retrieval interface.
./node_modules/es6-promise/dist/test/browserify.js:3861 =>             return !prefix || /^fail/.test(prop) ? prop :
./node_modules/es6-promise/dist/test/mocha.js:5928 =>     if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') return;
./node_modules/es6-promise/dist/test/mocha.js:6037 =>  * This is useful when running tests in a browser because window.onerror will
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:2862 =>  *					after the list has been fired right away with the latest "memorized"
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:3349 =>      *   return /^b/.test(food);
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4081 => 				( jQuery.expr.match["boolean"].test( name ) ? boolHook : nodeHook );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4120 => 				if ( jQuery.expr.match["boolean"].test( name ) ) {
./node_modules/mocha/mocha.js:7045 =>  *   === true    Use Uint8Array implementation (fastest)
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:2933 =>   if (isFloat) val = parseFloat(str);else if (!octal || str.length === 1) val = parseInt(str, 10);else if (/[89]/.test(str) || this.strict) this.raise(start, "Invalid number");else val = parseInt(str, 8);
./test/tc0004/rdfcore/Manifest.rdf:3316 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3317 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3318 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3320 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3321 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-015.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3322 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3324 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3325 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-015.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3326 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3328 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3331 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-016">
./test/tc0004/rdfcore/Manifest.rdf:3333 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3334 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3335 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3337 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3338 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-016.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3339 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3341 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3342 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-016.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3343 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3345 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3348 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-017">
./test/tc0004/rdfcore/Manifest.rdf:3350 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3351 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3352 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3354 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3355 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-017.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3356 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3358 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3359 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-017.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3360 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3362 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3365 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-018">
./test/tc0004/rdfcore/Manifest.rdf:3367 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3368 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3369 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3371 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3372 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-018.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3373 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3375 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3376 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-018.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3377 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3379 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3382 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-019">
./test/tc0004/rdfcore/Manifest.rdf:3384 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3385 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3386 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3388 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3389 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-019.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3390 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3392 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3393 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-019.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3394 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3396 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3399 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-020">
./test/tc0004/rdfcore/Manifest.rdf:3401 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3402 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3403 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3405 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3406 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-020.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3407 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3409 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3410 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-020.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3411 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3413 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3416 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-021">
./test/tc0004/rdfcore/Manifest.rdf:3418 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3419 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3420 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3422 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3423 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-021.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3424 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3426 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3427 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-021.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3428 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3430 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3433 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-022">
./test/tc0004/rdfcore/Manifest.rdf:3435 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3436 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3437 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3439 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3440 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-022.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3441 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3443 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3444 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-022.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3445 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3447 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3450 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-023">
./test/tc0004/rdfcore/Manifest.rdf:3452 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3453 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3454 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3456 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3457 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-023.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3458 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3460 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3461 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-023.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3462 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3464 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3467 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-024">
./test/tc0004/rdfcore/Manifest.rdf:3469 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3470 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3471 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3473 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3474 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-024.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3475 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3477 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3478 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-024.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3479 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3481 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3484 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-025">
./test/tc0004/rdfcore/Manifest.rdf:3486 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3487 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3488 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3490 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3491 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-025.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3492 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3494 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3495 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-025.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3496 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3498 => </test:PositiveParserTest>
./node_modules/core-js/client/core.min.js.map:1 => {"version":3,"sources":["core.js"],"names":["__e","__g","undefined","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","has","DESCRIPTORS","$export","redefine","META","KEY","$fails","shared","setToStringTag","uid","wks","wksExt","wksDefine","keyOf","enumKeys","isArray","anObject","toIObject","toPrimitive","createDesc","_create","gOPNExt","$GOPD","$DP","$keys","gOPD","f","dP","gOPN","$Symbol","Symbol","$JSON","JSON","_stringify","stringify","PROTOTYPE","HIDDEN","TO_PRIMITIVE","isEnum","propertyIsEnumerable","SymbolRegistry","AllSymbols","OPSymbols","ObjectProto","Object","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","get","this","value","a","it","key","D","protoDesc","wrap","tag","sym","_k","isSymbol","iterator","$defineProperty","defineProperty","enumerable","$defineProperties","defineProperties","P","keys","i","l","length","$create","create","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","getOwnPropertyDescriptor","$getOwnPropertyNames","getOwnPropertyNames","names","result","push","$getOwnPropertySymbols","getOwnPropertySymbols","IS_OP","TypeError","arguments","$set","configurable","set","toString","name","G","W","F","symbols","split","store","S","for","keyFor","useSetter","useSimple","replacer","$replacer","args","apply","valueOf","Math","window","self","Function","hasOwnProperty","exec","e","core","hide","ctx","type","source","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","B","target","expProto","U","R","version","object","IE8_DOM_DEFINE","O","Attributes","isObject","document","is","createElement","fn","val","bitmap","writable","SRC","TO_STRING","$toString","TPL","inspectSource","safe","isFunction","join","String","prototype","px","random","concat","aFunction","that","b","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","SHARED","def","TAG","stat","USE_SYMBOL","$exports","LIBRARY","charAt","getKeys","el","index","enumBugKeys","arrayIndexOf","IE_PROTO","IObject","defined","cof","slice","toLength","toIndex","IS_INCLUDES","$this","fromIndex","toInteger","min","ceil","floor","isNaN","max","gOPS","pIE","getSymbols","Array","arg","dPs","Empty","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","open","write","close","Properties","documentElement","windowNames","getWindowNames","hiddenKeys","fails","toObject","$getPrototypeOf","getPrototypeOf","constructor","$freeze","freeze","$seal","seal","$preventExtensions","$isFrozen","isFrozen","$isSealed","isSealed","$isExtensible","assign","$assign","A","K","forEach","k","T","aLen","j","x","y","setPrototypeOf","check","proto","test","buggy","__proto__","classof","ARG","tryGet","callee","bind","invoke","arraySlice","factories","construct","len","n","partArgs","bound","un","FProto","nameRE","NAME","match","HAS_INSTANCE","FunctionProto","inheritIfRequired","$trim","trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","charCodeAt","NaN","code","digits","parseInt","Number","C","spaces","space","non","ltrim","RegExp","rtrim","exporter","ALIAS","FORCE","string","TYPE","replace","aNumberValue","repeat","$toFixed","toFixed","data","ERROR","ZERO","multiply","c2","divide","numToString","s","t","pow","acc","log","x2","fractionDigits","z","RangeError","msg","count","str","res","Infinity","$toPrecision","toPrecision","precision","EPSILON","_isFinite","isFinite","isInteger","number","abs","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","$parseFloat","parseFloat","$parseInt","ws","hex","log1p","sqrt","$acosh","acosh","MAX_VALUE","LN2","asinh","$asinh","$atanh","atanh","sign","cbrt","clz32","LOG2E","cosh","$expm1","expm1","EPSILON32","MAX32","MIN32","roundTiesToEven","fround","$abs","$sign","hypot","value1","value2","div","sum","larg","$imul","imul","UINT16","xn","yn","xl","yl","log10","LN10","log2","sinh","tanh","trunc","fromCharCode","$fromCodePoint","fromCodePoint","raw","callSite","tpl","$at","codePointAt","pos","context","ENDS_WITH","$endsWith","endsWith","searchString","endPosition","end","search","isRegExp","MATCH","re","INCLUDES","includes","indexOf","STARTS_WITH","$startsWith","startsWith","iterated","_t","_i","point","done","Iterators","$iterCreate","ITERATOR","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Constructor","next","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","values","entries","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","descriptor","createHTML","anchor","quot","attribute","p1","toLowerCase","big","blink","bold","fixed","fontcolor","color","fontsize","size","italics","link","url","small","strike","sub","sup","isArrayIter","createProperty","getIterFn","iter","from","arrayLike","step","mapfn","mapping","iterFn","ret","ArrayProto","getIteratorMethod","SAFE_CLOSING","riter","skipClosing","arr","of","arrayJoin","separator","method","html","begin","klass","start","upTo","cloned","$sort","sort","comparefn","$forEach","STRICT","callbackfn","asc","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","speciesConstructor","original","SPECIES","$map","map","$filter","filter","$some","some","$every","every","$reduce","reduce","memo","isRight","reduceRight","$indexOf","NEGATIVE_ZERO","searchElement","lastIndexOf","copyWithin","to","inc","UNSCOPABLES","fill","endPos","$find","forced","find","findIndex","addToUnscopables","Arguments","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","ignoreCase","multiline","unicode","sticky","define","flags","$match","regexp","SYMBOL","fns","strfn","rxfn","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","$SPLIT","LENGTH","LAST_INDEX","NPCG","limit","separator2","lastIndex","lastLength","output","lastLastIndex","splitLimit","separatorCopy","Internal","GenericPromiseCapability","Wrapper","anInstance","forOf","task","microtask","PROMISE","process","$Promise","isNode","empty","promise","resolve","FakePromise","PromiseRejectionEvent","then","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","notify","isReject","_n","chain","_c","_v","ok","_s","run","reaction","handler","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","abrupt","console","isUnhandled","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","Promise","executor","err","onFulfilled","onRejected","catch","r","capability","all","iterable","remaining","$index","alreadyCalled","race","forbiddenField","BREAK","RETURN","defer","channel","port","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","listener","event","nextTick","port2","port1","onmessage","postMessage","addEventListener","importScripts","removeChild","setTimeout","clear","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","toggle","node","createTextNode","observe","characterData","strong","Map","entry","getEntry","v","redefineAll","$iterDefine","setSpecies","SIZE","_f","getConstructor","ADDER","_l","delete","prev","setStrong","$iterDetect","common","IS_WEAK","fixMethod","add","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","Set","InternalMap","each","weak","uncaughtFrozenStore","ufstore","tmp","WeakMap","$WeakMap","createArrayMethod","$has","arrayFind","arrayFindIndex","UncaughtFrozenStore","findUncaughtFrozen","splice","WeakSet","rApply","Reflect","fApply","thisArgument","argumentsList","L","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","newTarget","$args","propertyKey","attributes","deleteProperty","desc","Enumerate","enumerate","receiver","getProto","ownKeys","V","existingDescriptor","ownDesc","setProto","now","Date","getTime","toJSON","toISOString","pv","lz","num","d","getUTCFullYear","getUTCMilliseconds","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","DateProto","INVALID_DATE","hint","$
./node_modules/detective/node_modules/acorn/dist/acorn.js:3083 =>     if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))
./node_modules/es6-promise/dist/test/browserify.js:3925 =>                     if (method != "expose" && (includeFail || !/^(fail)/.test(method))) {
./node_modules/es6-promise/dist/test/browserify.js:3935 =>                 if (matcher.test(actual)) {
./node_modules/fs-readline/test/fixtures/afile.txt:1909 => debauchery if Thou utterly desertest me!
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3185 => 	// Preliminary tests
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4184 => 				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4369 => 				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4449 => 					( !tmp || tmp.test( handleObj.namespace ) ) &&
./node_modules/syntax-error/node_modules/acorn/dist/acorn.js:3133 =>   if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word)) type = _tokentype.keywords[word];
./test/tc0004/rdfcore/Manifest.rdf:3501 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-026">
./test/tc0004/rdfcore/Manifest.rdf:3503 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3504 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3505 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3507 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3508 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-026.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3509 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3511 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3512 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-026.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3513 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3515 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3518 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-027">
./test/tc0004/rdfcore/Manifest.rdf:3520 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3521 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3522 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3524 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3525 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-027.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3526 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3528 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3529 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-027.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3530 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3532 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3535 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-028">
./test/tc0004/rdfcore/Manifest.rdf:3537 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3538 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3539 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3541 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3542 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-028.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3543 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3545 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3546 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-028.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3547 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3549 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3552 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-029">
./test/tc0004/rdfcore/Manifest.rdf:3554 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3555 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3556 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3558 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3559 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-029.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3560 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3562 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3563 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-029.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3564 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3566 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3569 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-030">
./test/tc0004/rdfcore/Manifest.rdf:3571 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3572 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3573 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3575 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3576 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-030.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3577 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3579 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3580 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-030.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3581 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3583 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3586 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-031">
./test/tc0004/rdfcore/Manifest.rdf:3588 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3589 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3590 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3592 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3593 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-031.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3594 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3596 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3597 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-031.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3598 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3600 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3603 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-032">
./test/tc0004/rdfcore/Manifest.rdf:3605 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3606 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3607 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3609 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3610 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-032.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3611 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3613 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3614 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-032.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3615 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3617 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3620 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-033">
./test/tc0004/rdfcore/Manifest.rdf:3622 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3623 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3624 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3626 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3627 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-033.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3628 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3630 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3631 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-033.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3632 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3634 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3637 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-034">
./test/tc0004/rdfcore/Manifest.rdf:3639 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3640 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3641 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3643 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3644 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-034.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3645 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3647 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3648 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-034.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3649 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3651 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3654 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-035">
./test/tc0004/rdfcore/Manifest.rdf:3656 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3657 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3658 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3660 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3661 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-035.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3662 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3664 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3665 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-035.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3666 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3668 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3671 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-036">
./test/tc0004/rdfcore/Manifest.rdf:3673 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3674 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3675 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3677 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3678 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-036.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3679 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3681 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3682 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-036.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3683 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3685 => </test:PositiveParserTest>
./node_modules/babel-polyfill/dist/polyfill.js:4483 =>     'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
./node_modules/babel-polyfill/dist/polyfill.js:4525 =>         if(lastLength || !separatorCopy.test(''))output.push('');
./node_modules/fs-readline/test/fixtures/afile.txt:2140 => all comme il faut and in the latest fashion. This Natasha noticed at
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3193 => 	// Can't get basic test support
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3198 => 	// First batch of supports tests
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3217 => 		style: /top/.test( a.getAttribute("style") ),
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3226 => 		opacity: /^0.5/.test( a.style.opacity ),
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3279 => 		delete div.test;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3342 => 	// Run tests that need a body at doc ready
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3357 => 		// Construct the test element
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3367 => 		// (only IE 8 fails this test)
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3377 => 		// (IE <= 8 fail this test)
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4495 => 		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4541 => 			if ( !rfocusMorph.test( bubbleType + type ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4642 => 				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {
./node_modules/pako/dist/pako.js:5083 =>    for the first code of the shortest length, and the codes are integer
./test/tc0004/rdfcore/Manifest.rdf:3688 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#test-037">
./test/tc0004/rdfcore/Manifest.rdf:3690 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3691 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3692 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3694 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3695 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-037.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3696 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3698 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3699 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/test-037.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3700 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3702 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3705 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#warn-001">
./test/tc0004/rdfcore/Manifest.rdf:3707 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3708 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3709 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3711 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3712 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3713 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3715 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3716 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3717 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3719 =>    <test:warning> allowed with warnings </test:warning>
./test/tc0004/rdfcore/Manifest.rdf:3721 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3724 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#warn-002">
./test/tc0004/rdfcore/Manifest.rdf:3726 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3727 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3728 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3730 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3731 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3732 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3734 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3735 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3736 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3738 =>    <test:warning> allowed with warnings </test:warning>
./test/tc0004/rdfcore/Manifest.rdf:3740 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3743 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/Manifest.rdf#warn-003">
./test/tc0004/rdfcore/Manifest.rdf:3745 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-rdf-names-use" />
./test/tc0004/rdfcore/Manifest.rdf:3746 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3747 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Nov/0651.html" />
./test/tc0004/rdfcore/Manifest.rdf:3749 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3750 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3751 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3753 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3754 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-rdf-names-use/warn-003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3755 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3757 =>    <test:warning> allowed with warnings </test:warning>
./test/tc0004/rdfcore/Manifest.rdf:3759 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3763 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-reification-required/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:3765 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3766 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3768 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:3769 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3771 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:3773 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3774 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-reification-required/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3775 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3777 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3778 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-reification-required/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3779 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3781 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3786 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:3788 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-seq-representation" />
./test/tc0004/rdfcore/Manifest.rdf:3789 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3790 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002May/0159.html" />
./test/tc0004/rdfcore/Manifest.rdf:3792 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3793 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3794 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3796 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3797 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3798 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3800 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3803 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:3805 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3806 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3807 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3809 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3811 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:3812 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:3814 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3815 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/empty.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3816 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3818 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3819 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3820 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3822 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:3825 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:3827 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3828 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3829 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3831 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3833 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:3834 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:3836 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3837 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test003a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3838 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3840 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3841 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test003b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3842 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3844 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:3847 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:3849 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3850 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3851 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3853 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3855 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:3856 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:3858 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3859 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/empty.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3860 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:3862 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3863 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-seq-representation/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3864 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:3866 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:3872 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:3874 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3876 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3877 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3879 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3881 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3883 =>    <test:inputDocument>
./node_modules/es6-promise/dist/test/browserify.js:4392 =>                     return thisValue.test(this.thisValue);
./node_modules/es6-promise/dist/test/browserify.js:4419 =>                     if (!sinon.match || !sinon.match(expectation).test(actual)) {
./node_modules/fs-readline/test/fixtures/afile.txt:2222 => his club were one of the greatest pleasures of both mother, and
./node_modules/jsonld/js/jsonld.js:5339 => function _compareShortestLeast(a, b) {
./node_modules/JSONStream/test/fixtures/all_npm.json:1624 => {"id":"intestine","key":"intestine","value":{"rev":"3-66a5531e06865ed9c966d95437ba1371"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:1674 => {"id":"jarvis-test","key":"jarvis-test","value":{"rev":"5-9537ddae8291e6dad03bc0e6acc9ac80"}},
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4771 => 				rmouseEvent.test( type ) ? this.mouseHooks :
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:4772 => 				rkeyEvent.test( type ) ? this.keyHooks :
./test/tc0004/rdfcore/Manifest.rdf:3884 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3885 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3887 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3888 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3889 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3891 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3893 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:3895 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3897 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3898 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3900 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3904 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3906 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3907 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3908 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3910 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3911 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3912 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3914 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3916 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:3918 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3920 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3921 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3923 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3926 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3928 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3929 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3930 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3932 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3933 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3934 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3936 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3938 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:3940 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3942 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3943 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3945 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3948 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3950 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3951 =>      <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3952 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3954 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3955 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:3956 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3958 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3960 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:3962 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3964 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3965 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3967 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3970 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3972 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3973 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3974 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3976 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3978 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error002">
./test/tc0004/rdfcore/Manifest.rdf:3980 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:3982 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:3983 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:3985 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:3988 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:3990 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3991 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:3992 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:3994 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:3996 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error003">
./test/tc0004/rdfcore/Manifest.rdf:3998 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:4000 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4001 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4003 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4006 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4008 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4009 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4010 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4012 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4014 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error004">
./test/tc0004/rdfcore/Manifest.rdf:4016 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:4018 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4019 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4021 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4023 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4025 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4026 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4027 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4029 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4031 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error005">
./test/tc0004/rdfcore/Manifest.rdf:4033 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:4035 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4036 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4038 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4040 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4042 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4043 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4044 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4046 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4048 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/Manifest.rdf#error006">
./test/tc0004/rdfcore/Manifest.rdf:4050 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-syntax-incomplete" />
./test/tc0004/rdfcore/Manifest.rdf:4052 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4053 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4055 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4057 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4059 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4060 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-syntax-incomplete/error006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4061 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4063 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4067 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-uri-substructure/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4069 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4070 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4072 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4073 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4075 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4077 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4078 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-uri-substructure/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4079 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4081 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4082 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-uri-substructure/test001.nt" />
./node_modules/fs-readline/test/fixtures/afile.txt:2390 => and mentioned by name the greatest dignitaries of the day.
./node_modules/jsonld/js/jsonld.js:5596 =>         _compareShortestLeast(curie, choice) < 0)) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:3745 => 				rbrace.test( data ) ? jQuery.parseJSON( data ) :
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5159 => 				rneedsContext.test( selector ) ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5170 => 			pos = ( rneedsContext.test( selectors ) || typeof selectors !== "string" ) ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5366 => 		if ( isSimple.test( qualifier ) ) {
./test/tc0004/rdfcore/Manifest.rdf:4083 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4085 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4088 => <test:MiscellaneousTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-uri-substructure/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:4090 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4091 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4092 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4093 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4097 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4099 =>    <test:document>
./test/tc0004/rdfcore/Manifest.rdf:4100 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-uri-substructure/error001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4101 =>    </test:document>
./test/tc0004/rdfcore/Manifest.rdf:4103 =>    <test:warning>
./test/tc0004/rdfcore/Manifest.rdf:4107 =>    </test:warning>
./test/tc0004/rdfcore/Manifest.rdf:4109 => </test:MiscellaneousTest>
./test/tc0004/rdfcore/Manifest.rdf:4113 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4115 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-literal-namespaces" />
./test/tc0004/rdfcore/Manifest.rdf:4116 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4117 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4118 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4119 =>    <!-- <test:description> </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4121 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4122 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4123 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4125 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4126 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4127 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4129 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4132 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4134 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-literal-namespaces" />
./test/tc0004/rdfcore/Manifest.rdf:4135 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4136 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4138 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4139 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4140 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4142 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4143 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xml-literal-namespaces/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4144 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4146 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4152 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4154 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4155 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jun/0034.html" />
./test/tc0004/rdfcore/Manifest.rdf:4156 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4157 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4159 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4161 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4162 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4163 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4165 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4166 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4167 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4169 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4172 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4174 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4175 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jun/0034.html" />
./test/tc0004/rdfcore/Manifest.rdf:4176 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4177 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4179 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4181 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4182 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4183 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4185 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4186 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4187 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4189 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4192 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:4194 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4195 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jun/0034.html" />
./test/tc0004/rdfcore/Manifest.rdf:4196 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4197 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4199 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4201 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4202 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4203 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4205 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4206 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4207 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4209 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4212 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:4214 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4215 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jun/0034.html" />
./test/tc0004/rdfcore/Manifest.rdf:4216 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4217 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4219 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4221 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4222 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4223 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4225 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4226 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4227 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4229 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4232 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:4234 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4235 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jun/0034.html" />
./test/tc0004/rdfcore/Manifest.rdf:4236 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4237 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4239 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4241 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4242 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4243 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4245 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4246 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4247 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4249 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4252 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test006">
./test/tc0004/rdfcore/Manifest.rdf:4254 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4255 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4257 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4258 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4260 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4262 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4263 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4264 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4266 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4267 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4268 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4270 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4273 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test007a">
./test/tc0004/rdfcore/Manifest.rdf:4275 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4276 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4277 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4279 =>    </test:description>
./node_modules/es6-promise/dist/test/browserify.js:4983 =>         // wrap realSetTimeout with something we can stub in tests
./node_modules/es6-promise/dist/test/browserify.js:5060 =>                         if (!exp.test(act)) {
./node_modules/es6-promise/dist/test/browserify.js:5083 =>             or.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5084 =>                 return m1.test(actual) || m2.test(actual);
./node_modules/es6-promise/dist/test/browserify.js:5098 =>             and.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5099 =>                 return m1.test(actual) && m2.test(actual);
./node_modules/es6-promise/dist/test/browserify.js:5110 =>                 if (typeof expectation.test === "function") {
./node_modules/es6-promise/dist/test/browserify.js:5111 =>                     m.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5112 =>                         return expectation.test(actual) === true;
./node_modules/es6-promise/dist/test/browserify.js:5114 =>                     m.message = "match(" + sinon.functionName(expectation.test) + ")";
./node_modules/es6-promise/dist/test/browserify.js:5123 =>                 m.test = function (actual) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4233 => 			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4277 => 					isBool = rboolean.test( name );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4299 => 				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
./node_modules/minifyify/test/fixtures/libraries/Lodash.js:4418 =>       if (typeof thisArg == 'undefined' || (reThis && !reThis.test(fnToString.call(func)))) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5510 => 			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5580 => 		if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5630 => 						if ( rscriptType.test( node.type || "" ) &&
./test/tc0004/rdfcore/Manifest.rdf:4281 =>     <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#simpleEntailment" />
./test/tc0004/rdfcore/Manifest.rdf:4283 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4284 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4285 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4287 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4288 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4289 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4291 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4294 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test007b">
./test/tc0004/rdfcore/Manifest.rdf:4296 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4297 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4298 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4300 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4302 =>     <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#simpleEntailment" />
./test/tc0004/rdfcore/Manifest.rdf:4304 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4305 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4306 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4308 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4309 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007c.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4310 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4312 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4315 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/Manifest.rdf#test007c">
./test/tc0004/rdfcore/Manifest.rdf:4317 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4318 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4319 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4321 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4323 =>     <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#simpleEntailment" />
./test/tc0004/rdfcore/Manifest.rdf:4325 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4326 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007c.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4327 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4329 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4330 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfms-xmllang/test007a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4331 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4333 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4339 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-container-membership-superProperty/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4341 =>    <!-- <test:issue rdf:resource="" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4342 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4343 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4345 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0476.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4346 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4352 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4354 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4355 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4357 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4358 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-container-membership-superProperty/not1P.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4359 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4361 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4362 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-container-membership-superProperty/not1C.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4363 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4365 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4369 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4371 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4372 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4373 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:4374 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4375 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4377 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4379 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4380 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4381 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4383 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4384 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4385 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4387 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4390 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4392 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4393 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4394 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0405.html" />
./test/tc0004/rdfcore/Manifest.rdf:4395 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4396 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4398 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4400 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4401 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4402 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4404 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4405 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4406 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4408 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4411 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:4413 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4414 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4415 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4416 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4418 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4420 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4421 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4422 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4424 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4425 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4426 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4428 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4431 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:4433 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4434 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4435 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4436 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4438 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4440 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4441 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4442 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4444 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4445 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4446 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4448 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4451 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#conjunction-test">
./test/tc0004/rdfcore/Manifest.rdf:4453 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4454 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4455 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4462 => test001
./test/tc0004/rdfcore/Manifest.rdf:4464 => test002
./test/tc0004/rdfcore/Manifest.rdf:4466 => test003
./test/tc0004/rdfcore/Manifest.rdf:4468 => test004
./test/tc0004/rdfcore/Manifest.rdf:4469 =>   entailed description using test001, test002, test003 and
./test/tc0004/rdfcore/Manifest.rdf:4471 =>   (see http://www.w3.org/2000/10/rdf-tests/rdfcore/entailment/ )
./test/tc0004/rdfcore/Manifest.rdf:4472 =>    </test:description>
./node_modules/es6-promise/dist/test/browserify.js:5129 =>                 m.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5134 =>                 m.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5143 =>                 m.test = function (actual) {
./node_modules/es6-promise/dist/test/browserify.js:5147 =>                     return expectation.test(actual);
./node_modules/es6-promise/dist/test/browserify.js:5151 =>                 m.test = expectation;
./node_modules/es6-promise/dist/test/browserify.js:5159 =>                 m.test = function (actual) {
./node_modules/jsonld/js/jsonld.js:6229 =>     // shortest and then lexicographically least
./node_modules/jsonld/js/jsonld.js:6231 =>     var terms = Object.keys(mappings).sort(_compareShortestLeast);
./node_modules/JSONStream/test/fixtures/all_npm.json:1865 => {"id":"jstestdriver","key":"jstestdriver","value":{"rev":"3-d26b172af33d6c45fc3dc96b96865714"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:1877 => {"id":"justtest","key":"justtest","value":{"rev":"17-467ee4ca606f0447a0c458550552fd0a"}},
./node_modules/lodash/lodash.js:6303 =>         (typeof value == 'number' || reIsUint.test(value)) &&
./node_modules/lodash/lodash.js:6348 =>       return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4394 => 					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5738 => 				} else if ( !rhtml.test( elem ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5796 => 					if ( rscriptType.test( elem.type || "" ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:5943 => 	if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
./dist/rdflib.min.js:161 => function inspect(e,r){var t={seen:[],stylize:stylizeNoColor};return arguments.length>=3&&(t.depth=arguments[2]),arguments.length>=4&&(t.colors=arguments[3]),isBoolean(r)?t.showHidden=r:r&&exports._extend(t,r),isUndefined(t.showHidden)&&(t.showHidden=!1),isUndefined(t.depth)&&(t.depth=2),isUndefined(t.colors)&&(t.colors=!1),isUndefined(t.customInspect)&&(t.customInspect=!0),t.colors&&(t.stylize=stylizeWithColor),formatValue(t,e,t.depth)}function stylizeWithColor(e,r){var t=inspect.styles[r];return t?"["+inspect.colors[t][0]+"m"+e+"["+inspect.colors[t][1]+"m":e}function stylizeNoColor(e,r){return e}function arrayToHash(e){var r={};return e.forEach(function(e,t){r[e]=!0}),r}function formatValue(e,r,t){if(e.customInspect&&r&&isFunction(r.inspect)&&r.inspect!==exports.inspect&&(!r.constructor||r.constructor.prototype!==r)){var n=r.inspect(t,e);return isString(n)||(n=formatValue(e,n,t)),n}var i=formatPrimitive(e,r);if(i)return i;var o=Object.keys(r),s=arrayToHash(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(r)),isError(r)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return formatError(r);if(0===o.length){if(isFunction(r)){var u=r.name?": "+r.name:"";return e.stylize("[Function"+u+"]","special")}if(isRegExp(r))return e.stylize(RegExp.prototype.toString.call(r),"regexp");if(isDate(r))return e.stylize(Date.prototype.toString.call(r),"date");if(isError(r))return formatError(r)}var c="",a=!1,l=["{","}"];if(isArray(r)&&(a=!0,l=["[","]"]),isFunction(r)){var p=r.name?": "+r.name:"";c=" [Function"+p+"]"}if(isRegExp(r)&&(c=" "+RegExp.prototype.toString.call(r)),isDate(r)&&(c=" "+Date.prototype.toUTCString.call(r)),isError(r)&&(c=" "+formatError(r)),0===o.length&&(!a||0==r.length))return l[0]+c+l[1];if(t<0)return isRegExp(r)?e.stylize(RegExp.prototype.toString.call(r),"regexp"):e.stylize("[Object]","special");e.seen.push(r);var f;return f=a?formatArray(e,r,t,s,o):o.map(function(n){return formatProperty(e,r,t,s,n,a)}),e.seen.pop(),reduceToSingleString(f,c,l)}function formatPrimitive(e,r){if(isUndefined(r))return e.stylize("undefined","undefined");if(isString(r)){var t="'"+JSON.stringify(r).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(t,"string")}return isNumber(r)?e.stylize(""+r,"number"):isBoolean(r)?e.stylize(""+r,"boolean"):isNull(r)?e.stylize("null","null"):void 0}function formatError(e){return"["+Error.prototype.toString.call(e)+"]"}function formatArray(e,r,t,n,i){for(var o=[],s=0,u=r.length;s<u;++s)hasOwnProperty(r,String(s))?o.push(formatProperty(e,r,t,n,String(s),!0)):o.push("");return i.forEach(function(i){i.match(/^\d+$/)||o.push(formatProperty(e,r,t,n,i,!0))}),o}function formatProperty(e,r,t,n,i,o){var s,u,c;if(c=Object.getOwnPropertyDescriptor(r,i)||{value:r[i]},c.get?u=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(u=e.stylize("[Setter]","special")),hasOwnProperty(n,i)||(s="["+i+"]"),u||(e.seen.indexOf(c.value)<0?(u=isNull(t)?formatValue(e,c.value,null):formatValue(e,c.value,t-1),u.indexOf("\n")>-1&&(u=o?u.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+u.split("\n").map(function(e){return"   "+e}).join("\n"))):u=e.stylize("[Circular]","special")),isUndefined(s)){if(o&&i.match(/^\d+$/))return u;s=JSON.stringify(""+i),s.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+u}function reduceToSingleString(e,r,t){var n=0,i=e.reduce(function(e,r){return n++,r.indexOf("\n")>=0&&n++,e+r.replace(/\u001b\[\d\d?m/g,"").length+1},0);return i>60?t[0]+(""===r?"":r+"\n ")+" "+e.join(",\n  ")+" "+t[1]:t[0]+r+" "+e.join(", ")+" "+t[1]}function isArray(e){return Array.isArray(e)}function isBoolean(e){return"boolean"==typeof e}function isNull(e){return null===e}function isNullOrUndefined(e){return null==e}function isNumber(e){return"number"==typeof e}function isString(e){return"string"==typeof e}function isSymbol(e){return"symbol"==typeof e}function isUndefined(e){return void 0===e}function isRegExp(e){return isObject(e)&&"[object RegExp]"===objectToString(e)}function isObject(e){return"object"==typeof e&&null!==e}function isDate(e){return isObject(e)&&"[object Date]"===objectToString(e)}function isError(e){return isObject(e)&&("[object Error]"===objectToString(e)||e instanceof Error)}function isFunction(e){return"function"==typeof e}function isPrimitive(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||"undefined"==typeof e}function objectToString(e){return Object.prototype.toString.call(e)}function pad(e){return e<10?"0"+e.toString(10):e.toString(10)}function timestamp(){var e=new Date,r=[pad(e.getHours()),pad(e.getMinutes()),pad(e.getSeconds())].join(":");return[e.getDate(),months[e.getMonth()],r].join(" ")}function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}var formatRegExp=/%[sdj%]/g;exports.format=function(e){if(!isString(e)){for(var r=[],t=0;t<arguments.length;t++)r.push(inspect(arguments[t]));return r.join(" ")}for(var t=1,n=arguments,i=n.length,o=String(e).replace(formatRegExp,function(e){if("%%"===e)return"%";if(t>=i)return e;switch(e){case"%s":return String(n[t++]);case"%d":return Number(n[t++]);case"%j":try{return JSON.stringify(n[t++])}catch(e){return"[Circular]"}default:return e}}),s=n[t];t<i;s=n[++t])o+=isNull(s)||!isObject(s)?" "+s:" "+inspect(s);return o},exports.deprecate=function(e,r){function t(){if(!n){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}if(isUndefined(global.process))return function(){return exports.deprecate(e,r).apply(this,arguments)};if(process.noDeprecation===!0)return e;var n=!1;return t};var debugs={},debugEnviron;exports.debuglog=function(e){if(isUndefined(debugEnviron)&&(debugEnviron=process.env.NODE_DEBUG||""),e=e.toUpperCase(),!debugs[e])if(new RegExp("\\b"+e+"\\b","i").test(debugEnviron)){var r=process.pid;debugs[e]=function(){var t=exports.format.apply(exports,arguments);console.error("%s %d: %s",e,r,t)}}else debugs[e]=function(){};return debugs[e]},exports.inspect=inspect,inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},inspect.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},exports.isArray=isArray,exports.isBoolean=isBoolean,exports.isNull=isNull,exports.isNullOrUndefined=isNullOrUndefined,exports.isNumber=isNumber,exports.isString=isString,exports.isSymbol=isSymbol,exports.isUndefined=isUndefined,exports.isRegExp=isRegExp,exports.isObject=isObject,exports.isDate=isDate,exports.isError=isError,exports.isFunction=isFunction,exports.isPrimitive=isPrimitive,exports.isBuffer=require("./support/isBuffer");var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];exports.log=function(){console.log("%s - %s",timestamp(),exports.format.apply(exports,arguments))},exports.inherits=require("inherits"),exports._extend=function(e,r){if(!r||!isObject(r))return e;for(var t=Object.keys(r),n=t.length;n--;)e[t[n]]=r[t[n]];return e};
./dist/rdflib.min.js:165 => function DOMParser(t){this.options=t||{locator:{}}}function buildErrorHandler(t,e,n){function r(e){var r=t[e];!r&&i&&(r=2==t.length?function(n){t(e,n)}:t),o[e]=r&&function(t){r("[xmldom "+e+"]\t"+t+_locator(n))}||function(){}}if(!t){if(e instanceof DOMHandler)return e;t=e}var o={},i=t instanceof Function;return n=n||{},r("warning"),r("error"),r("fatalError"),o}function DOMHandler(){this.cdata=!1}function position(t,e){e.lineNumber=t.lineNumber,e.columnNumber=t.columnNumber}function _locator(t){if(t)return"\n@"+(t.systemId||"")+"#[line:"+t.lineNumber+",col:"+t.columnNumber+"]"}function _toString(t,e,n){return"string"==typeof t?t.substr(e,n):t.length>=e+n||e?new java.lang.String(t,e,n)+"":t}function appendElement(t,e){t.currentElement?t.currentElement.appendChild(e):t.doc.appendChild(e)}DOMParser.prototype.parseFromString=function(t,e){var n=this.options,r=new XMLReader,o=n.domBuilder||new DOMHandler,i=n.errorHandler,a=n.locator,c=n.xmlns||{},l={lt:"<",gt:">",amp:"&",quot:'"',apos:"'"};return a&&o.setDocumentLocator(a),r.errorHandler=buildErrorHandler(i,o,a),r.domBuilder=n.domBuilder||o,/\/x?html?$/.test(e)&&(l.nbsp=" ",l.copy="©",c[""]="http://www.w3.org/1999/xhtml"),c.xml=c.xml||"http://www.w3.org/XML/1998/namespace",t?r.parse(t,c,l):r.errorHandler.error("invalid doc source"),o.doc},DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null),this.locator&&(this.doc.documentURI=this.locator.systemId)},startElement:function(t,e,n,r){var o=this.doc,i=o.createElementNS(t,n||e),a=r.length;appendElement(this,i),this.currentElement=i,this.locator&&position(this.locator,i);for(var c=0;c<a;c++){var t=r.getURI(c),l=r.getValue(c),n=r.getQName(c),s=o.createAttributeNS(t,n);this.locator&&position(r.getLocator(c),s),s.value=s.nodeValue=l,i.setAttributeNode(s)}},endElement:function(t,e,n){var r=this.currentElement;r.tagName;this.currentElement=r.parentNode},startPrefixMapping:function(t,e){},endPrefixMapping:function(t){},processingInstruction:function(t,e){var n=this.doc.createProcessingInstruction(t,e);this.locator&&position(this.locator,n),appendElement(this,n)},ignorableWhitespace:function(t,e,n){},characters:function(t,e,n){if(t=_toString.apply(this,arguments)){if(this.cdata)var r=this.doc.createCDATASection(t);else var r=this.doc.createTextNode(t);this.currentElement?this.currentElement.appendChild(r):/^\s*$/.test(t)&&this.doc.appendChild(r),this.locator&&position(this.locator,r)}},skippedEntity:function(t){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(t){(this.locator=t)&&(t.lineNumber=0)},comment:function(t,e,n){t=_toString.apply(this,arguments);var r=this.doc.createComment(t);this.locator&&position(this.locator,r),appendElement(this,r)},startCDATA:function(){this.cdata=!0},endCDATA:function(){this.cdata=!1},startDTD:function(t,e,n){var r=this.doc.implementation;if(r&&r.createDocumentType){var o=r.createDocumentType(t,e,n);this.locator&&position(this.locator,o),appendElement(this,o)}},warning:function(t){console.warn("[xmldom warning]\t"+t,_locator(this.locator))},error:function(t){console.error("[xmldom error]\t"+t,_locator(this.locator))},fatalError:function(t){throw console.error("[xmldom fatalError]\t"+t,_locator(this.locator)),t}},"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(t){DOMHandler.prototype[t]=function(){return null}});var XMLReader=require("./sax").XMLReader,DOMImplementation=exports.DOMImplementation=require("./dom").DOMImplementation;exports.XMLSerializer=require("./dom").XMLSerializer,exports.DOMParser=DOMParser;
./test/tc0004/rdfcore/Manifest.rdf:4474 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4475 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4477 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4478 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4479 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4481 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4482 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4483 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4485 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4486 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4487 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4489 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4490 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4491 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4493 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4495 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#intensionality-range">
./test/tc0004/rdfcore/Manifest.rdf:4497 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4498 =>    <test:issue rdf:resource="http://www.w3.org/2001/sw/WebOnt/webont-issues.html#I5.24-IF-or-IFF-property-properties" />
./test/tc0004/rdfcore/Manifest.rdf:4499 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4500 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4502 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4507 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4509 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4510 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4511 =>   <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4512 =>        <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/premises005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4513 =>   </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4516 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4517 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/nonconclusions005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4518 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4520 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4521 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/Manifest.rdf#intensionality-domain">
./test/tc0004/rdfcore/Manifest.rdf:4523 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-domain-and-range" />
./test/tc0004/rdfcore/Manifest.rdf:4524 =>    <test:issue rdf:resource="http://www.w3.org/2001/sw/WebOnt/webont-issues.html#I5.24-IF-or-IFF-property-properties" />
./test/tc0004/rdfcore/Manifest.rdf:4525 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4526 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4527 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4532 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4534 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4535 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4536 =>   <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4537 =>        <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/premises006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4538 =>   </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4541 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4542 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-domain-and-range/nonconclusions006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4543 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4545 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4550 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-entailment/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4552 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4553 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Nov/0063.html" />
./test/tc0004/rdfcore/Manifest.rdf:4554 =>    <test:issue rdf:resource="http://www.w3.org/2001/sw/RDFCore/20031010-comments/#entailment-from-inconsistent-graph" />
./test/tc0004/rdfcore/Manifest.rdf:4556 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4560 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4562 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4563 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4565 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4566 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-entailment/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4567 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4569 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4570 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:4571 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4573 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4576 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-entailment/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4578 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4579 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Nov/0063.html" />
./test/tc0004/rdfcore/Manifest.rdf:4580 =>    <test:issue rdf:resource="http://www.w3.org/2001/sw/RDFCore/20031010-comments/#entailment-from-inconsistent-graph" />
./test/tc0004/rdfcore/Manifest.rdf:4582 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4585 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4587 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4588 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4590 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4591 =>       <test:False-Document />
./test/tc0004/rdfcore/Manifest.rdf:4592 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4594 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4595 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-entailment/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4596 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4598 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4602 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4604 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-no-cycles-in-subClassOf" />
./test/tc0004/rdfcore/Manifest.rdf:4605 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4606 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0249.html" />
./test/tc0004/rdfcore/Manifest.rdf:4608 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4611 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4613 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4614 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4616 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4617 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4618 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4620 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4621 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subClassOf/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4622 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4624 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4628 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4630 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-no-cycles-in-subPropertyOf" />
./test/tc0004/rdfcore/Manifest.rdf:4631 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4632 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2001Oct/0249.html" />
./test/tc0004/rdfcore/Manifest.rdf:4634 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4637 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4639 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4640 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4642 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4643 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4644 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4646 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4647 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-no-cycles-in-subPropertyOf/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4648 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4650 => </test:PositiveEntailmentTest>
./node_modules/es6-promise/dist/test/browserify.js:5471 =>                 return possibleMatcher.test(arg);
./node_modules/fs-readline/test/fixtures/afile.txt:2952 => "Ah, yes! Today's events mark an epoch, the greatest epoch in our
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4727 => 					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4781 => 		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4854 => 			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
./node_modules/pako/dist/pako.js:6459 =>     /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
./test/tc0004/rdfcore/Manifest.rdf:4655 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-subClassOf-a-Property/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4657 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-subClassOf-a-Property" />
./test/tc0004/rdfcore/Manifest.rdf:4658 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4659 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4661 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4669 => This test is encoded as follows: a Property may have a subclass (that is, such an RDF graph
./test/tc0004/rdfcore/Manifest.rdf:4671 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4673 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4674 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4676 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4677 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-subClassOf-a-Property/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4678 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4680 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4681 =>       <test:False-Document/>
./test/tc0004/rdfcore/Manifest.rdf:4682 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4684 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4688 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-subPropertyOf-semantics/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4690 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfs-subPropertyOf-semantics" />
./test/tc0004/rdfcore/Manifest.rdf:4691 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4692 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jan/0025.html" />
./test/tc0004/rdfcore/Manifest.rdf:4695 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4699 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4701 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4702 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4704 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4705 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-subPropertyOf-semantics/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4706 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4708 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4709 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/rdfs-subPropertyOf-semantics/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4710 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4712 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4716 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4718 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4719 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0476.html" />
./test/tc0004/rdfcore/Manifest.rdf:4720 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4723 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4725 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4727 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4728 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test001a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4729 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4731 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4732 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test001b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4733 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4735 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4738 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4740 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4741 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0476.html" />
./test/tc0004/rdfcore/Manifest.rdf:4742 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4745 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4747 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4749 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4750 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test002a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4751 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4753 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4754 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test002b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4755 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4757 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4760 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:4762 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4763 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0476.html" />
./test/tc0004/rdfcore/Manifest.rdf:4764 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4767 => 	 This is the same as test001, but using RDFS-entailment.
./test/tc0004/rdfcore/Manifest.rdf:4768 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4770 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4771 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4773 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4774 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test001a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4775 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4777 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4778 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test001b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4779 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4781 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4784 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:4786 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4787 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Feb/0476.html" />
./test/tc0004/rdfcore/Manifest.rdf:4788 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4791 => 	 This is the same as test002, but using RDFS-entailment.
./test/tc0004/rdfcore/Manifest.rdf:4792 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4794 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4795 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:4797 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4798 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test002a.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4799 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4801 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4802 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/statement-entailment/test002b.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4803 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4805 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4813 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/Manifest.rdf#language-tag-case-1">
./test/tc0004/rdfcore/Manifest.rdf:4815 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4816 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:4818 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4820 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4822 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4824 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4825 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:4826 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4827 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4829 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4830 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:4831 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4832 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4834 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4836 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/Manifest.rdf#language-tag-case-2">
./test/tc0004/rdfcore/Manifest.rdf:4838 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4839 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:4841 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4843 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4845 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:4847 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4848 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:4849 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/test002.rdf" />
./dist/rdflib.js:8326 =>       // handle Link Header (avoid unsafe header warning by existence testing)
./dist/rdflib.js:8329 =>       if(rlink.test(req.getAllResponseHeaders())) {
./node_modules/babel-polyfill/dist/polyfill.js:5895 =>   , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/core-js/client/library.js:6738 => 	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/fs-readline/test/fixtures/afile.txt:3130 => course have not the slightest idea what a treasure they possess in
./node_modules/JSONStream/test/fixtures/all_npm.json:2049 => {"id":"m1test","key":"m1test","value":{"rev":"3-815ce56949e41e120082632629439eac"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:2057 => {"id":"macrotest","key":"macrotest","value":{"rev":"10-2c6ceffb38f8ce5b0f382dbb02720d70"}},
./node_modules/lodash/lodash.js:6754 =>       if (reLeadingDot.test(string)) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4891 => 				// Can't use an .isFunction() check here because IE6/7 fails that test.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:4983 => 				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6321 => 		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6409 => 		if ( rnumnonpx.test(val) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6479 => 				return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6502 => // These hooks cannot be added until DOM ready because the support test
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6530 => 						return rnumnonpx.test( computed ) ?
./node_modules/mocha/mocha.js:9221 =>       return left === right || (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));
./node_modules/mocha/mocha.js:9354 =>         if (!(/\n$/.test(current.value)) && (isLast || isLastOfType)) {
./dist/rdflib.min.js:167 => function copy(e,t){for(var n in e)t[n]=e[n]}function _extends(e,t){function n(){}var o=e.prototype;if(Object.create){var i=Object.create(t.prototype);o.__proto__=i}o instanceof t||(n.prototype=t.prototype,n=new n,copy(o,n),e.prototype=o=n),o.constructor!=e&&("function"!=typeof e&&console.error("unknow Class:"+e),o.constructor=e)}function DOMException(e,t){if(t instanceof Error)var n=t;else n=this,Error.call(this,ExceptionMessage[e]),this.message=ExceptionMessage[e],Error.captureStackTrace&&Error.captureStackTrace(this,DOMException);return n.code=e,t&&(this.message=this.message+": "+t),n}function NodeList(){}function LiveNodeList(e,t){this._node=e,this._refresh=t,_updateLiveList(this)}function _updateLiveList(e){var t=e._node._inc||e._node.ownerDocument._inc;if(e._inc!=t){var n=e._refresh(e._node);__set__(e,"length",n.length),copy(n,e),e._inc=t}}function NamedNodeMap(){}function _findNodeIndex(e,t){for(var n=e.length;n--;)if(e[n]===t)return n}function _addNamedNode(e,t,n,o){if(o?t[_findNodeIndex(t,o)]=n:t[t.length++]=n,e){n.ownerElement=e;var i=e.ownerDocument;i&&(o&&_onRemoveAttribute(i,e,o),_onAddAttribute(i,e,n))}}function _removeNamedNode(e,t,n){var o=_findNodeIndex(t,n);if(!(o>=0))throw DOMException(NOT_FOUND_ERR,new Error(e.tagName+"@"+n));for(var i=t.length-1;o<i;)t[o]=t[++o];if(t.length=i,e){var r=e.ownerDocument;r&&(_onRemoveAttribute(r,e,n),n.ownerElement=null)}}function DOMImplementation(e){if(this._features={},e)for(var t in e)this._features=e[t]}function Node(){}function _xmlEncoder(e){return"<"==e&&"&lt;"||">"==e&&"&gt;"||"&"==e&&"&amp;"||'"'==e&&"&quot;"||"&#"+e.charCodeAt()+";"}function _visitNode(e,t){if(t(e))return!0;if(e=e.firstChild)do if(_visitNode(e,t))return!0;while(e=e.nextSibling)}function Document(){}function _onAddAttribute(e,t,n){e&&e._inc++;var o=n.namespaceURI;"http://www.w3.org/2000/xmlns/"==o&&(t._nsMap[n.prefix?n.localName:""]=n.value)}function _onRemoveAttribute(e,t,n,o){e&&e._inc++;var i=n.namespaceURI;"http://www.w3.org/2000/xmlns/"==i&&delete t._nsMap[n.prefix?n.localName:""]}function _onUpdateChild(e,t,n){if(e&&e._inc){e._inc++;var o=t.childNodes;if(n)o[o.length++]=n;else{for(var i=t.firstChild,r=0;i;)o[r++]=i,i=i.nextSibling;o.length=r}}}function _removeChild(e,t){var n=t.previousSibling,o=t.nextSibling;return n?n.nextSibling=o:e.firstChild=o,o?o.previousSibling=n:e.lastChild=n,_onUpdateChild(e.ownerDocument,e),t}function _insertBefore(e,t,n){var o=t.parentNode;if(o&&o.removeChild(t),t.nodeType===DOCUMENT_FRAGMENT_NODE){var i=t.firstChild;if(null==i)return t;var r=t.lastChild}else i=r=t;var a=n?n.previousSibling:e.lastChild;i.previousSibling=a,r.nextSibling=n,a?a.nextSibling=i:e.firstChild=i,null==n?e.lastChild=r:n.previousSibling=r;do i.parentNode=e;while(i!==r&&(i=i.nextSibling));return _onUpdateChild(e.ownerDocument||e,e),t.nodeType==DOCUMENT_FRAGMENT_NODE&&(t.firstChild=t.lastChild=null),t}function _appendSingleChild(e,t){var n=t.parentNode;if(n){var o=e.lastChild;n.removeChild(t);var o=e.lastChild}var o=e.lastChild;return t.parentNode=e,t.previousSibling=o,t.nextSibling=null,o?o.nextSibling=t:e.firstChild=t,e.lastChild=t,_onUpdateChild(e.ownerDocument,e,t),t}function Element(){this._nsMap={}}function Attr(){}function CharacterData(){}function Text(){}function Comment(){}function CDATASection(){}function DocumentType(){}function Notation(){}function Entity(){}function EntityReference(){}function DocumentFragment(){}function ProcessingInstruction(){}function XMLSerializer(){}function nodeSerializeToString(e,t){var n=[],o=9==this.nodeType?this.documentElement:this,i=o.prefix,r=o.namespaceURI;if(r&&null==i){var i=o.lookupPrefix(r);if(null==i)var a=[{namespace:r,prefix:null}]}return serializeToString(this,n,e,t,a),n.join("")}function needNamespaceDefine(e,t,n){var o=e.prefix||"",i=e.namespaceURI;if(!o&&!i)return!1;if("xml"===o&&"http://www.w3.org/XML/1998/namespace"===i||"http://www.w3.org/2000/xmlns/"==i)return!1;for(var r=n.length;r--;){var a=n[r];if(a.prefix==o)return a.namespace!=i}return!0}function serializeToString(e,t,n,o,i){if(o){if(e=o(e),!e)return;if("string"==typeof e)return void t.push(e)}switch(e.nodeType){case ELEMENT_NODE:i||(i=[]);var r=(i.length,e.attributes),a=r.length,s=e.firstChild,u=e.tagName;n=htmlns===e.namespaceURI||n,t.push("<",u);for(var d=0;d<a;d++){var c=r.item(d);"xmlns"==c.prefix?i.push({prefix:c.localName,namespace:c.value}):"xmlns"==c.nodeName&&i.push({prefix:"",namespace:c.value})}for(var d=0;d<a;d++){var c=r.item(d);if(needNamespaceDefine(c,n,i)){var N=c.prefix||"",l=c.namespaceURI,p=N?" xmlns:"+N:" xmlns";t.push(p,'="',l,'"'),i.push({prefix:N,namespace:l})}serializeToString(c,t,n,o,i)}if(needNamespaceDefine(e,n,i)){var N=e.prefix||"",l=e.namespaceURI,p=N?" xmlns:"+N:" xmlns";t.push(p,'="',l,'"'),i.push({prefix:N,namespace:l})}if(s||n&&!/^(?:meta|link|img|br|hr|input)$/i.test(u)){if(t.push(">"),n&&/^script$/i.test(u))for(;s;)s.data?t.push(s.data):serializeToString(s,t,n,o,i),s=s.nextSibling;else for(;s;)serializeToString(s,t,n,o,i),s=s.nextSibling;t.push("</",u,">")}else t.push("/>");return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:for(var s=e.firstChild;s;)serializeToString(s,t,n,o,i),s=s.nextSibling;return;case ATTRIBUTE_NODE:return t.push(" ",e.name,'="',e.value.replace(/[<&"]/g,_xmlEncoder),'"');case TEXT_NODE:return t.push(e.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return t.push("<![CDATA[",e.data,"]]>");case COMMENT_NODE:return t.push("<!--",e.data,"-->");case DOCUMENT_TYPE_NODE:var E=e.publicId,m=e.systemId;if(t.push("<!DOCTYPE ",e.name),E)t.push(' PUBLIC "',E),m&&"."!=m&&t.push('" "',m),t.push('">');else if(m&&"."!=m)t.push(' SYSTEM "',m,'">');else{var h=e.internalSubset;h&&t.push(" [",h,"]"),t.push(">")}return;case PROCESSING_INSTRUCTION_NODE:return t.push("<?",e.target," ",e.data,"?>");case ENTITY_REFERENCE_NODE:return t.push("&",e.nodeName,";");default:t.push("??",e.nodeName)}}function importNode(e,t,n){var o;switch(t.nodeType){case ELEMENT_NODE:o=t.cloneNode(!1),o.ownerDocument=e;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:n=!0}if(o||(o=t.cloneNode(!1)),o.ownerDocument=e,o.parentNode=null,n)for(var i=t.firstChild;i;)o.appendChild(importNode(e,i,n)),i=i.nextSibling;return o}function cloneNode(e,t,n){var o=new t.constructor;for(var i in t){var r=t[i];"object"!=typeof r&&r!=o[i]&&(o[i]=r)}switch(t.childNodes&&(o.childNodes=new NodeList),o.ownerDocument=e,o.nodeType){case ELEMENT_NODE:var a=t.attributes,s=o.attributes=new NamedNodeMap,u=a.length;s._ownerElement=o;for(var d=0;d<u;d++)o.setAttributeNode(cloneNode(e,a.item(d),!0));break;case ATTRIBUTE_NODE:n=!0}if(n)for(var c=t.firstChild;c;)o.appendChild(cloneNode(e,c,n)),c=c.nextSibling;return o}function __set__(e,t,n){e[t]=n}function getTextContent(e){switch(e.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var t=[];for(e=e.firstChild;e;)7!==e.nodeType&&8!==e.nodeType&&t.push(getTextContent(e)),e=e.nextSibling;return t.join("");default:return e.nodeValue}}var htmlns="http://www.w3.org/1999/xhtml",NodeType={},ELEMENT_NODE=NodeType.ELEMENT_NODE=1,ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2,TEXT_NODE=NodeType.TEXT_NODE=3,CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4,ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5,ENTITY_NODE=NodeType.ENTITY_NODE=6,PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7,COMMENT_NODE=NodeType.COMMENT_NODE=8,DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9,DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10,DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11,NOTATION_NODE=NodeType.NOTATION_NODE=12,ExceptionCode={},ExceptionMessage={},INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]="Index size error",1),DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]="DOMString size error",2),HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]="Hierarchy request error",3),WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]="Wrong document",4),INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]="Invalid character",5),NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]="No data allowed",6),NO_MODIFICATION_ALLOW
./test/tc0004/rdfcore/Manifest.rdf:4850 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:4852 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4853 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:4854 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/tex-01/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4855 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:4857 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:4862 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4864 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4865 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0152.html" />
./test/tc0004/rdfcore/Manifest.rdf:4866 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4867 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4869 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4871 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4872 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4873 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4875 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4876 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4877 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4879 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4882 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4884 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4885 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Jan/0152.html" />
./test/tc0004/rdfcore/Manifest.rdf:4886 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4887 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4889 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4891 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4892 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4893 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4895 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4896 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/unrecognised-xml-attributes/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4897 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4899 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4906 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xml-canon/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4908 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4909 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Aug/0138.html" />
./test/tc0004/rdfcore/Manifest.rdf:4910 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4912 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4914 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4915 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xml-canon/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4916 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4918 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4919 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xml-canon/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4920 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4922 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4925 => <test:NegativeParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#error001">
./test/tc0004/rdfcore/Manifest.rdf:4927 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:4928 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4929 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4930 => 	This test case concerns URIs relative to a non-relative URI scheme base.
./test/tc0004/rdfcore/Manifest.rdf:4933 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:4935 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4936 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/error001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4937 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4939 => </test:NegativeParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4942 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test001">
./test/tc0004/rdfcore/Manifest.rdf:4944 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:4945 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4946 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:4947 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4948 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4950 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4952 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4953 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4954 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4956 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4957 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test001.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4958 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4960 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4963 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test002">
./test/tc0004/rdfcore/Manifest.rdf:4965 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:4966 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4967 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:4968 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4969 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4971 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4973 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4974 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4975 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4977 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4978 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test002.nt" />
./test/tc0004/rdfcore/Manifest.rdf:4979 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4981 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:4984 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test003">
./test/tc0004/rdfcore/Manifest.rdf:4986 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:4987 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:4988 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:4989 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:4990 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:4992 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:4994 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4995 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:4996 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4998 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:4999 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test003.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5000 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5002 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5005 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test004">
./test/tc0004/rdfcore/Manifest.rdf:5007 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5008 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5009 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5010 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5011 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5013 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5015 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5016 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test004.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5017 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5019 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5020 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test004.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5021 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5023 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5026 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test005">
./test/tc0004/rdfcore/Manifest.rdf:5028 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5029 =>    <test:status>OBSOLETE</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5030 =>    <!-- <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5031 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5032 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5034 => beyond the scope of these test cases. Test case withdrawn.
./test/tc0004/rdfcore/Manifest.rdf:5035 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5037 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5038 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test005.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5039 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5041 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5042 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test005.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5043 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5045 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5048 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test006">
./node_modules/babel-polyfill/dist/polyfill.js:6232 =>   // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
./node_modules/babylon/lib/index.js:6747 =>           if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));
./node_modules/babylon/lib/index.js:6750 =>           if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));
./node_modules/jsonld/js/jsonld.js:6946 =>     if(empty.test(line)) {
./node_modules/JSONStream/test/fixtures/all_npm.json:2131 => {"id":"meta-test","key":"meta-test","value":{"rev":"49-92df2922499960ac750ce96d861ddd7e"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:2142 => {"id":"microtest","key":"microtest","value":{"rev":"11-11afdadfb15c1db030768ce52f34de1a"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:2163 => {"id":"minimal-test","key":"minimal-test","value":{"rev":"15-65dca2c1ee27090264577cc8b93983cb"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:2167 => {"id":"minitest","key":"minitest","value":{"rev":"13-c92e32499a25ff2d7e484fbbcabe1081"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5337 => 			if ( rformElems.test( this.nodeName ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5361 => 				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "_change_attached" ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5384 => 			return !rformElems.test( this.nodeName );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6576 => 	if ( !rmargin.test( prefix ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6600 => 				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6601 => 				( this.checked || !manipulation_rcheckableType.test( type ) );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6658 => 			if ( traditional || rbracket.test( prefix ) ) {
./node_modules/mocha/mocha.js:9437 =>       while (i < diffstr.length && !(/^@@/.test(diffstr[i]))) {
./dist/rdflib.min.js:169 => function XMLReader(){}function parse(e,t,r,a,n){function s(e){if(e>65535){e-=65536;var t=55296+(e>>10),r=56320+(1023&e);return String.fromCharCode(t,r)}return String.fromCharCode(e)}function c(e){var t=e.slice(1,-1);return t in r?r[t]:"#"===t.charAt(0)?s(parseInt(t.substr(1).replace("x","0x"))):(n.error("entity not found:"+e),e)}function i(t){if(t>p){var r=e.substring(p,t).replace(/&#?\w+;/g,c);m&&o(p),a.characters(r,0,t-p),p=t}}function o(t,r){for(;t>=l&&(r=_.exec(e));)u=r.index,l=u+r[0].length,m.lineNumber++;m.columnNumber=t-u+1}for(var u=0,l=0,_=/.*(?:\r\n?|\n)|.*$/g,m=a.locator,f=[{currentNSMap:t}],d={},p=0;;){try{var T=e.indexOf("<",p);if(T<0){if(!e.substr(p).match(/^\s*$/)){var S=a.doc,h=S.createTextNode(e.substr(p));S.appendChild(h),a.currentElement=h}return}switch(T>p&&i(T),e.charAt(T+1)){case"/":var A=e.indexOf(">",T+3),g=e.substring(T+2,A),w=f.pop();A<0?(g=e.substring(T+2).replace(/[\s<].*/,""),n.error("end tag name: "+g+" is not complete:"+w.tagName),A=T+1+g.length):g.match(/\s</)&&(g=g.replace(/[\s<].*/,""),n.error("end tag name: "+g+" maybe not complete"),A=T+1+g.length);var E=w.localNSMap,N=w.tagName==g,b=N||w.tagName&&w.tagName.toLowerCase()==g.toLowerCase();if(b){if(a.endElement(w.uri,w.localName,g),E)for(var v in E)a.endPrefixMapping(v);N||n.fatalError("end tag name: "+g+" is not match the current start tagName:"+w.tagName)}else f.push(w);A++;break;case"?":m&&o(T),A=parseInstruction(e,T,a);break;case"!":m&&o(T),A=parseDCC(e,T,a,n);break;default:m&&o(T);var x=new ElementAttributes,C=f[f.length-1].currentNSMap,A=parseElementStartPart(e,T,x,C,c,n),R=x.length;if(!x.closed&&fixSelfClosed(e,A,x.tagName,d)&&(x.closed=!0,r.nbsp||n.warning("unclosed xml attribute")),m&&R){for(var O=copyLocator(m,{}),D=0;D<R;D++){var L=x[D];o(L.offset),L.locator=copyLocator(m,{})}a.locator=O,appendElement(x,a,C)&&f.push(x),a.locator=m}else appendElement(x,a,C)&&f.push(x);"http://www.w3.org/1999/xhtml"!==x.uri||x.closed?A++:A=parseHtmlSpecialContent(e,A,x.tagName,c,a)}}catch(e){n.error("element parse error: "+e),A=-1}A>p?p=A:i(Math.max(T,p)+1)}}function copyLocator(e,t){return t.lineNumber=e.lineNumber,t.columnNumber=e.columnNumber,t}function parseElementStartPart(e,t,r,a,n,s){for(var c,i,o=++t,u=S_TAG;;){var l=e.charAt(o);switch(l){case"=":if(u===S_ATTR)c=e.slice(t,o),u=S_EQ;else{if(u!==S_ATTR_SPACE)throw new Error("attribute equal must after attrName");u=S_EQ}break;case"'":case'"':if(u===S_EQ||u===S_ATTR){if(u===S_ATTR&&(s.warning('attribute value must after "="'),c=e.slice(t,o)),t=o+1,o=e.indexOf(l,t),!(o>0))throw new Error("attribute value no end '"+l+"' match");i=e.slice(t,o).replace(/&#?\w+;/g,n),r.add(c,i,t-1),u=S_ATTR_END}else{if(u!=S_ATTR_NOQUOT_VALUE)throw new Error('attribute value must after "="');i=e.slice(t,o).replace(/&#?\w+;/g,n),r.add(c,i,t),s.warning('attribute "'+c+'" missed start quot('+l+")!!"),t=o+1,u=S_ATTR_END}break;case"/":switch(u){case S_TAG:r.setTagName(e.slice(t,o));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:u=S_TAG_CLOSE,r.closed=!0;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error("attribute invalid close char('/')")}break;case"":return s.error("unexpected end of input"),u==S_TAG&&r.setTagName(e.slice(t,o)),o;case">":switch(u){case S_TAG:r.setTagName(e.slice(t,o));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:i=e.slice(t,o),"/"===i.slice(-1)&&(r.closed=!0,i=i.slice(0,-1));case S_ATTR_SPACE:u===S_ATTR_SPACE&&(i=c),u==S_ATTR_NOQUOT_VALUE?(s.warning('attribute "'+i+'" missed quot(")!!'),r.add(c,i.replace(/&#?\w+;/g,n),t)):("http://www.w3.org/1999/xhtml"===a[""]&&i.match(/^(?:disabled|checked|selected)$/i)||s.warning('attribute "'+i+'" missed value!! "'+i+'" instead!!'),r.add(i,i,t));break;case S_EQ:throw new Error("attribute value missed!!")}return o;case"":l=" ";default:if(l<=" ")switch(u){case S_TAG:r.setTagName(e.slice(t,o)),u=S_TAG_SPACE;break;case S_ATTR:c=e.slice(t,o),u=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var i=e.slice(t,o).replace(/&#?\w+;/g,n);s.warning('attribute "'+i+'" missed quot(")!!'),r.add(c,i,t);case S_ATTR_END:u=S_TAG_SPACE}else switch(u){case S_ATTR_SPACE:r.tagName;"http://www.w3.org/1999/xhtml"===a[""]&&c.match(/^(?:disabled|checked|selected)$/i)||s.warning('attribute "'+c+'" missed value!! "'+c+'" instead2!!'),r.add(c,c,t),t=o,u=S_ATTR;break;case S_ATTR_END:s.warning('attribute space is required"'+c+'"!!');case S_TAG_SPACE:u=S_ATTR,t=o;break;case S_EQ:u=S_ATTR_NOQUOT_VALUE,t=o;break;case S_TAG_CLOSE:throw new Error("elements closed character '/' and '>' must be connected to")}}o++}}function appendElement(e,t,r){for(var a=e.tagName,n=null,s=e.length;s--;){var c=e[s],i=c.qName,o=c.value,u=i.indexOf(":");if(u>0)var l=c.prefix=i.slice(0,u),_=i.slice(u+1),m="xmlns"===l&&_;else _=i,l=null,m="xmlns"===i&&"";c.localName=_,m!==!1&&(null==n&&(n={},_copy(r,r={})),r[m]=n[m]=o,c.uri="http://www.w3.org/2000/xmlns/",t.startPrefixMapping(m,o))}for(var s=e.length;s--;){c=e[s];var l=c.prefix;l&&("xml"===l&&(c.uri="http://www.w3.org/XML/1998/namespace"),"xmlns"!==l&&(c.uri=r[l||""]))}var u=a.indexOf(":");u>0?(l=e.prefix=a.slice(0,u),_=e.localName=a.slice(u+1)):(l=null,_=e.localName=a);var f=e.uri=r[l||""];if(t.startElement(f,_,a,e),!e.closed)return e.currentNSMap=r,e.localNSMap=n,!0;if(t.endElement(f,_,a),n)for(l in n)t.endPrefixMapping(l)}function parseHtmlSpecialContent(e,t,r,a,n){if(/^(?:script|textarea)$/i.test(r)){var s=e.indexOf("</"+r+">",t),c=e.substring(t+1,s);if(/[&<]/.test(c))return/^script$/i.test(r)?(n.characters(c,0,c.length),s):(c=c.replace(/&#?\w+;/g,a),n.characters(c,0,c.length),s)}return t+1}function fixSelfClosed(e,t,r,a){var n=a[r];return null==n&&(n=e.lastIndexOf("</"+r+">"),n<t&&(n=e.lastIndexOf("</"+r)),a[r]=n),n<t}function _copy(e,t){for(var r in e)t[r]=e[r]}function parseDCC(e,t,r,a){var n=e.charAt(t+2);switch(n){case"-":if("-"===e.charAt(t+3)){var s=e.indexOf("-->",t+4);return s>t?(r.comment(e,t+4,s-t-4),s+3):(a.error("Unclosed comment"),-1)}return-1;default:if("CDATA["==e.substr(t+3,6)){var s=e.indexOf("]]>",t+9);return r.startCDATA(),r.characters(e,t+9,s-t-9),r.endCDATA(),s+3}var c=split(e,t),i=c.length;if(i>1&&/!doctype/i.test(c[0][0])){var o=c[1][0],u=i>3&&/^public$/i.test(c[2][0])&&c[3][0],l=i>4&&c[4][0],_=c[i-1];return r.startDTD(o,u&&u.replace(/^(['"])(.*?)\1$/,"$2"),l&&l.replace(/^(['"])(.*?)\1$/,"$2")),r.endDTD(),_.index+_[0].length}}return-1}function parseInstruction(e,t,r){var a=e.indexOf("?>",t);if(a){var n=e.substring(t,a).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);if(n){n[0].length;return r.processingInstruction(n[1],n[2]),a+2}return-1}return-1}function ElementAttributes(e){}function _set_proto_(e,t){return e.__proto__=t,e}function split(e,t){var r,a=[],n=/'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;for(n.lastIndex=t,n.exec(e);r=n.exec(e);)if(a.push(r),r[1])return a}var nameStartChar=/[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,nameChar=new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"),tagNamePattern=new RegExp("^"+nameStartChar.source+nameChar.source+"*(?::"+nameStartChar.source+nameChar.source+"*)?$"),S_TAG=0,S_ATTR=1,S_ATTR_SPACE=2,S_EQ=3,S_ATTR_NOQUOT_VALUE=4,S_ATTR_END=5,S_TAG_SPACE=6,S_TAG_CLOSE=7;XMLReader.prototype={parse:function(e,t,r){var a=this.domBuilder;a.startDocument(),_copy(t,t={}),parse(e,t,r,a,this.errorHandler),a.endDocument()}},ElementAttributes.prototype={setTagName:function(e){if(!tagNamePattern.test(e))throw new Error("invalid tagName:"+e);this.tagName=e},add:function(e,t,r){if(!tagNamePattern.test(e))throw new Error("invalid attribute:"+e);this[this.length++]={qName:e,value:t,offset:r}},length:0,getLocalName:function(e){return this[e].localName},getLocator:function(e){return this[e].locator},getQName:function(e){return this[e].qName},getURI:function(e){return this[e].uri},getValue:function(e){return this[e].value}},_set_proto_({},_set_proto_.prototype)instanceof _set_proto_||(_set_proto_=function(e,t){function r(){}r.prototype=t,r=new r;for(t in e)r[t]=e[t];return r}),exports.XMLReader=XMLReader;
./test/tc0004/rdfcore/Manifest.rdf:5050 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5051 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5052 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5053 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5054 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5056 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5058 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5059 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test006.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5060 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5062 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5063 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test006.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5064 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5066 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5069 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test007">
./test/tc0004/rdfcore/Manifest.rdf:5071 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5072 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5073 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5074 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5075 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5077 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5079 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5080 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test007.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5081 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5083 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5084 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test007.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5085 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5087 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5090 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test008">
./test/tc0004/rdfcore/Manifest.rdf:5092 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5093 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5094 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5095 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5096 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5098 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5100 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5101 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test008.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5102 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5104 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5105 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test008.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5106 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5108 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5111 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test009">
./test/tc0004/rdfcore/Manifest.rdf:5113 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5114 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5115 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5116 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5117 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5119 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5121 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5122 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test009.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5123 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5125 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5126 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test009.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5127 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5129 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5132 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test010">
./test/tc0004/rdfcore/Manifest.rdf:5134 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5135 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5136 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5137 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5138 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5140 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5142 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5143 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test010.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5144 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5146 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5147 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test010.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5148 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5150 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5153 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test011">
./test/tc0004/rdfcore/Manifest.rdf:5155 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5156 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5157 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5158 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5159 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5161 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5163 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5164 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test011.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5165 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5167 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5168 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test011.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5169 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5171 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5174 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test012">
./test/tc0004/rdfcore/Manifest.rdf:5176 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5177 =>    <test:status>WITHDRAWN</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5178 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Oct/0217.html" />
./test/tc0004/rdfcore/Manifest.rdf:5179 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5180 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5182 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5184 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5185 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test012.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5186 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5188 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5189 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test012.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5190 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5192 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5195 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test013">
./test/tc0004/rdfcore/Manifest.rdf:5197 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5198 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5199 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5200 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5201 =>    <!-- <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5203 =>    </test:description> -->
./test/tc0004/rdfcore/Manifest.rdf:5205 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5206 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test013.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5207 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5209 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5210 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test013.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5211 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5213 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5216 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test014">
./test/tc0004/rdfcore/Manifest.rdf:5218 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5219 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5220 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5221 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5222 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5224 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5226 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5227 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test014.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5228 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5230 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5231 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test014.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5232 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5234 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5237 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test015">
./test/tc0004/rdfcore/Manifest.rdf:5239 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./node_modules/core-js/client/core.js:7215 => 	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/core-js/client/shim.js:7201 => 	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
./node_modules/es6-promise/dist/test/browserify.js:6287 =>                     if (/\n/.test(calls[i - 1])) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5586 => 	if ( rkeyEvent.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5590 => 	if ( rmouseEvent.test( name ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:6919 => 		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
./node_modules/mocha/mocha.js:10054 =>         flag = flag || /^[A-Z]/.test(image) && 'appIcon'
./node_modules/mocha/mocha.js:10055 =>         flag = flag || /^png|gif|jpe?g$/.test(ext) && 'image'
./test/tc0004/rdfcore/Manifest.rdf:5240 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5241 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5242 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5243 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5244 => This test case is deprecated. The use of mailto: URIs with xml:base is not within the scope of
./test/tc0004/rdfcore/Manifest.rdf:5246 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5248 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5249 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test015.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5250 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5252 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5253 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test015.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5254 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5256 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5259 => <test:PositiveParserTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/Manifest.rdf#test016">
./test/tc0004/rdfcore/Manifest.rdf:5261 =>    <test:issue rdf:resource="http://www.w3.org/2000/03/rdf-tracking/#rdfms-xml-base" />
./test/tc0004/rdfcore/Manifest.rdf:5262 =>    <test:status>NOT_APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5263 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2002Mar/0235.html" />
./test/tc0004/rdfcore/Manifest.rdf:5264 =>    <!-- <test:discussion rdf:resource="pointer to archived email or other discussion" /> -->
./test/tc0004/rdfcore/Manifest.rdf:5265 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5266 => This test case is deprecated. The use of mailto: URIs with xml:base is not within the scope of
./test/tc0004/rdfcore/Manifest.rdf:5268 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5270 =>    <test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5271 =>       <test:RDF-XML-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test016.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5272 =>    </test:inputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5274 =>    <test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5275 =>       <test:NT-Document rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlbase/test016.nt" />
./test/tc0004/rdfcore/Manifest.rdf:5276 =>    </test:outputDocument>
./test/tc0004/rdfcore/Manifest.rdf:5278 => </test:PositiveParserTest>
./test/tc0004/rdfcore/Manifest.rdf:5284 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/Manifest.rdf#whitespace-facet-1">
./test/tc0004/rdfcore/Manifest.rdf:5286 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5287 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:5289 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5292 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5294 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:5295 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:5296 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:5297 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#int" />
./test/tc0004/rdfcore/Manifest.rdf:5301 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5302 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5303 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5304 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5306 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5307 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5308 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5309 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5311 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:5313 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/Manifest.rdf#whitespace-facet-2">
./test/tc0004/rdfcore/Manifest.rdf:5315 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5316 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:5318 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5321 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5323 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:5324 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:5325 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:5326 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#int" />
./test/tc0004/rdfcore/Manifest.rdf:5328 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5329 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5330 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5331 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5333 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5334 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5335 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5336 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5338 => </test:NegativeEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:5340 => <test:PositiveEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/Manifest.rdf#whitespace-facet-3">
./test/tc0004/rdfcore/Manifest.rdf:5342 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5343 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:5345 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5346 => A simple test for well-formedness of a typed literal.
./test/tc0004/rdfcore/Manifest.rdf:5347 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5349 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:5350 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:5351 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:5352 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#int" />
./test/tc0004/rdfcore/Manifest.rdf:5354 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5355 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5356 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test001.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5357 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5359 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5360 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5361 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5362 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5364 => </test:PositiveEntailmentTest>
./test/tc0004/rdfcore/Manifest.rdf:5367 => <test:NegativeEntailmentTest rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/Manifest.rdf#whitespace-facet-4">
./test/tc0004/rdfcore/Manifest.rdf:5369 =>    <test:status>APPROVED</test:status>
./test/tc0004/rdfcore/Manifest.rdf:5370 =>    <test:approval rdf:resource="http://lists.w3.org/Archives/Public/w3c-rdfcore-wg/2003Jul/0263.html" />
./test/tc0004/rdfcore/Manifest.rdf:5372 =>    <test:description>
./test/tc0004/rdfcore/Manifest.rdf:5374 =>    </test:description>
./test/tc0004/rdfcore/Manifest.rdf:5376 =>    <test:entailmentRules rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#" />
./test/tc0004/rdfcore/Manifest.rdf:5377 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/01/rdf-schema#" />
./test/tc0004/rdfcore/Manifest.rdf:5378 =>    <test:entailmentRules rdf:resource="http://www.w3.org/2000/10/rdf-tests/rdfcore/datatypes#" />
./test/tc0004/rdfcore/Manifest.rdf:5379 =>    <test:datatypeSupport rdf:resource="http://www.w3.org/2001/XMLSchema#int" />
./test/tc0004/rdfcore/Manifest.rdf:5381 =>    <test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5382 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5383 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test002.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5384 =>    </test:premiseDocument>
./test/tc0004/rdfcore/Manifest.rdf:5386 =>    <test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5387 =>       <test:RDF-XML-Document 
./test/tc0004/rdfcore/Manifest.rdf:5388 =>      rdf:about="http://www.w3.org/2000/10/rdf-tests/rdfcore/xmlsch-02/test003.rdf" />
./test/tc0004/rdfcore/Manifest.rdf:5389 =>    </test:conclusionDocument>
./test/tc0004/rdfcore/Manifest.rdf:5391 => </test:NegativeEntailmentTest>
./node_modules/es6-promise/dist/test/browserify.js:6549 =>         function test(callback) {
./node_modules/es6-promise/dist/test/browserify.js:6553 =>                 throw new TypeError("sinon.test needs to wrap a test function, got " + type);
./node_modules/es6-promise/dist/test/browserify.js:6603 =>         test.config = {
./node_modules/es6-promise/dist/test/browserify.js:6611 =>         sinon.test = test;
./node_modules/es6-promise/dist/test/browserify.js:6612 =>         return test;
./node_modules/fs-readline/test/fixtures/afile.txt:3671 => feelings, or his fiancee's, would not stand a year's test, or that
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:5711 => 	// Used for testing something on an element
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7168 => 		s.hasContent = !rnoContent.test( s.type );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7179 => 				cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7186 => 				s.url = rts.test( cacheURL ) ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7192 => 					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7437 => 			if ( contents[ type ] && contents[ type ].test( ct ) ) {
./node_modules/es6-promise/dist/test/browserify.js:6636 =>  * @depend test.js
./node_modules/es6-promise/dist/test/browserify.js:6639 =>  * Test case, sandboxes all test functions
./node_modules/es6-promise/dist/test/browserify.js:6676 =>         function testCase(tests, prefix) {
./node_modules/es6-promise/dist/test/browserify.js:6678 =>             if (!tests || typeof tests != "object") {
./node_modules/es6-promise/dist/test/browserify.js:6679 =>                 throw new TypeError("sinon.testCase needs an object with test functions");
./node_modules/es6-promise/dist/test/browserify.js:6683 =>             prefix = prefix || "test";
./node_modules/es6-promise/dist/test/browserify.js:6685 =>             var methods = {}, testName, property, method;
./node_modules/es6-promise/dist/test/browserify.js:6686 =>             var setUp = tests.setUp;
./node_modules/es6-promise/dist/test/browserify.js:6687 =>             var tearDown = tests.tearDown;
./node_modules/es6-promise/dist/test/browserify.js:6689 =>             for (testName in tests) {
./node_modules/es6-promise/dist/test/browserify.js:6690 =>                 if (tests.hasOwnProperty(testName)) {
./node_modules/es6-promise/dist/test/browserify.js:6691 =>                     property = tests[testName];
./node_modules/es6-promise/dist/test/browserify.js:6693 =>                     if (/^(setUp|tearDown)$/.test(testName)) {
./node_modules/es6-promise/dist/test/browserify.js:6697 =>                     if (typeof property == "function" && rPrefix.test(testName)) {
./node_modules/es6-promise/dist/test/browserify.js:6704 =>                         methods[testName] = sinon.test(method);
./node_modules/es6-promise/dist/test/browserify.js:6706 =>                         methods[testName] = tests[testName];
./node_modules/es6-promise/dist/test/browserify.js:6714 =>         sinon.testCase = testCase;
./node_modules/es6-promise/dist/test/browserify.js:6715 =>         return testCase;
./node_modules/es6-promise/dist/test/browserify.js:6723 =>         require("./test");
./node_modules/es6-promise/dist/test/browserify.js:6738 => },{"./test":37,"./util/core":41}],39:[function(require,module,exports){
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6104 => 			if ( matchExpr["CHILD"].test( match[0] ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6112 => 				if ( rpseudo.test(unquoted) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6163 => 				return pattern.test( elem.className || (typeof elem.getAttribute !== strundefined && elem.getAttribute("class")) || "" );
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7640 => 		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7642 => 			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:7657 => 			s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
./node_modules/mocha/mocha.js:10371 =>         // Return cached feature test result.
./node_modules/mocha/mocha.js:10389 =>             // A test function object with a custom `toJSON` method.
./node_modules/mocha/mocha.js:10408 =>                 // FF 3.1b3 pass this test.
./node_modules/mocha/mocha.js:10430 =>                 // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
./node_modules/mocha/mocha.js:10462 =>                 // Simple parsing test.
./node_modules/es6-promise/dist/test/browserify.js:7017 =>                 return a.test(b);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6370 => 			return rheader.test( elem.nodeName );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6376 => 			// use getAttribute instead to test this case
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6398 => 			return rinputs.test( elem.nodeName );
./node_modules/es6-promise/dist/test/browserify.js:7232 =>  * Modifications and tests by Christian Johansen.
./node_modules/es6-promise/dist/test/browserify.js:7395 =>         var matchUrl = !url || url == reqUrl || (typeof url.test == "function" && url.test(reqUrl));
./node_modules/JSONStream/test/fixtures/all_npm.json:2637 => {"id":"norris-tester","key":"norris-tester","value":{"rev":"3-fc2f34c9373bbdf5a1cd9cfbaff21f83"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6838 => 						if ( rcombinators.test(part) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6845 => 						if ( (not = rendsWithNot.test( part )) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6867 => 			if ( rcombinators.test(part) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6890 => 	if ( matchExpr["POS"].test(selector) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6926 => 			if ( Expr.order.test(type) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:8341 => 					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
./node_modules/es6-promise/dist/test/browserify.js:7403 =>         if (!/^https?:\/\//.test(requestUrl) || rCurrLoc.test(requestUrl)) {
./node_modules/es6-promise/dist/test/browserify.js:7459 =>                 if (this.fakeHTTPMethods && /post/i.test(request.method)) {
./node_modules/JSONStream/test/fixtures/all_npm.json:2724 => {"id":"oktest","key":"oktest","value":{"rev":"3-3b40312743a3eb1d8541ceee3ecfeace"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6949 => 			elements = Expr.find["TAG"]( "*", (rsibling.test( selector ) && context.parentNode) || context );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6971 => 			// A support test would require too much code (would include document ready)
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6984 => 			// This is to test IE's treatment of not explictly
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:6997 => 			// IE8 throws error here (do not put tests after this one)
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7007 => 			div.innerHTML = "<p test=''></p>";
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7008 => 			if ( div.querySelectorAll("[test^='']").length ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7013 => 			// IE8 throws error here (do not put tests after this one)
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7026 => 			if ( !seed && !xml && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7040 => 						newContext = rsibling.test( selector ) && context.parentNode || context;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7081 => 					matches.call( div, "[test!='']:sizzle" );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7094 => 				if ( !isXML( elem ) && !rbuggyMatches.test( expr ) && (!rbuggyQSA || !rbuggyQSA.test( expr )) ) {
./node_modules/es6-promise/dist/test/browserify.js:7883 =>                 if (!/^(get|head)$/i.test(this.method)) {
./node_modules/JSONStream/test/fixtures/all_npm.json:2835 => {"id":"php-autotest","key":"php-autotest","value":{"rev":"3-04470b38b259187729af574dd3dc1f97"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7208 => 				rneedsContext.test( selector ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7219 => 			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7338 => 		if ( !runtil.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7348 => 		if ( this.length > 1 && rparentsprev.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7416 => 		if ( isSimple.test( qualifier ) ) {
./node_modules/minifyify/test/fixtures/libraries/Jquery.js:8731 => 					// whichever is greatest
./node_modules/es6-promise/dist/test/browserify.js:7928 =>                 // test integration across browsers
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7658 => 			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7659 => 				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7660 => 				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7737 => 		if ( !jQuery.support.checkClone && l > 1 && typeof value === "string" && rchecked.test( value ) ) {
./node_modules/mocha/mocha.js:11460 =>     return reIsNative.test(fnToString.call(value));
./node_modules/es6-promise/dist/test/browserify.js:8194 =>                     if (!IE6Re.test(navigator.userAgent)) {
./node_modules/es6-promise/dist/test/browserify.js:8378 =>                 if (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header)) {
./node_modules/es6-promise/dist/test/browserify.js:8389 =>             // Helps testing
./node_modules/fs-readline/test/fixtures/afile.txt:4698 => "You know it is my greatest pleasure," said Natasha. "It's not fair;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7880 => 	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7930 => 		first.charAt(0) === "<" && !rnocache.test( first ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7931 => 		(jQuery.support.checkClone || !rchecked.test( first )) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:7932 => 		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8000 => 	if ( rcheckableType.test( elem.type ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8012 => 		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8088 => 				if ( !rhtml.test( elem ) ) {
./node_modules/mocha/mocha.js:11462 =>   return isObjectLike(value) && reIsHostCtor.test(value);
./node_modules/mocha/mocha.js:11531 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./node_modules/es6-promise/dist/test/browserify.js:8411 =>                 if (!/^(get|head)$/i.test(this.method)) {
./node_modules/es6-promise/dist/test/browserify.js:8461 =>                 if (/^Set-Cookie2?$/i.test(header)) {
./node_modules/es6-promise/dist/test/browserify.js:8479 =>                         !/^Set-Cookie2?$/i.test(header)) {
./node_modules/es6-promise/dist/test/browserify.js:8508 =>                     (!type || /(text\/xml)|(application\/xml)|(\+xml)/.test(type))) {
./node_modules/es6-promise/dist/test/browserify.js:8575 =>                     if (objId == "Microsoft.XMLHTTP" || /^Msxml2\.XMLHTTP/i.test(objId)) {
./node_modules/fs-readline/test/fixtures/afile.txt:5008 => slightest variation of note in the cries of the dogs.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8114 => 						hasBody = rtbody.test(elem);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8131 => 					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8171 => 				if ( !elem.type || rscriptType.test( elem.type ) ) {
./node_modules/es6-promise/dist/test/browserify.js:8664 =>             } else if (excludes[i].test && excludes[i].test(name)) {
./node_modules/es6-promise/dist/test/browserify.js:8760 =>             str = (/\s/.test(prop) ? '"' + prop + '"' : prop) + ": " + str;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8617 => 			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {
./node_modules/mocha/mocha.js:12064 =>     return reIsNative.test(fnToString.call(value));
./node_modules/mocha/mocha.js:12066 =>   return isObjectLike(value) && reIsHostCtor.test(value);
./node_modules/mocha/mocha.js:12147 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./dist/rdflib.js:11729 => function _compareShortestLeast(a, b) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8652 => 		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8743 => 		if ( rnumnonpx.test(val) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8816 => 				if ( elem.offsetWidth === 0 && rdisplayswap.test( curCSS( elem, "display" ) ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8843 => 			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8874 => 			style.filter = ralpha.test( filter ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8881 => // These hooks cannot be added until DOM ready because the support test
./node_modules/mocha/mocha.js:12509 => // cached from whatever global is present so that test runners that stub it
./dist/rdflib.js:11986 =>         _compareShortestLeast(curie, choice) < 0)) {
./node_modules/es6-promise/dist/test/browserify.js:9160 =>         if (matcher && typeof matcher.test === "function") {
./node_modules/es6-promise/dist/test/browserify.js:9161 =>             return matcher.test(object);
./node_modules/es6-promise/dist/test/browserify.js:9269 =>     if (l > 3 || !/^(\d\d:){0,2}\d\d?$/.test(str)) {
./node_modules/JSONStream/test/fixtures/all_npm.json:3341 => {"id":"sink-test","key":"sink-test","value":{"rev":"18-411afcb398102f245e92f2ce91897d3e"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8908 => 						return rnumnonpx.test( ret ) ? jQuery( elem ).position()[ prop ] + "px" : ret;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8950 => 	if ( !rmargin.test( prefix ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8970 => 				( this.checked || rselectTextarea.test( this.nodeName ) ||
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:8971 => 					rinput.test( this.type ) );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9028 => 			if ( traditional || rbracket.test( prefix ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9132 => 				placeBefore = /^\+/.test( dataType );
./dist/rdflib.min.js:218 => "use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _classCallCheck(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}function indexedFormulaQuery(t,n,e,r){function o(t,n){return t.nvars!==n.nvars?t.nvars-n.nvars:t.index.length-n.index.length}var i=function(t){var n,e="";for(n in t)t.hasOwnProperty(n)&&(e+="    "+n+" -> "+t[n]);return e},s=function(t){var n,e="Bindings: ",r=t.length;for(n=0;n<r;n++)e+=i(t[n][0])+";\n\t";return e},u=function(t,n,e,r){var o=e[t];if(void 0===o){if(t.isVar){var i=[];return i[t]=n,[[i,null]]}o=t}if(!o.complexType)return r.redirections[o]&&(o=r.redirections[o]),r.redirections[n]&&(n=r.redirections[n]),o.sameTerm(n)?[[[],null]]:[];if(t instanceof Array)return n instanceof Array?a(t,n,e):[];throw new Error("query.js: oops - code not written yet")},a=function t(n,e,r,o){var i;if(n.length!==e.length)return[];if(!n.length)return[[[],null]];var s=u(n[0],e[0],r,o);if(0===s.length)return s;var a,c,l,h,d,f,g,p=[],b=s.length;for(a=0;a<b;a++){c=s[a][0],g=[];for(d in c)c.hasOwnProperty(d)&&(g[d]=c[d]);for(d in r)r.hasOwnProperty(d)&&(g[d]=r[d]);for(i=t(n.slice(1),e.slice(1),g,o),h=i.length,l=0;l<h;l++){f=i[l][0];for(d in c)c.hasOwnProperty(d)&&(f[d]=c[d]);p.push([f,null])}}return p},c=function(t,n){var e=n[t];return void 0===e?t:e},l=function(t,n){var e,r={};for(e in t)t.hasOwnProperty(e)&&(r[e]=t[e]);for(e in n)n.hasOwnProperty(e)&&(r[e]=n[e]);return r},h=function(t,n){return this.trunkBindings=n,this.originalCallback=t,this.branches=[],this};h.prototype.checkAllDone=function(){var t;for(t=0;t<this.branches.length;t++)if(!this.branches[t].done)return;log.debug("OPTIONAL BIDNINGS ALL DONE:"),this.doCallBacks(this.branches.length-1,this.trunkBindings)},h.prototype.doCallBacks=function(t,n){var e;if(t<0)return this.originalCallback(n);for(e=0;e<this.branches[t].results.length;e++)this.doCallBacks(t-1,l(n,this.branches[t].results[e]))};var d=function(t,n){return this.count=0,this.success=!1,this.done=!1,this.callback=t,this.onDone=n,this};d.prototype.reportMatch=function(t){this.callback(t),this.success=!0},d.prototype.reportDone=function(){this.done=!0,log.info("Mandatory query branch finished.***"),void 0!==this.onDone&&this.onDone()};var f=function(t){return this.count=0,this.done=!1,this.results=[],this.junction=t,t.branches.push(this),this};f.prototype.reportMatch=function(t){this.results.push(t)},f.prototype.reportDone=function(){log.debug("Optional branch finished - results.length = "+this.results.length),0===this.results.length&&(this.results.push({}),log.debug("Optional branch FAILED - that's OK.")),this.done=!0,this.junction.checkAllDone()};var g=function(t,n,e){var r,o,i,s,u;for(n.nvars=0,n.index=null,o=[n.subject,n.predicate,n.object],u=[t.subjectIndex,t.predicateIndex,t.objectIndex],s=0;s<3;s++)if(o[s].isVar&&void 0===e[o[s]])n.nvars++;else{if(r=c(o[s],e),t.redirections[r.hashString()]&&(r=t.redirections[r.hashString()]),i=u[s][r.hashString()],!i)return n.index=[],!1;(null===n.index||n.index.length>i.length)&&(n.index=i)}return null===n.index&&(n.index=t.statements),!0},p=0,b=function t(e,r,o,s,u,a,c){log.debug("Match begins, Branch count now: "+c.count+" for "+c.pattern_debug);var l=e.fetcher?e.fetcher:null,d=r.statements;if(0===d.length){if(log.debug("FOUND MATCH WITH BINDINGS:"+i(o)),0===r.optional.length)c.reportMatch(o);else{log.debug("OPTIONAL: "+r.optional);var g,b=new h(n,o),v=[];for(g=0;g<r.optional.length;g++)v[g]=new f(b),v[g].pattern_debug=r.optional[g];for(g=0;g<r.optional.length;g++)v[g].count=v[g].count+1,t(e,r.optional[g],o,"",u,n,v[g])}return c.count--,void log.debug("Match ends -- success , Branch count now: "+c.count+" for "+c.pattern_debug)}var m,x,w=d.length;if(l){var j="match"+p++,O=function(n,i){var h=n.uri.split("#")[0];l.nowOrWhenFetched(h,void 0,function(i,l,h){i&&console.log("Error following link to <"+n.uri+"> in query: "+l),t(e,r,o,s,u,a,c)})};for(x=0;x<w;x++){if(m=d[x],void 0!==o[m.subject]&&o[m.subject].uri&&l&&"unrequested"===l.getState(docpart(o[m.subject].uri)))return void O(o[m.subject],j);if(void 0!==o[m.object]&&o[m.object].uri&&l&&"unrequested"===l.getState(docpart(o[m.object].uri)))return void O(o[m.object],j)}}y(e,r,o,s,u,a,c)},v=function(t,n){var e,r,o=!0;for(e in t)t.hasOwnProperty(e)&&n[e]&&(r=n[e].test,r&&!r(t[e])&&(o=!1));return o},y=function(t,n,e,r,u,c,l){var h,d,f,p,y,m,x,w=n.statements,j=w.length;for(h=0;h<j;h++)x=w[h],log.info("match2: item="+x+", bindingsSoFar="+i(e)),g(t,x,e);w.sort(o),x=w[0];var O=t.formula();O.optional=n.optional,O.constraints=n.constraints,O.statements=w.slice(1),log.debug(r+"match2 searching "+x.index.length+" for "+x+"; bindings so far="+i(e));var D,k,B,_=x.index.length,C=0;for(D=0;D<_;D++)for(B=x.index[D],k=a([x.subject,x.predicate,x.object],[B.subject,B.predicate,B.object],e,t),log.info(r+" From first: "+k.length+": "+s(k)),f=k.length,d=0;d<f;d++)if(y=[],m=k[d][0],v(m,n.constraints)){for(p in m)m.hasOwnProperty(p)&&(y[p]=m[p]);for(p in e)e.hasOwnProperty(p)&&(y[p]=e[p]);l.count++,C++,b(t,O,y,r+"  ",u,c,l)}else log.debug("Branch count CS: "+l.count);l.count--,0===C&&log.debug("Match2 fails completely on "+x),log.debug("Match2 ends, Branch count: "+l.count+" for "+l.pattern_debug),0===l.count&&(log.debug("Branch finished."),l.reportDone())},m=this;log.debug("Query on "+this.statements.length);var x=new d(n,r);x.count++,setTimeout(function(){b(m,t.pat,t.pat.initBindings,"",e,n,x)},0)}var _indexedFormula=require("./indexed-formula"),_indexedFormula2=_interopRequireDefault(_indexedFormula),log=require("./log"),docpart=require("./uri").docpart,Query=function t(n,e){_classCallCheck(this,t),this.pat=new _indexedFormula2.default,this.vars=[],this.name=n,this.id=e};module.exports.Query=Query,module.exports.indexedFormulaQuery=indexedFormulaQuery;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9324 => 		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
./node_modules/es6-promise/dist/test/browserify.js:9719 =>     // test for web worker but not in IE10
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9665 => 		s.hasContent = !rnoContent.test( s.type );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9677 => 				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9693 => 				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
./dist/rdflib.js:12619 =>     // shortest and then lexicographically least
./dist/rdflib.js:12621 =>     var terms = Object.keys(mappings).sort(_compareShortestLeast);
./node_modules/JSONStream/test/fixtures/all_npm.json:3572 => {"id":"tap-test","key":"tap-test","value":{"rev":"5-0a3bba26b6b94dae8b7f59712335ee98"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3606 => {"id":"test","key":"test","value":{"rev":"38-129620013bbd3ec13617c403b02b52f1"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3607 => {"id":"test-cmd","key":"test-cmd","value":{"rev":"35-7dd417a80390c2c124c66273ae33bd07"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3608 => {"id":"test-helper","key":"test-helper","value":{"rev":"3-7b29af65825fc46d0603a39cdc6c95b4"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3609 => {"id":"test-report","key":"test-report","value":{"rev":"5-e51cd1069b6cc442707f0861b35851be"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3610 => {"id":"test-report-view","key":"test-report-view","value":{"rev":"3-9ba670940a8235eaef9b957dde6379af"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3611 => {"id":"test-run","key":"test-run","value":{"rev":"20-6de89383602e6843d9376a78778bec19"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3612 => {"id":"test_it","key":"test_it","value":{"rev":"5-be5cd436b9145398fa88c15c1269b102"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3613 => {"id":"testbed","key":"testbed","value":{"rev":"2-db233788f7e516f227fac439d9450ef4"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3614 => {"id":"testharness","key":"testharness","value":{"rev":"46-787468cb68ec31b442327639dcc0a4e5"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3615 => {"id":"testingey","key":"testingey","value":{"rev":"17-a7ad6a9ff5721ae449876f6448d6f22f"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3616 => {"id":"testnode","key":"testnode","value":{"rev":"9-cb63c450b241806e2271cd56fe502395"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3617 => {"id":"testosterone","key":"testosterone","value":{"rev":"35-278e8af2b59bb6caf56728c67f720c37"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3618 => {"id":"testqueue","key":"testqueue","value":{"rev":"3-59c574aeb345ef2d6e207a342be3f497"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3619 => {"id":"testrunner","key":"testrunner","value":{"rev":"7-152e7d4a97f6cf6f00e22140e1969664"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:3620 => {"id":"testy","key":"testy","value":{"rev":"5-e8f4c9f4a799b6f8ab4effc21c3073a0"}},
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9816 => 			if ( contents[ type ] && contents[ type ].test( ct ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9959 => 		replaceInUrl = hasCallback && rjsonp.test( url ),
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9962 => 			rjsonp.test( data );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:9979 => 			s.url += ( rquestion.test( url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:10077 => 					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {
./node_modules/mocha/mocha.js:13595 => // exposed for testing purposes only.
./dist/rdflib.min.js:220 => "use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),BlankNode=require("./blank-node"),Literal=require("./literal"),rdf=require("./data-factory"),NamedNode=require("./named-node"),Uri=require("./uri"),Util=require("./util");if("undefined"==typeof Node)var Node={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12};var RDFaProcessor=function(){function e(t,a){_classCallCheck(this,e),this.options=a||{},this.kb=t,this.target=a.target||{graph:{subjects:{},prefixes:{},terms:{}}},this.blankNodes=[],this.htmlOptions={selfClosing:"br img input area base basefont col colgroup source wbr isindex link meta param hr"},this.theOne="_:"+(new Date).getTime(),this.language=null,this.vocabulary=null,this.blankCounter=0,this.langAttributes=[{namespaceURI:"http://www.w3.org/XML/1998/namespace",localName:"lang"}],this.inXHTMLMode=!1,this.absURIRE=/[\w\_\-]+:\S+/,this.finishedHandlers=[],this.init()}return _createClass(e,[{key:"addTriple",value:function(e,t,a,r){var s,i,n,o;s="undefined"==typeof t?rdf.namedNode(this.options.base):this.toRDFNodeObject(t),n=this.toRDFNodeObject(a),i=this.toRDFNodeObject(r),o=rdf.namedNode(this.options.base),this.kb.add(s,n,i,o)}},{key:"ancestorPath",value:function(e){for(var t="";e&&e.nodeType!==Node.DOCUMENT_NODE;)t="/"+e.localName+t,e=e.parentNode;return t}},{key:"copyMappings",value:function(e){var t={};for(var a in e)t[a]=e[a];return t}},{key:"copyProperties",value:function(){}},{key:"deriveDateTimeType",value:function(t){for(var a=0;a<e.dateTimeTypes.length;a++){var r=e.dateTimeTypes[a].pattern.exec(t);if(r&&r[0].length===t.length)return e.dateTimeTypes[a].type}return null}},{key:"init",value:function(){}},{key:"newBlankNode",value:function(){return this.blankCounter++,"_:"+this.blankCounter}},{key:"newSubjectOrigin",value:function(e,t){}},{key:"parseCURIE",value:function(t,a,r){var s,i=t.indexOf(":");if(i>=0){var n=t.substring(0,i);if(""===n)return s=a[""],s?s+t.substring(i+1):null;if("_"===n)return"_:"+t.substring(i+1);if(e.NCNAME.test(n)&&(s=a[n]))return s+t.substring(i+1)}return null}},{key:"parseCURIEOrURI",value:function(e,t,a){var r=this.parseCURIE(e,t,a);return r?r:this.resolveAndNormalize(a,e)}},{key:"parsePredicate",value:function(e,t,a,r,s,i){if(""===e)return null;var n=this.parseTermOrCURIEOrAbsURI(e,t,i?null:a,r,s);return n&&0===n.indexOf("_:")?null:n}},{key:"parsePrefixMappings",value:function(e,t){for(var a=this.tokenize(e),r=null,s=0;s<a.length;s++)":"===a[s][a[s].length-1]?r=a[s].substring(0,a[s].length-1):r&&(t[r]=this.options.base?Uri.join(a[s],this.options.base):a[s],r=null)}},{key:"parseSafeCURIEOrCURIEOrURI",value:function(e,t,a){return e=this.trim(e),"["===e.charAt(0)&&"]"===e.charAt(e.length-1)?(e=e.substring(1,e.length-1),e=e.trim(e),0===e.length?null:"_:"===e?this.theOne:this.parseCURIE(e,t,a)):this.parseCURIEOrURI(e,t,a)}},{key:"parseTermOrCURIEOrAbsURI",value:function(e,t,a,r,s){e=this.trim(e);var i=this.parseCURIE(e,r,s);if(i)return i;if(a){if(t&&!this.absURIRE.exec(e))return t+e;var n=a[e];if(n)return n;var o=e.toLowerCase();if(n=a[o])return n}return this.absURIRE.exec(e)?this.resolveAndNormalize(s,e):null}},{key:"parseTermOrCURIEOrURI",value:function(e,t,a,r,s){e=this.trim(e);var i=this.parseCURIE(e,r,s);if(i)return i;var n=a[e];if(n)return n;var o=e.toLowerCase();return(n=a[o])?n:t&&!this.absURIRE.exec(e)?t+e:this.resolveAndNormalize(s,e)}},{key:"parseURI",value:function(e){return e}},{key:"process",value:function(t,a){var r;t.nodeType===Node.DOCUMENT_NODE?(r=t.baseURI,t=t.documentElement,t.baseURI=r,this.setContext(t)):t.parentNode.nodeType===Node.DOCUMENT_NODE&&this.setContext(t);var s=[],i=function(e){if(!e&&a&&a.baseURI)return a.baseURI;var t=e.indexOf("#");return t>=0&&(e=e.substring(0,t)),a&&a.baseURIMap&&(e=a.baseURIMap(e)),e};for(s.push({current:t,context:this.push(null,i(t.baseURI))});s.length>0;){var n=s.shift();if(n.parent){if(n.context.parent&&n.context.parent.listMapping===n.listMapping)continue;for(var o in n.listMapping){var l=n.listMapping[o];if(0!==l.length){for(var h=[],p=0;p<l.length;p++)h.push(this.newBlankNode());for(var u=0;u<h.length;u++)this.addTriple(n.parent,h[u],"http://www.w3.org/1999/02/22-rdf-syntax-ns#first",l[u]),this.addTriple(n.parent,h[u],"http://www.w3.org/1999/02/22-rdf-syntax-ns#rest",{type:e.objectURI,value:u+1<h.length?h[u+1]:"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"});this.addTriple(n.parent,n.subject,o,{type:e.objectURI,value:h[0]})}else this.addTriple(n.parent,n.subject,o,{type:e.objectURI,value:"http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"})}}else{var c=n.current,d=n.context,g=!1,w=null,v=null,b=null,m=d.prefixes,f=!1,R=[],N=d.listMapping,U=!d.parent,I=d.language,y=d.vocabulary;r=this.parseURI(i(c.baseURI)),c.item=null;var T=c.getAttributeNode("vocab");if(T){var M=this.trim(T.value);if(M.length>0){y=M;var O=r.spec;this.addTriple(c,O,"http://www.w3.org/ns/rdfa#usesVocabulary",{type:e.objectURI,value:y})}else y=this.vocabulary}for(var x=0;x<c.attributes.length;x++){var E=c.attributes[x];if("x"===E.nodeName.charAt(0)&&0===E.nodeName.indexOf("xmlns:")){f||(m=this.copyMappings(m),f=!0);var C=E.nodeName.substring(6),L=e.trim(E.value);m[C]=this.options.base?Uri.join(L,this.options.base):L}}var k=c.getAttributeNode("prefix");k&&(f||(m=this.copyMappings(m),f=!0),this.parsePrefixMappings(k.value,m));for(var D=null,j=0;!D&&j<this.langAttributes.length;j++)D=c.getAttributeNodeNS(this.langAttributes[j].namespaceURI,this.langAttributes[j].localName);if(D){var A=e.trim(D.value);I=A.length>0?A:null}var H,_,P=c.getAttributeNode("rel"),X=c.getAttributeNode("rev"),S=c.getAttributeNode("typeof"),F=c.getAttributeNode("property"),z=c.getAttributeNode("datatype"),B=this.inHTMLMode?c.getAttributeNode("datetime"):null,q=c.getAttributeNode("content"),Y=c.getAttributeNode("about"),Z=c.getAttributeNode("src"),G=c.getAttributeNode("resource"),W=c.getAttributeNode("href"),$=c.getAttributeNode("inlist"),V=[];if(P){_=this.tokenize(P.value);for(var J=0;J<_.length;J++)H=this.parsePredicate(_[J],y,d.terms,m,r,this.inHTMLMode&&null!==F),H&&V.push(H)}var K=[];if(X){_=this.tokenize(X.value);for(var Q=0;Q<_.length;Q++)H=this.parsePredicate(_[Q],y,d.terms,m,r,this.inHTMLMode&&F),H&&K.push(H)}if(this.inHTMLMode&&(P||X)&&F&&(0===V.length&&(P=null),0===K.length&&(X=null)),P||X?(Y&&(w=this.parseSafeCURIEOrCURIEOrURI(Y.value,m,r)),S&&(b=w),w||(c.parentNode.nodeType===Node.DOCUMENT_NODE?w=i(c.baseURI):d.parentObject&&(w=i(c.parentNode.baseURI)===d.parentObject?i(c.baseURI):d.parentObject)),G&&(v=this.parseSafeCURIEOrCURIEOrURI(G.value,m,r)),v||(W?v=this.resolveAndNormalize(r,encodeURI(W.value)):Z?v=this.resolveAndNormalize(r,encodeURI(Z.value)):!S||Y||this.inXHTMLMode&&("head"===c.localName||"body"===c.localName)||(v=this.newBlankNode())),!S||Y||!this.inXHTMLMode||"head"!==c.localName&&"body"!==c.localName?S&&!Y&&(b=v):b=w):!F||q||z?(Y&&(w=this.parseSafeCURIEOrCURIEOrURI(Y.value,m,r)),!w&&G&&(w=this.parseSafeCURIEOrCURIEOrURI(G.value,m,r)),!w&&W&&(w=this.resolveAndNormalize(r,encodeURI(W.value))),!w&&Z&&(w=this.resolveAndNormalize(r,encodeURI(Z.value))),w||(c.parentNode.nodeType===Node.DOCUMENT_NODE?w=i(c.baseURI):!this.inXHTMLMode&&!this.inHTMLMode||"head"!==c.localName&&"body"!==c.localName?S?w=this.newBlankNode():d.parentObject&&(w=i(c.parentNode.baseURI)===d.parentObject?i(c.baseURI):d.parentObject,F||(g=!0)):w=i(c.parentNode.baseURI)===d.parentObject?i(c.baseURI):d.parentObject),S&&(b=w)):(Y&&(w=this.parseSafeCURIEOrCURIEOrURI(Y.value,m,r),S&&(b=w)),w||c.parentNode.nodeType!==Node.DOCUMENT_NODE?!w&&d.parentObject&&(w=i(c.parentNode.baseURI)===d.parentObject?i(c.baseURI):d.parentObject):(w=i(c.baseURI),S&&(b=w)),S&&!b&&(G&&(b=this.parseSafeCURIEOrCURIEOrURI(G.value,m,r)),!b&&W&&(b=th
./node_modules/fs-readline/test/fixtures/afile.txt:6049 => Natasha liked to test her power over him. He distrusted the order
./node_modules/fs-readline/test/fixtures/afile.txt:6092 => Having as it were reviewed her kingdom, tested her power, and made
./node_modules/lodash/lodash.js:11566 =>      *   return /^h(?:i|ello)$/.test(value);
./dist/rdflib.js:13336 =>     if(empty.test(line)) {
./node_modules/JSONStream/test/fixtures/all_npm.json:3774 => {"id":"unittest-jslint","key":"unittest-jslint","value":{"rev":"3-c371c63c7b68a32357becb7b6a02d048"}},
./node_modules/lodash/lodash.js:11858 =>      *   return /^h(?:i|ello)$/.test(value);
./dist/rdflib.min.js:226 => "use strict";var NamedNode=require("./named-node"),BlankNode=require("./blank-node"),Uri=require("./uri"),Util=require("./util"),XSD=require("./xsd"),Serializer=function(){function e(e){return encodeURI(e)}function t(e){for(var t,r="",i=0;i<e.length;i++)t=e.charCodeAt(i),r+=t>65535?"\\U"+("00000000"+t.toString(16)).slice(-8):t>126?"\\u"+("0000"+t.toString(16)).slice(-4):e[i];return r}var r=function(e){this.flags="",this.base=null,this.prefixes=[],this.namespaces=[],this.suggestPrefix("rdf","http://www.w3.org/1999/02/22-rdf-syntax-ns#"),this.suggestPrefix("xml","reserved:reservedForFutureUse"),this.namespacesUsed=[],this.keywords=["a"],this.prefixchars="abcdefghijklmnopqustuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",this.incoming=null,this.formulas=[],this.store=e};r.prototype.setBase=function(e){return this.base=e,this},r.prototype.setFlags=function(e){return this.flags=e?e:"",this},r.prototype.toStr=function(e){var t=e.toNT();return"formula"==e.termType&&(this.formulas[t]=e),t},r.prototype.fromStr=function(e){if("{"==e[0]){var t=this.formulas[e];return t||console.log("No formula object for "+e),t}return this.store.fromNT(e)},r.prototype.suggestPrefix=function(e,t){"default"!==e.slice(0,7)&&"ns"!==e.slice(0,2)&&e&&t&&(e in this.namespaces||t in this.prefixes||(this.prefixes[t]=e,this.namespaces[e]=t))},r.prototype.suggestNamespaces=function(e){for(var t in e)return this.suggestPrefix(t,e[t]),this},r.prototype.checkIntegrity=function(){var e,t;for(e in this.namespaces)if(this.prefixes[this.namespaces[e]]!==e)throw"Serializer integity error 1: "+e+", "+this.namespaces[e]+", "+this.prefixes[this.namespaces[e]]+"!";for(t in this.prefixes)if(this.namespaces[this.prefixes[t]]!==t)throw"Serializer integity error 2: "+t+", "+this.prefixs[t]+", "+this.namespaces[this.prefixes[t]]+"!"},r.prototype.makeUpPrefix=function(e){function t(t){return!!r.prototype.validPrefix.test(t)&&("ns"!==t&&(!(t in this.namespaces)&&(this.prefixes[e]=t,this.namespaces[t]=e,i=t,!0)))}var i,n=e;t=t.bind(this),"#/".indexOf(n[n.length-1])>=0&&(n=n.slice(0,-1));var s=n.lastIndexOf("/");s>=0&&(n=n.slice(s+1));for(var a=0;a<n.length&&this.prefixchars.indexOf(n[a]);)a++;if(n=n.slice(0,a),n.length<6&&t(n))return i;if(t(n.slice(0,3)))return i;if(t(n.slice(0,2)))return i;if(t(n.slice(0,4)))return i;if(t(n.slice(0,1)))return i;if(t(n.slice(0,5)))return i;r.prototype.validPrefix.test(n)||(n="n");for(var a=0;;a++)if(t(n.slice(0,3)+a))return i},r.prototype.rootSubjects=function(e){for(var t={},r={},i={},n=0;n<e.length;n++){var s=e[n],a=[s.subject,s.predicate,s.object];a.map(function(e){"BlankNode"==e.termType&&(i[e.toNT()]=!0)});var o=e[n].object;t.hasOwnProperty(o)||(t[o]=[]),t[o].push(s.subject);var c=r[this.toStr(s.subject)];c||(c=[]),c.push(s),r[this.toStr(s.subject)]=c}var f=[];for(var u in r)if(r.hasOwnProperty(u)){var o=this.fromStr(u);"BlankNode"==o.termType&&t[o]&&1==t[o].length||f.push(o)}this.incoming=t;for(var h={},n=0;n<f.length;n++)h[f[n].toNT()]=!0;return{roots:f,subjects:r,rootsHash:h,incoming:t}},r.prototype.toN3=function(e){return this.statementsToN3(e.statements)},r.prototype._notQNameChars="\t\r\n !\"#$%&'()*.,+/;<=>?@[\\]^`{|}~",r.prototype._notNameChars=r.prototype._notQNameChars+":",r.prototype.explicitURI=function(r){return r=this.flags.indexOf("r")<0&&this.base?Uri.refTo(this.base,r):this.flags.indexOf("u")>=0?t(r):e(r),"<"+r+">"},r.prototype.statementsToNTriples=function(e){var t=e.slice();t.sort();for(var r="",i="http://www.w3.org/1999/02/22-rdf-syntax-ns#",n=this,s=this.store,a=function e(t){if("collection"!==t.termType)return n.atomicTermToN3(t);for(var a=t.elements,o=s.sym(i+"nill"),c=a.length-1;c>=0;c--){var f=new BlankNode;r+=e(f)+" "+e(s.sym(i+"first"))+" "+e(a[c])+".\n",r+=e(f)+" "+e(s.sym(i+"rest"))+" "+e(o)+".\n",o=f}return n.atomicTermToN3(o)},o=0;o<t.length;o++){var c=t[o],f="";f+=a(c.subject)+" ",f+=a(c.predicate)+" ",f+=a(c.object)+" ",this.flags.indexOf("q")>=0&&(f+=a(c.why)+" "),f+=".\n",r+=f}return r},r.prototype.statementsToN3=function(e){function t(e){for(var t=this.rootSubjects(e),r=t.roots,n=[],s=0;s<r.length;s++){var a=r[s];n.push(i(a,t))}return n}function i(e,t){return"BlankNode"!=e.termType||t.incoming[e]?[a(e,t)].concat([n(e,t)]).concat(["."]):s(e,t,!0).concat(["."])}function n(e,t){var r=[],i=null,n=t.subjects[this.toStr(e)];if("undefined"==typeof n)throw"Cant find statements for "+e;n.sort();for(var o=[],c=0;c<n.length;c++){var f=n[c];f.predicate.uri==i?o.push(","):(i&&(r=r.concat([o]).concat([";"]),o=[]),r.push(u[f.predicate.uri]?u[f.predicate.uri]:a(f.predicate,t))),i=f.predicate.uri,o.push(s(f.object,t))}return r=r.concat([o])}function s(e,t,r){return"BlankNode"==e.termType&&t.subjects[this.toStr(e)]&&(r||void 0==t.rootsHash[e.toNT()])?["["].concat(n(e,t)).concat(["]"]):a(e,t)}function a(e,r){var i;switch(e.termType){case"formula":var n=["{"];return n=n.concat(t(e.statements)),n.concat(["}"]);case"collection":var n=["("];for(i=0;i<e.elements.length;i++)n.push([s(e.elements[i],r)]);return n.push(")"),n;default:return this.atomicTermToN3(e)}}function o(){var e="";this.defaultNamespace&&(e+="@prefix : <"+this.defaultNamespace+">.\n");for(var t in this.prefixes)this.prefixes.hasOwnProperty(t)&&this.namespacesUsed[t]&&(e+="@prefix "+this.prefixes[t]+": "+this.explicitURI(t)+".\n");return e+"\n"}var c=4,f=80,u={};this.flags.indexOf("s")<0&&(u["http://www.w3.org/2002/07/owl#sameAs"]="="),this.flags.indexOf("t")<0&&(u["http://www.w3.org/1999/02/22-rdf-syntax-ns#type"]="a"),this.flags.indexOf("i")<0&&(u["http://www.w3.org/2000/10/swap/log#implies"]="=>");var h=function(e){for(var t="",r=0;r<e;r++)t+=" ";return t},p=function e(t){for(var r="",i=0;i<t.length;i++){var n=t[i],s="string"==typeof n?n:e(n);0!=i&&","!=s&&";"!=s&&(r+=" "),r+=s}return r},l=function e(t,r){var i="",n=1e5;r||(r=0);for(var s=0;s<t.length;s++){var a=t[s];if("string"!=typeof a){var o=e(a,r+1);if(o.length<10*(f-c*r)&&o.indexOf('"""')<0){var u=p(a);u.length<f-c*r&&(a="   "+u,o="")}o&&(n=1e4),i+=o}if("string"==typeof a){if("1"==a.length&&"\n"==i.slice(-1)){if(",.;".indexOf(a)>=0){i=i.slice(0,-1)+a+"\n",n+=1;continue}if("])}".indexOf(a)>=0){i=i.slice(0,-1)+" "+a+"\n",n+=2;continue}}if(n<c*r+4)i=i.slice(0,-1)+" "+a+"\n",n+=a.length+1;else{var u=h(c*r)+a;i+=u+"\n",n=u.length}}}return i};t=t.bind(this),n=n.bind(this),s=s.bind(this),r.prototype.termToN3=a,a=a.bind(this);var o=o.bind(this),d=t(e);return o()+l(d,-1)},r.prototype.atomicTermToN3=function(e,t){switch(e.termType){case"BlankNode":case"Variable":return e.toNT();case"Literal":if(e.datatype&&this.flags.indexOf("x")<0)switch(e.datatype.uri){case"http://www.w3.org/2001/XMLSchema#integer":return e.value.toString();case"http://www.w3.org/2001/XMLSchema#boolean":return e.value?"true":"false"}var r=this.stringToN3(e.value);return e.language?r+="@"+e.language:e.datatype.equals(XSD.string)||(r+="^^"+this.atomicTermToN3(e.datatype,t)),r;case"NamedNode":return this.symbolToN3(e);default:throw"Internal: atomicTermToN3 cannot handle "+e+" of termType: "+e.termType+"\n"}},r.prototype.validPrefix=new RegExp(/^[a-zA-Z][a-zA-Z0-9]*$/),r.prototype.forbidden1=new RegExp(/[\\"\b\f\r\v\t\n\u0080-\uffff]/gm),r.prototype.forbidden3=new RegExp(/[\\"\b\f\r\v\u0080-\uffff]/gm),r.prototype.stringToN3=function(e,t){t||(t="e");var i,n,s="",a=0,o=0;e.length>20&&'"'!=e.slice(-1)&&t.indexOf("n")<0&&(e.indexOf("\n")>0||e.indexOf('"')>0)?(i='"""',n=r.prototype.forbidden3):(i='"',n=r.prototype.forbidden1);for(var a=0;a<e.length;){n.lastIndex=0;var c=n.exec(e.slice(a));if(null==c)break;o=a+n.lastIndex-1,s+=e.slice(a,o);var f=e[o];if('"'==f&&'"""'==i&&'"""'!=e.slice(o,o+3))s+=f;else{var u='\b\f\r\t\v\n\\"'.indexOf(f);s+=u>=0?"\\"+'bfrtvn\\"'[u]:t.indexOf("e")>=0?"\\u"+("000"+f.charCodeAt(0).toString(16).toLowerCase()).slice(-4):f}a=o+1}return i+s+e.slice(a)+i},r.prototype.symbolToN3=function(e){var t=e.uri,i=t.indexOf("#");if(i<0&&this.flags.indexOf("/")<0&&(i=t.lastIndexOf("/")),i>=0&&this.flags.indexOf("p")<0&&(0===t.indexOf("http")||0===t.indexOf("ws")||0===t.indexOf("file"))){for(var n=!0,s=i+1;s<t.length;s++)if(r.prototype._notNameChars.indexOf(t[s])>=0){n=!1;break}if(t.slice(0,i+1)==this.base+"#")return"<#"+t.slice(i+1)+">";if(n){var a=t.slice(i+1),o=t.slic
./node_modules/es6-promise/dist/test/browserify.js:10916 =>     testAll(function(){
./node_modules/es6-promise/dist/test/browserify.js:10921 =>   function testAll(all) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:10840 => 					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
./dist/rdflib.min.js:228 => "use strict";function SPARQLToQuery(e,r,n){function t(e){if(O[e])return O[e];var r=n.variable(e);return O[e]=r,r}function o(e){return"string"==typeof e&&e.match(/[^ \n\t]/)}function i(e){return"string"==typeof e&&e.match(/^[\?\$]/)}function a(e){return"string"==typeof e?e.replace(/^&lt;/,"<").replace(/&gt;$/,">"):e}function l(e){return"string"==typeof e&&e.match(/^<[^>]*>$/)}function c(e){return"string"==typeof e&&(e.match(/^_:/)||e.match(/^$/))}function s(e){return"string"==typeof e&&e.match(/:$/)}function f(e){return"string"==typeof e&&e.match(/^:|^[^_][^:]*:/)}function u(e){var r=e.split(":");return r[0]}function g(e){var r=e.split(":");return r[1]}function p(e){return l(e)?e.slice(1,e.length-1):e}function d(e){var r=e.indexOf("'")===-1?null:e.indexOf("'"),t=e.indexOf('"')===-1?null:e.indexOf('"');if(!r&&!t){var o=new Array(1);return o[0]=e,o}var i,a,l=new Array(2);if(!r||t&&t<r)i='"',a=t;else{if(t&&!(r&&r<t))return log.error("SQARQL QUERY OOPS!"),l;i="'",a=r}l[0]=e.slice(0,a);var c=e.slice(a+1).indexOf(i);if(c===-1)return log.error("SPARQL parsing error: no matching parentheses in literal "+e),e;var s;return e.slice(c+a+2).match(/^\^\^/)?(s=e.slice(c+a+2).indexOf(" "),l[1]=n.literal(e.slice(a+1,a+1+c),"",n.sym(p(e.slice(a+4+c,a+2+c+s)))),l=l.concat(d(e.slice(c+a+3+s)))):e.slice(c+a+2).match(/^@/)?(s=e.slice(c+a+2).indexOf(" "),l[1]=n.literal(e.slice(a+1,a+1+c),e.slice(a+3+c,a+2+c+s),null),l=l.concat(d(e.slice(c+a+2+s)))):(l[1]=n.literal(e.slice(a+1,a+1+c),"",null),log.info("Literal found: "+l[1]),l=l.concat(d(e.slice(c+a+2)))),l}function v(e){e=e.replace(/\(/g," ( ").replace(/\)/g," ) ").replace(/</g," <").replace(/>/g,"> ").replace(/{/g," { ").replace(/}/g," } ").replace(/[\t\n\r]/g," ").replace(/; /g," ; ").replace(/\. /g," . ").replace(/, /g," , "),log.info("New str into spaceDelimit: \n"+e);var r=[],n=e.split(" ");for(var t in n)o(n[t])&&(r=r.concat(n[t]));return r}function h(e){for(var r=e,n=0;n<r.length;n++)if("a"===r[n]&&(r[n]="<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>"),"is"===r[n]&&"of"===r[n+2]){r.splice(n,1),r.splice(n+1,1);var t=r[n-1];r[n-1]=r[n+1],r[n+1]=t}return r}function y(e){for(var r=[],o=0;o<e.length;o++)"string"==typeof e[o]?(e[o]=a(e[o]),i(e[o])?r[o]=t(e[o].slice(1)):c(e[o])?(log.info(e[o]+" was identified as a bnode."),r[o]=n.bnode()):l(e[o])?(log.info(e[o]+" was identified as a symbol."),r[o]=n.sym(p(e[o]))):f(e[o])?(log.info(e[o]+" was identified as a prefixed symbol"),I[u(e[o])]?r[o]=n.sym(e[o]=I[u(e[o])]+g(e[o])):(log.error("SPARQL error: "+e[o]+" with prefix "+u(e[o])+" does not have a correct prefix entry."),r[o]=e[o])):r[o]=e[o]):r[o]=e[o];return r}function w(e){var r=d(e),n=[];for(var t in r)n="string"==typeof r[t]?n.concat(v(r[t])):n.concat(r[t]);return n=h(n),log.info("SPARQL Tokens: "+n),n}function m(e,r){for(var n=0;n<r.length;n++)if("string"==typeof r[n]&&r[n].toLowerCase()===e.toLowerCase())return n;return null}function b(e,r){for(var n=[],t=0;t<r.length;t++)"string"==typeof r[t]&&r[t].toLowerCase()===e.toLowerCase()&&n.push(t);return n}function L(e,r){log.info("SPARQL vars: "+e);for(var n in e)if(i(e[n])){log.info("Added "+e[n]+" to query variables from SPARQL");var o=t(e[n].slice(1));r.vars.push(o),o.label=e[n].slice(1)}else log.warn("Incorrect SPARQL variable in SELECT: "+e[n])}function R(e){var r=b("PREFIX",e),n=[];for(var t in r){var o=e[r[t]+1],i=e[r[t]+2];if(s(o))if(l(i)){log.info("Prefix found: "+o+" -> "+i);var a=u(o),c=p(i);n[a]=c}else log.error("Invalid SPARQL symbol: "+i);else log.error("Invalid SPARQL prefix: "+o)}return n}function E(e,r,n){log.info("Looking for a close bracket of type "+n+" in "+e);for(var t=0,o=0;o<e.length;o++)if(e[o]===r&&t++,e[o]===n&&t--,t<0)return o;return log.error("Statement had no close parenthesis in SPARQL query"),0}function T(e){return this.describe=function(r){return r+" = "+e.toNT()},this.test=function(r){return e.sameTerm(r)},this}function P(e){this.describe=function(r){return"REGEXP( '"+e+"' , "+r+" )"},this.test=function(r){var n=e,t=new RegExp(n);return!!r.value&&t.test(r.value)}}function A(e,r){3!==e.length||"Variable"!==e[0].termType||"NamedNode"!==e[2].termType&&"Literal"!==e[2].termType?6===e.length&&"string"==typeof e[0]&&"regexp"===e[0].toLowerCase()&&"("===e[1]&&")"===e[5]&&","===e[3]&&"Variable"===e[4].termType&&"Literal"===e[2].termType&&(log.debug("Constraint added: "+e),r.constraints[e[4]]=new P(e[2].value)):"="===e[1]?(log.debug("Constraint added: "+e),r.constraints[e[0]]=new T(e[2])):">"===e[1]?(log.debug("Constraint added: "+e),r.constraints[e[0]]=new T(e[2])):"<"===e[1]?(log.debug("Constraint added: "+e),r.constraints[e[0]]=new T(e[2])):log.warn("I don't know how to handle the constraint: "+e)}function Q(e,r){log.debug("Optional query: "+e+" not yet implemented.");var t=n.formula();S(e,t),r.optional.push(t)}function S(e,r){var n,t=y(e);log.debug("WHERE: "+t);for(var o;m("OPTIONAL",t);)o=m("OPTIONAL",t),log.debug("OPT: "+o+" "+t[o]+" in "+t),"{"!==t[o+1]&&log.warn("Bad optional opening bracket in word "+o),n=E(t.slice(o+2),"{","}"),n===-1?log.error("No matching bracket in word "+o):(Q(t.slice(o+2,o+2+n),r),o=m("OPTIONAL",t),n=E(t.slice(o+2),"{","}"),t.splice(o,n+3));for(log.debug("WHERE after optionals: "+t);m("FILTER",t);){var i=m("FILTER",t);"("!==t[i+1]&&log.warn("Bad filter opening bracket in word "+i),n=E(t.slice(i+2),"(",")"),n===-1?log.error("No matching bracket in word "+i):(A(t.slice(i+2,i+2+n),r),i=m("FILTER",t),n=E(t.slice(i+2),"(",")"),t.splice(i,n+3))}log.debug("WHERE after filters and optionals: "+t),x(t,r)}function x(e,r){var n=new Array(1);n[0]=-1;for(var t=n.concat(b(".",e)),o=[],i=0;i<t.length-1;i++)o[i]=e.slice(t[i]+1,t[i+1]);for(i in o){log.info("s+p+o "+i+" = "+o[i]);var a=o[i][0];o[i].splice(0,1);var l=n.concat(b(";",o[i]));l.push(o[i].length);for(var c=[],s=0;s<l.length-1;s++)c[s]=o[i].slice(l[s]+1,l[s+1]);for(i in c){log.info("p+o "+i+" = "+o[i]);var f=c[i][0];c[i].splice(0,1);var u=n.concat(b(",",c[i]));u.push(c[i].length);var g=[];for(s=0;s<u.length-1;s++)g[s]=c[i].slice(u[s]+1,u[s+1]);for(i in g){var p=g[i][0];log.info("Subj="+a+" Pred="+f+" Obj="+p),r.add(a,f,p)}}}}var O=[];log.info("SPARQL input: \n"+e);var N=new Query,C=w(e),I=R(C);I.rdf||(I.rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"),I.rdfs||(I.rdfs="http://www.w3.org/2000/01/rdf-schema#");var k=m("SELECT",C),q=m("WHERE",C);if(k<0||q<0||k>q)return log.error("Invalid or nonexistent SELECT and WHERE tags in SPARQL query"),!1;if(L(C.slice(k+1,q),N),S(C.slice(q+2,C.length-1),N.pat),r)return N;for(var j in N.pat.statements){var H=N.pat.statements[j];"NamedNode"===H.subject.termType&&n.fetcher&&n.fetcher.lookUpThing(H.subject,"sparql:"+H.subject),"NamedNode"===H.object.termType&&n.fetcher&&n.fetcher.lookUpThing(H.object,"sparql:"+H.object)}return N}var log=require("./log"),Query=require("./query").Query;module.exports=SPARQLToQuery;
./node_modules/JSONStream/test/fixtures/all_npm.json:3946 => {"id":"xappy-async_testing","key":"xappy-async_testing","value":{"rev":"3-747c934540267492b0e6d3bb6d65964c"}},
./node_modules/JSONStream/test/fixtures/all_npm.json:4004 => {"id":"yuitest","key":"yuitest","value":{"rev":"17-b5dd4ad4e82b6b310d7a6e9103570779"}},
./node_modules/lodash/lodash.js:12486 =>       var isBinary = reIsBinary.test(value);
./node_modules/lodash/lodash.js:12487 =>       return (isBinary || reIsOctal.test(value))
./node_modules/lodash/lodash.js:12489 =>         : (reIsBadHex.test(value) ? NAN : +value);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:11105 => 		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:11127 => 			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:11138 => 	var top = /Y/.test( prop );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:11192 => 					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
./node_modules/es6-promise/dist/test/browserify.js:11297 =>         // we likely don't need to test this, if the browser doesn't support it
./node_modules/es6-promise/dist/test/browserify.js:11327 =>         // we likely don't need to test this, if the browser doesn't support it
./node_modules/es6-promise/dist/test/browserify.js:11540 => // thanks to @wizardwerdna for the test case -> https://github.com/tildeio/rsvp.js/issues/66
./node_modules/es6-promise/dist/test/browserify.js:11541 => // Only run these tests in node (phantomjs cannot handle them)
./dist/rdflib.js:14641 =>     // test for web worker but not in IE10
./node_modules/es6-promise/dist/test/browserify.js:11627 =>       // make sure the es6-promise scheduler is restored after each test
./node_modules/es6-promise/dist/test/browserify.js:11636 =>       // This is required because the test library uses Promise.
./node_modules/mocha/mocha.js:15073 =>     if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12047 => 				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12069 => 					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12076 => 					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12131 =>  * Support testing using an element
./dist/rdflib.min.js:238 => "use strict";function ajarHandleNewTerm(e,t,r){var a=null;if("undefined"!=typeof e.fetcher&&(a=e.fetcher,"NamedNode"===t.termType)){var n,o=docpart(t.uri);if(t.uri.indexOf("#")<0){if(stringStartsWith(t.uri,"http://dbpedia.org/resource/Category:"))return;stringStartsWith(t.uri,"http://purl.org/dc/elements/1.1/")||stringStartsWith(t.uri,"http://purl.org/dc/terms/")?n="http://dublincore.org/2005/06/13/dcq":stringStartsWith(t.uri,"http://xmlns.com/wot/0.1/")?n="http://xmlns.com/wot/0.1/index.rdf":stringStartsWith(t.uri,"http://web.resource.org/cc/")&&(n="http://web.resource.org/cc/schema.rdf")}n&&(o=n),a&&"unrequested"!==a.getState(o)||(n&&log.warn("Assuming server still broken, faking redirect of <"+t.uri+"> to <"+o+">"),a.requestURI(o,r))}}function arrayIndexOf(e,t,r){r||(r=0);var a=e.length;for(r<0&&(r=a+r);r<a;r++)if(e[r]===t)return r;return-1}function callbackify(e,t){e.callbacks={};for(var r=t.length-1;r>=0;r--)e.callbacks[t[r]]=[];e.addHook=function(t){e.callbacks[t]||(e.callbacks[t]=[])},e.addCallback=function(t,r){e.callbacks[t].push(r)},e.removeCallback=function(t,r){for(var a=0;a<e.callbacks[t].length;a++)if(e.callbacks[t][a].name===r)return e.callbacks[t].splice(a,1),!0;return!1},e.insertCallback=function(t,r){e.callbacks[t].unshift(r)},e.fireCallbacks=function(t,r){var a,n=[],o=[],s=e.callbacks[t].length;for(a=s-1;a>=0;a--)e.callbacks[t][a].apply(e,r)&&n.push(e.callbacks[t][a]);for(a=n.length-1;a>=0;a--)o.push(n[a]);for(a=s;a<e.callbacks[t].length;a++)o.push(e.callbacks[t][a]);e.callbacks[t]=o}}function domParser(){return tabulator&&tabulator.isExtension?Components.classes["@mozilla.org/xmlextras/domparser;1"].getService(Components.interfaces.nsIDOMParser):window.DOMParser?new DOMParser:!!window.ActiveXObject&&new ActiveXObject("Microsoft.XMLDOM")}function domToString(e,t){t=t||{};var r=[];"selfClosing"in t&&t.selfClosing.split(" ").forEach(function(e){r[e]=!0});var a=[];return"skipAttributes"in t&&t.skipAttributes.split(" ").forEach(function(e){a[e]=!0}),dumpNode(e,t,r,a)}function dumpNode(e,t,r,a){var n,o="",s=[!1];if("undefined"==typeof e.nodeType)return o;if(1===e.nodeType){if(e.hasAttribute("class")&&"classWithChildText"in t&&e.matches(t.classWithChildText.class))o+=e.querySelector(t.classWithChildText.element).textContent;else if(!("skipNodeWithClass"in t&&e.matches("."+t.skipNodeWithClass))){var i=e.nodeName.toLowerCase();o+="<"+i;var l=[];for(n=e.attributes.length-1;n>=0;n--){var c=e.attributes[n];if(!(a.length>0&&a[c.name]||/^\d+$/.test(c.name))){if("class"===c.name&&"replaceClassItemWith"in t&&c.value.split(" ").indexOf(t.replaceClassItemWith.source)>-1){var u=new RegExp(t.replaceClassItemWith.source,"g");c.value=c.value.replace(u,t.replaceClassItemWith.target).trim()}"class"===c.name&&"skipClassWithValue"in t&&t.skipClassWithValue===c.value||l.push(c.name+"='"+c.value.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&quot;")+"'")}}if(l.length>0&&("sortAttributes"in t&&t.sortAttributes&&l.sort(function(e,t){return e.toLowerCase().localeCompare(t.toLowerCase())}),o+=" "+l.join(" ")),r[i])o+=" />";else{for(o+=">",o+="html"===i?"\n  ":"",s.push("style"===i||"script"===i),n=0;n<e.childNodes.length;n++)o+=dumpNode(e.childNodes[n]);s.pop(),o+="body"===i?"</"+i+">\n":"</"+i+">"}}}else if(8===e.nodeType)o+="<!--"+e.nodeValue+"-->";else if(3===e.nodeType||4===e.nodeType){var p=e.nodeValue.replace(/\n+$/,"");o+=s[s.length-1]?p:p.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}else console.log("Warning; Cannot handle serialising nodes of type: "+e.nodeType),console.log(e);return o}function dtstamp(){var e=new Date,t=e.getYear()+1900,r=e.getMonth()+1,a=e.getDate(),n=e.getUTCHours(),o=e.getUTCMinutes(),s=e.getSeconds();return r<10&&(r="0"+r),a<10&&(a="0"+a),n<10&&(n="0"+n),o<10&&(o="0"+o),s<10&&(s="0"+s),t+"-"+r+"-"+a+"T"+n+":"+o+":"+s+"Z"}function getHTTPHeaders(e){for(var t,r=e.getAllResponseHeaders().split("\n"),a={},n=0;n<r.length;n++)if(r[n].length>0){var o=r[n].split(": ");"undefined"==typeof o[1]?a[t]+="\n"+o[0]:(t=o[0].toLowerCase(),a[t]=o[1])}return a}function heavyCompare(e,t,r){var a=function(e){return"BlankNode"===e.termType?null:e},n=function(t){var n=r.statementsMatching(e).map(function(e){return""+a(e.subject)+" "+a(e.predicate)+" "+a(e.object)}).concat(r.statementsMatching(void 0,void 0,e).map(function(e){return""+a(e.subject)+" "+a(e.predicate)+" "+a(e.object)}));return n.sort(),n.join("\n")};return"BlankNode"===e.termType||"BlankNode"===t.termType?0===e.compareTerm(t)?0:n(e)>n(t)?1:n(e)<n(t)?-1:e.compareTerm(t):e.compareTerm(t)}function heavyCompareSPO(e,t,r){var a=heavyCompare(e.subject,t.subject,r);return a?a:(a=heavyCompare(e.predicate,t.predicate,r),a?a:heavyCompare(e.object,t.object,r))}function output(e){var t=document.createElement("div");t.textContent=e,document.body.appendChild(t)}function parseXML(e,t){var r;if(t=t||{},"undefined"!=typeof tabulator&&tabulator.isExtension)r=Components.classes["@mozilla.org/xmlextras/domparser;1"].getService(Components.interfaces.nsIDOMParser);else{if("undefined"!=typeof module&&module&&module.exports){var a=require("xmldom").DOMParser,n=(new a).parseFromString(e,t.contentType||"application/xhtml+xml");return n}r="undefined"!=typeof window&&window.DOMParser?new window.DOMParser:new a}return r.parseFromString(e,"application/xml")}function rdfArrayRemove(e,t){for(var r=0;r<e.length;r++)if(e[r].subject.sameTerm(t.subject)&&e[r].predicate.sameTerm(t.predicate)&&e[r].object.sameTerm(t.object)&&e[r].why.sameTerm(t.why))return void e.splice(r,1);throw new Error("RDFArrayRemove: Array did not contain "+t+" "+t.why)}function stringStartsWith(e,t){return e.slice(0,t.length)===t}function stringTemplate(e,t){for(var r=e.split("%s"),a="",n=0;n<t.length;n++)t[n]+="",a+=r[n]+t[n];return a+r.slice(t.length).join()}function stackString(e){var t=""+e+"\n";if(!e.stack)return t+"No stack available.\n";for(var r=e.stack.toString().split("\n"),a=[],n=0;n<r.length;n++){var o=r[n];if(o.indexOf("ecmaunit.js")>-1)break;"("==o.charAt(0)&&(o="function"+o);var s=o.split("@");a.push(s)}for(var n=0;n<a.length;n++)t+="  "+a[n][1]+"\n    "+a[n][0];return t}function xhr(){var e;if("undefined"!=typeof tabulator&&tabulator.isExtension)return Components.classes["@mozilla.org/xmlextras/xmlhttprequest;1"].createInstance().QueryInterface(Components.interfaces.nsIXMLHttpRequest);if("undefined"!=typeof window&&"XMLHttpRequest"in window)return new(e=window.XMLHttpRequest);if("undefined"!=typeof module&&module&&module.exports)return new(e=require("xmlhttprequest").XMLHttpRequest);if(!window.ActiveXObject)return!1;try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){return new ActiveXObject("Microsoft.XMLHTTP")}}var docpart=require("./uri").docpart,log=require("./log"),NamedNode=require("./named-node");module.exports.AJAR_handleNewTerm=ajarHandleNewTerm,module.exports.ArrayIndexOf=arrayIndexOf,module.exports.callbackify=callbackify,module.exports.dtstamp=dtstamp,module.exports.DOMParserFactory=domParser,module.exports.domToString=domToString,module.exports.dumpNode=dumpNode,module.exports.getHTTPHeaders=getHTTPHeaders,module.exports.heavyCompare=heavyCompare,module.exports.heavyCompareSPO=heavyCompareSPO,module.exports.output=output,module.exports.parseXML=parseXML,module.exports.RDFArrayRemove=rdfArrayRemove,module.exports.stackString=stackString,module.exports.string_startswith=stringStartsWith,module.exports.string={},module.exports.string.template=stringTemplate,module.exports.uri=require("./uri"),module.exports.XMLHTTPFactory=xhr,module.exports.log=log,module.exports.mediaTypeClass=function(e){return e=e.split(";")[0].trim(),new NamedNode("http://www.w3.org/ns/iana/media-types/"+e+"#Resource")};
./node_modules/fs-readline/test/fixtures/afile.txt:7290 => There in Moscow she was deprived of her greatest pleasures--talks with
./node_modules/fs-readline/test/fixtures/afile.txt:7331 => his slightest inattention she trembled, became flustered and heated,
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12243 => function testContext( context ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12315 => 	support.getElementsByClassName = rnative.test( document.getElementsByClassName );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12320 => 	// so use a roundabout getElementsByName test
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12409 => 	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12414 => 			// This is to test IE's treatment of not explicitly
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12424 => 			// The test attribute must be unknown in Opera but "safe" for WinRT
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12443 => 			// IE8 throws error here and will not see later tests
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12470 => 			// IE8 throws error here and will not see later tests
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12481 => 	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
./node_modules/fs-readline/test/fixtures/afile.txt:7512 => now relating the latest town news, and now the latest political
./node_modules/fs-readline/test/fixtures/afile.txt:7526 => At dinner the talk turned on the latest political news: Napoleon's
./node_modules/fs-readline/test/fixtures/afile.txt:7535 => silent! Our sovereign alone has protested against the seizure of the
./node_modules/fs-readline/test/fixtures/afile.txt:7554 => "I have read our protests about the Oldenburg affair and was
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12504 => 	hasCompare = rnative.test( docElem.compareDocumentPosition );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12509 => 	contains = hasCompare || rnative.test( docElem.contains ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12648 => 		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12649 => 		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {
./dist/rdflib.js:15607 =>         if (!error && /^(?:IRI|prefixed|literal|langcode|type|\.|eof)$/.test(token.type))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12838 => 			if ( matchExpr["CHILD"].test( match[0] ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12847 => 			} else if ( unquoted && rpseudo.test( unquoted ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:12880 => 					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
./dist/rdflib.js:15654 =>       if (this._endOfFile.test(input)) {
./dist/rdflib.js:15685 =>           if (unescaped === null || illegalIriChars.test(unescaped))
./dist/rdflib.js:15758 =>                   (match[1] ? 'double' : (/^[+\-]?\d+$/.test(match[0]) ? 'integer' : 'decimal'));
./node_modules/fs-readline/test/fixtures/afile.txt:7841 => the latest fashion. But in spite of that she seemed to be
./node_modules/lodash/lodash.js:14231 =>       return (string && reHasUnescapedHtml.test(string))
./node_modules/lodash/lodash.js:14253 =>       return (string && reHasRegExpChar.test(string))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13129 => 			if ( !ridentifier.test(lang || "") ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13208 => 			return rheader.test( elem.nodeName );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13212 => 			return rinputs.test( elem.nodeName );
./dist/rdflib.js:15832 =>         if (inputFinished || (!/^'''|^"""/.test(input) && /\n|\r/.test(input)))
./dist/rdflib.js:15968 =>       isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),
./dist/rdflib.js:16055 =>       if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16092 =>       if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16127 =>       if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16217 =>         if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16249 =>       if (this._base === null || absoluteIRI.test(token.value))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13802 => 		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13814 => 					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13838 => 		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
./dist/rdflib.js:16369 =>         if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16442 =>     if (this._base === null || absoluteIRI.test(token.value))
./dist/rdflib.js:16457 =>                     absoluteIRI.test(token.value) ? token.value : this._resolveIRI(token));
./node_modules/lodash/lodash.js:15124 =>       return (string && reHasEscapedHtml.test(string))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:13977 => 		if ( risSimple.test( qualifier ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:14041 => 			typeof selector === "string" && rneedsContext.test( selector ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:14102 => 					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:14207 => 			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
./dist/rdflib.js:16538 =>     if (!dotSegments.test(iri))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:14330 => 			if ( rparentsprev.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:14365 =>  *					after the list has been fired right away with the latest "memorized"
./node_modules/lodash/lodash.js:15497 =>      *     return func.test(string);
./node_modules/lodash/lodash.js:15650 =>      *     return /[aeiou]/i.test(v);
./dist/rdflib.js:16904 =>         // If subject and object are given, the object index will be the fastest.
./dist/rdflib.js:16908 =>         // If only subject and possibly predicate are given, the subject index will be the fastest.
./dist/rdflib.js:16913 =>       // If only predicate and possibly object are given, the predicate index will be the fastest.
./dist/rdflib.js:16917 =>       // If only object is given, the object index will be the fastest.
./dist/rdflib.js:16958 =>         // If subject and object are given, the object index will be the fastest.
./dist/rdflib.js:16961 =>         // If only subject and possibly predicate are given, the subject index will be the fastest.
./dist/rdflib.js:16965 =>       // If only predicate and possibly object are given, the predicate index will be the fastest.
./dist/rdflib.js:16969 =>       // If only object is possibly given, the object index will be the fastest.
./node_modules/fs-readline/test/fixtures/afile.txt:8954 => to the minutest detail every word, every gesture, and every shade in
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15116 => 					rbrace.test( data ) ? jQuery.parseJSON( data ) :
./dist/rdflib.js:17122 =>     return entity && /^[^:\/"']*:[^:\/"']+$/.test(entity);
./dist/rdflib.js:17161 =>            (/^[a-z]+(-[a-z0-9]+)*$/i.test(modifier) ? '"@'  + modifier.toLowerCase()
./dist/rdflib.js:17227 =>   if (!(/triple|quad/i).test(options.format)) {
./dist/rdflib.js:17299 =>     if (escape.test(entity))
./dist/rdflib.js:17310 =>     if (escape.test(value))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15558 => 			} else if ( !rhtml.test( elem ) ) {
./dist/rdflib.js:17388 =>       if (/[#\/]$/.test(iri) && prefixIRIs[iri] !== (prefix += ':')) {
./dist/rdflib.js:17534 => 	if(/\/x?html?$/.test(mimeType)){
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15617 => 				if ( rscriptType.test( elem.type || "" ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15812 => 				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15893 => 					( !tmp || tmp.test( handleObj.namespace ) ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:15960 => 				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16100 => 				rmouseEvent.test( type ) ? this.mouseHooks :
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16101 => 				rkeyEvent.test( type ) ? this.keyHooks :
./node_modules/lodash/lodash.js:16954 =>       var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
./node_modules/lodash/lodash.js:16955 =>           isTaker = /^(?:head|last)$/.test(methodName),
./node_modules/lodash/lodash.js:16957 =>           retUnwrapped = isTaker || /^find/.test(methodName);
./node_modules/lodash/lodash.js:17000 =>           chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
./node_modules/lodash/lodash.js:17001 =>           retUnwrapped = /^(?:pop|shift)$/.test(methodName);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16426 => // Fix IE bugs, see support tests
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16431 => 	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16455 => 				!support.checkClone && rchecked.test( value ) ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16508 => 					if ( rscriptType.test( node.type || "" ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16730 => 			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16931 => 	// Executing both pixelPosition & boxSizingReliable tests require only one layout
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16961 => 			// This test is executed only once but we still do memoizing
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:16963 => 			// No need to check if the test was already performed, though.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:17043 => 		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:17083 => 			// Hook needed; redefine it so that the support test is not executed again.
./dist/rdflib.js:18700 => 		if(child || isHTML && !/^(?:meta|link|img|br|hr|input|button)$/i.test(nodeName)){
./dist/rdflib.js:18703 => 			if(isHTML && /^script$/i.test(nodeName)){
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:17215 => 		if ( rnumnonpx.test( val ) ) {
./dist/rdflib.js:19195 => //			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:17450 => 				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:17529 => 	if ( !rmargin.test( prefix ) ) {
./dist/rdflib.js:19334 => 	if(/^(?:script|textarea)$/i.test(tagName)){
./dist/rdflib.js:19337 => 		if(/[&<]/.test(text)){
./dist/rdflib.js:19338 => 			if(/^script$/i.test(tagName)){
./dist/rdflib.js:19339 => 				//if(!/\]\]>/.test(text)){
./dist/rdflib.js:19398 => 		if(len>1 && /!doctype/i.test(matchs[0][0])){
./dist/rdflib.js:19400 => 			var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
./dist/rdflib.js:19438 => 		if(!tagNamePattern.test(tagName)){
./dist/rdflib.js:19444 => 		if(!tagNamePattern.test(qName)){
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18161 => 					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
./dist/rdflib.js:19929 =>  * Things to test: callbacks on request, refresh, retract
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18384 => 				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18438 => 				if ( jQuery.expr.match.bool.test( name ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18545 => 					rfocusable.test( elem.nodeName ) ||
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18546 => 						rclickable.test( elem.nodeName ) && elem.href ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18949 => 		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:18996 => 			if ( !rfocusMorph.test( bubbleType + type ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19356 => 			if ( contents[ type ] && contents[ type ].test( ct ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19505 => 		isLocal: rlocalProtocol.test( location.protocol ),
./node_modules/fs-readline/test/fixtures/afile.txt:11614 => protested Balashev, "but permit me to observe that I have the honor to
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19785 => 		s.hasContent = !rnoContent.test( s.type );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19796 => 				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19804 => 				s.url = rts.test( cacheURL ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:19810 => 					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20162 => 			if ( traditional || rbracket.test( prefix ) ) {
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20247 => 				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20248 => 				( this.checked || !rcheckableType.test( type ) );
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20509 => 		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20514 => 				rjsonp.test( s.data ) && "data"
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20529 => 			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
./node_modules/fs-readline/test/fixtures/afile.txt:12101 => greatest honor and mark of favor at the French court.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20931 => 				return rnumnonpx.test( computed ) ?
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:20966 => 					// whichever is greatest
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:21146 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:21641 =>   return (string && reHasUnescapedHtml.test(string))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:21701 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:22145 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./dist/rdflib.js:22884 =>       // Ok, we have picked the shortest index but now we have to filter it
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:22788 =>   var isBinary = reIsBinary.test(value);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:22789 =>   return (isBinary || reIsOctal.test(value))
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:22791 =>     : (reIsBadHex.test(value) ? NAN : +value);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:22909 =>   value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
./dist/rdflib.js:23400 =>     the module, including tests and test harness.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:23768 =>   // Return the first value which passes a truth test. Aliased as `detect`.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:23779 =>   // Return all the elements that pass a truth test.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:23790 =>   // Return all the elements for which a truth test fails.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:23795 =>   // Determine whether all of the elements match a truth test.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:23808 =>   // Determine if at least one element in the object matches a truth test.
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:24184 =>   // Returns the first index on an array-like that passes a predicate test
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:24570 =>   // Returns the first key on an object that passes a predicate test
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:24911 =>     var testRegexp = RegExp(source);
./node_modules/minifyify/test/build/apps/backbone app/bundle.min.js:24915 =>       return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
./node_modules/fs-readline/test/fixtures/afile.txt:14817 => people Pierre knew as the meekest and quietest of men walked away
./dist/rdflib.js:25699 =>     var test;
./dist/rdflib.js:25703 =>           test = constraints[x].test;
./dist/rdflib.js:25704 =>           if (test && !test(bindings[x])) {
./dist/rdflib.js:25972 =>         } else if (RDFaProcessor.NCNAME.test(prefix)) {
./node_modules/fs-readline/test/fixtures/afile.txt:15225 => command of the detested foreigner Barclay, whose rank was inferior
./node_modules/fs-readline/test/fixtures/afile.txt:15275 => Despite his seniority in rank Bagration, in this contest of
./node_modules/fs-readline/test/fixtures/afile.txt:15364 => Frenchified Russian, "because I have a detestation for all the French,
./node_modules/fs-readline/test/fixtures/afile.txt:15836 => "I assure you that the town of Smolensk is not in the slightest
./dist/rdflib.js:27393 =>       if (!__Serializer.prototype.validPrefix.test(pp)) return false; // bad format
./dist/rdflib.js:27419 =>     if (!__Serializer.prototype.validPrefix.test(p)) {
./dist/rdflib.js:27891 =>         this.checkIntegrity(); //  @@@ Remove when not testing
./node_modules/fs-readline/test/fixtures/afile.txt:16877 => greatest comfort had been prayer. She could not pray, could not
./dist/rdflib.js:28272 =>  * @testMode: testing flag. Prevents loading of sources.
./dist/rdflib.js:28274 => function SPARQLToQuery(SPARQL, testMode, kb) {
./dist/rdflib.js:28539 =>     this.test = function (term) {
./dist/rdflib.js:28554 =>     this.test = function (term) {
./dist/rdflib.js:28569 =>     this.test = function (term) {
./dist/rdflib.js:28580 =>     this.test = function (term) {
./dist/rdflib.js:28585 =>         return rg.test(term.value);
./dist/rdflib.js:28724 =>   if (testMode) {
./node_modules/fs-readline/test/fixtures/afile.txt:17640 => the nurse's and Dunyasha's protests she went out into the porch; Dron,
./dist/rdflib.js:30199 =>       fixuri = "http://dig.csail.mit.edu/2005/ajar/ajaw/test/foaf"
./dist/rdflib.js:30353 =>         if (/^\d+$/.test(atn.name)) continue;
./node_modules/fs-readline/test/fixtures/afile.txt:18724 => read and discussed, together with the latest of Vasili Lvovich
./node_modules/fs-readline/test/fixtures/afile.txt:18992 => in the city and there is not the slightest danger. See! I've just been
./node_modules/fs-readline/test/fixtures/afile.txt:20633 => remotest posterity recall your achievements this day with pride. Let
./node_modules/fs-readline/test/fixtures/afile.txt:21211 => quietest, clambered onto it, seized it by the mane, and turning out
./node_modules/fs-readline/test/fixtures/afile.txt:22117 => Bagration so detested, rode up while Kutuzov was at dinner. Wolzogen
./node_modules/fs-readline/test/fixtures/afile.txt:22503 => His very first, remotest recollections of childhood came back to
./node_modules/fs-readline/test/fixtures/afile.txt:22588 => look at the killed and wounded, thereby, he considered, testing his
./node_modules/fs-readline/test/fixtures/afile.txt:23452 => accomplished that will always remain the greatest glory of the Russian
./node_modules/fs-readline/test/fixtures/afile.txt:23591 => to forget her aim. And as it always happens in contests of cunning
./node_modules/fs-readline/test/fixtures/afile.txt:25909 => The greatest crush during the movement of the troops took place at
./node_modules/fs-readline/test/fixtures/afile.txt:27232 => human--for everything the majority of men regard as the greatest
./node_modules/fs-readline/test/fixtures/afile.txt:27243 => which from an ordinary point of view are insane, to test, as it
./node_modules/fs-readline/test/fixtures/afile.txt:27267 => thought about his undertaking, going over its minutest details in
./node_modules/fs-readline/test/fixtures/afile.txt:27511 => Had this man been endowed with the slightest capacity for perceiving
./node_modules/fs-readline/test/fixtures/afile.txt:27654 => there! Oh yes, mon cher, he is the greatest man of the ages past or
./node_modules/fs-readline/test/fixtures/afile.txt:27827 => Finally, the latest episode in Poland still fresh in the captain's
./node_modules/fs-readline/test/fixtures/afile.txt:27848 => Pierre saw before his eyes every minutest detail of his last meeting
./node_modules/fs-readline/test/fixtures/afile.txt:29426 => greatest to the least were solely engaged in sacrificing themselves,
./node_modules/fs-readline/test/fixtures/afile.txt:29482 => with the greatest pleasure--which he did not conceal and which his
./node_modules/fs-readline/test/fixtures/afile.txt:29544 => in the brightest frame of mind, continually urging on the driver so as
./node_modules/fs-readline/test/fixtures/afile.txt:30715 => did not miss his slightest movement.
./node_modules/fs-readline/test/fixtures/afile.txt:30719 => remember having heard the slightest sound of the shots. He only saw
./node_modules/fs-readline/test/fixtures/afile.txt:32616 => losses, despite the greatest confusion, the most important results
./node_modules/fs-readline/test/fixtures/afile.txt:32646 => supply the whole army for six months. Yet Napoleon, that greatest of
./node_modules/fs-readline/test/fixtures/afile.txt:32772 => will be safeguarded, since such is the will of the greatest and most
./node_modules/fs-readline/test/fixtures/afile.txt:32847 => In regard to philanthropy, the greatest virtue of crowned heads,
./node_modules/fs-readline/test/fixtures/afile.txt:33709 => Dokhturov rode thither, and Borodino became the greatest glory of
./node_modules/fs-readline/test/fixtures/afile.txt:33719 => testimony to his merit.
./node_modules/fs-readline/test/fixtures/afile.txt:34156 => surrender on the slightest decent pretext, such pretexts did not
./node_modules/fs-readline/test/fixtures/afile.txt:34264 => it happened in the greatest of all known wars.
./node_modules/fs-readline/test/fixtures/afile.txt:34300 => The fencer who demanded a contest according to the rules of
./node_modules/fs-readline/test/fixtures/afile.txt:35707 => and gave it to Likhachev; then he flourished the saber, tested it, and
./node_modules/fs-readline/test/fixtures/afile.txt:36221 => Him to the greatest extent. And it grows, merges, disappears from
./node_modules/fs-readline/test/fixtures/afile.txt:36889 => and to suffer with you is the greatest happiness for me," and he
./node_modules/fs-readline/test/fixtures/afile.txt:37133 => then, testing her strength, ran upstairs again, observing the result.
